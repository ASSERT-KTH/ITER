bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	100	16	replace
2	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	100	16	replace
3	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	100	16	replace
4	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty()  ||  sourceFile.length()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	100	16	replace
5	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	100	16	replace
6	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	100	16	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceLocationFixupCache.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  sourceLocationFixupCache.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	100	16	replace
8	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  sourceLocationFixupCache.isEmpty()  ||  sourceFile.length()  ==  0)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceLocationFixupCache.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  sourceLocationFixupCache.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	100	16	replace
9	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	100	16	replace
10	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	100	16	replace
11	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  ||  sourceFile.length()  >  0)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	42	16	replace
12	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  >  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||  sourceFile.length()  >  0)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	42	16	replace
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  &&  sourceFile.length()  ==  0)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  AssertionFailedError  	42	16	replace
14	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.length()  ==  0)  {  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  &&  sourceFile.length()  ==  0)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  AssertionFailedError  	42	16	replace
15	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0  &&  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(!prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	42	16	replace
16	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0  &&  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(!prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	42	16	replace
17	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceFile.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!sourceFile.isEmpty()  &&  sourceFile.length()  >  0)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	42	16	replace
18	[BUG]  [BUGGY]  if(!sourceFile.isEmpty()  &&  sourceFile.length()  >  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceFile.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceFile.isEmpty()  &&  sourceFile.length()  >  0)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	42	16	replace
19	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  &&  sourceFile.length()!=  0)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	42	16	replace
20	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.length()!=  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  &&  sourceFile.length()!=  0)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	42	16	replace
21	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(!prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	42	16	replace
22	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(!prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	42	16	replace
23	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "   "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	200	16	replace
24	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "   "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "   "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	200	16	replace
25	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "* "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "* "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	200	16	replace
26	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "* "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "* "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "* "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	200	16	replace
27	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "* "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "* "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	200	16	replace
28	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "* "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "* "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "* "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	200	16	replace
29	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "- "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "- "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	200	16	replace
30	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "- "))  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "- "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "- "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	200	16	replace
31	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "   "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	200	16	replace
32	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "   "))  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "   "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	200	16	replace
33	[BUG]  [BUGGY]  if(sourceFile  >=  null  ||  prefixMappings.isEmpty())  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  >=  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  >=  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	35	None	replace
34	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings.length()  ==  0)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
35	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings.length()  ==  0)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
36	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    prefixMappings.isEmpty()    &&    sourceLocationFixupCache.containsKey(sourceFile))    {    if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	188	None	add
37	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    prefixMappings.isEmpty()    &&    sourceLocationFixupCache.containsKey(sourceFile))    {    if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	188	None	add
38	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile!=  null  &&  PrefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile!=  null  &&  PrefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    prefixMappings.isEmpty()    &&    sourceLocationFixupCache.containsKey(sourceFile))    {    if(sourceFile!=  null  &&  PrefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	188	None	add
39	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile  >=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile  >=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    prefixMappings.isEmpty()    &&    sourceLocationFixupCache.containsKey(sourceFile))    {    if(sourceFile  >=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	188	None	add
40	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  If(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  If(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    prefixMappings.isEmpty()    &&    sourceLocationFixupCache.containsKey(sourceFile))    {    If(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {	  	non-compiled	[CE]  ';'  expected	188	None	add
41	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    prefixMappings.isEmpty()    &&    sourceLocationFixupCache.containsKey(sourceFile))    {    if(sourceFile!=  null  ||  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	188	None	add
42	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile!=  null  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile!=  null  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    prefixMappings.isEmpty()    &&    sourceLocationFixupCache.containsKey(sourceFile))    {    if(sourceFile!=  null  &&  sourceLocationFixupCache.containsKey(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	188	None	add
43	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
44	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
45	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile.length()!=  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile.length()!=  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(sourceFile.length()!=  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
46	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
47	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile.length()  ==  0  ||  PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile.length()  ==  0  ||  PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(sourceFile.length()  ==  0  ||  PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
48	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
49	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
50	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	170	None	add
51	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	170	None	add
52	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(. "java   "))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(. "java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(. "java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	170	None	add
53	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  sourceFile;  [CE]  not  a  statement  [FE]                                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure:  sourceFile;  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure:  sourceFile;	  junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	153	None	replace
54	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  null  expected;  [CE]  not  a  statement  [FE]                                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure:  null  expected;  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure:  null  expected;	  junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	153	None	replace
55	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile);  [CE]  not  a  statement  [FE]                                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile);  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile);	  junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	153	None	replace
56	[BUG]  [BUGGY]  SourceFailure  junit.framework.ComparisonFailure:  null;  [CE]  ';'  expected  [FE]                                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  SourceFailure  junit.framework.ComparisonFailure:  null;  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	SourceFailure  junit.framework.ComparisonFailure:  null;	  junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  ';'  expected	153	None	replace
57	[BUG]  [BUGGY]  Tasks.ComparisonFailure:  null;  [CE]  not  a  statement  [FE]                                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  Tasks.ComparisonFailure:  null;  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	Tasks.ComparisonFailure:  null;	  junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	153	None	replace
58	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure();  [CE]  not  a  statement  [FE]                                              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure();	  junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	153	None	replace
59	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty())  {  If(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty())  {  If(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  &&  sourceFile.isEmpty())  {  If(sourceFile!=  null  &&  prefixMappings.isEmpty())  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty())    {    If(sourceFile!=    null    &&    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	13	None	replace
60	[BUG]  [BUGGY]  If(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  If(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	If(sourceFile!=  null  &&  prefixMappings.isEmpty())  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty())    {    If(sourceFile!=    null    &&    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	13	None	replace
61	[BUG]  [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  If(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  If(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  If(sourceFile!=  null  &&  prefixMappings.isEmpty())  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty())    {    If(sourceFile!=    null    &&    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	13	None	replace
62	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  If(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  If(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  If(sourceFile!=  null  &&  prefixMappings.isEmpty())  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty())    {    If(sourceFile!=    null    &&    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	13	None	replace
63	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings!=  null  &&  sourceFile.length()  >  0)  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty())    {    if(sourceFile    >=    null    &&    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	12	16	replace
64	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.length()  >  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  &&  sourceFile.length()  >  0)  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty())    {    if(sourceFile    >=    null    &&    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	12	16	replace
65	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(PrefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	64	16	replace
66	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(PrefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	64	16	replace
67	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(PrefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	64	16	replace
68	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceFile.length()  ==  0)  {  [FE]  AssertionFailedError  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(PrefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	64	16	replace
69	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	122	None	add
70	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	122	None	add
71	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  2)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  2)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	122	None	add
72	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	122	None	add
73	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	122	None	add
74	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	122	None	add
75	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    If(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	91	None	replace
76	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    If(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	91	None	replace
77	[BUG]  [BUGGY]  If(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  If(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	If(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    If(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	91	None	replace
78	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    If(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	91	None	replace
79	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    If(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	91	None	replace
80	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty())  {  If(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty())  {  If(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  sourceFile.isEmpty())  {  If(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    If(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	91	None	replace
81	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings.isEmpty()    ||    PrefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
82	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings.isEmpty()    ||    PrefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
83	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings.isEmpty()    ||    PrefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
84	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings.isEmpty()    ||    PrefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
85	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings.isEmpty()    ||    PrefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
86	[BUG]  [BUGGY]  if(prefixMapping.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  cannot  find  symbol  prefixMapping  [FE]        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMapping.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMapping.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMapping.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  prefixMapping	158	None	replace
87	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMapping.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMapping.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMapping.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMapping.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
88	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMapping.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMapping.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMapping.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMapping.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
89	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  if(prefixMapping.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  if(prefixMapping.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  if(prefixMapping.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMapping.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
90	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty()    &&    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	189	16	replace
91	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty()    &&    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	189	16	replace
92	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceLocationFixupCache.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  &&  sourceLocationFixupCache.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty()    &&    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  AssertionFailedError  	189	16	replace
93	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  sourceLocationFixupCache.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceLocationFixupCache.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  sourceLocationFixupCache.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty()    &&    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  AssertionFailedError  	189	16	replace
94	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty()    &&    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	189	16	replace
95	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty()    &&    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	189	16	replace
96	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile)||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile)||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty()    &&    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	189	16	replace
97	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile)||  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile)||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile)||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty()    &&    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	189	16	replace
98	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  sourceLocationFixupCache.isEmpty()  &&  prefixMappings.containsKey(sourceFile))  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceLocationFixupCache.isEmpty()  &&  prefixMappings.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  sourceLocationFixupCache.isEmpty()  &&  prefixMappings.containsKey(sourceFile))  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty()    &&    sourceLocationFixupCache.containsKey(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol	189	None	replace
99	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  &&  sourceFile  ==  null)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	53	16	replace
100	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile  ==  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  &&  sourceFile  ==  null)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	53	16	replace
101	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  &&  sourceFile!=  null  &&  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(!prefixMappings.isEmpty()    &&    sourceFile!=    null)    {    	compilable	  [FE]  AssertionFailedError  	53	16	replace
102	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  &&  sourceFile!=  null  &&  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(!prefixMappings.isEmpty()    &&    sourceFile!=    null)    {    	compilable	  [FE]  AssertionFailedError  	53	16	replace
103	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceLocationFixupCache.isEmpty()  &&  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!sourceLocationFixupCache.isEmpty()  &&  sourceFile!=  null)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	53	16	replace
104	[BUG]  [BUGGY]  if(!sourceLocationFixupCache.isEmpty()  &&  sourceFile!=  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceLocationFixupCache.isEmpty()  &&  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceLocationFixupCache.isEmpty()  &&  sourceFile!=  null)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	53	16	replace
105	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  ||  sourceFile  ==  null)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	53	16	replace
106	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile  ==  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||  sourceFile  ==  null)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	53	16	replace
107	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  &&  sourceFile!=  null  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(!prefixMappings.isEmpty()    &&    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	53	16	replace
108	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  &&  sourceFile!=  null  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(!prefixMappings.isEmpty()    &&    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	53	16	replace
109	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	116	None	add
110	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	116	None	add
111	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(sourceFile!=  null  ||  PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	116	None	add
112	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	116	None	add
113	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile  >=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile  >=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(sourceFile  >=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	116	None	add
114	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  If(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  If(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    If(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	116	None	add
115	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null|  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null|  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(sourceFile!=  null|  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	116	None	add
116	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {  If(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {  If(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {  If(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    If(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	37	None	replace
117	[BUG]  [BUGGY]  If(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  If(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	If(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    If(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	37	None	replace
118	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  sourceFile.toLowerCase();  [CE]  illegal  start  of  type  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure  =  sourceFile.toLowerCase();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  =  sourceFile.toLowerCase();	  junit.framework.ComparisonFailure    =    sourceFile.toString();    	non-compiled	[CE]  illegal  start  of  type	195	None	replace
119	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  sourceFile!=  null?  null  :  sourceFile.toString();  [CE]  illegal  start  of  type  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure  =  sourceFile!=  null?  null  :  sourceFile.toString();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  =  sourceFile!=  null?  null  :  sourceFile.toString();	  junit.framework.ComparisonFailure    =    sourceFile.toString();    	non-compiled	[CE]  illegal  start  of  type	195	None	replace
120	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  sourceFile  ==  null?  null  :  sourceFile.toString();  [CE]  illegal  start  of  type  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure  =  sourceFile  ==  null?  null  :  sourceFile.toString();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  =  sourceFile  ==  null?  null  :  sourceFile.toString();	  junit.framework.ComparisonFailure    =    sourceFile.toString();    	non-compiled	[CE]  illegal  start  of  type	195	None	replace
121	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [CE]  illegal  start  of  type  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  junit.framework.ComparisonFailure    =    sourceFile.toString();    	non-compiled	[CE]  illegal  start  of  type	195	None	replace
122	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [CE]  illegal  start  of  type  [FE]                                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  =  sourceFile.substring(0,  sourceFile.length()  -  2);	  junit.framework.ComparisonFailure    =    sourceFile.toString();    	non-compiled	[CE]  illegal  start  of  type	195	None	replace
123	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  sourceFile.toCharArray();  [CE]  illegal  start  of  type  [FE]                                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure  =  sourceFile.toCharArray();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  =  sourceFile.toCharArray();	  junit.framework.ComparisonFailure    =    sourceFile.toString();    	non-compiled	[CE]  illegal  start  of  type	195	None	replace
124	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  sourceFile.length()  ==  0)  {	  if(sourceFile!=    null    ||    sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	21	16	replace
125	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.length()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  sourceFile.length()  ==  0)  {	  if(sourceFile!=    null    ||    sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	21	16	replace
126	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  &&  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  &&  sourceFile.isEmpty())  {	  if(sourceFile!=    null    ||    sourceFile.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	21	16	replace
127	[BUG]  [BUGGY]  if(sourceFile  ==  null  &&  sourceFile.isEmpty())  {  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  &&  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  &&  sourceFile.isEmpty())  {	  if(sourceFile!=    null    ||    sourceFile.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	21	16	replace
128	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceFile.equals( " "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  sourceFile.equals( " "))  {	  if(sourceFile!=    null    ||    sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	21	16	replace
129	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceFile.equals( " "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceFile.equals( " "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  sourceFile.equals( " "))  {	  if(sourceFile!=    null    ||    sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	21	16	replace
130	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "   "))  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	180	16	replace
131	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "   "))  {  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "   "))  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	180	16	replace
132	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "* "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "* "))  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	180	16	replace
133	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "* "))  {  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "* "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "* "))  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	180	16	replace
134	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "- "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "- "))  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	180	16	replace
135	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "- "))  {  [FE]  AssertionFailedError  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "- "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "- "))  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	180	16	replace
136	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "/ "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "/ "))  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	180	16	replace
137	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "/ "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "/ "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "/ "))  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	180	16	replace
138	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "* "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "* "))  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	180	16	replace
139	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "* "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "* "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "* "))  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	180	16	replace
140	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(sourceFile.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
141	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(sourceFile.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
142	[BUG]  [BUGGY]  if(prefixMappings.isEmpty())  {  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty())  {  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty())  {  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(sourceFile.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
143	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(sourceFile.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
144	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(sourceFile.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	58	16	replace
145	[BUG]  [BUGGY]  if(!sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [FE]  AssertionFailedError  [FE]                        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(sourceFile.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	58	16	replace
146	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings!=  null  &&  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings!=  null  &&  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings!=  null  &&  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    if(PrefixMappings!=    null    &&    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
147	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile    ==    null    ||    prefixMappings.isEmpty())    {    if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
148	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile    ==    null    ||    prefixMappings.isEmpty())    {    if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
149	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  ||  PrefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  ||  PrefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile    ==    null    ||    prefixMappings.isEmpty())    {    if(sourceFile  ==  null  ||  PrefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
150	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  If(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  If(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile    ==    null    ||    prefixMappings.isEmpty())    {    If(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	1	None	add
151	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(sourceFile  >=  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(sourceFile  >=  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile    ==    null    ||    prefixMappings.isEmpty())    {    if(sourceFile  >=  null  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
152	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  ||  prefixMappings.hasEmpty())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  ||  prefixMappings.hasEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile    ==    null    ||    prefixMappings.isEmpty())    {    if(sourceFile  ==  null  ||  prefixMappings.hasEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
153	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	171	16	replace
154	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	171	16	replace
155	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java "))  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	171	16	replace
156	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java "))  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	171	16	replace
157	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java "))  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	171	16	replace
158	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java "))  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	171	16	replace
159	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	171	16	replace
160	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	171	16	replace
161	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java "))  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	171	16	replace
162	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java "))  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	171	16	replace
163	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  this.sourceLocationFixupCache.get(sourceFile);  [CE]  illegal  start  of  type  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  SourceMapGenerator  generator  =  this.sourceLocationFixupCache.get(sourceFile);  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	SourceMapGenerator  generator  =  this.sourceLocationFixupCache.get(sourceFile);	  SourceMapGenerator    generator    =    sourceLocationFixupCache.get(sourceFile);    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
164	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  sourceFileCache.get(sourceFile);  [CE]  illegal  start  of  type  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  SourceMapGenerator  generator  =  sourceFileCache.get(sourceFile);  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	SourceMapGenerator  generator  =  sourceFileCache.get(sourceFile);	  SourceMapGenerator    generator    =    sourceLocationFixupCache.get(sourceFile);    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
165	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  sourceFile.getSourceMap();  [CE]  illegal  start  of  type  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  SourceMapGenerator  generator  =  sourceFile.getSourceMap();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	SourceMapGenerator  generator  =  sourceFile.getSourceMap();	  SourceMapGenerator    generator    =    sourceLocationFixupCache.get(sourceFile);    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
166	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  sourceLocationFileCache.get(sourceFile);  [CE]  illegal  start  of  type  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  SourceMapGenerator  generator  =  sourceLocationFileCache.get(sourceFile);  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	SourceMapGenerator  generator  =  sourceLocationFileCache.get(sourceFile);	  SourceMapGenerator    generator    =    sourceLocationFixupCache.get(sourceFile);    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
167	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile,  true);  [CE]  illegal  start  of  type  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile,  true);  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile,  true);	  SourceMapGenerator    generator    =    sourceLocationFixupCache.get(sourceFile);    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
168	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile  +  1);  [CE]  illegal  start  of  type  [FE]                                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile  +  1);  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile  +  1);	  SourceMapGenerator    generator    =    sourceLocationFixupCache.get(sourceFile);    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
169	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceFile.isEmpty()  ||!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!sourceFile.isEmpty()  ||!prefixMappings.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	106	16	replace
170	[BUG]  [BUGGY]  if(!sourceFile.isEmpty()  ||!prefixMappings.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceFile.isEmpty()  ||!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceFile.isEmpty()  ||!prefixMappings.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	106	16	replace
171	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  ||!prefixMappings.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	106	16	replace
172	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||!prefixMappings.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||!prefixMappings.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	106	16	replace
173	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  &&!prefixMappings.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	106	16	replace
174	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&!prefixMappings.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  &&!prefixMappings.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	106	16	replace
175	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceLocationFixupCache.isEmpty()  ||!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!sourceLocationFixupCache.isEmpty()  ||!prefixMappings.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	106	16	replace
176	[BUG]  [BUGGY]  if(!sourceLocationFixupCache.isEmpty()  ||!prefixMappings.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceLocationFixupCache.isEmpty()  ||!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceLocationFixupCache.isEmpty()  ||!prefixMappings.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	106	16	replace
177	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||!prefixMappings.isEmpty()  ||!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings!=  null  ||!prefixMappings.isEmpty()  ||!prefixMappings.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	106	16	replace
178	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||!prefixMappings.isEmpty()  ||!prefixMappings.isEmpty())  {  [FE]  AssertionFailedError  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||!prefixMappings.isEmpty()  ||!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  ||!prefixMappings.isEmpty()  ||!prefixMappings.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	106	16	replace
179	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||!prefixMappings.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	106	16	replace
180	[BUG]  [BUGGY]  if(sourceFile!=  null  ||!prefixMappings.isEmpty())  {  [FE]  AssertionFailedError  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||!prefixMappings.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	106	16	replace
181	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||!sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  ||!sourceFile.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	106	16	replace
182	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||!sourceFile.isEmpty())  {  [FE]  AssertionFailedError  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||!sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||!sourceFile.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	106	16	replace
183	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {  if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {  if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile    ==    null    ||    sourceFile.isEmpty())    {    if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	132	None	add
184	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {  if(sourceFile!=  null  ||  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {  if(sourceFile!=  null  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile    ==    null    ||    sourceFile.isEmpty())    {    if(sourceFile!=  null  ||  sourceFile.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	132	None	add
185	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {  If(sourceFile  ==  null  ||  sourceFile.isEmpty())  {  [CE]  ';'  expected  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {  If(sourceFile  ==  null  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile    ==    null    ||    sourceFile.isEmpty())    {    If(sourceFile  ==  null  ||  sourceFile.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	132	None	add
186	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {  if(sourceFile  >=  null  ||  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {  if(sourceFile  >=  null  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile    ==    null    ||    sourceFile.isEmpty())    {    if(sourceFile  >=  null  ||  sourceFile.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	132	None	add
187	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {  if(sourceFile  ==  null  ||  sourceFile.isEmpty()),  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {  if(sourceFile  ==  null  ||  sourceFile.isEmpty()),  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile    ==    null    ||    sourceFile.isEmpty())    {    if(sourceFile  ==  null  ||  sourceFile.isEmpty()),  {	  	non-compiled	[CE]  illegal  start  of  expression	132	None	add
188	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	186	16	replace
189	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	186	16	replace
190	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java "))  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	186	16	replace
191	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java "))  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	186	16	replace
192	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java   "))  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	186	16	replace
193	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java   "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java   "))  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	186	16	replace
194	[BUG]  [BUGGY]  If(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  ';'  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  If(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	If(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    If(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	63	None	replace
195	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceFile.length()  ==  0)  {  If(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  ';'  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceFile.length()  ==  0)  {  If(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  sourceFile.length()  ==  0)  {  If(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    If(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	63	None	replace
196	[BUG]  [BUGGY]  If(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  ';'  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  If(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	If(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    If(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	63	None	replace
197	[BUG]  [BUGGY]  If(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  If(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	If(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    If(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	63	None	replace
198	[BUG]  [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile    ==    null    &&    prefixMappings.isEmpty())    {    if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
199	[BUG]  [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile    ==    null    &&    prefixMappings.isEmpty())    {    if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
200	[BUG]  [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile    ==    null    &&    prefixMappings.isEmpty())    {    if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
201	[BUG]  [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  &&  PrefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  &&  PrefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile    ==    null    &&    prefixMappings.isEmpty())    {    if(sourceFile  ==  null  &&  PrefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
202	[BUG]  [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile    ==    null    &&    prefixMappings.isEmpty())    {    if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
203	[BUG]  [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.contains(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile    ==    null    &&    prefixMappings.isEmpty())    {    if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.contains(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
204	[BUG]  [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(prefix))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(prefix))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile    ==    null    &&    prefixMappings.isEmpty())    {    if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
205	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  prefixMappings.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  prefixMappings.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  prefixMappings.length()  ==  0)  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
206	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	163	16	replace
207	[BUG]  [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	163	16	replace
208	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty())  {  if(prefixMappings  ==  null  ||  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty())  {  if(prefixMappings  ==  null  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    sourceFile.isEmpty())    {    if(prefixMappings  ==  null  ||  sourceFile.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
209	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty())  {  if(prefixMappings!=  null  ||  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty())  {  if(prefixMappings!=  null  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    sourceFile.isEmpty())    {    if(prefixMappings!=  null  ||  sourceFile.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
210	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty())  {  If(prefixMappings  ==  null  ||  sourceFile.isEmpty())  {  [CE]  ';'  expected  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty())  {  If(prefixMappings  ==  null  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    sourceFile.isEmpty())    {    If(prefixMappings  ==  null  ||  sourceFile.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	5	None	add
211	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty())  {  if(prefixMappings  >=  null  ||  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty())  {  if(prefixMappings  >=  null  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    sourceFile.isEmpty())    {    if(prefixMappings  >=  null  ||  sourceFile.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
212	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty())  {  if(prefixMappings  ==  null  ||  sourceFile.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty())  {  if(prefixMappings  ==  null  ||  sourceFile.getType()  ==  Token.FUNCTION)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    sourceFile.isEmpty())    {    if(prefixMappings  ==  null  ||  sourceFile.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
213	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty())  {  if(prefixMappings  ==  null  ||  sourceFile.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty())  {  if(prefixMappings  ==  null  ||  sourceFile.getType()  ==  Token.NAME)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    sourceFile.isEmpty())    {    if(prefixMappings  ==  null  ||  sourceFile.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
214	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  0)  {  if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  0)  {  if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    prefixMappings.size()    ==    0)    {    if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	101	None	add
215	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  0)  {  if(sourceFile.isEmpty()  ||  prefixMappings.size()!=  0)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  0)  {  if(sourceFile.isEmpty()  ||  prefixMappings.size()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    prefixMappings.size()    ==    0)    {    if(sourceFile.isEmpty()  ||  prefixMappings.size()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	101	None	add
216	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  0)  {  if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  0)  {  if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  1)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    prefixMappings.size()    ==    0)    {    if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	101	None	add
217	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  0)  {  if(sourceFile.isEmpty()  ||  prefixMappings.size()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  0)  {  if(sourceFile.isEmpty()  ||  prefixMappings.size()  >=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    prefixMappings.size()    ==    0)    {    if(sourceFile.isEmpty()  ||  prefixMappings.size()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	101	None	add
218	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  0)  {  if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  2)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  0)  {  if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  2)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    prefixMappings.size()    ==    0)    {    if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	101	None	add
219	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  0)  {  If(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  0)  {  [CE]  ';'  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  0)  {  If(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    prefixMappings.size()    ==    0)    {    If(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	101	None	add
220	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  0)  {  if(sourceFile.isEmpty()  ||  PrefixMappings.size()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  0)  {  if(sourceFile.isEmpty()  ||  PrefixMappings.size()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    prefixMappings.size()    ==    0)    {    if(sourceFile.isEmpty()  ||  PrefixMappings.size()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	101	None	add
221	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings.isEmpty()    ||    sourceFile.length()    >=    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	62	16	replace
222	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings.isEmpty()    ||    sourceFile.length()    >=    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	62	16	replace
223	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings.isEmpty()    ||    sourceFile.length()    >=    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	62	16	replace
224	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings.isEmpty()    ||    sourceFile.length()    >=    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	62	16	replace
225	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  ||  sourceFile.length()!=  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings.isEmpty()    ||    sourceFile.length()    >=    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	62	16	replace
226	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.length()!=  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  sourceFile.length()!=  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings.isEmpty()    ||    sourceFile.length()    >=    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	62	16	replace
227	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings.isEmpty()    ||    sourceFile.length()    >=    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	62	16	replace
228	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings.isEmpty()    ||    sourceFile.length()    >=    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	62	16	replace
229	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings.isEmpty()    ||    sourceFile.length()    >=    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	62	16	replace
230	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings.isEmpty()    ||    sourceFile.length()    >=    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	62	16	replace
231	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	197	None	add
232	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	197	None	add
233	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(. "java   "))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(. "java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(. "java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	197	None	add
234	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.startsWith( ".java   "))  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.startsWith( ".java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.startsWith( ".java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	197	None	add
235	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
236	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  If(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [CE]  ';'  expected  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  If(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    If(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  	non-compiled	[CE]  ';'  expected	81	None	add
237	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  if(SourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  if(SourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    if(SourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
238	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile.isEmpty()  ||  SourceLocationFixupCache.containsKey(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile.isEmpty()  ||  SourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    if(sourceFile.isEmpty()  ||  SourceLocationFixupCache.containsKey(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
239	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(SourceFile))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(SourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(SourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
240	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile.empty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile.empty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    if(sourceFile.empty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
241	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
242	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
243	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    if(!prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
244	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  >>  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  >>  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    if(!prefixMappings.isEmpty()  ||  sourceFile.length()  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
245	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  If(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  If(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    If(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  	non-compiled	[CE]  ';'  expected	50	None	add
246	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  2)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  2)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
247	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  [CE]  illegal  start  of  type  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length());	  String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
248	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()));  [CE]  ';'  expected  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()));  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()));	  String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  ';'  expected	126	None	replace
249	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length();  [CE]  ')'  expected  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length();	  String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  ')'  expected	126	None	replace
250	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  1);  [CE]  illegal  start  of  type  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  1);  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  1);	  String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
251	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(sourceFile.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(sourceFile.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    if(sourceFile.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	190	None	add
252	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(sourceFile.isEmpty()  ||  sourceFile.endsWith(. "java   "))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(sourceFile.isEmpty()  ||  sourceFile.endsWith(. "java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    if(sourceFile.isEmpty()  ||  sourceFile.endsWith(. "java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	190	None	add
253	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(sourceFile.isEmpty()  ||  sourceFile.endsWith( ",.java   "))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(sourceFile.isEmpty()  ||  sourceFile.endsWith( ",.java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    if(sourceFile.isEmpty()  ||  sourceFile.endsWith( ",.java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	190	None	add
254	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(sourceFile.isEmpty()  ||  sourceFile.startsWith( ".java   "))  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(sourceFile.isEmpty()  ||  sourceFile.startsWith( ".java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    if(sourceFile.isEmpty()  ||  sourceFile.startsWith( ".java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	190	None	add
255	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if    (sourceFile.isEmpty())    {    if    (sourceFile.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	71	16	replace
256	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if    (sourceFile.isEmpty())    {    if    (sourceFile.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	71	16	replace
257	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if    (sourceFile.isEmpty())    {    if    (sourceFile.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	71	16	replace
258	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if    (sourceFile.isEmpty())    {    if    (sourceFile.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	71	16	replace
259	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()!=  0  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.length()!=  0  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if    (sourceFile.isEmpty())    {    if    (sourceFile.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  AssertionFailedError  	71	16	replace
260	[BUG]  [BUGGY]  if(sourceFile.length()!=  0  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()!=  0  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()!=  0  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if    (sourceFile.isEmpty())    {    if    (sourceFile.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  AssertionFailedError  	71	16	replace
261	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if    (sourceFile.isEmpty())    {    if    (sourceFile.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  AssertionFailedError  	71	16	replace
262	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if    (sourceFile.isEmpty())    {    if    (sourceFile.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  AssertionFailedError  	71	16	replace
263	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceLocationFixupCache.containsKey(sourceFile))  {	  if    (sourceFile.isEmpty())    {    if    (sourceFile.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	71	16	replace
264	[BUG]  [BUGGY]  if(sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceLocationFixupCache.containsKey(sourceFile))  {	  if    (sourceFile.isEmpty())    {    if    (sourceFile.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	71	16	replace
265	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [CE]  illegal  start  of  type  [FE]                                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());	  String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
266	[BUG]  [BUGGY]  File  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [CE]  illegal  start  of  type  [FE]                                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  File  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	File  sourceFile  =  sourceFile.substring(0,  sourceFile.length());	  String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
267	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length();  [CE]  ')'  expected  [FE]                                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length();	  String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  ')'  expected	131	None	replace
268	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  file.length());  [CE]  illegal  start  of  type  [FE]                                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  file.length());  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	String  sourceFile  =  sourceFile.substring(0,  file.length());	  String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
269	[BUG]  [BUGGY]  char  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [CE]  illegal  start  of  type  [FE]                                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  char  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	char  sourceFile  =  sourceFile.substring(0,  sourceFile.length());	  String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
270	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings!=  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings!=  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings!=  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    if(PrefixMappings!=    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
271	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings!=  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings!=  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings!=  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    if(PrefixMappings!=    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
272	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings  ==  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    if(PrefixMappings!=    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
273	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||!prefixMappings.isEmpty())  {	  if(prefixMappings    ==    null    ||!prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	49	16	replace
274	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||!prefixMappings.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||!prefixMappings.isEmpty())  {	  if(prefixMappings    ==    null    ||!prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	49	16	replace
275	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    if(sourceFile    ==    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
276	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toLowerCase(Locale.ENGLISH);  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toLowerCase(Locale.ENGLISH);	  junit.framework.ComparisonFailure    sourceFile    =    sourceFile.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	194	None	replace
277	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toLowerCase()  +  1;  [CE]  illegal  start  of  type  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toLowerCase()  +  1;  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toLowerCase()  +  1;	  junit.framework.ComparisonFailure    sourceFile    =    sourceFile.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	194	None	replace
278	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toLowerCase(Locale.US);  [CE]  illegal  start  of  type  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toLowerCase(Locale.US);  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toLowerCase(Locale.US);	  junit.framework.ComparisonFailure    sourceFile    =    sourceFile.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	194	None	replace
279	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toLowerCase(Locale.getDefault());  [CE]  illegal  start  of  type  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toLowerCase(Locale.getDefault());  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toLowerCase(Locale.getDefault());	  junit.framework.ComparisonFailure    sourceFile    =    sourceFile.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	194	None	replace
280	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim();  [CE]  illegal  start  of  type  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim();	  junit.framework.ComparisonFailure    sourceFile    =    sourceFile.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	194	None	replace
281	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toUpperCase();  [CE]  illegal  start  of  type  [FE]                                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toUpperCase();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toUpperCase();	  junit.framework.ComparisonFailure    sourceFile    =    sourceFile.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	194	None	replace
282	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  if(sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  if(sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()    ==    0)    {    if(sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	156	None	add
283	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  if(sourceFile.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  if(sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()    ==    0)    {    if(sourceFile.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	156	None	add
284	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  if(sourceFile.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  if(sourceFile.length()  >=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()    ==    0)    {    if(sourceFile.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	156	None	add
285	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  If(sourceFile.length()  ==  0)  {  [CE]  ';'  expected  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  If(sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()    ==    0)    {    If(sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	156	None	add
286	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  if(sourceFile.length()  >>  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  if(sourceFile.length()  >>  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()    ==    0)    {    if(sourceFile.length()  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	156	None	add
287	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  if(sourceFile.length()  {  0)  {  [CE]  ')'  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  if(sourceFile.length()  {  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()    ==    0)    {    if(sourceFile.length()  {  0)  {	  	non-compiled	[CE]  ')'  expected	156	None	add
288	[BUG]  [BUGGY]  if(prefixMappings.length()  ==  0  ||  sourceFile.isEmpty())  {  [CE]  cannot  find  symbol  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.length()  ==  0  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.length()  ==  0  ||  sourceFile.isEmpty())  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
289	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  &&  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.length()  ==  0  &&  prefixMappings.isEmpty())  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	155	16	replace
290	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  &&  prefixMappings.isEmpty())  {  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  &&  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  &&  prefixMappings.isEmpty())  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	155	16	replace
291	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.isEmpty())  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	155	16	replace
292	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.isEmpty())  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	155	16	replace
293	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	155	16	replace
294	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	155	16	replace
295	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()!=  0  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.length()!=  0  ||  prefixMappings.isEmpty())  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	155	16	replace
296	[BUG]  [BUGGY]  if(sourceFile.length()!=  0  ||  prefixMappings.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()!=  0  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()!=  0  ||  prefixMappings.isEmpty())  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	155	16	replace
297	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	155	16	replace
298	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  AssertionFailedError  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	155	16	replace
299	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	162	None	add
300	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings  ==  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	162	None	add
301	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings!=  null  &&  PrefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings!=  null  &&  PrefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings!=  null  &&  PrefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	162	None	add
302	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	162	None	add
303	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings  >=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings  >=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings  >=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	162	None	add
304	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	162	None	add
305	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  2)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  2)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	162	None	add
306	[BUG]  [BUGGY]  if(prefixMappings.length()  ==  0  ||  sourceFile.isEmpty()  ==  0)  {  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.length()  ==  0  ||  sourceFile.isEmpty()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.length()  ==  0  ||  sourceFile.isEmpty()  ==  0)  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
307	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  >  0)  {  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  >  0)  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ==    0)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	98	None	replace
308	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  {  0)  {  [CE]  ')'  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  {  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  {  0)  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ==    0)    {    	non-compiled	[CE]  ')'  expected	98	None	replace
309	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()!=  0)  {  [CE]  incomparable  types:  boolean  and  int  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()!=  0)  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ==    0)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  int	98	None	replace
310	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  &&  prefixMappings.isEmpty()  ==  0)  {  [CE]  incomparable  types:  boolean  and  int  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  &&  prefixMappings.isEmpty()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  &&  prefixMappings.isEmpty()  ==  0)  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ==    0)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  int	98	None	replace
311	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  &&  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  &&  sourceLocationFixupCache.get(sourceFile)!=  null)  {	  if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	85	16	replace
312	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  &&  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  &&  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  &&  sourceLocationFixupCache.get(sourceFile)!=  null)  {	  if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	85	16	replace
313	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {	  if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)!=    null)    {    	compilable	  [FE]  AssertionFailedError  	85	16	replace
314	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {	  if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)!=    null)    {    	compilable	  [FE]  AssertionFailedError  	85	16	replace
315	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {	  if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	85	16	replace
316	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {	  if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	85	16	replace
317	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile)!=  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile)!=  null)  {	  if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)!=    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	85	None	replace
318	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {	  if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	85	16	replace
319	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {	  if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	85	16	replace
320	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.contains(sourceFile))  {  if(sourceFile!=  null  ||  prefixMappings.contains(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.contains(sourceFile))  {  if(sourceFile!=  null  ||  prefixMappings.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    prefixMappings.contains(sourceFile))    {    if(sourceFile!=  null  ||  prefixMappings.contains(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	175	None	add
321	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.contains(sourceFile))  {  if(sourceFile  ==  null  ||  prefixMappings.contains(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.contains(sourceFile))  {  if(sourceFile  ==  null  ||  prefixMappings.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    prefixMappings.contains(sourceFile))    {    if(sourceFile  ==  null  ||  prefixMappings.contains(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	175	None	add
322	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.contains(sourceFile))  {  if(sourceFile  >=  null  ||  prefixMappings.contains(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.contains(sourceFile))  {  if(sourceFile  >=  null  ||  prefixMappings.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    prefixMappings.contains(sourceFile))    {    if(sourceFile  >=  null  ||  prefixMappings.contains(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	175	None	add
323	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.contains(sourceFile))  {  If(sourceFile!=  null  ||  prefixMappings.contains(sourceFile))  {  [CE]  ';'  expected  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.contains(sourceFile))  {  If(sourceFile!=  null  ||  prefixMappings.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    prefixMappings.contains(sourceFile))    {    If(sourceFile!=  null  ||  prefixMappings.contains(sourceFile))  {	  	non-compiled	[CE]  ';'  expected	175	None	add
324	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.contains(sourceFile))  {  if(sourceFile!=  null  ||  PrefixMappings.contains(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.contains(sourceFile))  {  if(sourceFile!=  null  ||  PrefixMappings.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    prefixMappings.contains(sourceFile))    {    if(sourceFile!=  null  ||  PrefixMappings.contains(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	175	None	add
325	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.contains(sourceFile))  {  if(sourceFile!=  null  ||  prefixMappings.get(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.contains(sourceFile))  {  if(sourceFile!=  null  ||  prefixMappings.get(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    prefixMappings.contains(sourceFile))    {    if(sourceFile!=  null  ||  prefixMappings.get(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	175	None	add
326	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    prefixMappings.isEmpty())    {    if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	112	None	add
327	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile.isEmpty()  ||  PrefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile.isEmpty()  ||  PrefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    prefixMappings.isEmpty())    {    if(sourceFile.isEmpty()  ||  PrefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	112	None	add
328	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  If(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  If(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    prefixMappings.isEmpty())    {    If(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	112	None	add
329	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile.isEmpty()  ||  prefixMappings.getEmpty())  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile.isEmpty()  ||  prefixMappings.getEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    prefixMappings.isEmpty())    {    if(sourceFile.isEmpty()  ||  prefixMappings.getEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	112	None	add
330	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  if(SourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  if(SourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    prefixMappings.isEmpty())    {    if(SourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	112	None	add
331	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile.empty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile.empty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    prefixMappings.isEmpty())    {    if(sourceFile.empty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	112	None	add
332	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	82	16	replace
333	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	82	16	replace
334	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	82	16	replace
335	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	82	16	replace
336	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile))  {	  if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	82	None	replace
337	[BUG]  [BUGGY]  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [CE]  illegal  start  of  type  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	sourceFile  =  sourceFile.substring(0,  sourceFile.length());	  if(sourceFile    ==    null)    {    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
338	[BUG]  [BUGGY]  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [CE]  illegal  start  of  type  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length());	  if(sourceFile    ==    null)    {    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
339	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [CE]  illegal  start  of  type  [FE]                                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null)  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }	  if(sourceFile    ==    null)    {    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
340	[BUG]  [BUGGY]  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [CE]  illegal  start  of  type  [FE]                                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  if(sourceFile    ==    null)    {    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
341	[BUG]  [BUGGY]  if(sourceFile  ==  null)  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [CE]  illegal  start  of  type  [FE]                                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null)  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null)  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }	  if(sourceFile    ==    null)    {    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
342	[BUG]  [BUGGY]  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [CE]  illegal  start  of  type  [FE]                                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  if(sourceFile    ==    null)    {    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
343	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  file.length());  [CE]  illegal  start  of  type  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  file.length());  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	String  originalName  =  sourceFile.substring(0,  file.length());	  String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
344	[BUG]  [BUGGY]  String  originalName  =  file.substring(0,  sourceFile.length());  [CE]  illegal  start  of  type  [FE]                                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  String  originalName  =  file.substring(0,  sourceFile.length());  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	String  originalName  =  file.substring(0,  sourceFile.length());	  String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
345	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings  ==  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    if(PrefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
346	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {  if(PrefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {  if(PrefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {  if(PrefixMappings  ==  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    if(PrefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
347	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty())  {  if(sourceFile!=  null  &&  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty())  {  if(sourceFile!=  null  &&  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    sourceFile.isEmpty())    {    if(sourceFile!=  null  &&  sourceFile.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	134	None	add
348	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty())  {  if(sourceFile  ==  null  &&  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty())  {  if(sourceFile  ==  null  &&  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    sourceFile.isEmpty())    {    if(sourceFile  ==  null  &&  sourceFile.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	134	None	add
349	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty())  {  if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty())  {  if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    sourceFile.isEmpty())    {    if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	134	None	add
350	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty())  {  if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.contains(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty())  {  if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    sourceFile.isEmpty())    {    if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.contains(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	134	None	add
351	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty())  {  if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty())  {  if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    sourceFile.isEmpty())    {    if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	134	None	add
352	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty())  {  if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty())  {  if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    sourceFile.isEmpty())    {    if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	134	None	add
353	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty())  {  if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty())  {  if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    sourceFile.isEmpty())    {    if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceFile.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	134	None	add
354	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  locationLocationFixupCache.get(sourceFile)!=  null)  {  [CE]  cannot  find  symbol  locationLocationFixupCache  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  locationLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  &&  locationLocationFixupCache.get(sourceFile)!=  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.get(sourceFile)!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  locationLocationFixupCache	173	None	replace
355	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.get(sourceFile)!=  null)  {  [CE]  cannot  find  symbol  locationLocationFixupCache  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.get(sourceFile)!=  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.get(sourceFile)!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  locationLocationFixupCache	173	None	replace
356	[BUG]  [BUGGY]  if(!sourceLocationFixupCache.isEmpty()  ||  locationLocationFixupCache.get(sourceFile)!=  null)  {  [CE]  cannot  find  symbol  locationLocationFixupCache  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceLocationFixupCache.isEmpty()  ||  locationLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceLocationFixupCache.isEmpty()  ||  locationLocationFixupCache.get(sourceFile)!=  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.get(sourceFile)!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  locationLocationFixupCache	173	None	replace
357	[BUG]  [BUGGY]  if(!sourceFile.isEmpty()  ||  locationLocationFixupCache.get(sourceFile)!=  null)  {  [CE]  cannot  find  symbol  locationLocationFixupCache  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceFile.isEmpty()  ||  locationLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceFile.isEmpty()  ||  locationLocationFixupCache.get(sourceFile)!=  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.get(sourceFile)!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  locationLocationFixupCache	173	None	replace
358	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.get(sourceFile)  ==  null)  {  [CE]  cannot  find  symbol  locationLocationFixupCache  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.get(sourceFile)  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.get(sourceFile)  ==  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.get(sourceFile)!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  locationLocationFixupCache	173	None	replace
359	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.get(sourceFile)!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	173	16	replace
360	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.get(sourceFile)!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	173	16	replace
361	[BUG]  [BUGGY]  if(!sourceLocationFixupCache.isEmpty()  ||  prefixMappings.get(sourceFile)!=  null)  {  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceLocationFixupCache.isEmpty()  ||  prefixMappings.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceLocationFixupCache.isEmpty()  ||  prefixMappings.get(sourceFile)!=  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.get(sourceFile)!=    null)    {    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	173	None	replace
362	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&!sourceLocationFixupCache.get(sourceFile)!=  null)  {  [CE]  bad  operand  type  String  for  unary  operator  '!'  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&!sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  &&!sourceLocationFixupCache.get(sourceFile)!=  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!sourceLocationFixupCache.get(sourceFile)!=    null)    {    	non-compiled	[CE]  bad  operand  type  String  for  unary  operator  '!'	138	None	replace
363	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)!=  null)  {  [CE]  bad  operand  type  String  for  unary  operator  '!'  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)!=  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!sourceLocationFixupCache.get(sourceFile)!=    null)    {    	non-compiled	[CE]  bad  operand  type  String  for  unary  operator  '!'	138	None	replace
364	[BUG]  [BUGGY]  if(!sourceLocationFixupCache.isEmpty()  ||!prefixMappings.containsKey(sourceFile)!=  null)  {  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceLocationFixupCache.isEmpty()  ||!prefixMappings.containsKey(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceLocationFixupCache.isEmpty()  ||!prefixMappings.containsKey(sourceFile)!=  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!sourceLocationFixupCache.get(sourceFile)!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
365	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null)  {  if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null)  {  if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)!=  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!sourceLocationFixupCache.get(sourceFile)!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
366	[BUG]  [BUGGY]  if(!sourceLocationFixupCache.isEmpty()  ||!prefixMappings.get(sourceFile)!=  null)  {  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceLocationFixupCache.isEmpty()  ||!prefixMappings.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceLocationFixupCache.isEmpty()  ||!prefixMappings.get(sourceFile)!=  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!sourceLocationFixupCache.get(sourceFile)!=    null)    {    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	138	None	replace
367	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [CE]  bad  operand  type  String  for  unary  operator  '!'  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)  ==  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!sourceLocationFixupCache.get(sourceFile)!=    null)    {    	non-compiled	[CE]  bad  operand  type  String  for  unary  operator  '!'	138	None	replace
368	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty())    {    if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	154	None	add
369	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  if(sourceFile.length()!=  0  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  if(sourceFile.length()!=  0  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty())    {    if(sourceFile.length()!=  0  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	154	None	add
370	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  if(sourceFile.length()  ==  0  ||  PrefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  if(sourceFile.length()  ==  0  ||  PrefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty())    {    if(sourceFile.length()  ==  0  ||  PrefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	154	None	add
371	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  if(sourceFile.length()  >=  0  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  if(sourceFile.length()  >=  0  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty())    {    if(sourceFile.length()  >=  0  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	154	None	add
372	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  If(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  If(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty())    {    If(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	154	None	add
373	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  if(prefixMappings.length()  ==  0  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  if(prefixMappings.length()  ==  0  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty())    {    if(prefixMappings.length()  ==  0  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	154	None	add
374	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  if(sourceFile.length()  ==  0  ||  prefixMappings.hasEmpty())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  if(sourceFile.length()  ==  0  ||  prefixMappings.hasEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty())    {    if(sourceFile.length()  ==  0  ||  prefixMappings.hasEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	154	None	add
375	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings!=  null  ||!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	110	16	replace
376	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  ||!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	110	16	replace
377	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceLocationFixupCache.isEmpty()  ||  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!sourceLocationFixupCache.isEmpty()  ||  sourceFile!=  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	110	16	replace
378	[BUG]  [BUGGY]  if(!sourceLocationFixupCache.isEmpty()  ||  sourceFile!=  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceLocationFixupCache.isEmpty()  ||  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceLocationFixupCache.isEmpty()  ||  sourceFile!=  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	110	16	replace
379	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceFile.isEmpty()  ||  prefixMappings!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!sourceFile.isEmpty()  ||  prefixMappings!=  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	110	16	replace
380	[BUG]  [BUGGY]  if(!sourceFile.isEmpty()  ||  prefixMappings!=  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceFile.isEmpty()  ||  prefixMappings!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceFile.isEmpty()  ||  prefixMappings!=  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	110	16	replace
381	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceFile.isEmpty()  ||  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!sourceFile.isEmpty()  ||  sourceFile!=  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	110	16	replace
382	[BUG]  [BUGGY]  if(!sourceFile.isEmpty()  ||  sourceFile!=  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceFile.isEmpty()  ||  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceFile.isEmpty()  ||  sourceFile!=  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	110	16	replace
383	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  ||  PrefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  ||  PrefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  ||  PrefixMappings.isEmpty())  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    if(prefixMappings!=    null    ||    PrefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
384	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  ||  PrefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  ||  PrefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  ||  PrefixMappings.isEmpty())  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    if(prefixMappings!=    null    ||    PrefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
385	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  PrefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  PrefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  PrefixMappings.isEmpty())  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    if(prefixMappings!=    null    ||    PrefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
386	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	168	None	add
387	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	168	None	add
388	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings  >=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings  >=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings  >=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	168	None	add
389	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	168	None	add
390	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	168	None	add
391	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings!=  null  ||  PrefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings!=  null  ||  PrefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings!=  null  ||  PrefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	168	None	add
392	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  If(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  ';'  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  If(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    If(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	168	None	add
393	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty())  {  if(prefixMappings!=  null  &&  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty())  {  if(prefixMappings!=  null  &&  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    sourceFile.isEmpty())    {    if(prefixMappings!=  null  &&  sourceFile.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
394	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty())  {  if(prefixMappings  ==  null  &&  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty())  {  if(prefixMappings  ==  null  &&  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    sourceFile.isEmpty())    {    if(prefixMappings  ==  null  &&  sourceFile.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
395	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty())  {  if(prefixMappings  >=  null  &&  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty())  {  if(prefixMappings  >=  null  &&  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    sourceFile.isEmpty())    {    if(prefixMappings  >=  null  &&  sourceFile.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
396	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty())  {  If(prefixMappings!=  null  &&  sourceFile.isEmpty())  {  [CE]  ';'  expected  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty())  {  If(prefixMappings!=  null  &&  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    sourceFile.isEmpty())    {    If(prefixMappings!=  null  &&  sourceFile.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	22	None	add
397	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty())  {  if(prefixMappings  >>  null  &&  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty())  {  if(prefixMappings  >>  null  &&  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    sourceFile.isEmpty())    {    if(prefixMappings  >>  null  &&  sourceFile.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
398	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty())  {  if(prefixMappings  [Delete]  null  &&  sourceFile.isEmpty())  {  [CE]  ')'  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty())  {  if(prefixMappings  [Delete]  null  &&  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    sourceFile.isEmpty())    {    if(prefixMappings  [Delete]  null  &&  sourceFile.isEmpty())  {	  	non-compiled	[CE]  ')'  expected	22	None	add
399	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty())  {  if(prefixMappings!=  null  |&  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty())  {  if(prefixMappings!=  null  |&  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    sourceFile.isEmpty())    {    if(prefixMappings!=  null  |&  sourceFile.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
400	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
401	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
402	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
403	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile  ==  null  ||  PrefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile  ==  null  ||  PrefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(sourceFile  ==  null  ||  PrefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
404	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
405	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  If(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  ';'  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  If(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    If(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	103	None	add
406	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  2)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  2)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
407	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  sourceFile.trim();  [CE]  illegal  start  of  type  [FE]                                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure  =  sourceFile.trim();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  =  sourceFile.trim();	  junit.framework.ComparisonFailure    =    sourceFile;    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
408	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  sourceFile.toUpperCase();  [CE]  illegal  start  of  type  [FE]                                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure  =  sourceFile.toUpperCase();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  =  sourceFile.toUpperCase();	  junit.framework.ComparisonFailure    =    sourceFile;    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
409	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile  >=  null)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile  >=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||  sourceFile  >=  null)  {	  if(!prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	143	None	replace
410	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||!prefixMappings.isEmpty())    {    if(prefixMappings  ==  null  ||!prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
411	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty())  {  if(prefixMappings!=  null  ||!prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty())  {  if(prefixMappings!=  null  ||!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||!prefixMappings.isEmpty())    {    if(prefixMappings!=  null  ||!prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
412	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty())  {  If(prefixMappings  ==  null  ||!prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty())  {  If(prefixMappings  ==  null  ||!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||!prefixMappings.isEmpty())    {    If(prefixMappings  ==  null  ||!prefixMappings.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	48	None	add
413	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty())  {  if(prefixMappings  >=  null  ||!prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty())  {  if(prefixMappings  >=  null  ||!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||!prefixMappings.isEmpty())    {    if(prefixMappings  >=  null  ||!prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
414	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||!prefixMappings.hasEmpty())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||!prefixMappings.hasEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||!prefixMappings.isEmpty())    {    if(prefixMappings  ==  null  ||!prefixMappings.hasEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
415	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||! "prefixMappings.isEmpty())  {  [CE]  unclosed  string  literal  [FE]              AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||! "prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||!prefixMappings.isEmpty())    {    if(prefixMappings  ==  null  ||! "prefixMappings.isEmpty())  {	  	non-compiled	[CE]  unclosed  string  literal	48	None	add
416	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||!prefixMappings.getEmpty())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||!prefixMappings.getEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||!prefixMappings.isEmpty())    {    if(prefixMappings  ==  null  ||!prefixMappings.getEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
417	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  locationLocationFixupCache.contains(sourceFile))  {  [CE]  cannot  find  symbol  locationLocationFixupCache  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  locationLocationFixupCache.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  &&  locationLocationFixupCache.contains(sourceFile))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.contains(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol  locationLocationFixupCache	174	None	replace
418	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.contains(sourceFile))  {  [CE]  cannot  find  symbol  locationLocationFixupCache  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.contains(sourceFile))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.contains(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol  locationLocationFixupCache	174	None	replace
419	[BUG]  [BUGGY]  if(!sourceLocationFixupCache.isEmpty()  ||  locationLocationFixupCache.contains(sourceFile))  {  [CE]  cannot  find  symbol  locationLocationFixupCache  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceLocationFixupCache.isEmpty()  ||  locationLocationFixupCache.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceLocationFixupCache.isEmpty()  ||  locationLocationFixupCache.contains(sourceFile))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.contains(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol  locationLocationFixupCache	174	None	replace
420	[BUG]  [BUGGY]  if(!sourceFile.isEmpty()  ||  locationLocationFixupCache.contains(sourceFile))  {  [CE]  cannot  find  symbol  locationLocationFixupCache  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceFile.isEmpty()  ||  locationLocationFixupCache.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceFile.isEmpty()  ||  locationLocationFixupCache.contains(sourceFile))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.contains(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol  locationLocationFixupCache	174	None	replace
421	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceLocationFixupCache.isEmpty()  ||  prefixMappings.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!sourceLocationFixupCache.isEmpty()  ||  prefixMappings.contains(sourceFile))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.contains(sourceFile))    {    	compilable	  [FE]  AssertionFailedError  	174	16	replace
422	[BUG]  [BUGGY]  if(!sourceLocationFixupCache.isEmpty()  ||  prefixMappings.contains(sourceFile))  {  [FE]  AssertionFailedError  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceLocationFixupCache.isEmpty()  ||  prefixMappings.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceLocationFixupCache.isEmpty()  ||  prefixMappings.contains(sourceFile))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.contains(sourceFile))    {    	compilable	  [FE]  AssertionFailedError  	174	16	replace
423	[BUG]  [BUGGY]  if(sourceFile!=  null  ||!prefixMappings.isEmpty()  ||  locationLocationFixupCache.contains(sourceFile))  {  [CE]  cannot  find  symbol  locationLocationFixupCache  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||!prefixMappings.isEmpty()  ||  locationLocationFixupCache.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||!prefixMappings.isEmpty()  ||  locationLocationFixupCache.contains(sourceFile))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.contains(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol  locationLocationFixupCache	174	None	replace
424	[BUG]  [BUGGY]  if(locationLocationFixupCache.contains(sourceFile))  {  [CE]  cannot  find  symbol  locationLocationFixupCache  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(locationLocationFixupCache.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(locationLocationFixupCache.contains(sourceFile))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.contains(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol  locationLocationFixupCache	174	None	replace
425	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	111	16	replace
426	[BUG]  [BUGGY]  if(!sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	111	16	replace
427	[BUG]  [BUGGY]  if(!sourceFile.isEmpty()  ||  prefixMappings.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceFile.isEmpty()  ||  prefixMappings.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceFile.isEmpty()  ||  prefixMappings.length()  ==  0)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
428	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	111	16	replace
429	[BUG]  [BUGGY]  if(sourceFile!=  null  ||!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	111	16	replace
430	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	111	16	replace
431	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	111	16	replace
432	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)    ==    null)    {    if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
433	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)    ==    null)    {    if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
434	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  >=  null)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  >=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)    ==    null)    {    if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
435	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  if(sourceLocationFixupCache.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  if(sourceLocationFixupCache.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)    ==    null)    {    if(sourceLocationFixupCache.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
436	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  If(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [CE]  ';'  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  If(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)    ==    null)    {    If(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {	  	non-compiled	[CE]  ';'  expected	86	None	add
437	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  if(sourceLocationFixupCache.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  if(sourceLocationFixupCache.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)    ==    null)    {    if(sourceLocationFixupCache.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
438	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  &&!prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    &&!prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	141	16	replace
439	[BUG]  [BUGGY]  if(sourceFile!=  null  &&!prefixMappings.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&!prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    &&!prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	141	16	replace
440	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  &&!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  &&!prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    &&!prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	141	16	replace
441	[BUG]  [BUGGY]  if(sourceFile  ==  null  &&!prefixMappings.isEmpty())  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  &&!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  &&!prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    &&!prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	141	16	replace
442	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  &&!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  &&!prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    &&!prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	141	16	replace
443	[BUG]  [BUGGY]  if(prefixMappings  ==  null  &&!prefixMappings.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  &&!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  &&!prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    &&!prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	141	16	replace
444	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  locationLocationFixupCache.containsKey(sourceFile))  {  [CE]  cannot  find  symbol  locationLocationFixupCache  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  locationLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  &&  locationLocationFixupCache.containsKey(sourceFile))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.containsKey(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol  locationLocationFixupCache	172	None	replace
445	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.containsKey(sourceFile))  {  [CE]  cannot  find  symbol  locationLocationFixupCache  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.containsKey(sourceFile))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.containsKey(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol  locationLocationFixupCache	172	None	replace
446	[BUG]  [BUGGY]  if(!sourceLocationFixupCache.isEmpty()  ||  locationLocationFixupCache.containsKey(sourceFile))  {  [CE]  cannot  find  symbol  locationLocationFixupCache  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceLocationFixupCache.isEmpty()  ||  locationLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceLocationFixupCache.isEmpty()  ||  locationLocationFixupCache.containsKey(sourceFile))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.containsKey(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol  locationLocationFixupCache	172	None	replace
447	[BUG]  [BUGGY]  if(!sourceFile.isEmpty()  ||  locationLocationFixupCache.containsKey(sourceFile))  {  [CE]  cannot  find  symbol  locationLocationFixupCache  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceFile.isEmpty()  ||  locationLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceFile.isEmpty()  ||  locationLocationFixupCache.containsKey(sourceFile))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.containsKey(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol  locationLocationFixupCache	172	None	replace
448	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.containsKey(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null)  {  if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null)  {  if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.containsKey(sourceFile))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.containsKey(sourceFile))    {    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
449	[BUG]  [BUGGY]  if(!sourceLocationFixupCache.isEmpty()  ||  prefixMappings.containsKey(sourceFile))  {  [CE]  cannot  find  symbol  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceLocationFixupCache.isEmpty()  ||  prefixMappings.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceLocationFixupCache.isEmpty()  ||  prefixMappings.containsKey(sourceFile))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.containsKey(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol	172	None	replace
450	[BUG]  [BUGGY]  if(sourceFile!=  null  ||!prefixMappings.isEmpty()  ||  locationLocationFixupCache.containsKey(sourceFile))  {  [CE]  cannot  find  symbol  locationLocationFixupCache  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||!prefixMappings.isEmpty()  ||  locationLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||!prefixMappings.isEmpty()  ||  locationLocationFixupCache.containsKey(sourceFile))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.containsKey(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol  locationLocationFixupCache	172	None	replace
451	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)!=    null)    {    if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
452	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)!=    null)    {    if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
453	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  if(sourceLocationFixupCache.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  if(sourceLocationFixupCache.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)!=    null)    {    if(sourceLocationFixupCache.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
454	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  >=  null)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  >=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)!=    null)    {    if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
455	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  If(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [CE]  ';'  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  If(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)!=    null)    {    If(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {	  	non-compiled	[CE]  ';'  expected	84	None	add
456	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  >>  null)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  >>  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)!=    null)    {    if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  >>  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
457	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!sourceLocationFixupCache.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	136	16	replace
458	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!sourceLocationFixupCache.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	136	16	replace
459	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!sourceLocationFixupCache.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!sourceLocationFixupCache.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	136	16	replace
460	[BUG]  [BUGGY]  if(!sourceLocationFixupCache.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceLocationFixupCache.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!sourceLocationFixupCache.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	136	16	replace
461	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&!sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  &&!sourceLocationFixupCache.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!sourceLocationFixupCache.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	136	16	replace
462	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&!sourceLocationFixupCache.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&!sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  &&!sourceLocationFixupCache.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!sourceLocationFixupCache.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	136	16	replace
463	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings!=  null  ||!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!sourceLocationFixupCache.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	136	16	replace
464	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  ||!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!sourceLocationFixupCache.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	136	16	replace
465	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceFile.isEmpty()  ||!sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!sourceFile.isEmpty()  ||!sourceLocationFixupCache.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!sourceLocationFixupCache.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	136	16	replace
466	[BUG]  [BUGGY]  if(!sourceFile.isEmpty()  ||!sourceLocationFixupCache.isEmpty())  {  [FE]  AssertionFailedError  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceFile.isEmpty()  ||!sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceFile.isEmpty()  ||!sourceLocationFixupCache.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!sourceLocationFixupCache.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	136	16	replace
467	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	107	16	replace
468	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [FE]  AssertionFailedError  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	107	16	replace
469	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  &&  prefixMappings.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	107	16	replace
470	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  prefixMappings.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  &&  prefixMappings.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	107	16	replace
471	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||!prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings!=  null  ||!prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	107	16	replace
472	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||!prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||!prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  ||!prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	107	16	replace
473	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceLocationFixupCache.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!sourceLocationFixupCache.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	107	16	replace
474	[BUG]  [BUGGY]  if(!sourceLocationFixupCache.isEmpty()  ||  prefixMappings.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceLocationFixupCache.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceLocationFixupCache.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	107	16	replace
475	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  1)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  1)  {	  if(sourceFile.isEmpty()    ||    prefixMappings.size()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	102	16	replace
476	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  1)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  1)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  1)  {	  if(sourceFile.isEmpty()    ||    prefixMappings.size()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	102	16	replace
477	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  2)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  2)  {	  if(sourceFile.isEmpty()    ||    prefixMappings.size()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	102	16	replace
478	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  2)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  2)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  2)  {	  if(sourceFile.isEmpty()    ||    prefixMappings.size()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	102	16	replace
479	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.size()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.length()  ==  0  ||  prefixMappings.size()  ==  0)  {	  if(sourceFile.isEmpty()    ||    prefixMappings.size()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	102	16	replace
480	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.size()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.size()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  ||  prefixMappings.size()  ==  0)  {	  if(sourceFile.isEmpty()    ||    prefixMappings.size()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	102	16	replace
481	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  sourceFile.size()  ==  0)  {  [CE]  cannot  find  symbol  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  sourceFile.size()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()  ||  sourceFile.size()  ==  0)  {	  if(sourceFile.isEmpty()    ||    prefixMappings.size()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
482	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.size()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  ||  prefixMappings.size()  >  0)  {	  if(sourceFile.isEmpty()    ||    prefixMappings.size()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	102	16	replace
483	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.size()  >  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.size()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  prefixMappings.size()  >  0)  {	  if(sourceFile.isEmpty()    ||    prefixMappings.size()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	102	16	replace
484	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.size()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  prefixMappings.size()  ==  0)  {	  if(sourceFile.isEmpty()    ||    prefixMappings.size()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	102	16	replace
485	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.size()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.size()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.size()  ==  0)  {	  if(sourceFile.isEmpty()    ||    prefixMappings.size()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	102	16	replace
486	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.contains(sourceFile))  {  [CE]  cannot  find  symbol  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.contains(sourceFile))  {	  if(sourceFile.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
487	[BUG]  [BUGGY]  if(sourceFile.length()!=  0  ||  sourceLocationFixupCache.contains(sourceFile))  {  [CE]  cannot  find  symbol  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()!=  0  ||  sourceLocationFixupCache.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()!=  0  ||  sourceLocationFixupCache.contains(sourceFile))  {	  if(sourceFile.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
488	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  If(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  If(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  If(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    If(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	32	None	replace
489	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    If(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	32	None	replace
490	[BUG]  [BUGGY]  If(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  If(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	If(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    If(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	32	None	replace
491	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  If(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  If(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  If(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    If(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	32	None	replace
492	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  sourceFile.length()  >  0)  {  If(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceFile.length()  >  0)  {  If(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  sourceFile.length()  >  0)  {  If(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    If(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	32	None	replace
493	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    If(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	32	None	replace
494	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  sourceFile.length()!=  0)  {	  if(sourceFile    ==    null    ||    sourceFile.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	133	16	replace
495	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.length()!=  0)  {  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  sourceFile.length()!=  0)  {	  if(sourceFile    ==    null    ||    sourceFile.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	133	16	replace
496	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.equals( " "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  sourceFile.equals( " "))  {	  if(sourceFile    ==    null    ||    sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	133	16	replace
497	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.equals( " "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.equals( " "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  sourceFile.equals( " "))  {	  if(sourceFile    ==    null    ||    sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	133	16	replace
498	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.toLowerCase();  [CE]  illegal  start  of  type  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.toLowerCase();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  sourceFile  =  sourceFile.toLowerCase();	  junit.framework.ComparisonFailure    sourceFile    =    sourceFile.toString();    	non-compiled	[CE]  illegal  start  of  type	196	None	replace
499	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile  ==  null?  null  :  sourceFile.toString();  [CE]  illegal  start  of  type  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile  ==  null?  null  :  sourceFile.toString();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  sourceFile  =  sourceFile  ==  null?  null  :  sourceFile.toString();	  junit.framework.ComparisonFailure    sourceFile    =    sourceFile.toString();    	non-compiled	[CE]  illegal  start  of  type	196	None	replace
500	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile!=  null?  null  :  sourceFile.toString();  [CE]  illegal  start  of  type  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile!=  null?  null  :  sourceFile.toString();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  sourceFile  =  sourceFile!=  null?  null  :  sourceFile.toString();	  junit.framework.ComparisonFailure    sourceFile    =    sourceFile.toString();    	non-compiled	[CE]  illegal  start  of  type	196	None	replace
501	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [CE]  illegal  start  of  type  [FE]                                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  junit.framework.ComparisonFailure    sourceFile    =    sourceFile.toString();    	non-compiled	[CE]  illegal  start  of  type	196	None	replace
502	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.toExternalForm();  [CE]  illegal  start  of  type  [FE]                                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.toExternalForm();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  sourceFile  =  sourceFile.toExternalForm();	  junit.framework.ComparisonFailure    sourceFile    =    sourceFile.toString();    	non-compiled	[CE]  illegal  start  of  type	196	None	replace
503	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    prefixMappings.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
504	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile!=  null  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile!=  null  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    prefixMappings.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    if(sourceFile!=  null  &&  sourceLocationFixupCache.containsKey(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
505	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    prefixMappings.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
506	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile!=  null  &&  PrefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile!=  null  &&  PrefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    prefixMappings.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    if(sourceFile!=  null  &&  PrefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
507	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile  >=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile  >=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    prefixMappings.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    if(sourceFile  >=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
508	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(SourceFile))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(SourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    prefixMappings.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(SourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
509	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile!=  null  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile!=  null  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    prefixMappings.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    if(sourceFile!=  null  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
510	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	192	None	add
511	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith(. "java   "))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith(. "java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith(. "java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	192	None	add
512	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(!prefixMappings.isEmpty()  ||  sourceFile.startsWith( ".java   "))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(!prefixMappings.isEmpty()  ||  sourceFile.startsWith( ".java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    if(!prefixMappings.isEmpty()  ||  sourceFile.startsWith( ".java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	192	None	add
513	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith( ",.java   "))  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith( ",.java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith( ",.java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	192	None	add
514	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
515	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
516	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile!=  null  &&  PrefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile!=  null  &&  PrefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(sourceFile!=  null  &&  PrefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
517	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
518	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  If(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  If(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    If(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	26	None	add
519	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile  >=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile  >=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(sourceFile  >=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
520	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
521	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  &&  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  &&  sourceFile.isEmpty())  {	  if(sourceFile    ==    null    &&    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	19	16	replace
522	[BUG]  [BUGGY]  if(prefixMappings  ==  null  &&  sourceFile.isEmpty())  {  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  &&  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  &&  sourceFile.isEmpty())  {	  if(sourceFile    ==    null    &&    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	19	16	replace
523	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.endsWith( ".java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  &&  sourceFile.endsWith( ".java "))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	109	16	replace
524	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.endsWith( ".java "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.endsWith( ".java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  &&  sourceFile.endsWith( ".java "))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	109	16	replace
525	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java "))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	109	16	replace
526	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java "))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	109	16	replace
527	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceFile.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!sourceFile.isEmpty()  ||  sourceFile.endsWith( ".java "))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	109	16	replace
528	[BUG]  [BUGGY]  if(!sourceFile.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceFile.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceFile.isEmpty()  ||  sourceFile.endsWith( ".java "))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	109	16	replace
529	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.endsWith( "java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  &&  sourceFile.endsWith( "java   "))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	109	16	replace
530	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.endsWith( "java   "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.endsWith( "java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  &&  sourceFile.endsWith( "java   "))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	109	16	replace
531	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.endsWith( "java. "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  &&  sourceFile.endsWith( "java. "))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	109	16	replace
532	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.endsWith( "java. "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.endsWith( "java. "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  &&  sourceFile.endsWith( "java. "))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	109	16	replace
533	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
534	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
535	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
536	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(prefixMappings  ==  null  ||  PrefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(prefixMappings  ==  null  ||  PrefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    if(prefixMappings  ==  null  ||  PrefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
537	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >>  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >>  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
538	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  If(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [CE]  ';'  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  If(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    If(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
539	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  2)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  2)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
540	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	161	16	replace
541	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	161	16	replace
542	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings!=  null)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	161	16	replace
543	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings!=  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings!=  null)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	161	16	replace
544	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile  ==  null)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	161	16	replace
545	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile  ==  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile  ==  null)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	161	16	replace
546	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	161	16	replace
547	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	161	16	replace
548	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings!=  null)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	161	16	replace
549	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings!=  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings!=  null)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	161	16	replace
550	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings!=  null)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	161	16	replace
551	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings!=  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings!=  null)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	161	16	replace
552	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  If(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  If(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  If(sourceFile!=  null  ||  prefixMappings.isEmpty())  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    If(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	78	None	replace
553	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  If(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  If(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  If(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    If(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	78	None	replace
554	[BUG]  [BUGGY]  If(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  If(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	If(sourceFile!=  null  ||  prefixMappings.isEmpty())  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    If(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	78	None	replace
555	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  sourceFile.isEmpty())  {  If(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  sourceFile.isEmpty())  {  If(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  ||  sourceFile.isEmpty())  {  If(sourceFile!=  null  ||  prefixMappings.isEmpty())  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    If(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	78	None	replace
556	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	185	None	add
557	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    if(prefixMappings  ==  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	185	None	add
558	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith(. "java   "))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith(. "java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith(. "java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	185	None	add
559	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	184	16	replace
560	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	184	16	replace
561	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	184	16	replace
562	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	184	16	replace
563	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	184	16	replace
564	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	184	16	replace
565	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  >  0)  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	184	16	replace
566	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  >  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  >  0)  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	184	16	replace
567	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  AssertionFailedError  	184	16	replace
568	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  AssertionFailedError  	184	16	replace
569	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  >  0)  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  AssertionFailedError  	184	16	replace
570	[BUG]  [BUGGY]  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  >  0)  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  >  0)  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  AssertionFailedError  	184	16	replace
571	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	184	16	replace
572	[BUG]  [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	184	16	replace
573	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	123	16	replace
574	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	123	16	replace
575	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	123	16	replace
576	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	123	16	replace
577	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".js   "))  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".js   "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".js   "))  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".js   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".js   "))    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".js   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	201	None	add
578	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".js   "))  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".js   "))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".js   "))  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".js   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".js   "))    {    if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".js   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	201	None	add
579	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".js   "))  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(. ".js   "))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".js   "))  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(. ".js   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".js   "))    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(. ".js   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	201	None	add
580	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null  &&  PrefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null  &&  PrefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null  &&  PrefixMappings.isEmpty())  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty())    {    if(sourceFile!=    null    &&    PrefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
581	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null  &&  PrefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null  &&  PrefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null  &&  PrefixMappings.isEmpty())  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty())    {    if(sourceFile!=    null    &&    PrefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
582	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	115	16	replace
583	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	115	16	replace
584	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	115	16	replace
585	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	115	16	replace
586	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	115	16	replace
587	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	115	16	replace
588	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
589	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
590	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
591	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
592	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings  ==  null  ||  PrefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings  ==  null  ||  PrefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings  ==  null  ||  PrefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
593	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  If(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  ';'  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  If(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    If(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
594	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  2)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  2)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
595	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.endsWith( "java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  ||  sourceFile.endsWith( "java "))  {	  if(sourceFile.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	191	16	replace
596	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.endsWith( "java "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.endsWith( "java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  sourceFile.endsWith( "java "))  {	  if(sourceFile.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	191	16	replace
597	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  sourceFile.isEmpty()  ||  sourceFile.endsWith( ".java "))  {	  if(sourceFile.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	191	16	replace
598	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  sourceFile.isEmpty()  ||  sourceFile.endsWith( ".java "))  {	  if(sourceFile.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	191	16	replace
599	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.endsWith( "/.java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  ||  sourceFile.endsWith( "/.java "))  {	  if(sourceFile.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	191	16	replace
600	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.endsWith( "/.java "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.endsWith( "/.java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  sourceFile.endsWith( "/.java "))  {	  if(sourceFile.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	191	16	replace
601	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.startsWith( ".java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  ||  sourceFile.startsWith( ".java "))  {	  if(sourceFile.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  AssertionFailedError  	191	16	replace
602	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.startsWith( ".java "))  {  [FE]  AssertionFailedError  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.startsWith( ".java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  sourceFile.startsWith( ".java "))  {	  if(sourceFile.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  AssertionFailedError  	191	16	replace
603	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.endsWith( "java/ "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  ||  sourceFile.endsWith( "java/ "))  {	  if(sourceFile.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	191	16	replace
604	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.endsWith( "java/ "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.endsWith( "java/ "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  sourceFile.endsWith( "java/ "))  {	  if(sourceFile.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	191	16	replace
605	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    if(prefixMappings    {    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
606	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    if(prefixMappings    {    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
607	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    if(prefixMappings    {    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
608	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty())  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty())  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  sourceFile.isEmpty())  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    if(prefixMappings    {    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
609	[BUG]  [BUGGY]  if(sourceFile  >=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  >=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  >=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    if(prefixMappings    {    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
610	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {	  if    (sourceFile.isEmpty())    {    if    (sourceFile.isEmpty()    ||    sourceLocationFixupCache.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	73	16	replace
611	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {	  if    (sourceFile.isEmpty())    {    if    (sourceFile.isEmpty()    ||    sourceLocationFixupCache.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	73	16	replace
612	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceLocationFixupCache.isEmpty()  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceLocationFixupCache.isEmpty()  ||  sourceFile.isEmpty())  {	  if    (sourceFile.isEmpty())    {    if    (sourceFile.isEmpty()    ||    sourceLocationFixupCache.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	73	16	replace
613	[BUG]  [BUGGY]  if(sourceLocationFixupCache.isEmpty()  ||  sourceFile.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceLocationFixupCache.isEmpty()  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceLocationFixupCache.isEmpty()  ||  sourceFile.isEmpty())  {	  if    (sourceFile.isEmpty())    {    if    (sourceFile.isEmpty()    ||    sourceLocationFixupCache.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	73	16	replace
614	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  sourceLocationFixupCache.isEmpty())  {	  if    (sourceFile.isEmpty())    {    if    (sourceFile.isEmpty()    ||    sourceLocationFixupCache.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	73	16	replace
615	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  sourceLocationFixupCache.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  sourceLocationFixupCache.isEmpty())  {	  if    (sourceFile.isEmpty())    {    if    (sourceFile.isEmpty()    ||    sourceLocationFixupCache.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	73	16	replace
616	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.length()  ==  0)  {	  if    (sourceFile.isEmpty())    {    if    (sourceFile.isEmpty()    ||    sourceLocationFixupCache.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
617	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||!prefixMappings.isEmpty())  {  if(prefixMappings!=  null  ||!prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||!prefixMappings.isEmpty())  {  if(prefixMappings!=  null  ||!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||!prefixMappings.isEmpty())    {    if(prefixMappings!=  null  ||!prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
618	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||!prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||!prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||!prefixMappings.isEmpty())    {    if(prefixMappings  ==  null  ||!prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
619	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||!prefixMappings.isEmpty())  {  if(prefixMappings  >=  null  ||!prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||!prefixMappings.isEmpty())  {  if(prefixMappings  >=  null  ||!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||!prefixMappings.isEmpty())    {    if(prefixMappings  >=  null  ||!prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
620	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||!prefixMappings.isEmpty())  {  If(prefixMappings!=  null  ||!prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||!prefixMappings.isEmpty())  {  If(prefixMappings!=  null  ||!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||!prefixMappings.isEmpty())    {    If(prefixMappings!=  null  ||!prefixMappings.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	45	None	add
621	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||!prefixMappings.isEmpty())  {  if(prefixMappings  >>  null  ||!prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||!prefixMappings.isEmpty())  {  if(prefixMappings  >>  null  ||!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||!prefixMappings.isEmpty())    {    if(prefixMappings  >>  null  ||!prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
622	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||!prefixMappings.isEmpty())  {  if(prefixMappings!=  null  ||!prefixMappings.hasEmpty())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||!prefixMappings.isEmpty())  {  if(prefixMappings!=  null  ||!prefixMappings.hasEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||!prefixMappings.isEmpty())    {    if(prefixMappings!=  null  ||!prefixMappings.hasEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
623	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||!prefixMappings.isEmpty())  {  if(prefixMappings!=  null  ||! "prefixMappings.isEmpty())  {  [CE]  unclosed  string  literal  [FE]                AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||!prefixMappings.isEmpty())  {  if(prefixMappings!=  null  ||! "prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||!prefixMappings.isEmpty())    {    if(prefixMappings!=  null  ||! "prefixMappings.isEmpty())  {	  	non-compiled	[CE]  unclosed  string  literal	45	None	add
624	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  PrefixMappings.isEmpty())  {  [CE]  cannot  find  symbol  PrefixMappings  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  PrefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  PrefixMappings.isEmpty())  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    if(sourceFile!=    null    ||    PrefixMappings.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  PrefixMappings	77	None	replace
625	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  PrefixMappings.isEmpty())  {  [CE]  cannot  find  symbol  PrefixMappings  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  PrefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  ||  PrefixMappings.isEmpty())  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    if(sourceFile!=    null    ||    PrefixMappings.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  PrefixMappings	77	None	replace
626	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	178	16	replace
627	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	178	16	replace
628	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	178	16	replace
629	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	178	16	replace
630	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	183	None	add
631	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    if(prefixMappings  ==  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	183	None	add
632	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  if(prefixMappings!=  null  &&  PrefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  if(prefixMappings!=  null  &&  PrefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    if(prefixMappings!=  null  &&  PrefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	183	None	add
633	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  if(prefixMappings  >=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  if(prefixMappings  >=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    if(prefixMappings  >=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	183	None	add
634	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  If(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  If(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    If(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {	  	non-compiled	[CE]  ';'  expected	183	None	add
635	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	183	None	add
636	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	183	None	add
637	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  sourceFile.containsKey(sourceFile))  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  sourceFile.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  ||  sourceFile.containsKey(sourceFile))  {	  if(sourceFile!=    null    ||    prefixMappings.containsKey(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
638	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.containsKey(sourceFile))  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.containsKey(sourceFile))  {	  if(sourceFile!=    null    ||    prefixMappings.containsKey(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
639	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.containsKey(sourceFile))  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  sourceFile.containsKey(sourceFile))  {	  if(sourceFile!=    null    ||    prefixMappings.containsKey(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
640	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.containsKey(sourceFile))  {  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  ||  prefixMappings.containsKey(sourceFile))  {	  if(sourceFile!=    null    ||    prefixMappings.containsKey(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
641	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.containsKey(sourceFile))  {  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  prefixMappings.containsKey(sourceFile))  {	  if(sourceFile!=    null    ||    prefixMappings.containsKey(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
642	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMapping.containsKey(sourceFile))  {  [CE]  cannot  find  symbol  prefixMapping  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMapping.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMapping.containsKey(sourceFile))  {	  if(sourceFile!=    null    ||    prefixMappings.containsKey(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol  prefixMapping	146	None	replace
643	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  +  1);  [CE]  illegal  start  of  type  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  +  1);  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  +  1);	  String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
644	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()));  [CE]  ';'  expected  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()));  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()));	  String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  ';'  expected	129	None	replace
645	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  file.length()  -  1);  [CE]  illegal  start  of  type  [FE]                                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  file.length()  -  1);  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	String  sourceFile  =  sourceFile.substring(0,  file.length()  -  1);	  String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
646	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	119	16	replace
647	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	119	16	replace
648	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  this.sourceFile.getGenerator();  [CE]  illegal  start  of  type  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  SourceMapGenerator  generator  =  this.sourceFile.getGenerator();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	SourceMapGenerator  generator  =  this.sourceFile.getGenerator();	  SourceMapGenerator    generator    =    sourceFile.getGenerator();    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
649	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  sourceFile.generator();  [CE]  illegal  start  of  type  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  SourceMapGenerator  generator  =  sourceFile.generator();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	SourceMapGenerator  generator  =  sourceFile.generator();	  SourceMapGenerator    generator    =    sourceFile.getGenerator();    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
650	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  sourceFile.startsWith( ".java ")?  sourceFile.getGenerator()  :  null;  [CE]  illegal  start  of  type  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  SourceMapGenerator  generator  =  sourceFile.startsWith( ".java ")?  sourceFile.getGenerator()  :  null;  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	SourceMapGenerator  generator  =  sourceFile.startsWith( ".java ")?  sourceFile.getGenerator()  :  null;	  SourceMapGenerator    generator    =    sourceFile.getGenerator();    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
651	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  sourceFile.startsWith( "java. ")?  sourceFile.substring(1):  sourceFile.getGenerator();  [CE]  illegal  start  of  type  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  SourceMapGenerator  generator  =  sourceFile.startsWith( "java. ")?  sourceFile.substring(1):  sourceFile.getGenerator();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	SourceMapGenerator  generator  =  sourceFile.startsWith( "java. ")?  sourceFile.substring(1):  sourceFile.getGenerator();	  SourceMapGenerator    generator    =    sourceFile.getGenerator();    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
652	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  sourceFile.generate();  [CE]  illegal  start  of  type  [FE]                                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  SourceMapGenerator  generator  =  sourceFile.generate();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	SourceMapGenerator  generator  =  sourceFile.generate();	  SourceMapGenerator    generator    =    sourceFile.getGenerator();    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
653	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  sourceFile.startsWith( ".java ")?  sourceFile.substring(1):  sourceFile.getGenerator();  [CE]  illegal  start  of  type  [FE]                                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  SourceMapGenerator  generator  =  sourceFile.startsWith( ".java ")?  sourceFile.substring(1):  sourceFile.getGenerator();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	SourceMapGenerator  generator  =  sourceFile.startsWith( ".java ")?  sourceFile.substring(1):  sourceFile.getGenerator();	  SourceMapGenerator    generator    =    sourceFile.getGenerator();    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
654	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.endsWith( "java.java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  &&  sourceFile.endsWith( "java.java "))  {	  if(!prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  AssertionFailedError  	193	16	replace
655	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.endsWith( "java.java "))  {  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.endsWith( "java.java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  &&  sourceFile.endsWith( "java.java "))  {	  if(!prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  AssertionFailedError  	193	16	replace
656	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    	compilable	  [FE]  AssertionFailedError  	8	16	replace
657	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    	compilable	  [FE]  AssertionFailedError  	8	16	replace
658	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings.length()!=  0)  {  [CE]  cannot  find  symbol  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings.length()!=  0)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
659	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings.length()!=  0)  {  [CE]  cannot  find  symbol  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings.length()!=  0)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
660	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  &&  sourceLocationFixupCache.isEmpty())  {	  if(sourceFile!=    null    ||    sourceLocationFixupCache.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	145	16	replace
661	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  sourceLocationFixupCache.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  sourceLocationFixupCache.isEmpty())  {	  if(sourceFile!=    null    ||    sourceLocationFixupCache.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	145	16	replace
662	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  &&  sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  &&  sourceLocationFixupCache.isEmpty())  {	  if(sourceFile!=    null    ||    sourceLocationFixupCache.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	145	16	replace
663	[BUG]  [BUGGY]  if(sourceFile  ==  null  &&  sourceLocationFixupCache.isEmpty())  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  &&  sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  &&  sourceLocationFixupCache.isEmpty())  {	  if(sourceFile!=    null    ||    sourceLocationFixupCache.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	145	16	replace
664	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.contains(sourceFile))  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  sourceLocationFixupCache.contains(sourceFile))  {	  if(sourceFile!=    null    ||    sourceLocationFixupCache.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
665	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.get(sourceFile).isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  sourceLocationFixupCache.get(sourceFile).isEmpty())  {	  if(sourceFile!=    null    ||    sourceLocationFixupCache.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	145	16	replace
666	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.get(sourceFile).isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.get(sourceFile).isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  sourceLocationFixupCache.get(sourceFile).isEmpty())  {	  if(sourceFile!=    null    ||    sourceLocationFixupCache.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	145	16	replace
667	[BUG]  [BUGGY]  if(sourceFile  >=  null  ||  sourceLocationFixupCache.isEmpty())  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]            AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  >=  null  ||  sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  >=  null  ||  sourceLocationFixupCache.isEmpty())  {	  if(sourceFile!=    null    ||    sourceLocationFixupCache.isEmpty())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	145	None	replace
668	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	179	None	add
669	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( ".   "))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( ".   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( ".   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	179	None	add
670	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( ".xml "))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( ".xml "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( ".xml "))  {	  	non-compiled	[CE]  illegal  start  of  expression	179	None	add
671	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( ",   "))  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( ",   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( ",   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	179	None	add
672	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( ".jpg "))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( ".jpg "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( ".jpg "))  {	  	non-compiled	[CE]  illegal  start  of  expression	179	None	add
673	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "./ "))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "./ "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "./ "))  {	  	non-compiled	[CE]  illegal  start  of  expression	179	None	add
674	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	199	None	add
675	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( ".   "))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( ".   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( ".   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	199	None	add
676	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( ",   "))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( ",   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( ",   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	199	None	add
677	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	199	None	add
678	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals('  '))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals('  '))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals('  '))  {	  	non-compiled	[CE]  illegal  start  of  expression	199	None	add
679	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "))  {  [CE]  unclosed  string  literal  [FE]              AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "))  {	  	non-compiled	[CE]  unclosed  string  literal	199	None	add
680	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!sourceFile.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	105	16	replace
681	[BUG]  [BUGGY]  if(!sourceFile.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceFile.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	105	16	replace
682	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    if(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
683	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    if(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
684	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
685	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  if(!PrefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  if(!PrefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    if(!PrefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
686	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  If(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [CE]  ';'  expected  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  If(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    If(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {	  	non-compiled	[CE]  ';'  expected	41	None	add
687	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  if(!prefixMappings.hasEmpty()  &&  sourceFile.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  if(!prefixMappings.hasEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    if(!prefixMappings.hasEmpty()  &&  sourceFile.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
688	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  if(!prefixMappings.size()  &&  sourceFile.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  if(!prefixMappings.size()  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    if(!prefixMappings.size()  &&  sourceFile.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
689	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if  (sourceLocationFixupCache.isEmpty()  ||  sourceFile.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if  (sourceLocationFixupCache.isEmpty()  ||  sourceFile.contains(sourceFile))  {	  if    (sourceFile.isEmpty()    ||    sourceLocationFixupCache.contains(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	83	16	replace
690	[BUG]  [BUGGY]  if  (sourceLocationFixupCache.isEmpty()  ||  sourceFile.contains(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if  (sourceLocationFixupCache.isEmpty()  ||  sourceFile.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if  (sourceLocationFixupCache.isEmpty()  ||  sourceFile.contains(sourceFile))  {	  if    (sourceFile.isEmpty()    ||    sourceLocationFixupCache.contains(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	83	16	replace
691	[BUG]  [BUGGY]  if  (sourceLocationFile.isEmpty()  ||  sourceLocationFixupCache.contains(sourceFile))  {  [CE]  cannot  find  symbol  sourceLocationFile  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if  (sourceLocationFile.isEmpty()  ||  sourceLocationFixupCache.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if  (sourceLocationFile.isEmpty()  ||  sourceLocationFixupCache.contains(sourceFile))  {	  if    (sourceFile.isEmpty()    ||    sourceLocationFixupCache.contains(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol  sourceLocationFile	83	None	replace
692	[BUG]  [BUGGY]  if  (sourceLocationFixupCache.isEmpty()  ||  sourceLocationFixupCache.contains(sourceFile))  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if  (sourceLocationFixupCache.isEmpty()  ||  sourceLocationFixupCache.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if  (sourceLocationFixupCache.isEmpty()  ||  sourceLocationFixupCache.contains(sourceFile))  {	  if    (sourceFile.isEmpty()    ||    sourceLocationFixupCache.contains(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
693	[BUG]  [BUGGY]  if  (sourceLocationFixupCache.isEmpty()  ||  sourceLocationFile.contains(sourceFile))  {  [CE]  cannot  find  symbol  sourceLocationFile  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if  (sourceLocationFixupCache.isEmpty()  ||  sourceLocationFile.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if  (sourceLocationFixupCache.isEmpty()  ||  sourceLocationFile.contains(sourceFile))  {	  if    (sourceFile.isEmpty()    ||    sourceLocationFixupCache.contains(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol  sourceLocationFile	83	None	replace
694	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile    ==    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	2	16	replace
695	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile    ==    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	2	16	replace
696	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {	  if(sourceFile    ==    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	2	16	replace
697	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {	  if(sourceFile    ==    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	2	16	replace
698	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  prefixMappings.contains(sourceFile))  {	  if(sourceFile    ==    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	2	16	replace
699	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.contains(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.contains(sourceFile))  {	  if(sourceFile    ==    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	2	16	replace
700	[BUG]  [BUGGY]  if(!sourceFile.isEmpty())  {  If(!prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceFile.isEmpty())  {  If(!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceFile.isEmpty())  {  If(!prefixMappings.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    If(!prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	108	None	replace
701	[BUG]  [BUGGY]  if(!sourceLocationFixupCache.isEmpty())  {  If(!prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceLocationFixupCache.isEmpty())  {  If(!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceLocationFixupCache.isEmpty())  {  If(!prefixMappings.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    If(!prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	108	None	replace
702	[BUG]  [BUGGY]  if(!sourceFile.equals( " "))  {  If(!prefixMappings.isEmpty())  {  [CE]  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceFile.equals( " "))  {  If(!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceFile.equals( " "))  {  If(!prefixMappings.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    If(!prefixMappings.isEmpty())    {    	non-compiled	[CE]  	108	None	replace
703	[BUG]  [BUGGY]  if(prefixMappings!=  null)  {  If(!prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null)  {  If(!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null)  {  If(!prefixMappings.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    If(!prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	108	None	replace
704	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings.isEmpty()    ||    sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	59	16	replace
705	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings.isEmpty()    ||    sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	59	16	replace
706	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings.isEmpty()    ||    sourceFile.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
707	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings.isEmpty()    ||    sourceFile.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
708	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings.isEmpty()    ||    sourceFile.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
709	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  if(!prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  if(!prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  if(!prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings.isEmpty()    ||    sourceFile.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
710	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile!=    null    &&    sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	135	16	replace
711	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile!=    null    &&    sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	135	16	replace
712	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {	  if(sourceFile!=    null    &&    sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	135	16	replace
713	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {	  if(sourceFile!=    null    &&    sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	135	16	replace
714	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {	  if(sourceFile!=    null    &&    sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	135	16	replace
715	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {	  if(sourceFile!=    null    &&    sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	135	16	replace
716	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	114	None	add
717	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	114	None	add
718	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings  >=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings  >=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings  >=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	114	None	add
719	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  ||  prefixMapping.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  ||  prefixMapping.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings!=  null  ||  prefixMapping.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	114	None	add
720	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	114	None	add
721	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  ||  PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  ||  PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings!=  null  ||  PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	114	None	add
722	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  ||  sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  ||  sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings!=  null  ||  sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	114	None	add
723	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile.length())  ==  0)  {  [CE]  incomparable  types:  boolean  and  int  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile.length())  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile.length())  ==  0)  {	  if(sourceFile.isEmpty()    ||    prefixMappings.length()    ==    0)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  int	95	None	replace
724	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile.toString()))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile.toString()))  {	  if(sourceFile.isEmpty()    ||    prefixMappings.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	95	16	replace
725	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile.toString()))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile.toString()))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile.toString()))  {	  if(sourceFile.isEmpty()    ||    prefixMappings.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	95	16	replace
726	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile.getName()))  {  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile.getName()))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile.getName()))  {	  if(sourceFile.isEmpty()    ||    prefixMappings.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
727	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	113	16	replace
728	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	113	16	replace
729	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {	  if(sourceFile.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	113	16	replace
730	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {	  if(sourceFile.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	113	16	replace
731	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.length()!=  0)  {  [CE]  cannot  find  symbol  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  prefixMappings.length()!=  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
732	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty()  ||  sourceLocationFixupCache.contains(sourceFile))  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty()  ||  sourceLocationFixupCache.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  sourceFile.isEmpty()  ||  sourceLocationFixupCache.contains(sourceFile))  {	  if    (sourceFile.isEmpty())    {    if    (sourceFile.isEmpty()    ||    sourceLocationFixupCache.contains(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
733	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty())  {  if(sourceFile!=  null  ||  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty())  {  if(sourceFile!=  null  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    sourceFile.isEmpty())    {    if(sourceFile!=  null  ||  sourceFile.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
734	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty())  {  if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty())  {  if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    sourceFile.isEmpty())    {    if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
735	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty())  {  if(sourceFile  >=  null  ||  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty())  {  if(sourceFile  >=  null  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    sourceFile.isEmpty())    {    if(sourceFile  >=  null  ||  sourceFile.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
736	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty())  {  If(sourceFile!=  null  ||  sourceFile.isEmpty())  {  [CE]  ';'  expected  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty())  {  If(sourceFile!=  null  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    sourceFile.isEmpty())    {    If(sourceFile!=  null  ||  sourceFile.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	20	None	add
737	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty())  {  if(sourceFile  >>  null  ||  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty())  {  if(sourceFile  >>  null  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    sourceFile.isEmpty())    {    if(sourceFile  >>  null  ||  sourceFile.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
738	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty())  {  if(sourceFile!=  null  ||  sourceFile.equals( " "))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty())  {  if(sourceFile!=  null  ||  sourceFile.equals( " "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    sourceFile.isEmpty())    {    if(sourceFile!=  null  ||  sourceFile.equals( " "))  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
739	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty()  ||  prefixMappings.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty()  ||  prefixMappings.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  sourceFile.isEmpty()  ||  prefixMappings.length()  ==  0)  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	169	None	replace
740	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toUpperCase();  [CE]  illegal  start  of  type  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  String  originalName  =  sourceFile.toUpperCase();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	String  originalName  =  sourceFile.toUpperCase();	  String    originalName    =    sourceFile.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
741	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toLowerCase()  +  1;  [CE]  illegal  start  of  type  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  String  originalName  =  sourceFile.toLowerCase()  +  1;  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	String  originalName  =  sourceFile.toLowerCase()  +  1;	  String    originalName    =    sourceFile.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
742	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  String  originalName  =  sourceFile.toLowerCase(Locale.ENGLISH);  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	String  originalName  =  sourceFile.toLowerCase(Locale.ENGLISH);	  String    originalName    =    sourceFile.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
743	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toLowerCase()  +  File.separator;  [CE]  illegal  start  of  type  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  String  originalName  =  sourceFile.toLowerCase()  +  File.separator;  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	String  originalName  =  sourceFile.toLowerCase()  +  File.separator;	  String    originalName    =    sourceFile.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
744	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toLowerCase(Locale.getDefault());  [CE]  illegal  start  of  type  [FE]                                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  String  originalName  =  sourceFile.toLowerCase(Locale.getDefault());  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	String  originalName  =  sourceFile.toLowerCase(Locale.getDefault());	  String    originalName    =    sourceFile.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
745	[BUG]  [BUGGY]  if(prefixMappings.length()  ==  0  ||  sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  cannot  find  symbol  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.length()  ==  0  ||  sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.length()  ==  0  ||  sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
746	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	121	16	replace
747	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	121	16	replace
748	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  &&  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  &&  prefixMappings.isEmpty())  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	121	16	replace
749	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  &&  prefixMappings.isEmpty())  {  [FE]  AssertionFailedError  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  &&  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  &&  prefixMappings.isEmpty())  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	121	16	replace
750	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()!=  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.length()!=  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	121	16	replace
751	[BUG]  [BUGGY]  if(sourceFile.length()!=  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()!=  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()!=  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	121	16	replace
752	[BUG]  [BUGGY]  if(prefixMappings.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
753	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	27	16	replace
754	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	27	16	replace
755	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings!=  null  ||  sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	27	16	replace
756	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  ||  sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	27	16	replace
757	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  sourceFile.isEmpty())  {  if(prefixMappings!=  null  ||  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  sourceFile.isEmpty())  {  if(prefixMappings!=  null  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    sourceFile.isEmpty())    {    if(prefixMappings!=  null  ||  sourceFile.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
758	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  sourceFile.isEmpty())  {  if(prefixMappings  ==  null  ||  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  sourceFile.isEmpty())  {  if(prefixMappings  ==  null  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    sourceFile.isEmpty())    {    if(prefixMappings  ==  null  ||  sourceFile.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
759	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  sourceFile.isEmpty())  {  if(prefixMappings  >=  null  ||  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  sourceFile.isEmpty())  {  if(prefixMappings  >=  null  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    sourceFile.isEmpty())    {    if(prefixMappings  >=  null  ||  sourceFile.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
760	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  sourceFile.isEmpty())  {  If(prefixMappings!=  null  ||  sourceFile.isEmpty())  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  sourceFile.isEmpty())  {  If(prefixMappings!=  null  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    sourceFile.isEmpty())    {    If(prefixMappings!=  null  ||  sourceFile.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	16	None	add
761	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  sourceFile.isEmpty())  {  if(prefixMappings  >>  null  ||  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  sourceFile.isEmpty())  {  if(prefixMappings  >>  null  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    sourceFile.isEmpty())    {    if(prefixMappings  >>  null  ||  sourceFile.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
762	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  sourceFile.isEmpty())  {  if(prefixMappings  [BUGGY]  null  ||  sourceFile.isEmpty())  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  sourceFile.isEmpty())  {  if(prefixMappings  [BUGGY]  null  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    sourceFile.isEmpty())    {    if(prefixMappings  [BUGGY]  null  ||  sourceFile.isEmpty())  {	  	non-compiled	[CE]  ')'  expected	16	None	add
763	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  sourceFile.isEmpty())  {  if(prefixMappings  [Delete]  null  ||  sourceFile.isEmpty())  {  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  sourceFile.isEmpty())  {  if(prefixMappings  [Delete]  null  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    sourceFile.isEmpty())    {    if(prefixMappings  [Delete]  null  ||  sourceFile.isEmpty())  {	  	non-compiled	[CE]  ')'  expected	16	None	add
764	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty())  {  if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty())  {  if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    sourceLocationFixupCache.isEmpty())    {    if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	144	None	add
765	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty())  {  if(sourceFile  ==  null  ||  sourceLocationFixupCache.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty())  {  if(sourceFile  ==  null  ||  sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    sourceLocationFixupCache.isEmpty())    {    if(sourceFile  ==  null  ||  sourceLocationFixupCache.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	144	None	add
766	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty())  {  if(sourceFile  >=  null  ||  sourceLocationFixupCache.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty())  {  if(sourceFile  >=  null  ||  sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    sourceLocationFixupCache.isEmpty())    {    if(sourceFile  >=  null  ||  sourceLocationFixupCache.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	144	None	add
767	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty())  {  If(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty())  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty())  {  If(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    sourceLocationFixupCache.isEmpty())    {    If(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	144	None	add
768	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty())  {  if(sourceFile  >>  null  ||  sourceLocationFixupCache.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty())  {  if(sourceFile  >>  null  ||  sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    sourceLocationFixupCache.isEmpty())    {    if(sourceFile  >>  null  ||  sourceLocationFixupCache.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	144	None	add
769	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty())  {  if(sourceFile  [Delete]  null  ||  sourceLocationFixupCache.isEmpty())  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty())  {  if(sourceFile  [Delete]  null  ||  sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    sourceLocationFixupCache.isEmpty())    {    if(sourceFile  [Delete]  null  ||  sourceLocationFixupCache.isEmpty())  {	  	non-compiled	[CE]  ')'  expected	144	None	add
770	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty())  {  if(sourceFile  [BUGGY]  null  ||  sourceLocationFixupCache.isEmpty())  {  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty())  {  if(sourceFile  [BUGGY]  null  ||  sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    sourceLocationFixupCache.isEmpty())    {    if(sourceFile  [BUGGY]  null  ||  sourceLocationFixupCache.isEmpty())  {	  	non-compiled	[CE]  ')'  expected	144	None	add
771	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	99	None	add
772	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	99	None	add
773	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	99	None	add
774	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile!=  null  ||  PrefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile!=  null  ||  PrefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(sourceFile!=  null  ||  PrefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	99	None	add
775	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile  >=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile  >=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(sourceFile  >=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	99	None	add
776	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  If(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  If(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    If(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	99	None	add
777	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  2)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  2)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	99	None	add
778	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".js "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".js "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".js   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	202	16	replace
779	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".js "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".js "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".js "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".js   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	202	16	replace
780	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ". "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ". "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".js   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	202	16	replace
781	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ". "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ". "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ". "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".js   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	202	16	replace
782	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings.endsWith( ".js "))  {  [CE]  cannot  find  symbol  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings.endsWith( ".js "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings.endsWith( ".js "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".js   "))    {    	non-compiled	[CE]  cannot  find  symbol	202	None	replace
783	[BUG]  [BUGGY]  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    If(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	55	None	replace
784	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    If(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	55	None	replace
785	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    If(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	55	None	replace
786	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    If(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	55	None	replace
787	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    If(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	55	None	replace
788	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceFile.length()  ==  0)  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceFile.length()  ==  0)  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  sourceFile.length()  ==  0)  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    If(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	55	None	replace
789	[BUG]  [BUGGY]  ||  sourceFile!=  null)  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  ||  sourceFile!=  null)  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	||  sourceFile!=  null)  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  if(sourceFile!=    null)    {    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
790	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
791	[BUG]  [BUGGY]  if(sourceFile.length()!=  0  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()!=  0  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()!=  0  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
792	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java. "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java. "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	198	16	replace
793	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java. "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java. "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java. "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	198	16	replace
794	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings.endsWith( ".java "))  {  [CE]  cannot  find  symbol  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings.endsWith( ".java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings.endsWith( ".java "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	non-compiled	[CE]  cannot  find  symbol	198	None	replace
795	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  &&  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  &&  sourceLocationFixupCache.get(sourceFile)  ==  null)  {	  if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)    ==    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	87	16	replace
796	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  &&  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  &&  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  &&  sourceLocationFixupCache.get(sourceFile)  ==  null)  {	  if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)    ==    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	87	16	replace
797	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {	  if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	87	16	replace
798	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {	  if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	87	16	replace
799	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {	  if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)    ==    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	87	16	replace
800	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {	  if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)    ==    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	87	16	replace
801	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile)  ==  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile)  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile)  ==  null)  {	  if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)    ==    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	87	None	replace
802	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {	  if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)    ==    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	87	16	replace
803	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {	  if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)    ==    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	87	16	replace
804	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  PrefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  PrefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  PrefixMappings.isEmpty())  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    if(prefixMappings    ==    null    ||    PrefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
805	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(!prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	44	16	replace
806	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(!prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	44	16	replace
807	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {	  if(sourceFile    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	104	16	replace
808	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {	  if(sourceFile    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	104	16	replace
809	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(sourceFile    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	104	16	replace
810	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(sourceFile    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	104	16	replace
811	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {	  if(sourceFile    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	104	16	replace
812	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {	  if(sourceFile    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	104	16	replace
813	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  &&  prefixMappings.contains(sourceFile))  {	  if(sourceFile!=    null    ||    prefixMappings.contains(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	176	16	replace
814	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.contains(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  prefixMappings.contains(sourceFile))  {	  if(sourceFile!=    null    ||    prefixMappings.contains(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	176	16	replace
815	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.contains(sourceFile)&&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  prefixMappings.contains(sourceFile)&&  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile!=    null    ||    prefixMappings.contains(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	176	16	replace
816	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.contains(sourceFile)&&  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.contains(sourceFile)&&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.contains(sourceFile)&&  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile!=    null    ||    prefixMappings.contains(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	176	16	replace
817	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.contains(sourceFile)&&  sourceLocationFixupCache.contains(sourceFile))  {  [CE]  cannot  find  symbol  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.contains(sourceFile)&&  sourceLocationFixupCache.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.contains(sourceFile)&&  sourceLocationFixupCache.contains(sourceFile))  {	  if(sourceFile!=    null    ||    prefixMappings.contains(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol	176	None	replace
818	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings    ==    null    ||    sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	6	16	replace
819	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.length()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings    ==    null    ||    sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	6	16	replace
820	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.length()  ==  0  ||  sourceFile.length()  ==  0)  {	  if(sourceFile.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	97	16	replace
821	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  sourceFile.length()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  ||  sourceFile.length()  ==  0)  {	  if(sourceFile.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	97	16	replace
822	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.length()  ==  0)  {	  if(sourceFile.isEmpty()    ||    sourceFile.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
823	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.length()  ==  0  ||  sourceFile.isEmpty())  {	  if(sourceFile.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	97	16	replace
824	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  sourceFile.isEmpty())  {  [FE]  AssertionFailedError  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  ||  sourceFile.isEmpty())  {	  if(sourceFile.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	97	16	replace
825	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  sourceFile.isEmpty()  ==  0)  {  [CE]  incomparable  types:  boolean  and  int  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  sourceFile.isEmpty()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  ||  sourceFile.isEmpty()  ==  0)  {	  if(sourceFile.isEmpty()    ||    sourceFile.length()    ==    0)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  int	97	None	replace
826	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.containsKey(sourceFile))  {  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  prefixMappings.containsKey(sourceFile))  {	  if(sourceFile.isEmpty()    ||    prefixMappings.contains(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol	182	None	replace
827	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile)||  sourceLocationFixupCache.contains(sourceFile))  {  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile)||  sourceLocationFixupCache.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile)||  sourceLocationFixupCache.contains(sourceFile))  {	  if(sourceFile.isEmpty()    ||    prefixMappings.contains(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol	182	None	replace
828	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.length()  ==  0  ||  prefixMappings.contains(sourceFile))  {	  if(sourceFile.isEmpty()    ||    prefixMappings.contains(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	182	16	replace
829	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.contains(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  ||  prefixMappings.contains(sourceFile))  {	  if(sourceFile.isEmpty()    ||    prefixMappings.contains(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	182	16	replace
830	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile)&&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile)&&  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile.isEmpty()    ||    prefixMappings.contains(sourceFile))    {    	compilable	  [FE]  AssertionFailedError  	182	16	replace
831	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile)&&  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile)&&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile)&&  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile.isEmpty()    ||    prefixMappings.contains(sourceFile))    {    	compilable	  [FE]  AssertionFailedError  	182	16	replace
832	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile)||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile)||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile.isEmpty()    ||    prefixMappings.contains(sourceFile))    {    	compilable	  [FE]  AssertionFailedError  	182	16	replace
833	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile)||  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile)||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile)||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile.isEmpty()    ||    prefixMappings.contains(sourceFile))    {    	compilable	  [FE]  AssertionFailedError  	182	16	replace
834	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  prefixMappings.containsKey(sourceFile))  {  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  prefixMappings.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  &&  prefixMappings.containsKey(sourceFile))  {	  if(!prefixMappings.isEmpty()    ||    prefixMappings.containsKey(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
835	[BUG]  [BUGGY]  if(!prefixMapping.isEmpty()  &&  prefixMappings.containsKey(sourceFile))  {  [CE]  cannot  find  symbol  prefixMapping  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMapping.isEmpty()  &&  prefixMappings.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMapping.isEmpty()  &&  prefixMappings.containsKey(sourceFile))  {	  if(!prefixMappings.isEmpty()    ||    prefixMappings.containsKey(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol  prefixMapping	47	None	replace
836	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  prefixMappings.containsKey(sourceFile)&&  sourceLocationFixupCache.containsKey(sourceFile))  {  [CE]  cannot  find  symbol  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  prefixMappings.containsKey(sourceFile)&&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||  prefixMappings.containsKey(sourceFile)&&  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(!prefixMappings.isEmpty()    ||    prefixMappings.containsKey(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
837	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  prefixMappings.containsKey(originalName))  {  [CE]  cannot  find  symbol  originalName  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  prefixMappings.containsKey(originalName))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||  prefixMappings.containsKey(originalName))  {	  if(!prefixMappings.isEmpty()    ||    prefixMappings.containsKey(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol  originalName	47	None	replace
838	[BUG]  [BUGGY]  if(!prefixMapping.isEmpty()  ||  prefixMappings.containsKey(sourceFile))  {  [CE]  cannot  find  symbol  prefixMapping  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMapping.isEmpty()  ||  prefixMappings.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMapping.isEmpty()  ||  prefixMappings.containsKey(sourceFile))  {	  if(!prefixMappings.isEmpty()    ||    prefixMappings.containsKey(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol  prefixMapping	47	None	replace
839	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.containsKey(prefix))  {  [CE]  cannot  find  symbol  prefix  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.containsKey(prefix))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||  sourceFile.containsKey(prefix))  {	  if(!prefixMappings.isEmpty()    ||    prefixMappings.containsKey(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol  prefix	47	None	replace
840	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null)  {  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null)  {  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    &&    sourceFile!=    null)    {    if(!prefixMappings.isEmpty()  &&  sourceFile!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
841	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null)  {  if(!prefixMappings.isEmpty()  &&  sourceFile  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null)  {  if(!prefixMappings.isEmpty()  &&  sourceFile  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    &&    sourceFile!=    null)    {    if(!prefixMappings.isEmpty()  &&  sourceFile  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
842	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null)  {  if(!prefixMappings.isEmpty()  &&  sourceFile  >=  null)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null)  {  if(!prefixMappings.isEmpty()  &&  sourceFile  >=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    &&    sourceFile!=    null)    {    if(!prefixMappings.isEmpty()  &&  sourceFile  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
843	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null)  {  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null)  {  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    &&    sourceFile!=    null)    {    if(!prefixMappings.isEmpty()  &&  sourceFile!=  null  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
844	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null)  {  If(!prefixMappings.isEmpty()  &&  sourceFile!=  null)  {  [CE]  ';'  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null)  {  If(!prefixMappings.isEmpty()  &&  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    &&    sourceFile!=    null)    {    If(!prefixMappings.isEmpty()  &&  sourceFile!=  null)  {	  	non-compiled	[CE]  ';'  expected	52	None	add
845	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null)  {  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null  ||  sourceFile.endsWith( ".java "))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null)  {  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null  ||  sourceFile.endsWith( ".java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    &&    sourceFile!=    null)    {    if(!prefixMappings.isEmpty()  &&  sourceFile!=  null  ||  sourceFile.endsWith( ".java "))  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
846	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null)  {  if(!PrefixMappings.isEmpty()  &&  sourceFile!=  null)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null)  {  if(!PrefixMappings.isEmpty()  &&  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    &&    sourceFile!=    null)    {    if(!PrefixMappings.isEmpty()  &&  sourceFile!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
847	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&!sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [CE]  bad  operand  type  String  for  unary  operator  '!'  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&!sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  &&!sourceLocationFixupCache.get(sourceFile)  ==  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!sourceLocationFixupCache.get(sourceFile)    ==    null)    {    	non-compiled	[CE]  bad  operand  type  String  for  unary  operator  '!'	137	None	replace
848	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null)  {  if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null)  {  if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)  ==  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!sourceLocationFixupCache.get(sourceFile)    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
849	[BUG]  [BUGGY]  if(!sourceLocationFixupCache.isEmpty()  ||!prefixMappings.containsKey(sourceFile))  {  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceLocationFixupCache.isEmpty()  ||!prefixMappings.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceLocationFixupCache.isEmpty()  ||!prefixMappings.containsKey(sourceFile))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!sourceLocationFixupCache.get(sourceFile)    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
850	[BUG]  [BUGGY]  if(!sourceLocationFixupCache.isEmpty()  ||!prefixMappings.get(sourceFile)  ==  null)  {  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceLocationFixupCache.isEmpty()  ||!prefixMappings.get(sourceFile)  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceLocationFixupCache.isEmpty()  ||!prefixMappings.get(sourceFile)  ==  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!sourceLocationFixupCache.get(sourceFile)    ==    null)    {    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	137	None	replace
851	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    1)    {    	compilable	  [FE]  AssertionFailedError  	65	16	replace
852	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {  [FE]  AssertionFailedError  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    1)    {    	compilable	  [FE]  AssertionFailedError  	65	16	replace
853	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    1)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	65	16	replace
854	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    1)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	65	16	replace
855	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  2)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  2)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    2)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	66	16	replace
856	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  2)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  2)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  2)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    2)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	66	16	replace
857	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  2)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  2)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    2)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	66	16	replace
858	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  2)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  2)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  2)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    2)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	66	16	replace
859	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	25	16	replace
860	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	25	16	replace
861	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	25	16	replace
862	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	25	16	replace
863	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceLocationFixupCache.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  &&  sourceLocationFixupCache.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	25	16	replace
864	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  sourceLocationFixupCache.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceLocationFixupCache.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  sourceLocationFixupCache.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	25	16	replace
865	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  if(!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  if(!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    if(!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	142	None	add
866	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  if(!prefixMappings.isEmpty()  ||  sourceFile  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  if(!prefixMappings.isEmpty()  ||  sourceFile  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    if(!prefixMappings.isEmpty()  ||  sourceFile  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	142	None	add
867	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  if(!prefixMappings.isEmpty()  ||  sourceFile  >=  null)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  if(!prefixMappings.isEmpty()  ||  sourceFile  >=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    if(!prefixMappings.isEmpty()  ||  sourceFile  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	142	None	add
868	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  If(!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  If(!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    If(!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {	  	non-compiled	[CE]  ';'  expected	142	None	add
869	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  if(!prefixMappings.isEmpty()  ||  sourceFile  >>  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  if(!prefixMappings.isEmpty()  ||  sourceFile  >>  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    if(!prefixMappings.isEmpty()  ||  sourceFile  >>  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	142	None	add
870	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
871	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
872	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  prefixMapping.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  prefixMapping.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings  ==  null  ||  prefixMapping.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
873	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings  ==  null  ||  PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
874	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
875	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
876	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
877	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    prefixMappings.contains(sourceFile))    {    if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	181	None	add
878	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {  If(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {  If(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    prefixMappings.contains(sourceFile))    {    If(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {	  	non-compiled	[CE]  ';'  expected	181	None	add
879	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {  if(sourceFile.isEmpty()  ||  PrefixMappings.contains(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {  if(sourceFile.isEmpty()  ||  PrefixMappings.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    prefixMappings.contains(sourceFile))    {    if(sourceFile.isEmpty()  ||  PrefixMappings.contains(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	181	None	add
880	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {  if(sourceFile.isEmpty()  ||  prefixMappings.contains(SourceFile))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {  if(sourceFile.isEmpty()  ||  prefixMappings.contains(SourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    prefixMappings.contains(sourceFile))    {    if(sourceFile.isEmpty()  ||  prefixMappings.contains(SourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	181	None	add
881	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {  if(sourceFile.isEmpty()  ||  prefixMappings.get(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {  if(sourceFile.isEmpty()  ||  prefixMappings.get(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    prefixMappings.contains(sourceFile))    {    if(sourceFile.isEmpty()  ||  prefixMappings.get(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	181	None	add
882	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
883	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
884	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(!PrefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(!PrefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(!PrefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
885	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(!prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
886	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  If(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  ';'  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  If(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    If(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	43	None	add
887	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(!prefixMappings.hasEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(!prefixMappings.hasEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(!prefixMappings.hasEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
888	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	160	None	add
889	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	160	None	add
890	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile  >=  null)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile  >=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	160	None	add
891	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  if(prefixMappings  ==  null  ||  PrefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  if(prefixMappings  ==  null  ||  PrefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    if(prefixMappings  ==  null  ||  PrefixMappings.isEmpty()  ||  sourceFile!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	160	None	add
892	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  If(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [CE]  ';'  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  If(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    If(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {	  	non-compiled	[CE]  ';'  expected	160	None	add
893	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile  >>  null)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile  >>  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile  >>  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	160	None	add
894	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  if(prefixMappings  ==  null|  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  if(prefixMappings  ==  null|  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    if(prefixMappings  ==  null|  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	160	None	add
895	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()!=  0  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.length()!=  0  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {	  if    (sourceFile.isEmpty())    {    if    (sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	70	16	replace
896	[BUG]  [BUGGY]  if(sourceFile.length()!=  0  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()!=  0  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()!=  0  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {	  if    (sourceFile.isEmpty())    {    if    (sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	70	16	replace
897	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  ||  sourceFile.isEmpty())  {	  if    (sourceFile.isEmpty())    {    if    (sourceFile.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	67	16	replace
898	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.isEmpty())  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  sourceFile.isEmpty())  {	  if    (sourceFile.isEmpty())    {    if    (sourceFile.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	67	16	replace
899	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
900	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile.isEmpty()  ||  sourceFile.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(sourceFile.isEmpty()  ||  sourceFile.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
901	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile.isEmpty()  ||  sourceFile.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile.isEmpty()  ||  sourceFile.length()  >=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(sourceFile.isEmpty()  ||  sourceFile.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
902	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  If(sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  ';'  expected  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  If(sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceFile.length()    ==    0)    {    If(sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	96	None	add
903	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile.isEmpty()  ||  sourceFile.length()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile.isEmpty()  ||  sourceFile.length()  ==  1)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(sourceFile.isEmpty()  ||  sourceFile.length()  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
904	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile.isEmpty()  ||  sourceFile.length()  ==  2)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile.isEmpty()  ||  sourceFile.length()  ==  2)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(sourceFile.isEmpty()  ||  sourceFile.length()  ==  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
905	[BUG]  [BUGGY]  sourceFile  =  sourceFile.toLowerCase();  [CE]  illegal  start  of  type  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  sourceFile  =  sourceFile.toLowerCase();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	sourceFile  =  sourceFile.toLowerCase();	  if(sourceFile!=    null)    {    sourceFile    =    sourceFile.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
906	[BUG]  [BUGGY]  SourceFile  sourceFile  =  sourceFile.toLowerCase();  [CE]  illegal  start  of  type  [FE]                                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  SourceFile  sourceFile  =  sourceFile.toLowerCase();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	SourceFile  sourceFile  =  sourceFile.toLowerCase();	  if(sourceFile!=    null)    {    sourceFile    =    sourceFile.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
907	[BUG]  [BUGGY]  ||  sourceFile!=  null)  {  sourceFile  =  sourceFile.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  ||  sourceFile!=  null)  {  sourceFile  =  sourceFile.toLowerCase();  }  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	||  sourceFile!=  null)  {  sourceFile  =  sourceFile.toLowerCase();  }	  if(sourceFile!=    null)    {    sourceFile    =    sourceFile.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
908	[BUG]  [BUGGY]  SourceMapGenerator  sourceFile  =  sourceFile.toLowerCase();  [CE]  illegal  start  of  type  [FE]                                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  SourceMapGenerator  sourceFile  =  sourceFile.toLowerCase();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	SourceMapGenerator  sourceFile  =  sourceFile.toLowerCase();	  if(sourceFile!=    null)    {    sourceFile    =    sourceFile.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
909	[BUG]  [BUGGY]  SourceFile  =  sourceFile.toLowerCase();  [CE]  illegal  start  of  type  [FE]                                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  SourceFile  =  sourceFile.toLowerCase();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	SourceFile  =  sourceFile.toLowerCase();	  if(sourceFile!=    null)    {    sourceFile    =    sourceFile.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
910	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	177	None	add
911	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	177	None	add
912	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	177	None	add
913	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >>  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >>  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	177	None	add
914	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  [Delete]  0)  {  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  [Delete]  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  [Delete]  0)  {	  	non-compiled	[CE]  ')'  expected	177	None	add
915	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  2)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  2)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	177	None	add
916	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  1)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  1)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	177	None	add
917	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&!prefixMappings.isEmpty())  {  if(prefixMappings!=  null  &&!prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&!prefixMappings.isEmpty())  {  if(prefixMappings!=  null  &&!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&!prefixMappings.isEmpty())    {    if(prefixMappings!=  null  &&!prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	140	None	add
918	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&!prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  &&!prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&!prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  &&!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&!prefixMappings.isEmpty())    {    if(prefixMappings  ==  null  &&!prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	140	None	add
919	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&!prefixMappings.isEmpty())  {  if(prefixMappings  >=  null  &&!prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&!prefixMappings.isEmpty())  {  if(prefixMappings  >=  null  &&!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&!prefixMappings.isEmpty())    {    if(prefixMappings  >=  null  &&!prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	140	None	add
920	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&!prefixMappings.isEmpty())  {  If(prefixMappings!=  null  &&!prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&!prefixMappings.isEmpty())  {  If(prefixMappings!=  null  &&!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&!prefixMappings.isEmpty())    {    If(prefixMappings!=  null  &&!prefixMappings.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	140	None	add
921	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&!prefixMappings.isEmpty())  {  if(prefixMappings!=  null  |&!prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&!prefixMappings.isEmpty())  {  if(prefixMappings!=  null  |&!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&!prefixMappings.isEmpty())    {    if(prefixMappings!=  null  |&!prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	140	None	add
922	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&!prefixMappings.isEmpty())  {  if(prefixMappings  >>  null  &&!prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&!prefixMappings.isEmpty())  {  if(prefixMappings  >>  null  &&!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&!prefixMappings.isEmpty())    {    if(prefixMappings  >>  null  &&!prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	140	None	add
923	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&!prefixMappings.isEmpty())  {  if(sourceFile!=  null  &&!prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&!prefixMappings.isEmpty())  {  if(sourceFile!=  null  &&!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&!prefixMappings.isEmpty())    {    if(sourceFile!=  null  &&!prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	140	None	add
924	[BUG]  [BUGGY]  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    &&    prefixMappings.isEmpty())    {    if(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	124	None	add
925	[BUG]  [BUGGY]  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    &&    prefixMappings.isEmpty())    {    if(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	124	None	add
926	[BUG]  [BUGGY]  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  &&  PrefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  &&  PrefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    &&    prefixMappings.isEmpty())    {    if(prefixMappings  ==  null  &&  PrefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	124	None	add
927	[BUG]  [BUGGY]  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  |&  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  |&  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    &&    prefixMappings.isEmpty())    {    if(prefixMappings  ==  null  |&  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	124	None	add
928	[BUG]  [BUGGY]  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {  If(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {  If(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    &&    prefixMappings.isEmpty())    {    If(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	124	None	add
929	[BUG]  [BUGGY]  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    &&    prefixMappings.isEmpty())    {    if(prefixMappings  ==  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {	  	non-compiled	[CE]  illegal  start  of  expression	124	None	add
930	[BUG]  [BUGGY]  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    &&    prefixMappings.isEmpty())    {    if(prefixMappings  ==  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	124	None	add
931	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceFile.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!sourceFile.isEmpty()  ||  sourceFile.length()!=  0)  {	  if(!prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	51	16	replace
932	[BUG]  [BUGGY]  if(!sourceFile.isEmpty()  ||  sourceFile.length()!=  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceFile.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceFile.isEmpty()  ||  sourceFile.length()!=  0)  {	  if(!prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	51	16	replace
933	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  if(!prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	51	16	replace
934	[BUG]  [BUGGY]  if(sourceFile!=  null  ||!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  if(!prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	51	16	replace
935	[BUG]  [BUGGY]  if(!sourceFile.isEmpty()  ||  prefixMappings.length()!=  0)  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceFile.isEmpty()  ||  prefixMappings.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceFile.isEmpty()  ||  prefixMappings.length()!=  0)  {	  if(!prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
936	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {	  if(!prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    	compilable	  [FE]  AssertionFailedError  	51	16	replace
937	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {	  if(!prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    	compilable	  [FE]  AssertionFailedError  	51	16	replace
938	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  if(PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  if(PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  if(PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(PrefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
939	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(PrefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
940	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(PrefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
941	[BUG]  [BUGGY]  if(sourceFile.length()!=  0  ||  prefixMappings.isEmpty())  {  if(PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()!=  0  ||  prefixMappings.isEmpty())  {  if(PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()!=  0  ||  prefixMappings.isEmpty())  {  if(PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(PrefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
942	[BUG]  [BUGGY]  if(PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  cannot  find  symbol  PrefixMappings  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(PrefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  PrefixMappings	56	None	replace
943	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	117	16	replace
944	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	117	16	replace
945	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings!=  null  ||  sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	117	16	replace
946	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  ||  sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	117	16	replace
947	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	117	16	replace
948	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	117	16	replace
949	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty())  {  if(sourceFile!=  null  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty())  {  if(sourceFile!=  null  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    sourceFile.isEmpty())    {    if(sourceFile!=  null  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
950	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	35	16	replace
951	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  [FE]  AssertionFailedError  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	35	16	replace
952	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
953	[BUG]  [BUGGY]  if(prefixMappings!=  null)  {  if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null)  {  if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null)  {  if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)  ==  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!sourceLocationFixupCache.get(sourceFile)    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
954	[BUG]  [BUGGY]  if(prefixMappings  ==  null)  {  if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null)  {  if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null)  {  if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)  ==  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!sourceLocationFixupCache.get(sourceFile)    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
955	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  sourceFile.isEmpty())  {  if(sourceFile!=  null  ||  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  sourceFile.isEmpty())  {  if(sourceFile!=  null  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    sourceFile.isEmpty())    {    if(sourceFile!=  null  ||  sourceFile.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
956	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty())  {  if(sourceFile  >=  null  &&  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty())  {  if(sourceFile  >=  null  &&  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    sourceFile.isEmpty())    {    if(sourceFile  >=  null  &&  sourceFile.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	134	None	add
957	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null)  {	  if    (sourceFile.isEmpty())    {    if    (sourceFile.isEmpty()    ||    sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	68	16	replace
958	[BUG]  [BUGGY]  if(sourceFile  ==  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null)  {	  if    (sourceFile.isEmpty())    {    if    (sourceFile.isEmpty()    ||    sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	68	16	replace
959	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	168	None	add
960	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(PrefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(PrefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(PrefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	168	None	add
961	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	168	None	add
962	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&!prefixMappings.isEmpty())  {  if(PrefixMappings!=  null  &&!prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&!prefixMappings.isEmpty())  {  if(PrefixMappings!=  null  &&!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&!prefixMappings.isEmpty())    {    if(PrefixMappings!=  null  &&!prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	140	None	add
963	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".js   "))  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.startsWith( ".js   "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".js   "))  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.startsWith( ".js   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".js   "))    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.startsWith( ".js   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	201	None	add
964	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".js   "))  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".js))  {  [CE]  unclosed  string  literal  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".js   "))  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".js))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".js   "))    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".js))  {	  	non-compiled	[CE]  unclosed  string  literal	201	None	add
965	[BUG]  [BUGGY]  if(prefixMappings!=  null)  {  if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)!=  null)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null)  {  if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null)  {  if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)!=  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!sourceLocationFixupCache.get(sourceFile)!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
966	[BUG]  [BUGGY]  if(prefixMappings  ==  null)  {  if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)!=  null)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null)  {  if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null)  {  if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)!=  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!sourceLocationFixupCache.get(sourceFile)!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
967	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(!prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(!prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(!prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
968	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  &&  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    if(prefixMappings!=    null    &&    prefixMappings.hasEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	165	16	replace
969	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    if(prefixMappings!=    null    &&    prefixMappings.hasEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	165	16	replace
970	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  &&  sourceFile.length()  ==  0)  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    if(prefixMappings!=    null    &&    prefixMappings.hasEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	165	16	replace
971	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  sourceFile.length()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  sourceFile.length()  ==  0)  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    if(prefixMappings!=    null    &&    prefixMappings.hasEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	165	16	replace
972	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings!=  null  &&  sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	27	16	replace
973	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  &&  sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	27	16	replace
974	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
975	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(PrefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(PrefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(PrefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
976	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty())  {  if(PrefixMappings  ==  null  ||!prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty())  {  if(PrefixMappings  ==  null  ||!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||!prefixMappings.isEmpty())    {    if(PrefixMappings  ==  null  ||!prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
977	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  &&  sourceFile.length()  >  0)  {	  if(sourceFile!=    null    &&    sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	135	16	replace
978	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  sourceFile.length()  >  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  sourceFile.length()  >  0)  {	  if(sourceFile!=    null    &&    sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	135	16	replace
979	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.length()  ==  0)  {	  if(sourceFile    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
980	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.containsKey(sourceFile)&&  sourceLocationFixupCache.containsKey(sourceFile))  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.containsKey(sourceFile)&&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.containsKey(sourceFile)&&  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile!=    null    ||    prefixMappings.containsKey(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
981	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	115	16	replace
982	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	115	16	replace
983	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  if(PrefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  if(PrefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    if(PrefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	183	None	add
984	[BUG]  [BUGGY]  if(prefixMappings!=  null)  {  if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.get(sourceFile)!=  null)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null)  {  if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null)  {  if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.get(sourceFile)!=  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.get(sourceFile)!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
985	[BUG]  [BUGGY]  if(prefixMappings  ==  null)  {  if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.get(sourceFile)!=  null)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null)  {  if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null)  {  if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.get(sourceFile)!=  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.get(sourceFile)!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
986	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    if(sourceFile    >=    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
987	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile  ==  null|  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile  ==  null|  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(sourceFile  ==  null|  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
988	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
989	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith( "/.java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith( "/.java "))  {	  if(!prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	193	16	replace
990	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith( "/.java "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith( "/.java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith( "/.java "))  {	  if(!prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	193	16	replace
991	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals('   "))  {  [CE]  unclosed  character  literal  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals('   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals('   "))  {	  	non-compiled	[CE]  unclosed  character  literal	199	None	add
992	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(. "   "))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(. "   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(. "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	199	None	add
993	[BUG]  [BUGGY]  if(sourceFile  >=  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  >=  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  >=  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings  ==  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    if(PrefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
994	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  sourceFile.toURI();  [CE]  illegal  start  of  type  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure  =  sourceFile.toURI();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  =  sourceFile.toURI();	  junit.framework.ComparisonFailure    =    sourceFile.toString();    	non-compiled	[CE]  illegal  start  of  type	195	None	replace
995	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile.length()  ==  0  ||  sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile.length()  ==  0  ||  sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(sourceFile.length()  ==  0  ||  sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
996	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  If(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  If(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    If(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	120	None	add
997	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(PrefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(PrefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(PrefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	114	None	add
998	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings!=  null|  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings!=  null|  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings!=  null|  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	114	None	add
999	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(PrefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
1000	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(PrefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
1001	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(. "   "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(. "   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(. "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	179	None	add
1002	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "))  {  [CE]  unclosed  string  literal  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "))  {	  	non-compiled	[CE]  unclosed  string  literal	179	None	add
1003	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals('  '))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals('  '))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals('  '))  {	  	non-compiled	[CE]  illegal  start  of  expression	179	None	add
1004	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  if(!PrefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  if(!PrefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    if(!PrefixMappings.isEmpty()  ||  sourceFile!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	142	None	add
1005	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	116	None	add
1006	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  If(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  If(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  If(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty())  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    If(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	78	None	replace
1007	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(PrefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(PrefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(PrefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
1008	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||!prefixMappings.isEmpty())  {  if(PrefixMappings!=  null  ||!prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||!prefixMappings.isEmpty())  {  if(PrefixMappings!=  null  ||!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||!prefixMappings.isEmpty())    {    if(PrefixMappings!=  null  ||!prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
1009	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    	compilable	  [FE]  AssertionFailedError  	178	16	replace
1010	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    	compilable	  [FE]  AssertionFailedError  	178	16	replace
1011	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(PrefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
1012	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(!PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(!PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(!PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(PrefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
1013	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty())  {  if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty())  {  if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    sourceFile.isEmpty())    {    if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
1014	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty())  {  if(PrefixMappings  ==  null  ||  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty())  {  if(PrefixMappings  ==  null  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    sourceFile.isEmpty())    {    if(PrefixMappings  ==  null  ||  sourceFile.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
1015	[BUG]  [BUGGY]  If(sourceFile!=  null  &&  sourceFile.isEmpty())  {  [CE]  ';'  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  If(sourceFile!=  null  &&  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	If(sourceFile!=  null  &&  sourceFile.isEmpty())  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    If(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	32	None	replace
1016	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty())  {  If(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty())  {  If(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  sourceFile.isEmpty())  {  If(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    If(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	32	None	replace
1017	[BUG]  [BUGGY]  SourceMapping  sourceFile  =  sourceFile.toLowerCase();  [CE]  illegal  start  of  type  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  SourceMapping  sourceFile  =  sourceFile.toLowerCase();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	SourceMapping  sourceFile  =  sourceFile.toLowerCase();	  if(sourceFile!=    null)    {    sourceFile    =    sourceFile.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
1018	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(!PrefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(!PrefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    if(!PrefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	192	None	add
1019	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ==  0)  {  [CE]  incomparable  types:  boolean  and  int  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ==  0)  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ==    0)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  int	98	None	replace
1020	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ==  0)  {  [CE]  incomparable  types:  boolean  and  int  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ==  0)  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ==    0)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  int	98	None	replace
1021	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings!=  null  &&  PrefixMappings.isEmpty()  ||  prefixMappings.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings!=  null  &&  PrefixMappings.isEmpty()  ||  prefixMappings.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings!=  null  &&  PrefixMappings.isEmpty()  ||  prefixMappings.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	162	None	add
1022	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	162	None	add
1023	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  If(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  ';'  expected  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  If(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    If(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	162	None	add
1024	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	162	None	add
1025	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile)||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile)||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	82	16	replace
1026	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile)||  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile)||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile)||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	82	16	replace
1027	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile)&&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile)&&  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	82	16	replace
1028	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile)&&  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile)&&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile)&&  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	82	16	replace
1029	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  sourceFile.startsWith( "java. ")?  sourceFile.getGenerator()  :  null;  [CE]  illegal  start  of  type  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  SourceMapGenerator  generator  =  sourceFile.startsWith( "java. ")?  sourceFile.getGenerator()  :  null;  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	SourceMapGenerator  generator  =  sourceFile.startsWith( "java. ")?  sourceFile.getGenerator()  :  null;	  SourceMapGenerator    generator    =    sourceFile.getGenerator();    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
1030	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  sourceFile!=  null?  sourceFile.getGenerator()  :  DEFAULT;  [CE]  illegal  start  of  type  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  SourceMapGenerator  generator  =  sourceFile!=  null?  sourceFile.getGenerator()  :  DEFAULT;  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	SourceMapGenerator  generator  =  sourceFile!=  null?  sourceFile.getGenerator()  :  DEFAULT;	  SourceMapGenerator    generator    =    sourceFile.getGenerator();    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
1031	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  sourceFile.startsWith( "__ ")?  sourceFile.getGenerator()  :  null;  [CE]  illegal  start  of  type  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  SourceMapGenerator  generator  =  sourceFile.startsWith( "__ ")?  sourceFile.getGenerator()  :  null;  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	SourceMapGenerator  generator  =  sourceFile.startsWith( "__ ")?  sourceFile.getGenerator()  :  null;	  SourceMapGenerator    generator    =    sourceFile.getGenerator();    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
1032	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  [Delete]  null)  {  [CE]  ')'  expected  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  [Delete]  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)!=    null)    {    if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  [Delete]  null)  {	  	non-compiled	[CE]  ')'  expected	84	None	add
1033	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  if(sourceFile.empty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  if(sourceFile.empty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)!=    null)    {    if(sourceFile.empty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
1034	[BUG]  [BUGGY]  String  initialName  =  sourceFile.substring(0,  sourceFile.length());  [CE]  illegal  start  of  type  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  String  initialName  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	String  initialName  =  sourceFile.substring(0,  sourceFile.length());	  String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
1035	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.size()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  prefixMappings.size()  ==  0)  {	  if(sourceFile.isEmpty()    ||    prefixMappings.size()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	102	16	replace
1036	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.size()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.size()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.size()  ==  0)  {	  if(sourceFile.isEmpty()    ||    prefixMappings.size()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	102	16	replace
1037	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
1038	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(PrefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(PrefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    if(PrefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
1039	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  1)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  1)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
1040	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  If(!prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null)  {  If(!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null)  {  If(!prefixMappings.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    If(!prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	108	None	replace
1041	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  	non-compiled	[CE]  ';'  expected	177	None	add
1042	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	177	None	add
1043	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	117	16	replace
1044	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	117	16	replace
1045	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	117	16	replace
1046	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	117	16	replace
1047	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  1)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  1)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
1048	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.startsWith( ".java   "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.startsWith( ".java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.startsWith( ".java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	185	None	add
1049	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(prefixMappings!=  null  &&  PrefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(prefixMappings!=  null  &&  PrefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    if(prefixMappings!=  null  &&  PrefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	185	None	add
1050	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  If(sourceFile.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {  [CE]  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  If(sourceFile.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    If(sourceFile.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {	  	non-compiled	[CE]  	190	None	add
1051	[BUG]  [BUGGY]  if  (sourceLocationCache.isEmpty()  ||  sourceLocationFixupCache.contains(sourceFile))  {  [CE]  cannot  find  symbol  sourceLocationCache  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if  (sourceLocationCache.isEmpty()  ||  sourceLocationFixupCache.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if  (sourceLocationCache.isEmpty()  ||  sourceLocationFixupCache.contains(sourceFile))  {	  if    (sourceFile.isEmpty()    ||    sourceLocationFixupCache.contains(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol  sourceLocationCache	83	None	replace
1052	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	99	None	add
1053	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.size()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  sourceLocationFixupCache.size()  ==  0)  {	  if(sourceFile!=    null    ||    sourceLocationFixupCache.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	145	16	replace
1054	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.size()  ==  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.size()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  sourceLocationFixupCache.size()  ==  0)  {	  if(sourceFile!=    null    ||    sourceLocationFixupCache.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	145	16	replace
1055	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  sourceLocationFixupCache.length()  ==  0)  {	  if(sourceFile!=    null    ||    sourceLocationFixupCache.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
1056	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  if(sourceFile.length()  ==  0  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  if(sourceFile.length()  ==  0  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()    ==    0)    {    if(sourceFile.length()  ==  0  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	156	None	add
1057	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.get(sourceFile)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.get(sourceFile)  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()    ==    0)    {    if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.get(sourceFile)  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	156	None	add
1058	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()    ==    0)    {    if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	156	None	add
1059	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()    ==    0)    {    if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	156	None	add
1060	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.contains(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()    ==    0)    {    if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.contains(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	156	None	add
1061	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	122	None	add
1062	[BUG]  [BUGGY]  if(sourceFile  >=  null  ||  sourceFile.isEmpty())  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  >=  null  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  >=  null  ||  sourceFile.isEmpty())  {	  if(sourceFile!=    null    ||    sourceFile.isEmpty())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	21	None	replace
1063	[BUG]  [BUGGY]  if(sourceFile  ==  null)  {  if  (sourceFile.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null)  {  if  (sourceFile.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null)  {  if  (sourceFile.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {	  if    (sourceFile.isEmpty())    {    if    (sourceFile.isEmpty()    ||    sourceLocationFixupCache.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
1064	[BUG]  [BUGGY]  if(sourceFile  ==  null)  {  if  (sourceLocationFixupCache.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null)  {  if  (sourceLocationFixupCache.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null)  {  if  (sourceLocationFixupCache.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {	  if    (sourceFile.isEmpty())    {    if    (sourceFile.isEmpty()    ||    sourceLocationFixupCache.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
1065	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(SourceFile))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(SourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    prefixMappings.isEmpty()    &&    sourceLocationFixupCache.containsKey(sourceFile))    {    if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(SourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	188	None	add
1066	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  ||  prefixMappings!=  null)  {	  if(sourceFile.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	113	16	replace
1067	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings!=  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  prefixMappings!=  null)  {	  if(sourceFile.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	113	16	replace
1068	[BUG]  [BUGGY]  if(prefixMappings!=  null)  {  if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null)  {  if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null)  {  if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!sourceLocationFixupCache.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
1069	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.size()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  prefixMappings.size()  >  0)  {	  if(sourceFile    ==    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	2	16	replace
1070	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.size()  >  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.size()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.size()  >  0)  {	  if(sourceFile    ==    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	2	16	replace
1071	[BUG]  [BUGGY]  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    &&    prefixMappings.isEmpty())    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	124	None	add
1072	[BUG]  [BUGGY]  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {  if(PrefixMappings  ==  null  &&  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {  if(PrefixMappings  ==  null  &&  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    &&    prefixMappings.isEmpty())    {    if(PrefixMappings  ==  null  &&  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	124	None	add
1073	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  sourceFile!=  null)  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile!=  null)  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  sourceFile!=  null)  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    if(prefixMappings    {    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
1074	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.toURI();  [CE]  illegal  start  of  type  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.toURI();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  sourceFile  =  sourceFile.toURI();	  junit.framework.ComparisonFailure    sourceFile    =    sourceFile.toString();    	non-compiled	[CE]  illegal  start  of  type	196	None	replace
1075	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.toCharArray();  [CE]  illegal  start  of  type  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.toCharArray();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  sourceFile  =  sourceFile.toCharArray();	  junit.framework.ComparisonFailure    sourceFile    =    sourceFile.toString();    	non-compiled	[CE]  illegal  start  of  type	196	None	replace
1076	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  If(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  If(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  If(sourceFile!=  null  &&  prefixMappings.isEmpty())  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty())    {    If(sourceFile!=    null    &&    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	13	None	replace
1077	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ". "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ". "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".js   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	202	16	replace
1078	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ". "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ". "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ". "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".js   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	202	16	replace
1079	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.length()  ==  0)  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
1080	[BUG]  [BUGGY]  if(prefixMappings!=  null)  {  if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.containsKey(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null)  {  if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null)  {  if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.containsKey(sourceFile))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.containsKey(sourceFile))    {    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
1081	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {	  if(sourceFile.isEmpty()    ||    prefixMappings.contains(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	182	16	replace
1082	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {	  if(sourceFile.isEmpty()    ||    prefixMappings.contains(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	182	16	replace
1083	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {	  if(sourceFile.isEmpty()    ||    prefixMappings.contains(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	182	16	replace
1084	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {	  if(sourceFile.isEmpty()    ||    prefixMappings.contains(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	182	16	replace
1085	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile)&&  sourceLocationFixupCache.contains(sourceFile))  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile)&&  sourceLocationFixupCache.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile)&&  sourceLocationFixupCache.contains(sourceFile))  {	  if(sourceFile.isEmpty()    ||    prefixMappings.contains(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol	182	None	replace
1086	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    if(sourceFile    ==    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
1087	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  if(!prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	51	16	replace
1088	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  if(!prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	51	16	replace
1089	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  1)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
1090	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
1091	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  sourceLocationFixupCache.contains(sourceFile))  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceLocationFixupCache.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  sourceLocationFixupCache.contains(sourceFile))  {	  if    (sourceFile.isEmpty())    {    if    (sourceFile.isEmpty()    ||    sourceLocationFixupCache.contains(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
1092	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile.empty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile.empty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(sourceFile.empty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
1093	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    prefixMappings.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
1094	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  PrefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  PrefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  PrefixMappings.isEmpty())  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    if(sourceFile!=    null    ||    PrefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
1095	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  PrefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  PrefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  PrefixMappings.isEmpty())  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    if(sourceFile!=    null    ||    PrefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
1096	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  if(sourceFile.empty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  if(sourceFile.empty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)    ==    null)    {    if(sourceFile.empty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
1097	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings.isEmpty()    ||    sourceFile.length()    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
1098	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  sourceFile.endsWith( ".java "))  {	  if(sourceFile.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	191	16	replace
1099	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  sourceFile.isEmpty()  ||  sourceFile.endsWith( ".java "))  {	  if(sourceFile.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	191	16	replace
1100	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings.isEmpty()    ||    sourceFile.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
1101	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings.isEmpty()    ||    sourceFile.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
1102	[BUG]  [BUGGY]  if(!sourceFile.isEmpty()  ||  prefixMappings.containsKey(sourceFile))  {  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceFile.isEmpty()  ||  prefixMappings.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceFile.isEmpty()  ||  prefixMappings.containsKey(sourceFile))  {	  if(!prefixMappings.isEmpty()    ||    prefixMappings.containsKey(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
1103	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {  if(sourceFile.isEmpty()  ||  prefixMappings.indexOf(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {  if(sourceFile.isEmpty()  ||  prefixMappings.indexOf(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    prefixMappings.contains(sourceFile))    {    if(sourceFile.isEmpty()  ||  prefixMappings.indexOf(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	181	None	add
1104	[BUG]  [BUGGY]  if(prefixMappings!=  null)  {  if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.contains(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null)  {  if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null)  {  if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.contains(sourceFile))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.contains(sourceFile))    {    	non-compiled	[CE]  illegal  start  of  expression	174	None	replace
1105	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  sourceFile  +  1;  [CE]  illegal  start  of  type  [FE]                                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure  =  sourceFile  +  1;  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  =  sourceFile  +  1;	  junit.framework.ComparisonFailure    =    sourceFile;    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
1106	[BUG]  [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile    ==    null    &&    prefixMappings.isEmpty())    {    if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
1107	[BUG]  [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  If(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  If(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile    ==    null    &&    prefixMappings.isEmpty())    {    If(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	18	None	add
1108	[BUG]  [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  |&  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  |&  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile    ==    null    &&    prefixMappings.isEmpty())    {    if(sourceFile  ==  null  |&  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
1109	[BUG]  [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  if(sourceFile  >=  null  &&  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  if(sourceFile  >=  null  &&  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile    ==    null    &&    prefixMappings.isEmpty())    {    if(sourceFile  >=  null  &&  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
1110	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null)  {  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null  ||  sourceFile  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null)  {  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null  ||  sourceFile  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    &&    sourceFile!=    null)    {    if(!prefixMappings.isEmpty()  &&  sourceFile!=  null  ||  sourceFile  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
1111	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	42	16	replace
1112	[BUG]  [BUGGY]  if(sourceFile!=  null  ||!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	42	16	replace
1113	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >=  0)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  AssertionFailedError  	42	16	replace
1114	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >=  0)  {  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >=  0)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  AssertionFailedError  	42	16	replace
1115	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty())    {    if(sourceFile    ==    null    &&    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
1116	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  if(PrefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  if(PrefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    if(PrefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	160	None	add
1117	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	160	None	add
1118	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty())  {  If(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty())  {  If(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  sourceFile.isEmpty())  {  If(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    If(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	91	None	replace
1119	[BUG]  [BUGGY]  If(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  If(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	If(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    If(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	91	None	replace
1120	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty())  {  if(sourceFile!=  null  ||  SourceLocationFixupCache.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty())  {  if(sourceFile!=  null  ||  SourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    sourceLocationFixupCache.isEmpty())    {    if(sourceFile!=  null  ||  SourceLocationFixupCache.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	144	None	add
1121	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.size()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.size()  ==  0)  {	  if(sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	157	16	replace
1122	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.size()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.size()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  ||  sourceLocationFixupCache.size()  ==  0)  {	  if(sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	157	16	replace
1123	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.startsWith( ".java   "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.startsWith( ".java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.startsWith( ".java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	170	None	add
1124	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	170	None	add
1125	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  ';'  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    If(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	63	None	replace
1126	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  If(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  ';'  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null)  {  If(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null)  {  If(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    If(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	63	None	replace
1127	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.length()  ==  0)  {  If(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  ';'  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.length()  ==  0)  {  If(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  sourceFile.length()  ==  0)  {  If(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    If(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	63	None	replace
1128	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile  ==  null)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	161	16	replace
1129	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile  ==  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile  ==  null)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	161	16	replace
1130	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings  ==  null)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	161	16	replace
1131	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings  ==  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings  ==  null)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	161	16	replace
1132	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(sourceFile.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
1133	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(sourceFile.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
1134	[BUG]  [BUGGY]  if(prefixMappings!=  null)  {  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null)  {  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null)  {  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(sourceFile.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
1135	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	184	16	replace
1136	[BUG]  [BUGGY]  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	184	16	replace
1137	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  ==  0)  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	184	16	replace
1138	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  ==  0)  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	184	16	replace
1139	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty())  {  if(PrefixMappings!=  null  &&  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty())  {  if(PrefixMappings!=  null  &&  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    sourceFile.isEmpty())    {    if(PrefixMappings!=  null  &&  sourceFile.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
1140	[BUG]  [BUGGY]  String  originalName  =  sourceFile!=  null?  sourceFile.toLowerCase()  :  sourceFile.toLowerCase();  [CE]  illegal  start  of  type  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  String  originalName  =  sourceFile!=  null?  sourceFile.toLowerCase()  :  sourceFile.toLowerCase();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	String  originalName  =  sourceFile!=  null?  sourceFile.toLowerCase()  :  sourceFile.toLowerCase();	  String    originalName    =    sourceFile.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
1141	[BUG]  [BUGGY]  String  originalName  =  sourceFile  ==  null?  sourceFile.toLowerCase()  :  sourceFile.toLowerCase();  [CE]  illegal  start  of  type  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  String  originalName  =  sourceFile  ==  null?  sourceFile.toLowerCase()  :  sourceFile.toLowerCase();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	String  originalName  =  sourceFile  ==  null?  sourceFile.toLowerCase()  :  sourceFile.toLowerCase();	  String    originalName    =    sourceFile.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
1142	[BUG]  [BUGGY]  String  originalName  =  sourceFile!=  null?  sourceFile.toLowerCase()  :  DEFAULT;  [CE]  illegal  start  of  type  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  String  originalName  =  sourceFile!=  null?  sourceFile.toLowerCase()  :  DEFAULT;  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	String  originalName  =  sourceFile!=  null?  sourceFile.toLowerCase()  :  DEFAULT;	  String    originalName    =    sourceFile.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
1143	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceFile.isEmpty()  &&  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!sourceFile.isEmpty()  &&  sourceFile!=  null)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	53	16	replace
1144	[BUG]  [BUGGY]  if(!sourceFile.isEmpty()  &&  sourceFile!=  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceFile.isEmpty()  &&  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceFile.isEmpty()  &&  sourceFile!=  null)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	53	16	replace
1145	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings!=  null  &&  sourceFile!=  null)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	53	16	replace
1146	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  sourceFile!=  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  &&  sourceFile!=  null)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	53	16	replace
1147	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceFile.isEmpty()  &&  prefixMappings!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!sourceFile.isEmpty()  &&  prefixMappings!=  null)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	53	16	replace
1148	[BUG]  [BUGGY]  if(!sourceFile.isEmpty()  &&  prefixMappings!=  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!sourceFile.isEmpty()  &&  prefixMappings!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!sourceFile.isEmpty()  &&  prefixMappings!=  null)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	53	16	replace
1149	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile  >=  null)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile  >=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  &&  sourceFile  >=  null)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile!=    null)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	53	None	replace
1150	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()).trim();  [CE]  illegal  start  of  type  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()).trim();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()).trim();	  String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
1151	[BUG]  [BUGGY]  if(sourceFile.length()  ||  prefixMappings.isEmpty()  ==  0)  {  [CE]  incomparable  types:  boolean  and  int  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ||  prefixMappings.isEmpty()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ||  prefixMappings.isEmpty()  ==  0)  {	  if(sourceFile.isEmpty()    ||    prefixMappings.length()    ==    0)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  int	95	None	replace
1152	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	121	16	replace
1153	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	121	16	replace
1154	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	121	16	replace
1155	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	121	16	replace
1156	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()).trim();  [CE]  illegal  start  of  type  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()).trim();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()).trim();	  String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
1157	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toLowerCase(this.sourceFile);  [CE]  illegal  start  of  type  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toLowerCase(this.sourceFile);  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toLowerCase(this.sourceFile);	  junit.framework.ComparisonFailure    sourceFile    =    sourceFile.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	194	None	replace
1158	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toLowerCase(sourceFile);  [CE]  illegal  start  of  type  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toLowerCase(sourceFile);  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toLowerCase(sourceFile);	  junit.framework.ComparisonFailure    sourceFile    =    sourceFile.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	194	None	replace
1159	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toLowerCase(locale);  [CE]  illegal  start  of  type  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toLowerCase(locale);  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toLowerCase(locale);	  junit.framework.ComparisonFailure    sourceFile    =    sourceFile.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	194	None	replace
1160	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toLowerCase(LocationBuilder.DEFAULT);  [CE]  illegal  start  of  type  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toLowerCase(LocationBuilder.DEFAULT);  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toLowerCase(LocationBuilder.DEFAULT);	  junit.framework.ComparisonFailure    sourceFile    =    sourceFile.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	194	None	replace
1161	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	197	None	add
1162	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(!prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(!prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(!prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings.isEmpty()    ||    PrefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
1163	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  junit.framework.sourceLocationFixupCache.get(sourceFile);  [CE]  illegal  start  of  type  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  SourceMapGenerator  generator  =  junit.framework.sourceLocationFixupCache.get(sourceFile);  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	SourceMapGenerator  generator  =  junit.framework.sourceLocationFixupCache.get(sourceFile);	  SourceMapGenerator    generator    =    sourceLocationFixupCache.get(sourceFile);    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
1164	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  sourceLocationFactory.get(sourceFile);  [CE]  illegal  start  of  type  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  SourceMapGenerator  generator  =  sourceLocationFactory.get(sourceFile);  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	SourceMapGenerator  generator  =  sourceLocationFactory.get(sourceFile);	  SourceMapGenerator    generator    =    sourceLocationFixupCache.get(sourceFile);    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
1165	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( " "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( " "))  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	180	16	replace
1166	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( " "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( " "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( " "))  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	180	16	replace
1167	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( " "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( " "))  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	180	16	replace
1168	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( " "))  {  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( " "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( " "))  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	180	16	replace
1169	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  sourceFile!=  null)  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile!=  null)  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  sourceFile!=  null)  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    If(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	55	None	replace
1170	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceFile  ==  null)  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceFile  ==  null)  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  sourceFile  ==  null)  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    If(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	55	None	replace
1171	[BUG]  [BUGGY]  if(prefixMappings!=  null)  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null)  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null)  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    If(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	55	None	replace
1172	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty()    &&    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	189	16	replace
1173	[BUG]  [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty()    &&    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	189	16	replace
1174	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "- "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "- "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	200	16	replace
1175	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "- "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "- "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "- "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	200	16	replace
1176	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  null  ||  sourceFile.length()  ==  0;  [CE]  not  a  statement  [FE]                                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure:  null  ||  sourceFile.length()  ==  0;  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure:  null  ||  sourceFile.length()  ==  0;	  junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	153	None	replace
1177	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  null,  sourceFile;  [CE]  not  a  statement  [FE]                                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure:  null,  sourceFile;  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure:  null,  sourceFile;	  junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	153	None	replace
1178	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  prefixMappings!=  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    if(prefixMappings!=    null    |&    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	34	16	replace
1179	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  [FE]  AssertionFailedError  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings!=  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    if(prefixMappings!=    null    |&    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	34	16	replace
1180	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toLowerCase()  + "/.* ";  [CE]  illegal  start  of  type  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  String  originalName  =  sourceFile.toLowerCase()  + "/.* ";  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	String  originalName  =  sourceFile.toLowerCase()  + "/.* ";	  String    originalName    =    sourceFile.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
1181	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toLowerCase()  + ". ";  [CE]  illegal  start  of  type  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  String  originalName  =  sourceFile.toLowerCase()  + ". ";  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	String  originalName  =  sourceFile.toLowerCase()  + ". ";	  String    originalName    =    sourceFile.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
1182	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(SourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(SourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(SourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
1183	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.endsWith( ".java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  sourceFile.endsWith( ".java "))  {	  if(sourceFile    ==    null    ||    sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	133	16	replace
1184	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.endsWith( ".java "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.endsWith( ".java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  sourceFile.endsWith( ".java "))  {	  if(sourceFile    ==    null    ||    sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	133	16	replace
1185	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toLowerCase(false);  [CE]  illegal  start  of  type  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toLowerCase(false);  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toLowerCase(false);	  junit.framework.ComparisonFailure    sourceFile    =    sourceFile.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	194	None	replace
1186	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toLowerCase()  + ". ";  [CE]  illegal  start  of  type  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toLowerCase()  + ". ";  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toLowerCase()  + ". ";	  junit.framework.ComparisonFailure    sourceFile    =    sourceFile.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	194	None	replace
1187	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  PrefixMappings.isEmpty())  {  [CE]  cannot  find  symbol  PrefixMappings  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  PrefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  PrefixMappings.isEmpty())  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    if(prefixMappings!=    null    ||    PrefixMappings.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  PrefixMappings	92	None	replace
1188	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    if(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
1189	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    if(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
1190	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  If(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [CE]  ';'  expected  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  If(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    prefixMappings.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    If(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  	non-compiled	[CE]  ';'  expected	24	None	add
1191	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  0)  {  if(SourceFile.isEmpty()  ||  prefixMappings.size()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  0)  {  if(SourceFile.isEmpty()  ||  prefixMappings.size()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    prefixMappings.size()    ==    0)    {    if(SourceFile.isEmpty()  ||  prefixMappings.size()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	101	None	add
1192	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  if(SourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  if(SourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)!=    null)    {    if(SourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
1193	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    prefixMappings.isEmpty()    &&    sourceLocationFixupCache.containsKey(sourceFile))    {    if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	188	None	add
1194	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.get(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.get(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    prefixMappings.isEmpty()    &&    sourceLocationFixupCache.containsKey(sourceFile))    {    if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.get(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	188	None	add
1195	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  If(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null)  {  If(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null)  {  If(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    If(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	91	None	replace
1196	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||  sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	8	16	replace
1197	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	8	16	replace
1198	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  &&  sourceLocationFixupCache.get(sourceFile)  ==  null)  {	  if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)    ==    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	87	16	replace
1199	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  sourceLocationFixupCache.get(sourceFile)  ==  null)  {	  if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)    ==    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	87	16	replace
1200	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.size()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings.size()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	121	16	replace
1201	[BUG]  [BUGGY]  if(prefixMappings.size()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.size()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.size()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	121	16	replace
1202	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.size()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.size()  >  0)  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	121	16	replace
1203	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.size()  >  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.size()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.size()  >  0)  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	121	16	replace
1204	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	186	16	replace
1205	[BUG]  [BUGGY]  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	186	16	replace
1206	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  prefixMapping.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  prefixMapping.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(sourceFile!=  null  ||  prefixMapping.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	116	None	add
1207	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	116	None	add
1208	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings.isEmpty()    ||    sourceFile.length()    >=    0)    {    	compilable	  [FE]  AssertionFailedError  	62	16	replace
1209	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [FE]  AssertionFailedError  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings.isEmpty()    ||    sourceFile.length()    >=    0)    {    	compilable	  [FE]  AssertionFailedError  	62	16	replace
1210	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.hasEmpty())  {  [CE]  cannot  find  symbol  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.hasEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  &&  prefixMappings.hasEmpty())  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    if(prefixMappings!=    null    &&    prefixMappings.hasEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	165	None	replace
1211	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(PrefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
1212	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)!=  null)  {  [CE]  bad  operand  type  String  for  unary  operator  '!'  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)!=  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!sourceLocationFixupCache.get(sourceFile)!=    null)    {    	non-compiled	[CE]  bad  operand  type  String  for  unary  operator  '!'	138	None	replace
1213	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)!=  null)  {  [CE]  bad  operand  type  String  for  unary  operator  '!'  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)!=  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!sourceLocationFixupCache.get(sourceFile)!=    null)    {    	non-compiled	[CE]  bad  operand  type  String  for  unary  operator  '!'	138	None	replace
1214	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
1215	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {  if(SourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {  if(SourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    prefixMappings.contains(sourceFile))    {    if(SourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	181	None	add
1216	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java/ "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java/ "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	198	16	replace
1217	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java/ "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java/ "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java/ "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	198	16	replace
1218	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.startsWith( ".java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.startsWith( ".java "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	198	16	replace
1219	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.startsWith( ".java "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.startsWith( ".java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.startsWith( ".java "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	198	16	replace
1220	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java. "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java. "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  AssertionFailedError  	198	16	replace
1221	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java. "))  {  [FE]  AssertionFailedError  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java. "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java. "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  AssertionFailedError  	198	16	replace
1222	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings!=  null  &&!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {	  if(!prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	143	16	replace
1223	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  &&!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {	  if(!prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	143	16	replace
1224	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {	  if(!prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	143	16	replace
1225	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {	  if(!prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	143	16	replace
1226	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||  sourceFile!=  null)  {	  if(!prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	143	16	replace
1227	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile!=  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  sourceFile!=  null)  {	  if(!prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	143	16	replace
1228	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    If(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	55	None	replace
1229	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null)  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null)  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    If(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	55	None	replace
1230	[BUG]  [BUGGY]  if(sourceFile  ==  null)  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null)  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null)  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    If(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	55	None	replace
1231	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  If(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  If(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    If(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	114	None	add
1232	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	114	None	add
1233	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	111	16	replace
1234	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	111	16	replace
1235	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings!=  null  ||!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	111	16	replace
1236	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  ||!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	111	16	replace
1237	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(sourceFile.isEmpty()  ||  sourceFile.endsWith(. ".java   "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(sourceFile.isEmpty()  ||  sourceFile.endsWith(. ".java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    if(sourceFile.isEmpty()  ||  sourceFile.endsWith(. ".java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	190	None	add
1238	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.size()  ==  0  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||  prefixMappings.size()  ==  0  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	4	16	replace
1239	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.size()  ==  0  ||  sourceFile.length()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.size()  ==  0  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  prefixMappings.size()  ==  0  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	4	16	replace
1240	[BUG]  [BUGGY]  SourceMap  <  String,  Object>  sourceFile  =  sourceFile.toLowerCase();  [CE]  illegal  start  of  type  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  SourceMap  <  String,  Object>  sourceFile  =  sourceFile.toLowerCase();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	SourceMap  <  String,  Object>  sourceFile  =  sourceFile.toLowerCase();	  if(sourceFile!=    null)    {    sourceFile    =    sourceFile.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
1241	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  sourceFile.toUpperCase();  }  [CE]  illegal  start  of  type  [FE]                                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  sourceFile.toUpperCase();  }  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null)  {  sourceFile  =  sourceFile.toUpperCase();  }	  if(sourceFile!=    null)    {    sourceFile    =    sourceFile.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
1242	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  sourceFile.endsWith( ".java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.length()  ==  0  ||  sourceFile.endsWith( ".java "))  {	  if(sourceFile.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	191	16	replace
1243	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  sourceFile.endsWith( ".java "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  sourceFile.endsWith( ".java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  ||  sourceFile.endsWith( ".java "))  {	  if(sourceFile.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	191	16	replace
1244	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  prefixMappings.get(sourceFile))  {  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  prefixMappings.get(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||  prefixMappings.get(sourceFile))  {	  if(!prefixMappings.isEmpty()    ||    prefixMappings.containsKey(sourceFile))    {    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	47	None	replace
1245	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  prefixMappings.containsKey(sourceFile);  [CE]  ')'  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  prefixMappings.containsKey(sourceFile);  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||  prefixMappings.containsKey(sourceFile);	  if(!prefixMappings.isEmpty()    ||    prefixMappings.containsKey(sourceFile))    {    	non-compiled	[CE]  ')'  expected	47	None	replace
1246	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  If(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  If(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    If(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	118	None	add
1247	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
1248	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty())  {  if(prefixMappings  {  null  ||!prefixMappings.isEmpty())  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty())  {  if(prefixMappings  {  null  ||!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||!prefixMappings.isEmpty())    {    if(prefixMappings  {  null  ||!prefixMappings.isEmpty())  {	  	non-compiled	[CE]  ')'  expected	48	None	add
1249	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  locationLocationFixupCache.contains(sourceFile))  {  [CE]  cannot  find  symbol  locationLocationFixupCache  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  locationLocationFixupCache.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  locationLocationFixupCache.contains(sourceFile))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.contains(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol  locationLocationFixupCache	174	None	replace
1250	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceLocationFixupCache.contains(sourceFile))  {  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceLocationFixupCache.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||  sourceLocationFixupCache.contains(sourceFile))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.contains(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol	174	None	replace
1251	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||!prefixMappings.isEmpty()  ||  locationLocationFixupCache.contains(sourceFile))  {  [CE]  cannot  find  symbol  locationLocationFixupCache  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||!prefixMappings.isEmpty()  ||  locationLocationFixupCache.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||!prefixMappings.isEmpty()  ||  locationLocationFixupCache.contains(sourceFile))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.contains(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol  locationLocationFixupCache	174	None	replace
1252	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  prefixMappingCache.contains(sourceFile))  {  [CE]  cannot  find  symbol  prefixMappingCache  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  prefixMappingCache.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||  prefixMappingCache.contains(sourceFile))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.contains(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol  prefixMappingCache	174	None	replace
1253	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(sourceFile!=    null    &&    sourceFile.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	135	16	replace
1254	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(sourceFile!=    null    &&    sourceFile.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	135	16	replace
1255	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty())  {  if(prefixMappings  {  null  ||  sourceFile.isEmpty())  {  [CE]  ')'  expected  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty())  {  if(prefixMappings  {  null  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    sourceFile.isEmpty())    {    if(prefixMappings  {  null  ||  sourceFile.isEmpty())  {	  	non-compiled	[CE]  ')'  expected	5	None	add
1256	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {	  if(sourceFile.isEmpty()    ||    prefixMappings.contains(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	182	16	replace
1257	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {	  if(sourceFile.isEmpty()    ||    prefixMappings.contains(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	182	16	replace
1258	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.length()!=  0)  {	  if(sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	157	16	replace
1259	[BUG]  [BUGGY]  if(sourceFile.length()!=  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()!=  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()!=  0)  {	  if(sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	157	16	replace
1260	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.size()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.size()  >  0)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	119	16	replace
1261	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.size()  >  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.size()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.size()  >  0)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	119	16	replace
1262	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  sourceFile.isEmpty()  ||  prefixMappings.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  sourceFile.isEmpty()  ||  prefixMappings.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  ||  sourceFile.isEmpty()  ||  prefixMappings.length()  ==  0)  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	169	None	replace
1263	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  =  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  =  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  =  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	99	None	add
1264	[BUG]  [BUGGY]  if(prefixMappings  ==  null)  {  If(!prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null)  {  If(!prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null)  {  If(!prefixMappings.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    If(!prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	108	None	replace
1265	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  sourceFile.toPath();  [CE]  illegal  start  of  type  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure  =  sourceFile.toPath();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  =  sourceFile.toPath();	  junit.framework.ComparisonFailure    =    sourceFile.toString();    	non-compiled	[CE]  illegal  start  of  type	195	None	replace
1266	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  sourceFile.toExternalForm();  [CE]  illegal  start  of  type  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure  =  sourceFile.toExternalForm();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  =  sourceFile.toExternalForm();	  junit.framework.ComparisonFailure    =    sourceFile.toString();    	non-compiled	[CE]  illegal  start  of  type	195	None	replace
1267	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  =  0)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  =  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  =  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	122	None	add
1268	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  prefixMappings!=  null  &&  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    if(prefixMappings    >>    null    &&    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	33	16	replace
1269	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings!=  null  &&  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    if(prefixMappings    >>    null    &&    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	33	16	replace
1270	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java/ "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java/ "))  {	  if(!prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	193	16	replace
1271	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java/ "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java/ "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith( "java/ "))  {	  if(!prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	193	16	replace
1272	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [CE]  bad  operand  type  String  for  unary  operator  '!'  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)  ==  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!sourceLocationFixupCache.get(sourceFile)    ==    null)    {    	non-compiled	[CE]  bad  operand  type  String  for  unary  operator  '!'	137	None	replace
1273	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [CE]  bad  operand  type  String  for  unary  operator  '!'  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)  ==  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!sourceLocationFixupCache.get(sourceFile)    ==    null)    {    	non-compiled	[CE]  bad  operand  type  String  for  unary  operator  '!'	137	None	replace
1274	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  &&  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  &&  sourceFile!=  null)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	53	16	replace
1275	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  &&  sourceFile!=  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  &&  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  &&  sourceFile!=  null)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	53	16	replace
1276	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  &&  sourceFile!=  null  &&  sourceFile.length()  >  0)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	53	16	replace
1277	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null  &&  sourceFile.length()  >  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  &&  sourceFile!=  null  &&  sourceFile.length()  >  0)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	53	16	replace
1278	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.isLocation())  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.isLocation())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  sourceFile.isLocation())  {	  if    (sourceFile.isEmpty())    {    if    (sourceFile.isEmpty()    ||    sourceFile.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
1279	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  sourceFile.startsWith( "/ ")?  sourceFile.getGenerator()  :  null;  [CE]  illegal  start  of  type  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  SourceMapGenerator  generator  =  sourceFile.startsWith( "/ ")?  sourceFile.getGenerator()  :  null;  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	SourceMapGenerator  generator  =  sourceFile.startsWith( "/ ")?  sourceFile.getGenerator()  :  null;	  SourceMapGenerator    generator    =    sourceFile.getGenerator();    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
1280	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "/ "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "/ "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	200	16	replace
1281	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "/ "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "/ "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "/ "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	200	16	replace
1282	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "file: "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "file: "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	200	16	replace
1283	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "file: "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "file: "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( "file: "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	200	16	replace
1284	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "/.js "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "/.js "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".js   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	202	16	replace
1285	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "/.js "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "/.js "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( "/.js "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".js   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	202	16	replace
1286	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  If(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null)  {  If(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null)  {  If(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    If(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	37	None	replace
1287	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {  [CE]  cannot  find  symbol  PrefixMappings  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings.isEmpty()    ||    PrefixMappings.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  PrefixMappings	57	None	replace
1288	[BUG]  [BUGGY]  if(PrefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [CE]  cannot  find  symbol  PrefixMappings  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(PrefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(PrefixMappings  ==  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    if(PrefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  PrefixMappings	40	None	replace
1289	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  =  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  =  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  =  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	177	None	add
1290	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  =  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  =  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  =  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
1291	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	117	16	replace
1292	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	117	16	replace
1293	[BUG]  [BUGGY]  If(prefixMappings!=  null  &&  sourceFile.isEmpty())  {  [CE]  ';'  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  If(prefixMappings!=  null  &&  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	If(prefixMappings!=  null  &&  sourceFile.isEmpty())  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty())    {    If(sourceFile!=    null    &&    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	13	None	replace
1294	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  AssertionFailedError  	110	16	replace
1295	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [FE]  AssertionFailedError  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  AssertionFailedError  	110	16	replace
1296	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings!=  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	110	16	replace
1297	[BUG]  [BUGGY]  if(prefixMappings!=  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	110	16	replace
1298	[BUG]  [BUGGY]  if(sourceLocationFixupCache.contains(sourceFile))  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceLocationFixupCache.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceLocationFixupCache.contains(sourceFile))  {	  if    (sourceFile.isEmpty())    {    if    (sourceFile.isEmpty()    ||    sourceLocationFixupCache.contains(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
1299	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.contains(sourceFile))  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.contains(sourceFile))  {	  if    (sourceFile.isEmpty())    {    if    (sourceFile.isEmpty()    ||    sourceLocationFixupCache.contains(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
1300	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(. ".java   "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(. ".java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(. ".java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	170	None	add
1301	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {  if(sourceFile  ==  null  ||  sourceFile.equals( " "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {  if(sourceFile  ==  null  ||  sourceFile.equals( " "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile    ==    null    ||    sourceFile.isEmpty())    {    if(sourceFile  ==  null  ||  sourceFile.equals( " "))  {	  	non-compiled	[CE]  illegal  start  of  expression	132	None	add
1302	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(. ".java   "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(. ".java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(. ".java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	197	None	add
1303	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  If(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {  [CE]  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  If(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    If(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java   "))  {	  	non-compiled	[CE]  	197	None	add
1304	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||  sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(prefixMappings    ==    null    ||    sourceFile.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	6	16	replace
1305	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(prefixMappings    ==    null    ||    sourceFile.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	6	16	replace
1306	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings.containsKey(sourceFile))  {  [CE]  cannot  find  symbol  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  sourceFile.isEmpty()  ||  prefixMappings.containsKey(sourceFile))  {	  if(prefixMappings    ==    null    ||    sourceFile.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
1307	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  sourceFile.length()  >  0)  {	  if(sourceFile!=    null    ||    sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	21	16	replace
1308	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceFile.length()  >  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  sourceFile.length()  >  0)  {	  if(sourceFile!=    null    ||    sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	21	16	replace
1309	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  2)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  2)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	168	None	add
1310	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals('   "))  {  [CE]  unclosed  character  literal  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals(   "   "))  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals('   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty()    ||    sourceFile.equals(   "   "))    {    if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals('   "))  {	  	non-compiled	[CE]  unclosed  character  literal	179	None	add
1311	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {  [CE]  cannot  find  symbol  PrefixMappings  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty())    {    if(sourceFile!=    null    &&    PrefixMappings.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  PrefixMappings	11	None	replace
1312	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(sourceFile  {  null  ||  prefixMappings.isEmpty())  {  [CE]  ')'  expected  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  if(sourceFile  {  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile    ==    null    ||    prefixMappings.isEmpty())    {    if(sourceFile  {  null  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  ')'  expected	1	None	add
1313	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  if(SourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  if(SourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)    ==    null)    {    if(SourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
1314	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(prefixMappings!=    null    &&    sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	23	16	replace
1315	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(prefixMappings!=    null    &&    sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	23	16	replace
1316	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings!=  null  &&  sourceFile.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(prefixMappings!=    null    &&    sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	23	16	replace
1317	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  &&  sourceFile.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(prefixMappings!=    null    &&    sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	23	16	replace
1318	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ==  0)  {  [CE]  incomparable  types:  boolean  and  int  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()  ==  0)  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ==    0)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  int	98	None	replace
1319	[BUG]  [BUGGY]  if(prefixMappings.size()  ==  0  ||  sourceFile.isEmpty()  ==  0)  {  [CE]  incomparable  types:  boolean  and  int  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.size()  ==  0  ||  sourceFile.isEmpty()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.size()  ==  0  ||  sourceFile.isEmpty()  ==  0)  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ==    0)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  int	98	None	replace
1320	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ==  0  ||  sourceFile.length()  ==  0)  {  [CE]  incomparable  types:  boolean  and  int  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ==  0  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()  ==  0  ||  sourceFile.length()  ==  0)  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ==    0)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  int	98	None	replace
1321	[BUG]  [BUGGY]  if(prefixMappings.length()  ==  0  ||  prefixMappings.isEmpty()  ==  0)  {  [CE]  cannot  find  symbol  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.length()  ==  0  ||  prefixMappings.isEmpty()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.length()  ==  0  ||  prefixMappings.isEmpty()  ==  0)  {	  if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
1322	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.equals( " ")||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.equals( " ")||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  AssertionFailedError  	82	16	replace
1323	[BUG]  [BUGGY]  if(sourceFile.equals( " ")||  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.equals( " ")||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.equals( " ")||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  AssertionFailedError  	82	16	replace
1324	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  If(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  If(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  If(sourceFile!=  null  ||  prefixMappings.isEmpty())  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    If(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	78	None	replace
1325	[BUG]  [BUGGY]  if(PrefixMappings!=  null  ||  prefixMappings.isEmpty())  {  [CE]  cannot  find  symbol  PrefixMappings  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(PrefixMappings!=  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(PrefixMappings!=  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    if(PrefixMappings!=    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  PrefixMappings	166	None	replace
1326	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  locationLocationFixupCache.get(sourceFile)!=  null)  {  [CE]  cannot  find  symbol  locationLocationFixupCache  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  locationLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  locationLocationFixupCache.get(sourceFile)!=  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.get(sourceFile)!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  locationLocationFixupCache	173	None	replace
1327	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  locationLocationFixupCache.get(sourceFile)!=  null)  {  [CE]  cannot  find  symbol  locationLocationFixupCache  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  locationLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  locationLocationFixupCache.get(sourceFile)!=  null)  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.get(sourceFile)!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  locationLocationFixupCache	173	None	replace
1328	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	163	16	replace
1329	[BUG]  [BUGGY]  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	163	16	replace
1330	[BUG]  [BUGGY]  if(prefixMapping.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  cannot  find  symbol  prefixMapping  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMapping.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMapping.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(sourceFile.isEmpty()    ||    prefixMappings.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  prefixMapping	95	None	replace
1331	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	109	16	replace
1332	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	109	16	replace
1333	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	115	16	replace
1334	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	115	16	replace
1335	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	161	16	replace
1336	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	161	16	replace
1337	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.size()  >  0  ||  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||  prefixMappings.size()  >  0  ||  sourceFile!=  null)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	161	16	replace
1338	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.size()  >  0  ||  sourceFile!=  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.size()  >  0  ||  sourceFile!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  prefixMappings.size()  >  0  ||  sourceFile!=  null)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	161	16	replace
1339	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.length()  ==  0  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  ||  sourceFile.length()  ==  0  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	97	16	replace
1340	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.length()  ==  0  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.length()  ==  0  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  sourceFile.length()  ==  0  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	97	16	replace
1341	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings!=  null  &&  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty()    &&    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	189	16	replace
1342	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  &&  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty()    &&    sourceLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	189	16	replace
1343	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceLocationFixupCache.isEmpty())  {	  if    (sourceFile.isEmpty())    {    if    (sourceFile.isEmpty()    ||    sourceLocationFixupCache.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	73	16	replace
1344	[BUG]  [BUGGY]  if(sourceLocationFixupCache.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceLocationFixupCache.isEmpty())  {	  if    (sourceFile.isEmpty())    {    if    (sourceFile.isEmpty()    ||    sourceLocationFixupCache.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	73	16	replace
1345	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  sourceFile.substring(1);  [CE]  illegal  start  of  type  [FE]                                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure  =  sourceFile.substring(1);  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  =  sourceFile.substring(1);	  junit.framework.ComparisonFailure    =    sourceFile;    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
1346	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith(. ".java   "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith(. ".java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith(. ".java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	192	None	add
1347	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith('.java   "))  {  [CE]  unclosed  character  literal  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith('.java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith('.java   "))  {	  	non-compiled	[CE]  unclosed  character  literal	192	None	add
1348	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    if(!prefixMappings.isEmpty()  ||  sourceFile.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
1349	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty())  {  if(prefixMappings!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty())  {  if(prefixMappings!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    sourceFile.isEmpty())    {    if(prefixMappings!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
1350	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty())  {  if(prefixMappings!=  null  &&  sourceFile.isEmpty()  ||  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty())  {  if(prefixMappings!=  null  &&  sourceFile.isEmpty()  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    sourceFile.isEmpty())    {    if(prefixMappings!=  null  &&  sourceFile.isEmpty()  ||  sourceFile.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
1351	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty())  {  if(prefixMappings!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty())  {  if(prefixMappings!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    sourceFile.isEmpty())    {    if(prefixMappings!=  null  &&  sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
1352	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings!=  null  &&  PrefixMappings.isEmpty())  {  [CE]  cannot  find  symbol  PrefixMappings  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings!=  null  &&  PrefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings!=  null  &&  PrefixMappings.isEmpty())  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    if(prefixMappings!=    null    &&    PrefixMappings.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  PrefixMappings	30	None	replace
1353	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings!=  null  &&!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	42	16	replace
1354	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  &&!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	42	16	replace
1355	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	42	16	replace
1356	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	42	16	replace
1357	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  &&!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	42	16	replace
1358	[BUG]  [BUGGY]  if(sourceFile!=  null  &&!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	42	16	replace
1359	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings.isEmpty()  ||  sourceFile.length()  >  0)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	42	16	replace
1360	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  sourceFile.length()  >  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  sourceFile.length()  >  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()  ||  sourceFile.length()  >  0)  {	  if(!prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	42	16	replace
1361	[BUG]  [BUGGY]  If(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  If(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	If(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    If(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    	non-compiled	[CE]  ';'  expected	32	None	replace
1362	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  if(SourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  if(SourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()    ==    0    ||    prefixMappings.isEmpty())    {    if(SourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	154	None	add
1363	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null)  {  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null  ||  sourceFile.equals( " "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null)  {  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null  ||  sourceFile.equals( " "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    &&    sourceFile!=    null)    {    if(!prefixMappings.isEmpty()  &&  sourceFile!=  null  ||  sourceFile.equals( " "))  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
1364	[BUG]  [BUGGY]  if(!prefixMapping.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  cannot  find  symbol  prefixMapping  [FE]        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMapping.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMapping.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMapping.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  prefixMapping	158	None	replace
1365	[BUG]  [BUGGY]  String  OriginalName  =  sourceFile.substring(0,  sourceFile.length());  [CE]  illegal  start  of  type  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  String  OriginalName  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	String  OriginalName  =  sourceFile.substring(0,  sourceFile.length());	  String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
1366	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  locationLocationFixupCache.containsKey(sourceFile))  {  [CE]  cannot  find  symbol  locationLocationFixupCache  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  locationLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  locationLocationFixupCache.containsKey(sourceFile))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.containsKey(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol  locationLocationFixupCache	172	None	replace
1367	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	172	16	replace
1368	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.containsKey(sourceFile))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	172	16	replace
1369	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  prefixMappingCache.containsKey(sourceFile))  {  [CE]  cannot  find  symbol  prefixMappingCache  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  prefixMappingCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||  prefixMappingCache.containsKey(sourceFile))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.containsKey(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol  prefixMappingCache	172	None	replace
1370	[BUG]  [BUGGY]  if(locationLocationFixupCache.containsKey(sourceFile))  {  [CE]  cannot  find  symbol  locationLocationFixupCache  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(locationLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(locationLocationFixupCache.containsKey(sourceFile))  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||    locationLocationFixupCache.containsKey(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol  locationLocationFixupCache	172	None	replace
1371	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  1)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    &&    sourceFile.length()    >    0)    {    if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	183	None	add
1372	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  &&  sourceLocationFixupCache.get(sourceFile)!=  null)  {	  if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	85	16	replace
1373	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  &&  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  sourceLocationFixupCache.get(sourceFile)!=  null)  {	  if(sourceFile.isEmpty()    ||    sourceLocationFixupCache.get(sourceFile)!=    null)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	85	16	replace
1374	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.contains(sourceFile)||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  prefixMappings.contains(sourceFile)||  sourceFile.length()  ==  0)  {	  if(sourceFile    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	104	16	replace
1375	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.contains(sourceFile)||  sourceFile.length()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.contains(sourceFile)||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.contains(sourceFile)||  sourceFile.length()  ==  0)  {	  if(sourceFile    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	104	16	replace
1376	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.size()  ==  0  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  prefixMappings.size()  ==  0  ||  sourceFile.length()  ==  0)  {	  if(sourceFile    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	104	16	replace
1377	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.size()  ==  0  ||  sourceFile.length()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.size()  ==  0  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.size()  ==  0  ||  sourceFile.length()  ==  0)  {	  if(sourceFile    ==    null    ||    prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	104	16	replace
1378	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  HashMap  <  String,String>();  [CE]  not  a  statement  [FE]                                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure:  new  HashMap  <  String,String>();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure:  new  HashMap  <  String,String>();	  junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	153	None	replace
1379	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  File(sourceFile);  [CE]  not  a  statement  [FE]                                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure:  new  File(sourceFile);  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure:  new  File(sourceFile);	  junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	153	None	replace
1380	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    if(sourceFile    ==    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	159	16	replace
1381	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null  ||  prefixMappings.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    if(sourceFile    ==    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	159	16	replace
1382	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    if(sourceFile    ==    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
1383	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.contains(sourceFile)||  sourceLocationFixupCache.contains(sourceFile))  {  [CE]  cannot  find  symbol  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.contains(sourceFile)||  sourceLocationFixupCache.contains(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.contains(sourceFile)||  sourceLocationFixupCache.contains(sourceFile))  {	  if(sourceFile!=    null    ||    prefixMappings.contains(sourceFile))    {    	non-compiled	[CE]  cannot  find  symbol	176	None	replace
1384	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(sourceFile.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
1385	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(sourceFile.isEmpty()    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
1386	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!sourceLocationFixupCache.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	136	16	replace
1387	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!sourceLocationFixupCache.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	136	16	replace
1388	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!sourceLocationFixupCache.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	136	16	replace
1389	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()    ||!sourceLocationFixupCache.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	136	16	replace
1390	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.get(sourceFile))  {  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.get(sourceFile))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.get(sourceFile))  {	  if(sourceFile!=    null    ||    prefixMappings.containsKey(sourceFile))    {    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	146	None	replace
1391	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  if(SourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  if(SourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()    ==    0)    {    if(SourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	156	None	add
1392	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  ';'  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    If(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	63	None	replace
1393	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.toPath();  [CE]  illegal  start  of  type  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.toPath();  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  sourceFile  =  sourceFile.toPath();	  junit.framework.ComparisonFailure    sourceFile    =    sourceFile.toString();    	non-compiled	[CE]  illegal  start  of  type	196	None	replace
1394	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.substring(1);  [CE]  illegal  start  of  type  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.substring(1);  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  sourceFile  =  sourceFile.substring(1);	  junit.framework.ComparisonFailure    sourceFile    =    sourceFile.toString();    	non-compiled	[CE]  illegal  start  of  type	196	None	replace
1395	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  =  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  =  0)  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()    ||    sourceFile.length()!=    0)    {    if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  =  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
1396	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith(. ".java   "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {      [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith(   ".java   "))  {  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith(. ".java   "))  {  [BUGGY]      return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    prefixMappings.isEmpty()    ||    sourceFile.endsWith(   ".java   "))    {    if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith(. ".java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	185	None	add
