bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  node.framework.ComparisonFailure:  null;  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  node.framework.ComparisonFailure:  null;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	node.framework.ComparisonFailure:  null;	  junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	10	None	replace
2	[BUG]  [BUGGY]  Tasks.ComparisonFailure:  null;  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  Tasks.ComparisonFailure:  null;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	Tasks.ComparisonFailure:  null;	  junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	10	None	replace
3	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  outputEndPosition.toString());  [CE]  cannot  find  symbol  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  outputEndPosition.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile,  outputEndPosition.toString());	  sourceFile    =    calculateSourceLocation(sourceFile.toString());    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
4	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  outputStartPosition.toString());  [CE]  cannot  find  symbol  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  outputStartPosition.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile,  outputStartPosition.toString());	  sourceFile    =    calculateSourceLocation(sourceFile.toString());    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
5	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile.toString(),  generator);  [CE]  cannot  find  symbol  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile.toString(),  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile.toString(),  generator);	  sourceFile    =    calculateSourceLocation(sourceFile.toString());    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
6	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  generator.toString());  [CE]  cannot  find  symbol  [FE]                                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  generator.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile,  generator.toString());	  sourceFile    =    calculateSourceLocation(sourceFile.toString());    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
7	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile.toString(),  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile.toString(),  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile.toString(),  outputEndPosition);	  sourceFile    =    calculateSourceLocation(sourceFile.toString());    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
8	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  node.toString());  [CE]  cannot  find  symbol  [FE]                                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  node.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile,  node.toString());	  sourceFile    =    calculateSourceLocation(sourceFile.toString());    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
9	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  outputStartPosition,  generator);  [CE]  cannot  find  symbol  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  outputStartPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile,  outputStartPosition,  generator);	  sourceFile    =    calculateSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
10	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(node,  outputStartPosition);  [CE]  cannot  find  symbol  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(node,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(node,  outputStartPosition);	  sourceFile    =    calculateSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
11	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  calculateSourceMapping(sourceFile,  outputStartPosition);  [CE]  cannot  find  symbol  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  calculateSourceMapping(sourceFile,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  calculateSourceMapping(sourceFile,  outputStartPosition);	  sourceFile    =    calculateSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
12	[BUG]  [BUGGY]  SourceFile  sourceFile  =  calculateSourceLocation(sourceFile,  outputEndPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceFile  sourceFile  =  calculateSourceLocation(sourceFile,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceFile  sourceFile  =  calculateSourceLocation(sourceFile,  outputEndPosition);	  sourceFile    =    calculateSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	18	None	replace
13	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    else    {    String    originalName    =    (String)node.getProp(Node.ORIGINALNAME_PROP);    generator.addMapping(    sourceFile,    original    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
14	[BUG]  [BUGGY]  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    else    {    String    originalName    =    (String)node.getProp(Node.ORIGINALNAME_PROP);    generator.addMapping(    sourceFile,    original    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
15	[BUG]  [BUGGY]  if(sourceFile.getLineno()  <  0)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile.getLineno()  <  0)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile.getLineno()  <  0)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    else    {    String    originalName    =    (String)node.getProp(Node.ORIGINALNAME_PROP);    generator.addMapping(    sourceFile,    original    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
16	[BUG]  [BUGGY]  if(sourceFile.getLineno()  ==  0)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile.getLineno()  ==  0)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile.getLineno()  ==  0)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    else    {    String    originalName    =    (String)node.getProp(Node.ORIGINALNAME_PROP);    generator.addMapping(    sourceFile,    original    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
17	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString()  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString()  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString()	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    else    {    String    originalName    =    (String)node.getProp(Node.ORIGINALNAME_PROP);    generator.addMapping(    sourceFile,    original    	non-compiled	[CE]  ')'  expected	44	None	replace
18	[BUG]  [BUGGY]  if(sourceFile.getLineno()  <  0)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString()  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile.getLineno()  <  0)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString()  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile.getLineno()  <  0)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString()	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    else    {    String    originalName    =    (String)node.getProp(Node.ORIGINALNAME_PROP);    generator.addMapping(    sourceFile,    original    	non-compiled	[CE]  ')'  expected	44	None	replace
19	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    inputStartPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	72	None	replace
20	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputLineno);  [CE]  cannot  find  symbol  outputLineno  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputLineno);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputLineno);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    inputStartPosition);    	non-compiled	[CE]  cannot  find  symbol  outputLineno	72	None	replace
21	[BUG]  [BUGGY]  SourceFile  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceFile  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceFile  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    inputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	112	None	replace
22	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    inputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	112	None	replace
23	[BUG]  [BUGGY]  node.framework.ComparisonFailure:  null;  outputStartPosition  =  outputEndPosition;  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  node.framework.ComparisonFailure:  null;  outputStartPosition  =  outputEndPosition;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	node.framework.ComparisonFailure:  null;  outputStartPosition  =  outputEndPosition;	          junit.framework.ComparisonFailure:    null;    outputStartPosition    =    outputEndPosition;    	non-compiled	[CE]  not  a  statement	77	None	replace
24	[BUG]  [BUGGY]  Node.ComparisonFailure:  null;  outputStartPosition  =  outputEndPosition;  [CE]  not  a  statement  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  Node.ComparisonFailure:  null;  outputStartPosition  =  outputEndPosition;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	Node.ComparisonFailure:  null;  outputStartPosition  =  outputEndPosition;	          junit.framework.ComparisonFailure:    null;    outputStartPosition    =    outputEndPosition;    	non-compiled	[CE]  not  a  statement	77	None	replace
25	[BUG]  [BUGGY]  FilePosition  outputStartPosition  =  outputEndPosition;  [CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  FilePosition  outputStartPosition  =  outputEndPosition;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	FilePosition  outputStartPosition  =  outputEndPosition;	          junit.framework.ComparisonFailure:    null;    outputStartPosition    =    outputEndPosition;    	non-compiled	[CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	77	None	replace
26	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  null;  outputEndPosition  =  outputStartPosition;  [CE]  not  a  statement  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  null;  outputEndPosition  =  outputStartPosition;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  null;  outputEndPosition  =  outputStartPosition;	          junit.framework.ComparisonFailure:    null;    outputStartPosition    =    outputEndPosition;    	non-compiled	[CE]  not  a  statement	77	None	replace
27	[BUG]  [BUGGY]  Tasks.ComparisonFailure:  null;  outputStartPosition  =  outputEndPosition;  [CE]  not  a  statement  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  Tasks.ComparisonFailure:  null;  outputStartPosition  =  outputEndPosition;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	Tasks.ComparisonFailure:  null;  outputStartPosition  =  outputEndPosition;	          junit.framework.ComparisonFailure:    null;    outputStartPosition    =    outputEndPosition;    	non-compiled	[CE]  not  a  statement	77	None	replace
28	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  null  expected;  outputStartPosition  =  outputEndPosition;  [CE]  not  a  statement  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  null  expected;  outputStartPosition  =  outputEndPosition;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  null  expected;  outputStartPosition  =  outputEndPosition;	          junit.framework.ComparisonFailure:    null;    outputStartPosition    =    outputEndPosition;    	non-compiled	[CE]  not  a  statement	77	None	replace
29	[BUG]  [BUGGY]  FilePosition  outputEndPosition  =  sourceFile.getLineno();  [CE]  variable  outputEndPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  FilePosition  outputEndPosition  =  sourceFile.getLineno();  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	FilePosition  outputEndPosition  =  sourceFile.getLineno();	  FilePosition    outputStartPosition    =    sourceFile.getLineno();    	non-compiled	[CE]  variable  outputEndPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	14	None	replace
30	[BUG]  [BUGGY]  FilePosition  outputEndPosition  =  node.getLineno();  [CE]  variable  outputEndPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  FilePosition  outputEndPosition  =  node.getLineno();  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	FilePosition  outputEndPosition  =  node.getLineno();	  FilePosition    outputStartPosition    =    sourceFile.getLineno();    	non-compiled	[CE]  variable  outputEndPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	14	None	replace
31	[BUG]  [BUGGY]  FilePosition  outputStartPosition  =  sourceFile.getLineno()  -  1;  [CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  FilePosition  outputStartPosition  =  sourceFile.getLineno()  -  1;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	FilePosition  outputStartPosition  =  sourceFile.getLineno()  -  1;	  FilePosition    outputStartPosition    =    sourceFile.getLineno();    	non-compiled	[CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	14	None	replace
32	[BUG]  [BUGGY]  FilePosition  outputStartPosition  =  sourceFile.getLineno()  +  1;  [CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  FilePosition  outputStartPosition  =  sourceFile.getLineno()  +  1;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	FilePosition  outputStartPosition  =  sourceFile.getLineno()  +  1;	  FilePosition    outputStartPosition    =    sourceFile.getLineno();    	non-compiled	[CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	14	None	replace
33	[BUG]  [BUGGY]  FilePosition  outputStartPosition  =  sourceFile.getEndPosition();  [CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  FilePosition  outputStartPosition  =  sourceFile.getEndPosition();  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	FilePosition  outputStartPosition  =  sourceFile.getEndPosition();	  FilePosition    outputStartPosition    =    sourceFile.getLineno();    	non-compiled	[CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	14	None	replace
34	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  generator);  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  generator);	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile,    outputEndPosition);    	non-compiled	[CE]  not  a  statement	12	None	replace
35	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputStartPosition,  outputEndPosition);  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputStartPosition,  outputEndPosition);	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile,    outputEndPosition);    	non-compiled	[CE]  not  a  statement	12	None	replace
36	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  sourceFile.length());  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  sourceFile.length());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  sourceFile.length());	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile,    outputEndPosition);    	non-compiled	[CE]  not  a  statement	12	None	replace
37	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  sourceLocationFixupCache);  [CE]  not  a  statement  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  sourceLocationFixupCache);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  sourceLocationFixupCache);	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile,    outputEndPosition);    	non-compiled	[CE]  not  a  statement	12	None	replace
38	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  sourceFile.getLineno());  [CE]  not  a  statement  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  sourceFile.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  sourceFile.getLineno());	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile,    outputEndPosition);    	non-compiled	[CE]  not  a  statement	12	None	replace
39	[BUG]  [BUGGY]  Node  originalName  =  node.getProp(Node.ORIGINALNAME_PROP,  sourceFile);  [CE]  method  getProp  in  class  Node  cannot  be  applied  to  given  types;  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  Node  originalName  =  node.getProp(Node.ORIGINALNAME_PROP,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	Node  originalName  =  node.getProp(Node.ORIGINALNAME_PROP,  sourceFile);	  Node    originalName    =    node.getProp(Node.ORIGINALNAME_PROP);    	non-compiled	[CE]  method  getProp  in  class  Node  cannot  be  applied  to  given  types;	106	None	replace
40	[BUG]  [BUGGY]  Node  originalName  =  node.getProp(Node.ORIGINALNAME_PROP,  sourceFile.getLineno());  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  Node  originalName  =  node.getProp(Node.ORIGINALNAME_PROP,  sourceFile.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	Node  originalName  =  node.getProp(Node.ORIGINALNAME_PROP,  sourceFile.getLineno());	  Node    originalName    =    node.getProp(Node.ORIGINALNAME_PROP);    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
41	[BUG]  [BUGGY]  Node  originalName  =  sourceFile.getProp(Node.ORIGINALNAME_PROP);  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  Node  originalName  =  sourceFile.getProp(Node.ORIGINALNAME_PROP);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	Node  originalName  =  sourceFile.getProp(Node.ORIGINALNAME_PROP);	  Node    originalName    =    node.getProp(Node.ORIGINALNAME_PROP);    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
42	[BUG]  [BUGGY]  Node  originalName  =  node.getProp(Node.ORIGINALNAME_PROP,  outputEndPosition);  [CE]  method  getProp  in  class  Node  cannot  be  applied  to  given  types;  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  Node  originalName  =  node.getProp(Node.ORIGINALNAME_PROP,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	Node  originalName  =  node.getProp(Node.ORIGINALNAME_PROP,  outputEndPosition);	  Node    originalName    =    node.getProp(Node.ORIGINALNAME_PROP);    	non-compiled	[CE]  method  getProp  in  class  Node  cannot  be  applied  to  given  types;	106	None	replace
43	[BUG]  [BUGGY]  Node  originalName  =  node.getProp(Node.ORIGINALNAME_PROP)+  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  Node  originalName  =  node.getProp(Node.ORIGINALNAME_PROP)+  1;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	Node  originalName  =  node.getProp(Node.ORIGINALNAME_PROP)+  1;	  Node    originalName    =    node.getProp(Node.ORIGINALNAME_PROP);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	106	None	replace
44	[BUG]  [BUGGY]  Node  originalName  =  node.getProp(Node.ORIGINALNAME_PROP,  sourceFile.length());  [CE]  method  getProp  in  class  Node  cannot  be  applied  to  given  types;  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  Node  originalName  =  node.getProp(Node.ORIGINALNAME_PROP,  sourceFile.length());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	Node  originalName  =  node.getProp(Node.ORIGINALNAME_PROP,  sourceFile.length());	  Node    originalName    =    node.getProp(Node.ORIGINALNAME_PROP);    	non-compiled	[CE]  method  getProp  in  class  Node  cannot  be  applied  to  given  types;	106	None	replace
45	[BUG]  [BUGGY]  FilePosition  outputEndPosition:  junit.framework.ComparisonFailure;  [CE]  ';'  expected  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  FilePosition  outputEndPosition:  junit.framework.ComparisonFailure;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	FilePosition  outputEndPosition:  junit.framework.ComparisonFailure;	          junit.framework.ComparisonFailure:    outputEndPosition;    	non-compiled	[CE]  ';'  expected	73	None	replace
46	[BUG]  [BUGGY]  FilePosition  outputEndPosition  =  junit.framework.ComparisonFailure;  [CE]  variable  outputEndPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  FilePosition  outputEndPosition  =  junit.framework.ComparisonFailure;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	FilePosition  outputEndPosition  =  junit.framework.ComparisonFailure;	          junit.framework.ComparisonFailure:    outputEndPosition;    	non-compiled	[CE]  variable  outputEndPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	73	None	replace
47	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  outputStartPosition;  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  outputStartPosition;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  outputStartPosition;	          junit.framework.ComparisonFailure:    outputEndPosition;    	non-compiled	[CE]  not  a  statement	73	None	replace
48	[BUG]  [BUGGY]  Tasks.ComparisonFailure:  outputEndPosition;  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  Tasks.ComparisonFailure:  outputEndPosition;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	Tasks.ComparisonFailure:  outputEndPosition;	          junit.framework.ComparisonFailure:    outputEndPosition;    	non-compiled	[CE]  not  a  statement	73	None	replace
49	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  generator,  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  generator,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.toString(),  generator,  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    generator);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	50	None	replace
50	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  generator,  outputStartPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  generator,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.toString(),  generator,  outputStartPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    generator);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	50	None	replace
51	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(generator.toString(),  sourceFile);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(generator.toString(),  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(generator.toString(),  sourceFile);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    generator);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	50	None	replace
52	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputStartPosition,  generator);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputStartPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputStartPosition,  generator);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    generator);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	50	None	replace
53	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition,  generator);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition,  generator);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    generator);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	50	None	replace
54	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  node,  generator);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  node,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.toString(),  node,  generator);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    generator);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	50	None	replace
55	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  generator,  inputStartPosition);  [CE]  cannot  find  symbol  inputStartPosition  [FE]                          AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  generator,  inputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.toString(),  generator,  inputStartPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    generator);    	non-compiled	[CE]  cannot  find  symbol  inputStartPosition	50	None	replace
56	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated  [FE]              AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator    generator    =    new    SourceMapGenerator(sourceFile.toString());    sourceFile    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated	84	None	replace
57	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	add	if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator    generator    =    new    SourceMapGenerator(sourceFile.toString());    sourceFile    =    fixupSourceLocation(sourceFile.toString());    	compilable	  [FE]  AssertionFailedError  	84	16	replace
58	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator    generator    =    new    SourceMapGenerator(sourceFile.toString());    sourceFile    =    fixupSourceLocation(sourceFile.toString());    	compilable	  [FE]  AssertionFailedError  	84	16	replace
59	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.to  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.to  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.to	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator    generator    =    new    SourceMapGenerator(sourceFile.toString());    sourceFile    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  ')'  expected	84	None	replace
60	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	add	if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator    generator    =    new    SourceMapGenerator(sourceFile.toString());    sourceFile    =    fixupSourceLocation(sourceFile.toString());    	compilable	  [FE]  AssertionFailedError  	84	16	replace
61	[BUG]  [BUGGY]  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator    generator    =    new    SourceMapGenerator(sourceFile.toString());    sourceFile    =    fixupSourceLocation(sourceFile.toString());    	compilable	  [FE]  AssertionFailedError  	84	16	replace
62	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    inputStartPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	86	None	replace
63	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  inputEndPosition);  [CE]  cannot  find  symbol  inputEndPosition  [FE]          AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  inputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.toString(),  inputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    inputStartPosition);    	non-compiled	[CE]  cannot  find  symbol  inputEndPosition	86	None	replace
64	[BUG]  [BUGGY]  SourceFile  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]            AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceFile  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceFile  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    inputStartPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	86	None	replace
65	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputPosition);  [CE]  cannot  find  symbol  outputPosition  [FE]              AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    inputStartPosition);    	non-compiled	[CE]  cannot  find  symbol  outputPosition	86	None	replace
66	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile,  outputEndPosition);	  sourceFile    =    calculateSourceLocation(sourceFile,    inputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
67	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(node,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(node,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(node,  outputEndPosition);	  sourceFile    =    calculateSourceLocation(sourceFile,    inputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
68	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.toString(),  outputEndPosition);  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.toString(),  outputEndPosition);  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.toString(),  outputEndPosition);  sourceFile  =  fixupSourceLocation(sourceFile.toString());	  sourceFile    =    fixupSourceLocation(sourceFile.toString()    +    1);    	non-compiled	[CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated	52	None	replace
69	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  generator);  [CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  generator);	  sourceFile    =    fixupSourceLocation(sourceFile.toString()    +    1);    	non-compiled	[CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated	52	None	replace
70	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  [CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);	  sourceFile    =    fixupSourceLocation(sourceFile.toString()    +    1);    	non-compiled	[CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated	52	None	replace
71	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.toString(),  outputStartPosition);  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.toString(),  outputStartPosition);  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.toString(),  outputStartPosition);  sourceFile  =  fixupSourceLocation(sourceFile.toString());	  sourceFile    =    fixupSourceLocation(sourceFile.toString()    +    1);    	non-compiled	[CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated	52	None	replace
72	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  outputStartPosition.cloneTree());  [CE]  cannot  find  symbol  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  outputStartPosition.cloneTree());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile,  outputStartPosition.cloneTree());	  sourceFile    =    calculateSourceLocation(sourceFile.cloneTree());    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
73	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  generator.cloneTree());  [CE]  cannot  find  symbol  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  generator.cloneTree());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile,  generator.cloneTree());	  sourceFile    =    calculateSourceLocation(sourceFile.cloneTree());    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
74	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  outputEndPosition.cloneTree());  [CE]  cannot  find  symbol  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  outputEndPosition.cloneTree());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile,  outputEndPosition.cloneTree());	  sourceFile    =    calculateSourceLocation(sourceFile.cloneTree());    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
75	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  node.cloneTree());  [CE]  cannot  find  symbol  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  node.cloneTree());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile,  node.cloneTree());	  sourceFile    =    calculateSourceLocation(sourceFile.cloneTree());    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
76	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile.cloneTree(),  generator);  [CE]  cannot  find  symbol  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile.cloneTree(),  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile.cloneTree(),  generator);	  sourceFile    =    calculateSourceLocation(sourceFile.cloneTree());    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
77	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile.cloneTree(),  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile.cloneTree(),  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile.cloneTree(),  outputEndPosition);	  sourceFile    =    calculateSourceLocation(sourceFile.cloneTree());    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
78	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile.cloneTree(),  node);  [CE]  cannot  find  symbol  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile.cloneTree(),  node);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile.cloneTree(),  node);	  sourceFile    =    calculateSourceLocation(sourceFile.cloneTree());    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
79	[BUG]  [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  generator);  [CE]  cannot  find  symbol  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  generator);	  SourceMap    <    K,    V>    sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
80	[BUG]  [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  junit.framework.fixupSourceLocation(sourceFile,  outputStartPosition);  [CE]  cannot  find  symbol  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  junit.framework.fixupSourceLocation(sourceFile,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  <  K,  V>  sourceFile  =  junit.framework.fixupSourceLocation(sourceFile,  outputStartPosition);	  SourceMap    <    K,    V>    sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
81	[BUG]  [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  resolveSourceLocation(sourceFile,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  resolveSourceLocation(sourceFile,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  <  K,  V>  sourceFile  =  resolveSourceLocation(sourceFile,  outputEndPosition);	  SourceMap    <    K,    V>    sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
82	[BUG]  [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(node,  outputStartPosition);  [CE]  cannot  find  symbol  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(node,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(node,  outputStartPosition);	  SourceMap    <    K,    V>    sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
83	[BUG]  [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  fixedupSourceLocation(sourceFile,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  fixedupSourceLocation(sourceFile,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  <  K,  V>  sourceFile  =  fixedupSourceLocation(sourceFile,  outputEndPosition);	  SourceMap    <    K,    V>    sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
84	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  null  expected:  <...t ":0  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  null  expected:  <...t ":0  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  null  expected:  <...t ":0	          junit.framework.ComparisonFailure:    null    expected:    <...t   ":1    	non-compiled	[CE]  not  a  statement	28	None	replace
85	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  null  expected:  <...t. ":1  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  null  expected:  <...t. ":1  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  null  expected:  <...t. ":1	          junit.framework.ComparisonFailure:    null    expected:    <...t   ":1    	non-compiled	[CE]  not  a  statement	28	None	replace
86	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  null  expected:  <...t   ": "  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  null  expected:  <...t   ": "  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  null  expected:  <...t   ": "	          junit.framework.ComparisonFailure:    null    expected:    <...t   ":1    	non-compiled	[CE]  not  a  statement	28	None	replace
87	[BUG]  [BUGGY]  sourceFile  =  fixupSource(sourceFile,  generator,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSource(sourceFile,  generator,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSource(sourceFile,  generator,  outputEndPosition);	  sourceFile    =    fixupSource(sourceFile,    generator);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
88	[BUG]  [BUGGY]  sourceFile  =  fixupSource(sourceFile,  generator,  outputStartPosition);  [CE]  cannot  find  symbol  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSource(sourceFile,  generator,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSource(sourceFile,  generator,  outputStartPosition);	  sourceFile    =    fixupSource(sourceFile,    generator);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
89	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  fixupSource(sourceFile,  sourceLocationFixupCache);  [CE]  cannot  find  symbol  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  fixupSource(sourceFile,  sourceLocationFixupCache);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  fixupSource(sourceFile,  sourceLocationFixupCache);	  sourceFile    =    fixupSource(sourceFile,    generator);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
90	[BUG]  [BUGGY]  sourceFile  =  fixupSource(sourceFile,  generator,  inputStartPosition);  [CE]  cannot  find  symbol  inputStartPosition  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSource(sourceFile,  generator,  inputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSource(sourceFile,  generator,  inputStartPosition);	  sourceFile    =    fixupSource(sourceFile,    generator);    	non-compiled	[CE]  cannot  find  symbol  inputStartPosition	55	None	replace
91	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure;  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [CE]  package  junit  does  not  exist  [FE]            AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure;  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  junit.framework.ComparisonFailure;  sourceFile  =  fixupSourceLocation(sourceFile.toString());	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator    generator    =    junit.framework.ComparisonFailure;    sourceFile    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  package  junit  does  not  exist	83	None	replace
92	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  node.framework.ComparisonFailure;  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [CE]  cannot  find  symbol  framework  [FE]              AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  node.framework.ComparisonFailure;  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  node.framework.ComparisonFailure;  sourceFile  =  fixupSourceLocation(sourceFile.toString());	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator    generator    =    junit.framework.ComparisonFailure;    sourceFile    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  cannot  find  symbol  framework	83	None	replace
93	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  node.getSourceMap();  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  node.getSourceMap();  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  node.getSourceMap();  sourceFile  =  fixupSourceLocation(sourceFile.toString());	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator    generator    =    junit.framework.ComparisonFailure;    sourceFile    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
94	[BUG]  [BUGGY]  sourceFile  =  resolveSource(sourceFile,  outputStartPosition,  generator);  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  resolveSource(sourceFile,  outputStartPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  resolveSource(sourceFile,  outputStartPosition,  generator);	  sourceFile    =    resolveSource(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
95	[BUG]  [BUGGY]  sourceFile  =  resolveSource(node,  outputStartPosition);  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  resolveSource(node,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  resolveSource(node,  outputStartPosition);	  sourceFile    =    resolveSource(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
96	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  createSourceMapping(sourceFile,  outputStartPosition);  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  createSourceMapping(sourceFile,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  createSourceMapping(sourceFile,  outputStartPosition);	  sourceFile    =    resolveSource(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
97	[BUG]  [BUGGY]  file  =  resolveSource(sourceFile,  outputEndPosition);  [CE]  cannot  find  symbol  file  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  file  =  resolveSource(sourceFile,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	file  =  resolveSource(sourceFile,  outputEndPosition);	  sourceFile    =    resolveSource(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol  file	70	None	replace
98	[BUG]  [BUGGY]  sourceFile  =  resolveSource(sourceFile,  outputStartPosition,  inputEndPosition);  [CE]  cannot  find  symbol  inputEndPosition  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  resolveSource(sourceFile,  outputStartPosition,  inputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  resolveSource(sourceFile,  outputStartPosition,  inputEndPosition);	  sourceFile    =    resolveSource(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol  inputEndPosition	70	None	replace
99	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile.length);  [CE]  cannot  find  symbol  length  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile.length);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile.length);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    sourceFile.length);    	non-compiled	[CE]  cannot  find  symbol  length	71	None	replace
100	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  node.length);  [CE]  cannot  find  symbol  length  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  node.length);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  node.length);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    sourceFile.length);    	non-compiled	[CE]  cannot  find  symbol  length	71	None	replace
101	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length  -  1);  [CE]  cannot  find  symbol  length  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length  -  1);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length  -  1);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    sourceFile.length);    	non-compiled	[CE]  cannot  find  symbol  length	71	None	replace
102	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  node.getLineno());  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  node.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  node.getLineno());	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    sourceFile.length);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	71	None	replace
103	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputStartPosition.length);  [CE]  cannot  find  symbol  length  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputStartPosition.length);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputStartPosition.length);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    sourceFile.length);    	non-compiled	[CE]  cannot  find  symbol  length	71	None	replace
104	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  generator.length);  [CE]  cannot  find  symbol  length  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  generator.length);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  generator.length);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    sourceFile.length);    	non-compiled	[CE]  cannot  find  symbol  length	71	None	replace
105	[BUG]  [BUGGY]  FilePosition  outputStartPosition  =  node.getLineno()  -  1;  [CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  FilePosition  outputStartPosition  =  node.getLineno()  -  1;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	FilePosition  outputStartPosition  =  node.getLineno()  -  1;	  FilePosition    outputStartPosition    =    node.getLineno();    	non-compiled	[CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	13	None	replace
106	[BUG]  [BUGGY]  FilePosition  outputStartPosition  =  node.getLineno()  +  1;  [CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  FilePosition  outputStartPosition  =  node.getLineno()  +  1;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	FilePosition  outputStartPosition  =  node.getLineno()  +  1;	  FilePosition    outputStartPosition    =    node.getLineno();    	non-compiled	[CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	13	None	replace
107	[BUG]  [BUGGY]  FilePosition  outputStartPosition  =  node.getEndPosition();  [CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  FilePosition  outputStartPosition  =  node.getEndPosition();  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	FilePosition  outputStartPosition  =  node.getEndPosition();	  FilePosition    outputStartPosition    =    node.getLineno();    	non-compiled	[CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	13	None	replace
108	[BUG]  [BUGGY]  FilePosition  outputStartPosition  =  node.getSourceFile();  [CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  FilePosition  outputStartPosition  =  node.getSourceFile();  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	FilePosition  outputStartPosition  =  node.getSourceFile();	  FilePosition    outputStartPosition    =    node.getLineno();    	non-compiled	[CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	13	None	replace
109	[BUG]  [BUGGY]  FilePosition  outputStartPosition  =  node.getSourcePosition();  [CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  FilePosition  outputStartPosition  =  node.getSourcePosition();  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	FilePosition  outputStartPosition  =  node.getSourcePosition();	  FilePosition    outputStartPosition    =    node.getLineno();    	non-compiled	[CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	13	None	replace
110	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  node.getLineno());  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  node.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  node.getLineno());	  sourceFile    =    fixupSourceLocation(sourceFile,    junit.getLineno());    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	100	None	replace
111	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  generator.getLineno());  [CE]  cannot  find  symbol  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  generator.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  generator.getLineno());	  sourceFile    =    fixupSourceLocation(sourceFile,    junit.getLineno());    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
112	[BUG]  [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceEndPosition);  [CE]  cannot  find  symbol  sourceEndPosition  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceEndPosition);	  SourceMap    generator    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  sourceEndPosition	69	None	replace
113	[BUG]  [BUGGY]  SourceMap  generator  =  fixupSourceLocation(node,  sourceFile,  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  generator  =  fixupSourceLocation(node,  sourceFile,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  generator  =  fixupSourceLocation(node,  sourceFile,  outputEndPosition);	  SourceMap    generator    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	69	None	replace
114	[BUG]  [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length);  [CE]  cannot  find  symbol  length  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length);	  SourceMap    generator    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  length	69	None	replace
115	[BUG]  [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  node,  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  node,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  generator  =  fixupSourceLocation(sourceFile,  node,  outputEndPosition);	  SourceMap    generator    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	69	None	replace
116	[BUG]  [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.getLineno());  [CE]  cannot  find  symbol  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.getLineno());	  SourceMap    generator    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
117	[BUG]  [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length());  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length());	  SourceMap    generator    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	69	None	replace
118	[BUG]  [BUGGY]  Tasks.ComparisonFailure:  null  expected;  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  Tasks.ComparisonFailure:  null  expected;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	Tasks.ComparisonFailure:  null  expected;	  junit.framework.ComparisonFailure:    null    expected;    	non-compiled	[CE]  not  a  statement	11	None	replace
119	[BUG]  [BUGGY]  node.framework.ComparisonFailure:  null  expected;  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  node.framework.ComparisonFailure:  null  expected;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	node.framework.ComparisonFailure:  null  expected;	  junit.framework.ComparisonFailure:    null    expected;    	non-compiled	[CE]  not  a  statement	11	None	replace
120	[BUG]  [BUGGY]  Node.ComparisonFailure:  null  expected;  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  Node.ComparisonFailure:  null  expected;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	Node.ComparisonFailure:  null  expected;	  junit.framework.ComparisonFailure:    null    expected;    	non-compiled	[CE]  not  a  statement	11	None	replace
121	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  sourceLocationFixupCache);  [CE]  cannot  find  symbol  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  sourceLocationFixupCache);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  sourceLocationFixupCache);	  SourceMapGenerator    generator    =    FixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
122	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(node,  outputStartPosition);  [CE]  cannot  find  symbol  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(node,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  FixupSourceLocation(node,  outputStartPosition);	  SourceMapGenerator    generator    =    FixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
123	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  junit);  [CE]  cannot  find  symbol  junit  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  junit);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  junit);	  SourceMapGenerator    generator    =    FixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol  junit	62	None	replace
124	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  node);  [CE]  cannot  find  symbol  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  node);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  node);	  SourceMapGenerator    generator    =    FixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
125	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  junit.framework);  [CE]  cannot  find  symbol  junit  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  junit.framework);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  junit.framework);	  SourceMapGenerator    generator    =    FixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol  junit	62	None	replace
126	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  prefixMapping);  [CE]  cannot  find  symbol  prefixMapping  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  prefixMapping);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  prefixMapping);	  SourceMapGenerator    generator    =    FixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol  prefixMapping	62	None	replace
127	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile.length());  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile.length());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile.length());	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    sourceFile.length());    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	91	None	replace
128	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length(),  generator);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length(),  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length(),  generator);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    sourceFile.length());    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	91	None	replace
129	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length()  -  1);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length()  -  1);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length()  -  1);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    sourceFile.length());    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	91	None	replace
130	[BUG]  [BUGGY]  file  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile.length());  [CE]  cannot  find  symbol  file  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  file  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile.length());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	file  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile.length());	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    sourceFile.length());    	non-compiled	[CE]  cannot  find  symbol  file	91	None	replace
131	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node,  outputEndPosition.length());  [CE]  cannot  find  symbol  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node,  outputEndPosition.length());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  node,  outputEndPosition.length());	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    sourceFile.length());    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
132	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length()  -  2);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length()  -  2);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length()  -  2);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    sourceFile.length());    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	91	None	replace
133	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  inputStartPosition,  sourceFile.length());  [CE]  cannot  find  symbol  inputStartPosition  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  inputStartPosition,  sourceFile.length());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  inputStartPosition,  sourceFile.length());	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    sourceFile.length());    	non-compiled	[CE]  cannot  find  symbol  inputStartPosition	91	None	replace
134	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  generator.getLineno());  [CE]  cannot  find  symbol  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  generator.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  generator.getLineno());	  sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition.getLineno());    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
135	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  node.getLineno());  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  node.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  node.getLineno());	  sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition.getLineno());    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	30	None	replace
136	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition.getLineno(),  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition.getLineno(),  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition.getLineno(),  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition.getLineno());    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
137	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition.getLineno(),  generator);  [CE]  cannot  find  symbol  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition.getLineno(),  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition.getLineno(),  generator);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition.getLineno());    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
138	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(node,  outputStartPosition.getLineno());  [CE]  cannot  find  symbol  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(node,  outputStartPosition.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(node,  outputStartPosition.getLineno());	  sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition.getLineno());    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
139	[BUG]  [BUGGY]  Node.ComparisonFailure:  null;  outputEndPosition  =  outputEndPosition;  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  Node.ComparisonFailure:  null;  outputEndPosition  =  outputEndPosition;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	Node.ComparisonFailure:  null;  outputEndPosition  =  outputEndPosition;	          junit.framework.ComparisonFailure:    null;    outputEndPosition    =    outputEndPosition;    	non-compiled	[CE]  not  a  statement	75	None	replace
140	[BUG]  [BUGGY]  node.framework.ComparisonFailure:  null;  outputEndPosition  =  outputStartPosition;  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  node.framework.ComparisonFailure:  null;  outputEndPosition  =  outputStartPosition;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	node.framework.ComparisonFailure:  null;  outputEndPosition  =  outputStartPosition;	          junit.framework.ComparisonFailure:    null;    outputEndPosition    =    outputEndPosition;    	non-compiled	[CE]  not  a  statement	75	None	replace
141	[BUG]  [BUGGY]  node.framework.ComparisonFailure:  null;  outputEndPosition  =  outputEndPosition;  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  node.framework.ComparisonFailure:  null;  outputEndPosition  =  outputEndPosition;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	node.framework.ComparisonFailure:  null;  outputEndPosition  =  outputEndPosition;	          junit.framework.ComparisonFailure:    null;    outputEndPosition    =    outputEndPosition;    	non-compiled	[CE]  not  a  statement	75	None	replace
142	[BUG]  [BUGGY]  FilePosition  outputEndPosition  =  outputEndPosition;  [CE]  variable  outputEndPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  FilePosition  outputEndPosition  =  outputEndPosition;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	FilePosition  outputEndPosition  =  outputEndPosition;	          junit.framework.ComparisonFailure:    null;    outputEndPosition    =    outputEndPosition;    	non-compiled	[CE]  variable  outputEndPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	75	None	replace
143	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure(sourceFile);  [CE]  package  junit  does  not  exist  [FE]          AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure(sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  junit.framework.ComparisonFailure(sourceFile);	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator    generator    =    junit.framework.ComparisonFailure(sourceFile);    	non-compiled	[CE]  package  junit  does  not  exist	82	None	replace
144	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  node.framework.ComparisonFailure(sourceFile);  [CE]  cannot  find  symbol  framework  [FE]            AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  node.framework.ComparisonFailure(sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  node.framework.ComparisonFailure(sourceFile);	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator    generator    =    junit.framework.ComparisonFailure(sourceFile);    	non-compiled	[CE]  cannot  find  symbol  framework	82	None	replace
145	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure(sourceFile,  outputEndPosition);  [CE]  package  junit  does  not  exist  [FE]              AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure(sourceFile,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure(sourceFile,  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator    generator    =    junit.framework.ComparisonFailure(sourceFile);    	non-compiled	[CE]  package  junit  does  not  exist	82	None	replace
146	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  outputStartPosition,  outputEndPosition);  [CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  outputStartPosition,  outputEndPosition);	  SourceMapGenerator    generator    =    new    SourceMapGenerator(sourceFile,    outputEndPosition);    	non-compiled	[CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated	27	None	replace
147	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  outputEndPosition,  sourceLocationFixupCache);  [CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  outputEndPosition,  sourceLocationFixupCache);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  outputEndPosition,  sourceLocationFixupCache);	  SourceMapGenerator    generator    =    new    SourceMapGenerator(sourceFile,    outputEndPosition);    	non-compiled	[CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated	27	None	replace
148	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  outputStartPosition,  sourceEndPosition);  [CE]  cannot  find  symbol  sourceEndPosition  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  outputStartPosition,  sourceEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  outputStartPosition,  sourceEndPosition);	  SourceMapGenerator    generator    =    new    SourceMapGenerator(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  sourceEndPosition	27	None	replace
149	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  sourceLocationFixupCache);  [CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  sourceLocationFixupCache);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  sourceLocationFixupCache);	  SourceMapGenerator    generator    =    new    SourceMapGenerator(sourceFile,    outputEndPosition);    	non-compiled	[CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated	27	None	replace
150	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  outputEndPosition,  sourceFile.getLineno());  [CE]  cannot  find  symbol  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  outputEndPosition,  sourceFile.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  outputEndPosition,  sourceFile.getLineno());	  SourceMapGenerator    generator    =    new    SourceMapGenerator(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
151	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  node.getLineno());  [CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  node.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  node.getLineno());	  SourceMapGenerator    generator    =    new    SourceMapGenerator(sourceFile,    outputEndPosition);    	non-compiled	[CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated	27	None	replace
152	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	add	sourceFile        =        fixupSourceLocation(sourceFile.toString());        sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());	  	compilable	  [FE]  AssertionFailedError  	36	16	add
153	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());	  	compilable	  [FE]  AssertionFailedError  	36	16	add
154	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]      AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        sourceFile    =    fixupSourceLocation(sourceFile.toString());    Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	36	None	add
155	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  file  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [CE]  cannot  find  symbol  file  [FE]        AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  file  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        sourceFile    =    fixupSourceLocation(sourceFile.toString());    file  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());	  	non-compiled	[CE]  cannot  find  symbol  file	36	None	add
156	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  FilePosition  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]          AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  FilePosition  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        sourceFile    =    fixupSourceLocation(sourceFile.toString());    FilePosition  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	36	None	add
157	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  String  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]            AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  String  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        sourceFile    =    fixupSourceLocation(sourceFile.toString());    String  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	36	None	add
158	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  node.getSourceMapGenerator();  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  node.getSourceMapGenerator();  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator  generator  =  node.getSourceMapGenerator();  sourceFile  =  fixupSourceLocation(sourceFile.toString());	  	non-compiled	[CE]  cannot  find  symbol	36	None	add
159	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(node.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	add	sourceFile        =        fixupSourceLocation(sourceFile.toString());        sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(node.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	36	16	add
160	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(node.toString());  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(node.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(node.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	36	16	add
161	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	add	sourceFile        =        fixupSourceLocation(sourceFile.toString());        sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());	  	compilable	  [FE]  AssertionFailedError  	36	16	add
162	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [FE]  AssertionFailedError  [FE]                  AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());	  	compilable	  [FE]  AssertionFailedError  	36	16	add
163	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  generator);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  generator);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	4	None	replace
164	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node,  outputStartPosition,  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node,  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  node,  outputStartPosition,  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	4	None	replace
165	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  prefix);  [CE]  cannot  find  symbol  prefix  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  prefix);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  prefix);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  prefix	4	None	replace
166	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  prefixMapping);  [CE]  cannot  find  symbol  prefixMapping  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  prefixMapping);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  prefixMapping);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  prefixMapping	4	None	replace
167	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  prefixMap);  [CE]  cannot  find  symbol  prefixMap  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  prefixMap);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  prefixMap);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  prefixMap	4	None	replace
168	[BUG]  [BUGGY]  sourceFile  =  fixupSource(sourceFile,  node.getLineno());  [CE]  cannot  find  symbol  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSource(sourceFile,  node.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSource(sourceFile,  node.getLineno());	  sourceFile    =    fixupSource(sourceFile.getLineno());    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
169	[BUG]  [BUGGY]  sourceFile  =  fixupSource(sourceFile,  outputStartPosition.getLineno());  [CE]  cannot  find  symbol  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSource(sourceFile,  outputStartPosition.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSource(sourceFile,  outputStartPosition.getLineno());	  sourceFile    =    fixupSource(sourceFile.getLineno());    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
170	[BUG]  [BUGGY]  sourceFile  =  fixupSource(sourceFile.getLineno(),  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSource(sourceFile.getLineno(),  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSource(sourceFile.getLineno(),  outputEndPosition);	  sourceFile    =    fixupSource(sourceFile.getLineno());    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
171	[BUG]  [BUGGY]  sourceFile  =  fixupSource(sourceFile,  outputEndPosition.getLineno());  [CE]  cannot  find  symbol  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSource(sourceFile,  outputEndPosition.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSource(sourceFile,  outputEndPosition.getLineno());	  sourceFile    =    fixupSource(sourceFile.getLineno());    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
172	[BUG]  [BUGGY]  sourceFile  =  fixupSource(sourceFile.getLineno(),  outputStartPosition);  [CE]  cannot  find  symbol  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSource(sourceFile.getLineno(),  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSource(sourceFile.getLineno(),  outputStartPosition);	  sourceFile    =    fixupSource(sourceFile.getLineno());    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
173	[BUG]  [BUGGY]  sourceFile  =  fixupSource(sourceFile,  generator.getLineno());  [CE]  cannot  find  symbol  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSource(sourceFile,  generator.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSource(sourceFile,  generator.getLineno());	  sourceFile    =    fixupSource(sourceFile.getLineno());    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
174	[BUG]  [BUGGY]  sourceFile  =  fixupSource(node.getLineno());  [CE]  cannot  find  symbol  [FE]                                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSource(node.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSource(node.getLineno());	  sourceFile    =    fixupSource(sourceFile.getLineno());    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
175	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputStartPosition,  node);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputStartPosition,  node);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputStartPosition,  node);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    node);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	103	None	replace
176	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  node,  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  node,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.toString(),  node,  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    node);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	103	None	replace
177	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition,  node);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition,  node);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition,  node);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    node);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	103	None	replace
178	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  node,  outputStartPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  node,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.toString(),  node,  outputStartPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    node);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	103	None	replace
179	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(node.toString(),  sourceFile);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(node.toString(),  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(node.toString(),  sourceFile);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    node);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	103	None	replace
180	[BUG]  [BUGGY]  file  =  fixupSourceLocation(node,  outputStartPosition,  outputEndPosition);  [CE]  cannot  find  symbol  file  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  file  =  fixupSourceLocation(node,  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	file  =  fixupSourceLocation(node,  outputStartPosition,  outputEndPosition);	  sourceFile    =    fixupSourceLocation(node,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  file	3	None	replace
181	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(node,  outputEndPosition,  generator);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(node,  outputEndPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(node,  outputEndPosition,  generator);	  sourceFile    =    fixupSourceLocation(node,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	3	None	replace
182	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node.getName());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node.getName());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  node.getName());	  sourceFile    =    fixupSourceLocation(sourceFile.getName());    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
183	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  generator.getName());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  generator.getName());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  generator.getName());	  sourceFile    =    fixupSourceLocation(sourceFile.getName());    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
184	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition.getName());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition.getName());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition.getName());	  sourceFile    =    fixupSourceLocation(sourceFile.getName());    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
185	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition.getName());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition.getName());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition.getName());	  sourceFile    =    fixupSourceLocation(sourceFile.getName());    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
186	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.getName(),  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.getName(),  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.getName(),  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.getName());    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
187	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.getName(),  node);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.getName(),  node);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.getName(),  node);	  sourceFile    =    fixupSourceLocation(sourceFile.getName());    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
188	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.getName(),  outputStartPosition);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.getName(),  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.getName(),  outputStartPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.getName());    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
189	[BUG]  [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  node,  outputStartPosition,  outputEndPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  node,  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  node,  outputStartPosition,  outputEndPosition);	  SourceMap    sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	89	None	replace
190	[BUG]  [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  generator);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  generator);	  SourceMap    sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	89	None	replace
191	[BUG]  [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputStartPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputStartPosition);	  SourceMap    sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	89	None	replace
192	[BUG]  [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(node,  outputStartPosition,  outputEndPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(node,  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  fixupSourceLocation(node,  outputStartPosition,  outputEndPosition);	  SourceMap    sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	89	None	replace
193	[BUG]  [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile.length);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile.length);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile.length);	  SourceMap    sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	89	None	replace
194	[BUG]  [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  null);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  null);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  null);	  SourceMap    sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	89	None	replace
195	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node.getLineno(),  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node.getLineno(),  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  node.getLineno(),  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.getLineno(),    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	31	None	replace
196	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  outputStartPosition,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  outputStartPosition,  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.getLineno(),    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
197	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(node.getLineno(),  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(node.getLineno(),  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(node.getLineno(),  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.getLineno(),    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	31	None	replace
198	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  outputEndPosition,  generator);  [CE]  cannot  find  symbol  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  outputEndPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  outputEndPosition,  generator);	  sourceFile    =    fixupSourceLocation(sourceFile.getLineno(),    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
199	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(node.getLineno(),  outputStartPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(node.getLineno(),  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(node.getLineno(),  outputStartPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.getLineno(),    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	31	None	replace
200	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  outputEndPosition);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputEndPosition,    inputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
201	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  outputStartPosition);  [CE]  cannot  find  symbol  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  outputStartPosition);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputEndPosition,    inputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
202	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  outputLineno);  [CE]  cannot  find  symbol  outputLineno  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  outputLineno);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  outputLineno);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputEndPosition,    inputStartPosition);    	non-compiled	[CE]  cannot  find  symbol  outputLineno	79	None	replace
203	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  outputEndPosition  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  outputEndPosition  +  1);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  outputEndPosition  +  1);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputEndPosition,    inputStartPosition);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	79	None	replace
204	[BUG]  [BUGGY]  sourceFile  =  fixupSource(sourceFile,  node.framework.ComparisonFailure);  [CE]  cannot  find  symbol  framework  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSource(sourceFile,  node.framework.ComparisonFailure);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSource(sourceFile,  node.framework.ComparisonFailure);	  sourceFile    =    fixupSource(sourceFile,    junit.framework.ComparisonFailure);    	non-compiled	[CE]  cannot  find  symbol  framework	97	None	replace
205	[BUG]  [BUGGY]  sourceFile  =  fixupSource(sourceFile,  node.getComparisonFailure());  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSource(sourceFile,  node.getComparisonFailure());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSource(sourceFile,  node.getComparisonFailure());	  sourceFile    =    fixupSource(sourceFile,    junit.framework.ComparisonFailure);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
206	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(node,  outputStartPosition,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(node,  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(node,  outputStartPosition,  outputEndPosition);	  sourceFile    =    FixupSourceLocation(sourceFile,    node,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
207	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  node,  outputStartPosition);  [CE]  cannot  find  symbol  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  node,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(sourceFile,  node,  outputStartPosition);	  sourceFile    =    FixupSourceLocation(sourceFile,    node,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
208	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  node,  outputEndPosition,  generator);  [CE]  cannot  find  symbol  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  node,  outputEndPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(sourceFile,  node,  outputEndPosition,  generator);	  sourceFile    =    FixupSourceLocation(sourceFile,    node,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
209	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  node);  [CE]  cannot  find  symbol  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  node);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  node);	  sourceFile    =    FixupSourceLocation(sourceFile,    node,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
210	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  node,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  node,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  node,  outputEndPosition);	  sourceFile    =    FixupSourceLocation(sourceFile,    node,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
211	[BUG]  [BUGGY]  file  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [CE]  cannot  find  symbol  file  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  file  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	file  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);	  sourceFile    =    FixupSourceLocation(sourceFile,    node,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  file	93	None	replace
212	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition,  outputStartPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition,  outputStartPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    outputStartPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	48	None	replace
213	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition,  sourceFile);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition,  sourceFile);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    outputStartPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	48	None	replace
214	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node.toString(),  outputStartPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node.toString(),  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  node.toString(),  outputStartPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    outputStartPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	48	None	replace
215	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  generator.toString(),  outputStartPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  generator.toString(),  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  generator.toString(),  outputStartPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    outputStartPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	48	None	replace
216	[BUG]  [BUGGY]  sourceFile  =  resolveSource(sourceFile,  outputEndPosition,  generator);  [CE]  cannot  find  symbol  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  resolveSource(sourceFile,  outputEndPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  resolveSource(sourceFile,  outputEndPosition,  generator);	  sourceFile    =    resolveSource(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
217	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  createSourceMapping(sourceFile,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  createSourceMapping(sourceFile,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  createSourceMapping(sourceFile,  outputEndPosition);	  sourceFile    =    resolveSource(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
218	[BUG]  [BUGGY]  file  =  resolveSource(sourceFile,  outputStartPosition);  [CE]  cannot  find  symbol  file  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  file  =  resolveSource(sourceFile,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	file  =  resolveSource(sourceFile,  outputStartPosition);	  sourceFile    =    resolveSource(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  file	57	None	replace
219	[BUG]  [BUGGY]  sourceFile  =  resolveSource(node,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  resolveSource(node,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  resolveSource(node,  outputEndPosition);	  sourceFile    =    resolveSource(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
220	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(node.getLineno(),  node.getCharno());  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(node.getLineno(),  node.getCharno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(node.getLineno(),  node.getCharno());	  sourceFile    =    fixupSourceLocation(node.getLineno());    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	35	None	replace
221	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(node.getLineno(),  node.getEndPosition());  [CE]  cannot  find  symbol  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(node.getLineno(),  node.getEndPosition());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(node.getLineno(),  node.getEndPosition());	  sourceFile    =    fixupSourceLocation(node.getLineno());    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
222	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  node.getCharno());  [CE]  cannot  find  symbol  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  node.getCharno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  node.getCharno());	  sourceFile    =    fixupSourceLocation(node.getLineno());    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
223	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  getSourceMapping(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  getSourceMapping(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  getSourceMapping(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator    generator    =    getSourceMapping(sourceFile.toString());    sourceFile    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
224	[BUG]  [BUGGY]  sourceFile  =  getSourceMapping(sourceFile.toString());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  getSourceMapping(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  getSourceMapping(sourceFile.toString());	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator    generator    =    getSourceMapping(sourceFile.toString());    sourceFile    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
225	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  getSourceMapping(sourceFile.toString());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  getSourceMapping(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  getSourceMapping(sourceFile.toString());	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator    generator    =    getSourceMapping(sourceFile.toString());    sourceFile    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
226	[BUG]  [BUGGY]  SourceMapGenerator  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                      AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  sourceFile  =  fixupSourceLocation(sourceFile.toString());	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator    generator    =    getSourceMapping(sourceFile.toString());    sourceFile    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	85	None	replace
227	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  getSourceMapping(sourceFile.toString());  if(generator!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  getSourceMapping(sourceFile.toString());  if(generator!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  getSourceMapping(sourceFile.toString());  if(generator!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator    generator    =    getSourceMapping(sourceFile.toString());    sourceFile    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
228	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]    AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	40	None	add
229	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  String  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]      AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  String  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    String  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	40	None	add
230	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  FilePosition  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]        AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  FilePosition  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    FilePosition  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	40	None	add
231	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
232	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  String  originalName  =  (String)node.getProp(Node.ORIGINALNAME_PROP);  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [CE]  variable  originalName  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]            AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  String  originalName  =  (String)node.getProp(Node.ORIGINALNAME_PROP);  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    String  originalName  =  (String)node.getProp(Node.ORIGINALNAME_PROP);  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  	non-compiled	[CE]  variable  originalName  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	40	None	add
233	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  String  originalName  =  (String)node.getProp(Node.ORIGINALNAME_PROP);  [CE]  variable  originalName  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]              AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  String  originalName  =  (String)node.getProp(Node.ORIGINALNAME_PROP);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    String  originalName  =  (String)node.getProp(Node.ORIGINALNAME_PROP);	  	non-compiled	[CE]  variable  originalName  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	40	None	add
234	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	40	None	add
235	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  null;  generator.addMapping(sourceFile,  outputStartPosition,  sourceFile);  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  null;  generator.addMapping(sourceFile,  outputStartPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  null;  generator.addMapping(sourceFile,  outputStartPosition,  sourceFile);	          junit.framework.ComparisonFailure:    null;    generator.addMapping(sourceFile,    outputEndPosition,    sourceFile);    	non-compiled	[CE]  not  a  statement	76	None	replace
236	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  null;  generator.addMapping(sourceFile,  outputEndPosition,  node);  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  null;  generator.addMapping(sourceFile,  outputEndPosition,  node);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  null;  generator.addMapping(sourceFile,  outputEndPosition,  node);	          junit.framework.ComparisonFailure:    null;    generator.addMapping(sourceFile,    outputEndPosition,    sourceFile);    	non-compiled	[CE]  not  a  statement	76	None	replace
237	[BUG]  [BUGGY]  node.framework.ComparisonFailure:  null;  generator.addMapping(sourceFile,  outputEndPosition,  sourceFile);  [CE]  not  a  statement  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  node.framework.ComparisonFailure:  null;  generator.addMapping(sourceFile,  outputEndPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	node.framework.ComparisonFailure:  null;  generator.addMapping(sourceFile,  outputEndPosition,  sourceFile);	          junit.framework.ComparisonFailure:    null;    generator.addMapping(sourceFile,    outputEndPosition,    sourceFile);    	non-compiled	[CE]  not  a  statement	76	None	replace
238	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  null  expected;  generator.addMapping(sourceFile,  outputEndPosition,  sourceFile);  [CE]  not  a  statement  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  null  expected;  generator.addMapping(sourceFile,  outputEndPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  null  expected;  generator.addMapping(sourceFile,  outputEndPosition,  sourceFile);	          junit.framework.ComparisonFailure:    null;    generator.addMapping(sourceFile,    outputEndPosition,    sourceFile);    	non-compiled	[CE]  not  a  statement	76	None	replace
239	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  ComparisonFailure  :  null;  generator.addMapping(sourceFile,  outputEndPosition,  sourceFile);  }  [CE]  not  a  statement  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile!=  null)  {  ComparisonFailure  :  null;  generator.addMapping(sourceFile,  outputEndPosition,  sourceFile);  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile!=  null)  {  ComparisonFailure  :  null;  generator.addMapping(sourceFile,  outputEndPosition,  sourceFile);  }	          junit.framework.ComparisonFailure:    null;    generator.addMapping(sourceFile,    outputEndPosition,    sourceFile);    	non-compiled	[CE]  not  a  statement	76	None	replace
240	[BUG]  [BUGGY]  SourceMapGenerator.ComparisonFailure:  null;  generator.addMapping(sourceFile,  outputEndPosition,  sourceFile);  [CE]  not  a  statement  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator.ComparisonFailure:  null;  generator.addMapping(sourceFile,  outputEndPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator.ComparisonFailure:  null;  generator.addMapping(sourceFile,  outputEndPosition,  sourceFile);	          junit.framework.ComparisonFailure:    null;    generator.addMapping(sourceFile,    outputEndPosition,    sourceFile);    	non-compiled	[CE]  not  a  statement	76	None	replace
241	[BUG]  [BUGGY]  SourceFile  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceFile  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceFile  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputStartPosition,    inputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	95	None	replace
242	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition  +  1);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition  +  1);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputStartPosition,    inputEndPosition);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	95	None	replace
243	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  outputStartPosition,  sourceLocationFixupCache);  [CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  outputStartPosition,  sourceLocationFixupCache);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  outputStartPosition,  sourceLocationFixupCache);	  SourceMapGenerator    generator    =    new    SourceMapGenerator(sourceFile,    outputStartPosition);    	non-compiled	[CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated	61	None	replace
244	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  outputEndPosition,  sourceFile);  [CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  outputEndPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  outputEndPosition,  sourceFile);	  SourceMapGenerator    generator    =    new    SourceMapGenerator(sourceFile,    outputStartPosition);    	non-compiled	[CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated	61	None	replace
245	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(node,  outputStartPosition);  [CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(node,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  new  SourceMapGenerator(node,  outputStartPosition);	  SourceMapGenerator    generator    =    new    SourceMapGenerator(sourceFile,    outputStartPosition);    	non-compiled	[CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated	61	None	replace
246	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  sourceEndPosition);  [CE]  cannot  find  symbol  sourceEndPosition  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  sourceEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  sourceEndPosition);	  SourceMapGenerator    generator    =    new    SourceMapGenerator(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol  sourceEndPosition	61	None	replace
247	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	add	if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    	compilable	  [FE]  AssertionFailedError  	41	16	replace
248	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    	compilable	  [FE]  AssertionFailedError  	41	16	replace
249	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	add	if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	41	16	replace
250	[BUG]  [BUGGY]  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	41	16	replace
251	[BUG]  [BUGGY]  File  file  =  FixupSourceLocation(sourceFile,  outputStartPosition);  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  File  file  =  FixupSourceLocation(sourceFile,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	File  file  =  FixupSourceLocation(sourceFile,  outputStartPosition);	  file    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
252	[BUG]  [BUGGY]  file  =  FixupSourceLocation(sourceFile,  outputEndPosition,  generator);  [CE]  cannot  find  symbol  file  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  file  =  FixupSourceLocation(sourceFile,  outputEndPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	file  =  FixupSourceLocation(sourceFile,  outputEndPosition,  generator);	  file    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  file	60	None	replace
253	[BUG]  [BUGGY]  FilePosition  outputEndPosition  =  FixupSourceLocation(sourceFile,  outputEndPosition);  [CE]  variable  outputEndPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  FilePosition  outputEndPosition  =  FixupSourceLocation(sourceFile,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	FilePosition  outputEndPosition  =  FixupSourceLocation(sourceFile,  outputEndPosition);	  file    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  variable  outputEndPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	60	None	replace
254	[BUG]  [BUGGY]  File  file  =  FixupSourceLocation(sourceFile,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  File  file  =  FixupSourceLocation(sourceFile,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	File  file  =  FixupSourceLocation(sourceFile,  outputEndPosition);	  file    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
255	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition.getLineno());  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition.getLineno());	  sourceFile    =    fixupSourceLocation(sourceFile,    inputStartPosition.getLineno());    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
256	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  inputEndPosition.getLineno());  [CE]  cannot  find  symbol  inputEndPosition  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  inputEndPosition.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  inputEndPosition.getLineno());	  sourceFile    =    fixupSourceLocation(sourceFile,    inputStartPosition.getLineno());    	non-compiled	[CE]  cannot  find  symbol  inputEndPosition	68	None	replace
257	[BUG]  [BUGGY]  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]          AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    Node    sourceFile    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	38	None	replace
258	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	add	if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    Node    sourceFile    =    fixupSourceLocation(sourceFile.toString());    	compilable	  [FE]  AssertionFailedError  	38	16	replace
259	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    Node    sourceFile    =    fixupSourceLocation(sourceFile.toString());    	compilable	  [FE]  AssertionFailedError  	38	16	replace
260	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]              AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    Node    sourceFile    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	38	None	replace
261	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    Node    sourceFile    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	38	None	replace
262	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  return;  }  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                  AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  return;  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  return;  }	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    Node    sourceFile    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	38	None	replace
263	[BUG]  [BUGGY]  Preconditions.checkState(sourceFile!=  null);  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [CE]  cannot  find  symbol  Preconditions  [FE]                    AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  Preconditions.checkState(sourceFile!=  null);  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	Preconditions.checkState(sourceFile!=  null);  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    Node    sourceFile    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  cannot  find  symbol  Preconditions	38	None	replace
264	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  fixupSource(sourceFile,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  fixupSource(sourceFile,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  fixupSource(sourceFile,  outputEndPosition);	  sourceFile    =    fixupSource(sourceFile,    inputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
265	[BUG]  [BUGGY]  SourceFile  sourceFile  =  fixupSource(sourceFile,  outputEndPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceFile  sourceFile  =  fixupSource(sourceFile,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceFile  sourceFile  =  fixupSource(sourceFile,  outputEndPosition);	  sourceFile    =    fixupSource(sourceFile,    inputStartPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	56	None	replace
266	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  fixupSource(sourceFile,  outputStartPosition);  [CE]  cannot  find  symbol  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  fixupSource(sourceFile,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  fixupSource(sourceFile,  outputStartPosition);	  sourceFile    =    fixupSource(sourceFile,    inputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
267	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  generator.getLineno());  [CE]  cannot  find  symbol  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  generator.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  generator.getLineno());	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition.getLineno());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
268	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition.getLineno(),  generator);  [CE]  cannot  find  symbol  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition.getLineno(),  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition.getLineno(),  generator);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition.getLineno());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
269	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(node,  outputEndPosition.getLineno());  [CE]  cannot  find  symbol  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(node,  outputEndPosition.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(node,  outputEndPosition.getLineno());	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition.getLineno());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
270	[BUG]  [BUGGY]  SourceFile  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceFile  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceFile  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);	  SourceFile    sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	1	None	replace
271	[BUG]  [BUGGY]  SourceFile  sourceFile  =  fixupSourceLocation(node,  outputStartPosition,  outputEndPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceFile  sourceFile  =  fixupSourceLocation(node,  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceFile  sourceFile  =  fixupSourceLocation(node,  outputStartPosition,  outputEndPosition);	  SourceFile    sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	1	None	replace
272	[BUG]  [BUGGY]  SourceFile  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  generator);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceFile  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceFile  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  generator);	  SourceFile    sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	1	None	replace
273	[BUG]  [BUGGY]  SourceFile  sourceFile  =  fixedupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceFile  sourceFile  =  fixedupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceFile  sourceFile  =  fixedupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);	  SourceFile    sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	1	None	replace
274	[BUG]  [BUGGY]  SourceFile  sourceFile  =  fixupSourceLocation(node,  outputEndPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceFile  sourceFile  =  fixupSourceLocation(node,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceFile  sourceFile  =  fixupSourceLocation(node,  outputEndPosition);	  SourceFile    sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	1	None	replace
275	[BUG]  [BUGGY]  SourceFile  sourceFile  =  fixupSourceLocation(node,  outputStartPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceFile  sourceFile  =  fixupSourceLocation(node,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceFile  sourceFile  =  fixupSourceLocation(node,  outputStartPosition);	  SourceFile    sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	1	None	replace
276	[BUG]  [BUGGY]  sourceFile  =  fixupSource(sourceFile,  outputStartPosition,  node);  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSource(sourceFile,  outputStartPosition,  node);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSource(sourceFile,  outputStartPosition,  node);	  sourceFile    =    fixupSource(sourceFile,    node);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
277	[BUG]  [BUGGY]  sourceFile  =  fixupSource(sourceFile,  node,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSource(sourceFile,  node,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSource(sourceFile,  node,  outputEndPosition);	  sourceFile    =    fixupSource(sourceFile,    node);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
278	[BUG]  [BUGGY]  sourceFile  =  fixupSource(node,  sourceFile);  [CE]  cannot  find  symbol  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSource(node,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSource(node,  sourceFile);	  sourceFile    =    fixupSource(sourceFile,    node);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
279	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  node);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  node);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  node);	  sourceFile    =    fixupSourceLocation(sourceFile,    node,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	9	None	replace
280	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(node,  sourceFile,  outputStartPosition,  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(node,  sourceFile,  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(node,  sourceFile,  outputStartPosition,  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    node,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	9	None	replace
281	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  node);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  node);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  node);	  sourceFile    =    fixupSourceLocation(sourceFile,    node,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	9	None	replace
282	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node,  outputEndPosition,  generator);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node,  outputEndPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  node,  outputEndPosition,  generator);	  sourceFile    =    fixupSourceLocation(sourceFile,    node,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	9	None	replace
283	[BUG]  [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  node,  outputStartPosition,  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  node,  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  generator  =  fixupSourceLocation(sourceFile,  node,  outputStartPosition,  outputEndPosition);	  SourceMap    generator    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	8	None	replace
284	[BUG]  [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputStartPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputStartPosition);	  SourceMap    generator    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	8	None	replace
285	[BUG]  [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile.length);  [CE]  cannot  find  symbol  length  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile.length);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile.length);	  SourceMap    generator    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  length	8	None	replace
286	[BUG]  [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile);	  SourceMap    generator    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	8	None	replace
287	[BUG]  [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile.getLineno());  [CE]  cannot  find  symbol  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile.getLineno());	  SourceMap    generator    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
288	[BUG]  [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  prefix);  [CE]  cannot  find  symbol  prefix  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  prefix);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  prefix);	  SourceMap    generator    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  prefix	8	None	replace
289	[BUG]  [BUGGY]  SourceMap  generator  =  fixupSourceLocation(node,  sourceFile,  outputStartPosition,  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  generator  =  fixupSourceLocation(node,  sourceFile,  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  generator  =  fixupSourceLocation(node,  sourceFile,  outputStartPosition,  outputEndPosition);	  SourceMap    generator    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	8	None	replace
290	[BUG]  [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  generator);  [CE]  cannot  find  symbol  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  generator);	  SourceMap    <    K,    V>    sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
291	[BUG]  [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);	  SourceMap    <    K,    V>    sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
292	[BUG]  [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  junit.framework.fixupSourceLocation(sourceFile,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  junit.framework.fixupSourceLocation(sourceFile,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  <  K,  V>  sourceFile  =  junit.framework.fixupSourceLocation(sourceFile,  outputEndPosition);	  SourceMap    <    K,    V>    sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
293	[BUG]  [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  resolveSourceLocation(sourceFile,  outputStartPosition);  [CE]  cannot  find  symbol  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  resolveSourceLocation(sourceFile,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  <  K,  V>  sourceFile  =  resolveSourceLocation(sourceFile,  outputStartPosition);	  SourceMap    <    K,    V>    sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
294	[BUG]  [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  fixedupSourceLocation(sourceFile,  outputStartPosition);  [CE]  cannot  find  symbol  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  fixedupSourceLocation(sourceFile,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  <  K,  V>  sourceFile  =  fixedupSourceLocation(sourceFile,  outputStartPosition);	  SourceMap    <    K,    V>    sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
295	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure(sourceFile);  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [CE]  package  junit  does  not  exist  [FE]        AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure(sourceFile);  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  junit.framework.ComparisonFailure(sourceFile);  sourceFile  =  fixupSourceLocation(sourceFile.toString());	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator    generator    =    junit.framework.ComparisonFailure(sourceFile);    sourceFile    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  package  junit  does  not  exist	81	None	replace
296	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  node.framework.ComparisonFailure(sourceFile);  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [CE]  cannot  find  symbol  framework  [FE]          AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  node.framework.ComparisonFailure(sourceFile);  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  node.framework.ComparisonFailure(sourceFile);  sourceFile  =  fixupSourceLocation(sourceFile.toString());	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator    generator    =    junit.framework.ComparisonFailure(sourceFile);    sourceFile    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  cannot  find  symbol  framework	81	None	replace
297	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure(sourceFile);  sourceFile  =  fixupSourceLo  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure(sourceFile);  sourceFile  =  fixupSourceLo  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure(sourceFile);  sourceFile  =  fixupSourceLo	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator    generator    =    junit.framework.ComparisonFailure(sourceFile);    sourceFile    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  ';'  expected	81	None	replace
298	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node,  outputEndPosition,  outputStartPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node,  outputEndPosition,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  node,  outputEndPosition,  outputStartPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    outputStartPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	63	None	replace
299	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputStartPosition,  generator);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputStartPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputStartPosition,  generator);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    outputStartPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	63	None	replace
300	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputEndPosition,  generator);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputEndPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputEndPosition,  generator);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    outputStartPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	63	None	replace
301	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  sourceLocationFixupCache);  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  sourceLocationFixupCache);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  sourceLocationFixupCache);	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile);    	non-compiled	[CE]  not  a  statement	105	None	replace
302	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  generator);  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  generator);	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile);    	non-compiled	[CE]  not  a  statement	105	None	replace
303	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  inputStartPosition);  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  inputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  inputStartPosition);	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile);    	non-compiled	[CE]  not  a  statement	105	None	replace
304	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(node,  sourceFile);  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(node,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(node,  sourceFile);	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile);    	non-compiled	[CE]  not  a  statement	105	None	replace
305	[BUG]  [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition);	  SourceMap    sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	110	None	replace
306	[BUG]  [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(node,  outputStartPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(node,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  fixupSourceLocation(node,  outputStartPosition);	  SourceMap    sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	110	None	replace
307	[BUG]  [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  generator);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  generator);	  SourceMap    sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	110	None	replace
308	[BUG]  [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(node,  outputEndPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(node,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  fixupSourceLocation(node,  outputEndPosition);	  SourceMap    sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	110	None	replace
309	[BUG]  [BUGGY]  SourceMap  sourceFile  =  resolveSourceLocation(sourceFile,  outputStartPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  sourceFile  =  resolveSourceLocation(sourceFile,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  resolveSourceLocation(sourceFile,  outputStartPosition);	  SourceMap    sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	110	None	replace
310	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputStartPosition));  [CE]  not  a  statement  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputStartPosition));  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputStartPosition));	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile,    outputEndPosition));    	non-compiled	[CE]  not  a  statement	15	None	replace
311	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  sourceFile.length()));  [CE]  not  a  statement  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  sourceFile.length()));  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  sourceFile.length()));	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile,    outputEndPosition));    	non-compiled	[CE]  not  a  statement	15	None	replace
312	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  generator));  [CE]  not  a  statement  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  generator));  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  generator));	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile,    outputEndPosition));    	non-compiled	[CE]  not  a  statement	15	None	replace
313	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  sourceFile.getLineno()));  [CE]  not  a  statement  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  sourceFile.getLineno()));  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  sourceFile.getLineno()));	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile,    outputEndPosition));    	non-compiled	[CE]  not  a  statement	15	None	replace
314	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition),  generator);  [CE]  not  a  statement  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition),  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition),  generator);	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile,    outputEndPosition));    	non-compiled	[CE]  not  a  statement	15	None	replace
315	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  sourceFile.length));  [CE]  not  a  statement  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  sourceFile.length));  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  sourceFile.length));	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile,    outputEndPosition));    	non-compiled	[CE]  not  a  statement	15	None	replace
316	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputStartPosition,  generator);  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputStartPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputStartPosition,  generator);	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile,    outputStartPosition);    	non-compiled	[CE]  not  a  statement	107	None	replace
317	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputStartPosition,  sourceLocationFixupCache);  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputStartPosition,  sourceLocationFixupCache);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputStartPosition,  sourceLocationFixupCache);	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile,    outputStartPosition);    	non-compiled	[CE]  not  a  statement	107	None	replace
318	[BUG]  [BUGGY]  node.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition);  [CE]  not  a  statement  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  node.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	node.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition);	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile,    outputStartPosition);    	non-compiled	[CE]  not  a  statement	107	None	replace
319	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(node,  outputStartPosition);  [CE]  not  a  statement  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(node,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(node,  outputStartPosition);	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile,    outputStartPosition);    	non-compiled	[CE]  not  a  statement	107	None	replace
320	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputStartPosition,  inputEndPosition);  [CE]  not  a  statement  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputStartPosition,  inputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputStartPosition,  inputEndPosition);	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile,    outputStartPosition);    	non-compiled	[CE]  not  a  statement	107	None	replace
321	[BUG]  [BUGGY]  PartitionFactory.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition);  [CE]  not  a  statement  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  PartitionFactory.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	PartitionFactory.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition);	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile,    outputStartPosition);    	non-compiled	[CE]  not  a  statement	107	None	replace
322	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile,  outputStartPosition);  [CE]  cannot  find  symbol  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile,  outputStartPosition);	  SourceMapGenerator    generator    =    calculateSourceLocation(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
323	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile,  node);  [CE]  cannot  find  symbol  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile,  node);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile,  node);	  SourceMapGenerator    generator    =    calculateSourceLocation(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
324	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile,  sourceEndPosition);  [CE]  cannot  find  symbol  sourceEndPosition  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile,  sourceEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile,  sourceEndPosition);	  SourceMapGenerator    generator    =    calculateSourceLocation(sourceFile);    	non-compiled	[CE]  cannot  find  symbol  sourceEndPosition	87	None	replace
325	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile,  node.getLineno());  [CE]  cannot  find  symbol  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile,  node.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile,  node.getLineno());	  SourceMapGenerator    generator    =    calculateSourceLocation(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
326	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile,  junit.framework);  [CE]  cannot  find  symbol  junit  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile,  junit.framework);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile,  junit.framework);	  SourceMapGenerator    generator    =    calculateSourceLocation(sourceFile);    	non-compiled	[CE]  cannot  find  symbol  junit	87	None	replace
327	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	add	if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile    =    fixupSourceLocation(sourceFile.toString());    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	37	16	replace
328	[BUG]  [BUGGY]  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile    =    fixupSourceLocation(sourceFile.toString());    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	37	16	replace
329	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  return;  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	add	if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  return;  }	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile    =    fixupSourceLocation(sourceFile.toString());    	compilable	  [FE]  AssertionFailedError  	37	16	replace
330	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  return;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  return;  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  return;  }	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile    =    fixupSourceLocation(sourceFile.toString());    	compilable	  [FE]  AssertionFailedError  	37	16	replace
331	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    sourceFile);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	65	None	replace
332	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.cloneTree());  [CE]  cannot  find  symbol  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.cloneTree());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.cloneTree());	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    sourceFile);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
333	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.toString());  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.toString());	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    sourceFile);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	65	None	replace
334	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.data);  [CE]  cannot  find  symbol  data  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.data);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.data);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    sourceFile);    	non-compiled	[CE]  cannot  find  symbol  data	65	None	replace
335	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(node,  sourceFile.getLineno());  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(node,  sourceFile.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(node,  sourceFile.getLineno());	  sourceFile    =    fixupSourceLocation(sourceFile,    node.getLineno());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
336	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node.getLineno(),  outputStartPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node.getLineno(),  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  node.getLineno(),  outputStartPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    node.getLineno());    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	29	None	replace
337	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(node,  sourceFile.getLineno(),  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(node,  sourceFile.getLineno(),  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(node,  sourceFile.getLineno(),  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    node.getLineno());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
338	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node.getLineno(),  inputStartPosition);  [CE]  cannot  find  symbol  inputStartPosition  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node.getLineno(),  inputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  node.getLineno(),  inputStartPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    node.getLineno());    	non-compiled	[CE]  cannot  find  symbol  inputStartPosition	29	None	replace
339	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(node.getSourceFileName(),  node.getLineno());  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(node.getSourceFileName(),  node.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(node.getSourceFileName(),  node.getLineno());	  sourceFile    =    fixupSourceLocation(sourceFile,    node.getLineno());    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	29	None	replace
340	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition  +  1);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition  +  1);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition,    inputEndPosition);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	66	None	replace
341	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	add	sourceFile    =    fixupSourceLocation(sourceFile.toString()    +    1);    sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	51	16	add
342	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile    =    fixupSourceLocation(sourceFile.toString()    +    1);    sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	51	16	add
343	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile    =    fixupSourceLocation(sourceFile.toString()    +    1);    Node  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	51	None	add
344	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  junit.framework.ComparisonFailure  =  fixupSourceLocation(sourceFile.toString()  +  1);  [CE]  package  junit  does  not  exist  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  junit.framework.ComparisonFailure  =  fixupSourceLocation(sourceFile.toString()  +  1);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile    =    fixupSourceLocation(sourceFile.toString()    +    1);    junit.framework.ComparisonFailure  =  fixupSourceLocation(sourceFile.toString()  +  1);	  	non-compiled	[CE]  package  junit  does  not  exist	51	None	add
345	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  FilePosition  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  FilePosition  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile    =    fixupSourceLocation(sourceFile.toString()    +    1);    FilePosition  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	51	None	add
346	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  junit.framework.ComparisonFailure  =  fixupSourceLocation(sourceFile.toString()  +  1);  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  [CE]  package  junit  does  not  exist  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  junit.framework.ComparisonFailure  =  fixupSourceLocation(sourceFile.toString()  +  1);  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile    =    fixupSourceLocation(sourceFile.toString()    +    1);    junit.framework.ComparisonFailure  =  fixupSourceLocation(sourceFile.toString()  +  1);  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);	  	non-compiled	[CE]  package  junit  does  not  exist	51	None	add
347	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  file  =  fixupSourceLocation(sourceFile.toString()  +  1);  [CE]  cannot  find  symbol  file  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  file  =  fixupSourceLocation(sourceFile.toString()  +  1);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile    =    fixupSourceLocation(sourceFile.toString()    +    1);    file  =  fixupSourceLocation(sourceFile.toString()  +  1);	  	non-compiled	[CE]  cannot  find  symbol  file	51	None	add
348	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  junit.framework.ComparisonFailure:  null;  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  junit.framework.ComparisonFailure:  null;  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile    =    fixupSourceLocation(sourceFile.toString()    +    1);    junit.framework.ComparisonFailure:  null;  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);	  	non-compiled	[CE]  not  a  statement	51	None	add
349	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  junit.framework.ComparisonFailure:  sourceFile;  [CE]  not  a  statement  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  junit.framework.ComparisonFailure:  sourceFile;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile    =    fixupSourceLocation(sourceFile.toString()    +    1);    junit.framework.ComparisonFailure:  sourceFile;	  	non-compiled	[CE]  not  a  statement	51	None	add
350	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(node,  sourceFile,  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(node,  sourceFile,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(node,  sourceFile,  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    node,    outputStartPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	96	None	replace
351	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(node,  outputStartPosition,  sourceFile);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(node,  outputStartPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(node,  outputStartPosition,  sourceFile);	  sourceFile    =    fixupSourceLocation(sourceFile,    node,    outputStartPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	96	None	replace
352	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node,  outputStartPosition,  generator);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node,  outputStartPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  node,  outputStartPosition,  generator);	  sourceFile    =    fixupSourceLocation(sourceFile,    node,    outputStartPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	96	None	replace
353	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  generator,  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  generator,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  generator,  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    generator);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	5	None	replace
354	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(generator,  outputEndPosition,  sourceFile);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(generator,  outputEndPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(generator,  outputEndPosition,  sourceFile);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    generator);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	5	None	replace
355	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  generator,  outputStartPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  generator,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  generator,  outputStartPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    generator);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	5	None	replace
356	[BUG]  [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    generator);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	5	None	replace
357	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  inputStartPosition,  generator);  [CE]  cannot  find  symbol  inputStartPosition  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  inputStartPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  inputStartPosition,  generator);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    generator);    	non-compiled	[CE]  cannot  find  symbol  inputStartPosition	5	None	replace
358	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  outputEndPosition,  generator);  [CE]  cannot  find  symbol  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  outputEndPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile,  outputEndPosition,  generator);	  sourceFile    =    calculateSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
359	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  calculateSourceMapping(sourceFile,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  calculateSourceMapping(sourceFile,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  calculateSourceMapping(sourceFile,  outputEndPosition);	  sourceFile    =    calculateSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
360	[BUG]  [BUGGY]  file  =  FixupSourceLocation(sourceFile,  outputStartPosition,  generator);  [CE]  cannot  find  symbol  file  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  file  =  FixupSourceLocation(sourceFile,  outputStartPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	file  =  FixupSourceLocation(sourceFile,  outputStartPosition,  generator);	  file    =    FixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol  file	26	None	replace
361	[BUG]  [BUGGY]  FilePosition  outputStartPosition  =  FixupSourceLocation(sourceFile,  outputEndPosition);  [CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  FilePosition  outputStartPosition  =  FixupSourceLocation(sourceFile,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	FilePosition  outputStartPosition  =  FixupSourceLocation(sourceFile,  outputEndPosition);	  file    =    FixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	26	None	replace
362	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(node,  outputStartPosition,  generator);  [CE]  cannot  find  symbol  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(node,  outputStartPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(node,  outputStartPosition,  generator);	  sourceFile    =    FixupSourceLocation(node,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
363	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(node,  outputStartPosition,  inputEndPosition);  [CE]  cannot  find  symbol  inputEndPosition  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(node,  outputStartPosition,  inputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(node,  outputStartPosition,  inputEndPosition);	  sourceFile    =    FixupSourceLocation(node,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol  inputEndPosition	25	None	replace
364	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(node,  outputStartPosition,  junit);  [CE]  cannot  find  symbol  junit  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(node,  outputStartPosition,  junit);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(node,  outputStartPosition,  junit);	  sourceFile    =    FixupSourceLocation(node,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol  junit	25	None	replace
365	[BUG]  [BUGGY]  file  =  FixupSourceLocation(node,  outputEndPosition);  [CE]  cannot  find  symbol  file  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  file  =  FixupSourceLocation(node,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	file  =  FixupSourceLocation(node,  outputEndPosition);	  sourceFile    =    FixupSourceLocation(node,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol  file	25	None	replace
366	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    else    {    node.getProp(Node.ORIGINALNAME_PROP);    generator.addMapping(    sourceFile,    sourceFile    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
367	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    else    {    node.getProp(Node.ORIGINALNAME_PROP);    generator.addMapping(    sourceFile,    sourceFile    	non-compiled	[CE]  ';'  expected	102	None	replace
368	[BUG]  [BUGGY]  node.framework.ComparisonFailure:  null  expected  [CE]  not  a  statement  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  node.framework.ComparisonFailure:  null  expected  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	node.framework.ComparisonFailure:  null  expected	  junit.framework.ComparisonFailure:    null    expected    	non-compiled	[CE]  not  a  statement	16	None	replace
369	[BUG]  [BUGGY]  Tasks.ComparisonFailure:  null  expected  [CE]  not  a  statement  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  Tasks.ComparisonFailure:  null  expected  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	Tasks.ComparisonFailure:  null  expected	  junit.framework.ComparisonFailure:    null    expected    	non-compiled	[CE]  not  a  statement	16	None	replace
370	[BUG]  [BUGGY]  Node.ComparisonFailure:  null  expected  [CE]  not  a  statement  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  Node.ComparisonFailure:  null  expected  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	Node.ComparisonFailure:  null  expected	  junit.framework.ComparisonFailure:    null    expected    	non-compiled	[CE]  not  a  statement	16	None	replace
371	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  null  [CE]  not  a  statement  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  null  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  null	  junit.framework.ComparisonFailure:    null    expected    	non-compiled	[CE]  not  a  statement	16	None	replace
372	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  String  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]    AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  String  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile    ==    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    String  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	45	None	add
373	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  FilePosition  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]      AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  FilePosition  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile    ==    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    FilePosition  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	45	None	add
374	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]        AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile    ==    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	45	None	add
375	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  FilePosition  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]          AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  FilePosition  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile    ==    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    FilePosition  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	45	None	add
376	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]            AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile    ==    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	45	None	add
377	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  String  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]              AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  String  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile    ==    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    String  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	45	None	add
378	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  String  originalName  =  (String)node.getProp(Node.ORIGINALNAME_PROP);  [CE]  variable  originalName  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  String  originalName  =  (String)node.getProp(Node.ORIGINALNAME_PROP);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile    ==    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    String  originalName  =  (String)node.getProp(Node.ORIGINALNAME_PROP);	  	non-compiled	[CE]  variable  originalName  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	45	None	add
379	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  String  originalName  =  (String)node.getProp(Node.ORIGINALNAME_PROP);  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [CE]  variable  originalName  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                  AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  String  originalName  =  (String)node.getProp(Node.ORIGINALNAME_PROP);  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile    ==    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    String  originalName  =  (String)node.getProp(Node.ORIGINALNAME_PROP);  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  	non-compiled	[CE]  variable  originalName  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	45	None	add
380	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  node.getLineno());  [CE]  cannot  find  symbol  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  node.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile,  node.getLineno());	  sourceFile    =    calculateSourceLocation(sourceFile.getLineno());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
381	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(node.getLineno());  [CE]  cannot  find  symbol  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(node.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(node.getLineno());	  sourceFile    =    calculateSourceLocation(sourceFile.getLineno());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
382	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile.getLineno(),  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile.getLineno(),  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile.getLineno(),  outputEndPosition);	  sourceFile    =    calculateSourceLocation(sourceFile.getLineno());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
383	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  outputStartPosition.getLineno());  [CE]  cannot  find  symbol  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  outputStartPosition.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile,  outputStartPosition.getLineno());	  sourceFile    =    calculateSourceLocation(sourceFile.getLineno());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
384	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  outputEndPosition.getLineno());  [CE]  cannot  find  symbol  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  outputEndPosition.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile,  outputEndPosition.getLineno());	  sourceFile    =    calculateSourceLocation(sourceFile.getLineno());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
385	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile.getLineno(),  outputStartPosition);  [CE]  cannot  find  symbol  [FE]                                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile.getLineno(),  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile.getLineno(),  outputStartPosition);	  sourceFile    =    calculateSourceLocation(sourceFile.getLineno());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
386	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  generator.getLineno());  [CE]  cannot  find  symbol  [FE]                                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  generator.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile,  generator.getLineno());	  sourceFile    =    calculateSourceLocation(sourceFile.getLineno());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
387	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition.getLineno(),  node.getEndPosition());  [CE]  cannot  find  symbol  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition.getLineno(),  node.getEndPosition());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition.getLineno(),  node.getEndPosition());	  sourceFile    =    fixupSourceLocation(sourceFile.getLineno(),    node.getEndPosition());    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
388	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(node.getLineno(),  sourceFile.getEndPosition());  [CE]  cannot  find  symbol  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(node.getLineno(),  sourceFile.getEndPosition());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(node.getLineno(),  sourceFile.getEndPosition());	  sourceFile    =    fixupSourceLocation(sourceFile.getLineno(),    node.getEndPosition());    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
389	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  outputStartPosition,  node.getEndPosition());  [CE]  cannot  find  symbol  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  outputStartPosition,  node.getEndPosition());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  outputStartPosition,  node.getEndPosition());	  sourceFile    =    fixupSourceLocation(sourceFile.getLineno(),    node.getEndPosition());    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
390	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  outputEndPosition,  node.getEndPosition());  [CE]  cannot  find  symbol  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  outputEndPosition,  node.getEndPosition());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  outputEndPosition,  node.getEndPosition());	  sourceFile    =    fixupSourceLocation(sourceFile.getLineno(),    node.getEndPosition());    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
391	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition.getLineno(),  node.getEndPosition());  [CE]  cannot  find  symbol  [FE]                                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition.getLineno(),  node.getEndPosition());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition.getLineno(),  node.getEndPosition());	  sourceFile    =    fixupSourceLocation(sourceFile.getLineno(),    node.getEndPosition());    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
392	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  null);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  null);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  null);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    input);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	67	None	replace
393	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  generator);  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  generator);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
394	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  node,  outputStartPosition,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  node,  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(sourceFile,  node,  outputStartPosition,  outputEndPosition);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
395	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  prefixMapping);  [CE]  cannot  find  symbol  prefixMapping  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  prefixMapping);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  prefixMapping);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  prefixMapping	80	None	replace
396	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(generator,  outputStartPosition);  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(generator,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(generator,  outputStartPosition);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputStartPosition,    generator);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
397	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  generator);  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  generator);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputStartPosition,    generator);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
398	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  generator,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  generator,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(sourceFile,  generator,  outputEndPosition);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputStartPosition,    generator);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
399	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile);  [CE]  cannot  find  symbol  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputStartPosition,    generator);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
400	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  generator,  junit);  [CE]  cannot  find  symbol  junit  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  generator,  junit);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  generator,  junit);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputStartPosition,    generator);    	non-compiled	[CE]  cannot  find  symbol  junit	59	None	replace
401	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  generator,  node);  [CE]  cannot  find  symbol  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  generator,  node);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  generator,  node);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputStartPosition,    generator);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
402	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputStartPosition,  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputStartPosition,  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	47	None	replace
403	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node.toString(),  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node.toString(),  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  node.toString(),  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	47	None	replace
404	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  sourceFile.toString(),  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  sourceFile.toString(),  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  sourceFile.toString(),  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	47	None	replace
405	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputStartPosition,  inputEndPosition);  [CE]  cannot  find  symbol  inputEndPosition  [FE]              AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputStartPosition,  inputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputStartPosition,  inputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  inputEndPosition	47	None	replace
406	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  generator.toString(),  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  generator.toString(),  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  generator.toString(),  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	47	None	replace
407	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  generator,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  generator,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile,  generator,  outputEndPosition);	  sourceFile    =    calculateSourceLocation(sourceFile,    generator);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
408	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  generator,  outputStartPosition);  [CE]  cannot  find  symbol  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  generator,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile,  generator,  outputStartPosition);	  sourceFile    =    calculateSourceLocation(sourceFile,    generator);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
409	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(generator,  sourceFile);  [CE]  cannot  find  symbol  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(generator,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(generator,  sourceFile);	  sourceFile    =    calculateSourceLocation(sourceFile,    generator);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
410	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  generator,  inputStartPosition);  [CE]  cannot  find  symbol  inputStartPosition  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  generator,  inputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile,  generator,  inputStartPosition);	  sourceFile    =    calculateSourceLocation(sourceFile,    generator);    	non-compiled	[CE]  cannot  find  symbol  inputStartPosition	19	None	replace
411	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  node.getCharno())  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  node.getCharno())  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  node.getCharno())	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile.getLineno(),    sourceFile.getCharno())    	non-compiled	[CE]  not  a  statement	104	None	replace
412	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(node.getLineno(),  sourceFile.getCharno())  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(node.getLineno(),  sourceFile.getCharno())  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(node.getLineno(),  sourceFile.getCharno())	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile.getLineno(),    sourceFile.getCharno())    	non-compiled	[CE]  not  a  statement	104	None	replace
413	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  sourceFile.getLineno(),  sourceFile.getCharno())  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  sourceFile.getLineno(),  sourceFile.getCharno())  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  sourceFile.getLineno(),  sourceFile.getCharno())	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile.getLineno(),    sourceFile.getCharno())    	non-compiled	[CE]  not  a  statement	104	None	replace
414	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(node.getLineno(),  node.getCharno())  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(node.getLineno(),  node.getCharno())  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(node.getLineno(),  node.getCharno())	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile.getLineno(),    sourceFile.getCharno())    	non-compiled	[CE]  not  a  statement	104	None	replace
415	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  sourceFile.getLength())  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  sourceFile.getLength())  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  sourceFile.getLength())	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile.getLineno(),    sourceFile.getCharno())    	non-compiled	[CE]  not  a  statement	104	None	replace
416	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  sourceFile.getEndPosition())  [CE]  not  a  statement  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  sourceFile.getEndPosition())  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  sourceFile.getEndPosition())	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile.getLineno(),    sourceFile.getCharno())    	non-compiled	[CE]  not  a  statement	104	None	replace
417	[BUG]  [BUGGY]  sourceFile  =  fixupSource(sourceFile,  outputStartPosition,  generator);  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSource(sourceFile,  outputStartPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSource(sourceFile,  outputStartPosition,  generator);	  sourceFile    =    fixupSource(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
418	[BUG]  [BUGGY]  sourceFile  =  resetSource(sourceFile,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  resetSource(sourceFile,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  resetSource(sourceFile,  outputEndPosition);	  sourceFile    =    fixupSource(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
419	[BUG]  [BUGGY]  sourceFile  =  resetSource(sourceFile,  outputStartPosition);  [CE]  cannot  find  symbol  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  resetSource(sourceFile,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  resetSource(sourceFile,  outputStartPosition);	  sourceFile    =    fixupSource(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
420	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(generator,  outputStartPosition,  sourceFile);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(generator,  outputStartPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(generator,  outputStartPosition,  sourceFile);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition,    generator);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	64	None	replace
421	[BUG]  [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition,    generator);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	64	None	replace
422	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(generator,  outputStartPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(generator,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(generator,  outputStartPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition,    generator);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	64	None	replace
423	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(node,  outputStartPosition,  generator);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(node,  outputStartPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(node,  outputStartPosition,  generator);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition,    generator);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	64	None	replace
424	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(node.getLineno(),  sourceFile);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(node.getLineno(),  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(node.getLineno(),  sourceFile);	  sourceFile    =    fixupSourceLocation(sourceFile.getLineno(),    node);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	99	None	replace
425	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node.getLineno(),  sourceFile);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node.getLineno(),  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  node.getLineno(),  sourceFile);	  sourceFile    =    fixupSourceLocation(sourceFile.getLineno(),    node);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	99	None	replace
426	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  generator.getLineno(),  node);  [CE]  cannot  find  symbol  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  generator.getLineno(),  node);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  generator.getLineno(),  node);	  sourceFile    =    fixupSourceLocation(sourceFile.getLineno(),    node);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
427	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  node.getCharno()));  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  node.getCharno()));  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  node.getCharno()));	          junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile.getLineno(),    sourceFile.getCharno()));    	non-compiled	[CE]  not  a  statement	108	None	replace
428	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  sourceFile.getCharno()  +  1));  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  sourceFile.getCharno()  +  1));  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  sourceFile.getCharno()  +  1));	          junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile.getLineno(),    sourceFile.getCharno()));    	non-compiled	[CE]  not  a  statement	108	None	replace
429	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(node.getLineno(),  sourceFile.getCharno()));  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(node.getLineno(),  sourceFile.getCharno()));  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(node.getLineno(),  sourceFile.getCharno()));	          junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile.getLineno(),    sourceFile.getCharno()));    	non-compiled	[CE]  not  a  statement	108	None	replace
430	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  sourceFile.getLineno(),  sourceFile.getCharno()));  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  sourceFile.getLineno(),  sourceFile.getCharno()));  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  sourceFile.getLineno(),  sourceFile.getCharno()));	          junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile.getLineno(),    sourceFile.getCharno()));    	non-compiled	[CE]  not  a  statement	108	None	replace
431	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  sourceFile.getLength()));  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  sourceFile.getLength()));  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  sourceFile.getLength()));	          junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile.getLineno(),    sourceFile.getCharno()));    	non-compiled	[CE]  not  a  statement	108	None	replace
432	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  sourceFile.getEndPosition()));  [CE]  not  a  statement  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  sourceFile.getEndPosition()));  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  sourceFile.getEndPosition()));	          junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile.getLineno(),    sourceFile.getCharno()));    	non-compiled	[CE]  not  a  statement	108	None	replace
433	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(node,  outputEndPosition,  generator);  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(node,  outputEndPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(node,  outputEndPosition,  generator);	  sourceFile    =    FixupSourceLocation(node,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
434	[BUG]  [BUGGY]  file  =  FixupSourceLocation(node,  outputStartPosition);  [CE]  cannot  find  symbol  file  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  file  =  FixupSourceLocation(node,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	file  =  FixupSourceLocation(node,  outputStartPosition);	  sourceFile    =    FixupSourceLocation(node,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  file	24	None	replace
435	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(node,  outputEndPosition);  [CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(node,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  new  SourceMapGenerator(node,  outputEndPosition);	  sourceFile    =    FixupSourceLocation(node,    outputEndPosition);    	non-compiled	[CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated	24	None	replace
436	[BUG]  [BUGGY]  file  =  fixupSourceLocation(sourceFile.toString());  [CE]  cannot  find  symbol  file  [FE]            AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  file  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	file  =  fixupSourceLocation(sourceFile.toString());	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    file    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  cannot  find  symbol  file	39	None	replace
437	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  file  =  fixupSourceLocation(sourceFile.toString());  }  [CE]  cannot  find  symbol  file  [FE]              AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  file  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  file  =  fixupSourceLocation(sourceFile.toString());  }	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    file    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  cannot  find  symbol  file	39	None	replace
438	[BUG]  [BUGGY]  SourceFile  sourceFile  =  fixupSourceLocation(sourceFile.toString());  file  =  fixupSourceLocation(sourceFile.toString());  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceFile  sourceFile  =  fixupSourceLocation(sourceFile.toString());  file  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceFile  sourceFile  =  fixupSourceLocation(sourceFile.toString());  file  =  fixupSourceLocation(sourceFile.toString());	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    file    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	39	None	replace
439	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition);  file  =  fixupSourceLocation(sourceFile.toString());  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition);  file  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition);  file  =  fixupSourceLocation(sourceFile.toString());	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    file    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	39	None	replace
440	[BUG]  [BUGGY]  SourceMap  <  String,  Object>  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition);  [CE]  type  SourceMap  does  not  take  parameters  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  <  String,  Object>  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  <  String,  Object>  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition);	  SourceMap    <    String,    Object>    sourceFile    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  type  SourceMap  does  not  take  parameters	92	None	replace
441	[BUG]  [BUGGY]  SourceMap  <  String,  Object>  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  generator);  [CE]  type  SourceMap  does  not  take  parameters  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  <  String,  Object>  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  <  String,  Object>  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  generator);	  SourceMap    <    String,    Object>    sourceFile    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  type  SourceMap  does  not  take  parameters	92	None	replace
442	[BUG]  [BUGGY]  SourceMap  <  String,  Object>  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [CE]  type  SourceMap  does  not  take  parameters  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  <  String,  Object>  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  <  String,  Object>  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);	  SourceMap    <    String,    Object>    sourceFile    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  type  SourceMap  does  not  take  parameters	92	None	replace
443	[BUG]  [BUGGY]  SourceMap  <  String,  Object>  sourceFile  =  FixupSourceLocation(node,  outputStartPosition);  [CE]  type  SourceMap  does  not  take  parameters  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  <  String,  Object>  sourceFile  =  FixupSourceLocation(node,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  <  String,  Object>  sourceFile  =  FixupSourceLocation(node,  outputStartPosition);	  SourceMap    <    String,    Object>    sourceFile    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  type  SourceMap  does  not  take  parameters	92	None	replace
444	[BUG]  [BUGGY]  SourceMap  <  String,  Object>  sourceFile  =  FixupSourceLocation(node,  outputEndPosition);  [CE]  type  SourceMap  does  not  take  parameters  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  <  String,  Object>  sourceFile  =  FixupSourceLocation(node,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  <  String,  Object>  sourceFile  =  FixupSourceLocation(node,  outputEndPosition);	  SourceMap    <    String,    Object>    sourceFile    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  type  SourceMap  does  not  take  parameters	92	None	replace
445	[BUG]  [BUGGY]  SourceMap  <  String,  Object>  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition);  [CE]  type  SourceMap  does  not  take  parameters  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  <  String,  Object>  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  <  String,  Object>  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition);	  SourceMap    <    String,    Object>    sourceFile    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  type  SourceMap  does  not  take  parameters	92	None	replace
446	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(generator,  outputEndPosition,  sourceFile);  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(generator,  outputEndPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(generator,  outputEndPosition,  sourceFile);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputEndPosition,    generator);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
447	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputEndPosition,  generator);  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputEndPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputEndPosition,  generator);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputEndPosition,    generator);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
448	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(generator,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(generator,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(generator,  outputEndPosition);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputEndPosition,    generator);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
449	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  generator,  outputStartPosition);  [CE]  cannot  find  symbol  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  generator,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(sourceFile,  generator,  outputStartPosition);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputEndPosition,    generator);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
450	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile);  [CE]  cannot  find  symbol  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputEndPosition,    generator);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
451	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  outputStartPosition,  generator);  [CE]  cannot  find  symbol  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  outputStartPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  outputStartPosition,  generator);	  sourceFile    =    fixupSourceLocation(sourceFile.getLineno(),    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
452	[BUG]  [BUGGY]  Node.ComparisonFailure:  sourceFile;  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  Node.ComparisonFailure:  sourceFile;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	Node.ComparisonFailure:  sourceFile;	          junit.framework.ComparisonFailure:    sourceFile;    	non-compiled	[CE]  not  a  statement	74	None	replace
453	[BUG]  [BUGGY]  Tasks.ComparisonFailure:  sourceFile;  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  Tasks.ComparisonFailure:  sourceFile;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	Tasks.ComparisonFailure:  sourceFile;	          junit.framework.ComparisonFailure:    sourceFile;    	non-compiled	[CE]  not  a  statement	74	None	replace
454	[BUG]  [BUGGY]  SourceMapGenerator.ComparisonFailure:  sourceFile;  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator.ComparisonFailure:  sourceFile;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator.ComparisonFailure:  sourceFile;	          junit.framework.ComparisonFailure:    sourceFile;    	non-compiled	[CE]  not  a  statement	74	None	replace
455	[BUG]  [BUGGY]  sourceFile  =  resolveSourceLocation(node,  sourceFile.getLineno());  [CE]  cannot  find  symbol  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  resolveSourceLocation(node,  sourceFile.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  resolveSourceLocation(node,  sourceFile.getLineno());	  sourceFile    =    resolveSourceLocation(sourceFile,    node.getLineno());    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
456	[BUG]  [BUGGY]  sourceFile  =  resolveSourceLocation(sourceFile,  node.getLineno(),  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  resolveSourceLocation(sourceFile,  node.getLineno(),  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  resolveSourceLocation(sourceFile,  node.getLineno(),  outputEndPosition);	  sourceFile    =    resolveSourceLocation(sourceFile,    node.getLineno());    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
457	[BUG]  [BUGGY]  sourceFile  =  resolveSourceLocation(node,  node.getLineno());  [CE]  cannot  find  symbol  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  resolveSourceLocation(node,  node.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  resolveSourceLocation(node,  node.getLineno());	  sourceFile    =    resolveSourceLocation(sourceFile,    node.getLineno());    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
458	[BUG]  [BUGGY]  sourceFile  =  resolveSourceLocation(sourceFile,  node.getLineno(),  outputStartPosition);  [CE]  cannot  find  symbol  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  resolveSourceLocation(sourceFile,  node.getLineno(),  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  resolveSourceLocation(sourceFile,  node.getLineno(),  outputStartPosition);	  sourceFile    =    resolveSourceLocation(sourceFile,    node.getLineno());    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
459	[BUG]  [BUGGY]  sourceFile  =  resolveSourceLocation(sourceFile,  outputStartPosition,  node.getLineno());  [CE]  cannot  find  symbol  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  resolveSourceLocation(sourceFile,  outputStartPosition,  node.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  resolveSourceLocation(sourceFile,  outputStartPosition,  node.getLineno());	  sourceFile    =    resolveSourceLocation(sourceFile,    node.getLineno());    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
460	[BUG]  [BUGGY]  sourceFile  =  resolveSourceLocation(node,  outputStartPosition.getLineno());  [CE]  cannot  find  symbol  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  resolveSourceLocation(node,  outputStartPosition.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  resolveSourceLocation(node,  outputStartPosition.getLineno());	  sourceFile    =    resolveSourceLocation(sourceFile,    node.getLineno());    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
461	[BUG]  [BUGGY]  sourceFile  =  resolveSourceLocation(sourceFile,  outputStartPosition.getLineno());  [CE]  cannot  find  symbol  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  resolveSourceLocation(sourceFile,  outputStartPosition.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  resolveSourceLocation(sourceFile,  outputStartPosition.getLineno());	  sourceFile    =    resolveSourceLocation(sourceFile,    node.getLineno());    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
462	[BUG]  [BUGGY]  sourceFile  =  fixupSource(sourceFile,  outputEndPosition,  generator);  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSource(sourceFile,  outputEndPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSource(sourceFile,  outputEndPosition,  generator);	  sourceFile    =    fixupSource(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
463	[BUG]  [BUGGY]  sourceFile  =  fixupSource(sourceFile,  outputStartPosition,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSource(sourceFile,  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSource(sourceFile,  outputStartPosition,  outputEndPosition);	  sourceFile    =    fixupSource(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
464	[BUG]  [BUGGY]  SourceMap  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition);	  SourceMap    sourceFile    =    FixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	94	None	replace
465	[BUG]  [BUGGY]  SourceMap  sourceFile  =  FixupSourceLocation(node,  outputStartPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  sourceFile  =  FixupSourceLocation(node,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  FixupSourceLocation(node,  outputStartPosition);	  SourceMap    sourceFile    =    FixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	94	None	replace
466	[BUG]  [BUGGY]  SourceMap  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  generator);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  generator);	  SourceMap    sourceFile    =    FixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	94	None	replace
467	[BUG]  [BUGGY]  SourceMap  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);	  SourceMap    sourceFile    =    FixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	94	None	replace
468	[BUG]  [BUGGY]  SourceMap  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  junit.framework);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  junit.framework);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  junit.framework);	  SourceMap    sourceFile    =    FixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	94	None	replace
469	[BUG]  [BUGGY]  SourceMap  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  inputEndPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  inputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  inputEndPosition);	  SourceMap    sourceFile    =    FixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	94	None	replace
470	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(node,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(node,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  FixupSourceLocation(node,  outputEndPosition);	  SourceMapGenerator    generator    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
471	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputEndPosition,  node);  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputEndPosition,  node);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputEndPosition,  node);	  SourceMapGenerator    generator    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
472	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputEndPosition,  prefixMapping);  [CE]  cannot  find  symbol  prefixMapping  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputEndPosition,  prefixMapping);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputEndPosition,  prefixMapping);	  SourceMapGenerator    generator    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  prefixMapping	78	None	replace
473	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length);  [CE]  cannot  find  symbol  length  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length);	  SourceMapGenerator    generator    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  length	78	None	replace
474	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length());  [CE]  cannot  find  symbol  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length());	  SourceMapGenerator    generator    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
475	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputEndPosition,  junit);  [CE]  cannot  find  symbol  junit  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputEndPosition,  junit);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputEndPosition,  junit);	  SourceMapGenerator    generator    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  junit	78	None	replace
476	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);	  SourceMapGenerator    generator    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	2	None	replace
477	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceEndPosition);  [CE]  cannot  find  symbol  sourceEndPosition  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceEndPosition);	  SourceMapGenerator    generator    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  sourceEndPosition	2	None	replace
478	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  node,  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  node,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  node,  outputEndPosition);	  SourceMapGenerator    generator    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	2	None	replace
479	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  fixupSourceLocation(node,  sourceFile,  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  fixupSourceLocation(node,  sourceFile,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  fixupSourceLocation(node,  sourceFile,  outputEndPosition);	  SourceMapGenerator    generator    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	2	None	replace
480	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length);  [CE]  cannot  find  symbol  length  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length);	  SourceMapGenerator    generator    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  length	2	None	replace
481	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.getLineno());  [CE]  cannot  find  symbol  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.getLineno());	  SourceMapGenerator    generator    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
482	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length());  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length());	  SourceMapGenerator    generator    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	2	None	replace
483	[BUG]  [BUGGY]  file  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  generator);  [CE]  cannot  find  symbol  file  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  file  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	file  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  generator);	  file    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  file	7	None	replace
484	[BUG]  [BUGGY]  file  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition  +  1);  [CE]  cannot  find  symbol  file  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  file  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition  +  1);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	file  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition  +  1);	  file    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  file	7	None	replace
485	[BUG]  [BUGGY]  file  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputStartPosition);  [CE]  cannot  find  symbol  file  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  file  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	file  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputStartPosition);	  file    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  file	7	None	replace
486	[BUG]  [BUGGY]  File  file  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  File  file  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	File  file  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);	  file    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
487	[BUG]  [BUGGY]  file  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition  -  1);  [CE]  cannot  find  symbol  file  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  file  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition  -  1);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	file  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition  -  1);	  file    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  file	7	None	replace
488	[BUG]  [BUGGY]  file  =  fixupSourceLocation(sourceFile,  node,  outputStartPosition,  outputEndPosition);  [CE]  cannot  find  symbol  file  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  file  =  fixupSourceLocation(sourceFile,  node,  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	file  =  fixupSourceLocation(sourceFile,  node,  outputStartPosition,  outputEndPosition);	  file    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  file	7	None	replace
489	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(node,  outputStartPosition,  outputEndPosition,  generator);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(node,  outputStartPosition,  outputEndPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(node,  outputStartPosition,  outputEndPosition,  generator);	  sourceFile    =    fixupSourceLocation(node,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	6	None	replace
490	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(node,  outputEndPosition,  outputStartPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(node,  outputEndPosition,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(node,  outputEndPosition,  outputStartPosition);	  sourceFile    =    fixupSourceLocation(node,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	6	None	replace
491	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(node,  outputStartPosition,  outputEndPosition,  sourceFile);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(node,  outputStartPosition,  outputEndPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(node,  outputStartPosition,  outputEndPosition,  sourceFile);	  sourceFile    =    fixupSourceLocation(node,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	6	None	replace
492	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(node,  outputLineno,  outputStartPosition,  outputEndPosition);  [CE]  cannot  find  symbol  outputLineno  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(node,  outputLineno,  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(node,  outputLineno,  outputStartPosition,  outputEndPosition);	  sourceFile    =    fixupSourceLocation(node,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  outputLineno	6	None	replace
493	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(node,  outputStartPosition,  outputEndPosition,  prefixMapping);  [CE]  cannot  find  symbol  prefixMapping  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(node,  outputStartPosition,  outputEndPosition,  prefixMapping);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(node,  outputStartPosition,  outputEndPosition,  prefixMapping);	  sourceFile    =    fixupSourceLocation(node,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  prefixMapping	6	None	replace
494	[BUG]  [BUGGY]  sourceFile  =  fixupSource(sourceFile,  inputStartPosition.getLineno());  [CE]  cannot  find  symbol  inputStartPosition  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSource(sourceFile,  inputStartPosition.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSource(sourceFile,  inputStartPosition.getLineno());	  sourceFile    =    fixupSource(sourceFile.getLineno());    	non-compiled	[CE]  cannot  find  symbol  inputStartPosition	58	None	replace
495	[BUG]  [BUGGY]  FilePosition  outputEndPosition  =  FixupSourceLocation(sourceFile,  outputStartPosition);  [CE]  variable  outputEndPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  FilePosition  outputEndPosition  =  FixupSourceLocation(sourceFile,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	FilePosition  outputEndPosition  =  FixupSourceLocation(sourceFile,  outputStartPosition);	  file    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  variable  outputEndPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	60	None	replace
496	[BUG]  [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile);	  SourceMap    sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	89	None	replace
497	[BUG]  [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition  -  1);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition  -  1);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition  -  1);	  SourceMap    sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	89	None	replace
498	[BUG]  [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition  +  1);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition  +  1);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition  +  1);	  SourceMap    sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	89	None	replace
499	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  outputEndPosition,  inputStartPosition);  [CE]  cannot  find  symbol  inputStartPosition  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  outputEndPosition,  inputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile,  outputEndPosition,  inputStartPosition);	  sourceFile    =    calculateSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  inputStartPosition	17	None	replace
500	[BUG]  [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  inputEndPosition);  [CE]  cannot  find  symbol  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  inputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  inputEndPosition);	  SourceMap    <    K,    V>    sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
501	[BUG]  [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  node);  [CE]  cannot  find  symbol  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  node);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  node);	  SourceMap    <    K,    V>    sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
502	[BUG]  [BUGGY]  Node  junit.framework.ComparisonFailure:  outputEndPosition;  [CE]  ';'  expected  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  Node  junit.framework.ComparisonFailure:  outputEndPosition;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	Node  junit.framework.ComparisonFailure:  outputEndPosition;	          junit.framework.ComparisonFailure:    outputEndPosition;    	non-compiled	[CE]  ';'  expected	73	None	replace
503	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  outputStartPosition);  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  outputStartPosition);	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile,    outputStartPosition);    	non-compiled	[CE]  not  a  statement	107	None	replace
504	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(outputEndPosition,  sourceFile);  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(outputEndPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(outputEndPosition,  sourceFile);	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile,    outputStartPosition);    	non-compiled	[CE]  not  a  statement	107	None	replace
505	[BUG]  [BUGGY]  JSError.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition);  [CE]  not  a  statement  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  JSError.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	JSError.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition);	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile,    outputStartPosition);    	non-compiled	[CE]  not  a  statement	107	None	replace
506	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);	  sourceFile    =    FixupSourceLocation(sourceFile,    node,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
507	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  node);  [CE]  cannot  find  symbol  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  node);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  node);	  sourceFile    =    FixupSourceLocation(sourceFile,    node,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
508	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  getSourceMapping(sourceFile.toString());  file  =  fixupSourceLocation(sourceFile.toString());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  getSourceMapping(sourceFile.toString());  file  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  getSourceMapping(sourceFile.toString());  file  =  fixupSourceLocation(sourceFile.toString());	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    file    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
509	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.toString());  file  =  fixupSourceLocation(sourceFile.toString());  [CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated  [FE]              AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.toString());  file  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.toString());  file  =  fixupSourceLocation(sourceFile.toString());	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    file    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated	39	None	replace
510	[BUG]  [BUGGY]  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString()  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString()  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString()	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    else    {    node.getProp(Node.ORIGINALNAME_PROP);    generator.addMapping(    sourceFile,    sourceFile    	non-compiled	[CE]  ')'  expected	102	None	replace
511	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString();  }  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString();  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString();  }	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    else    {    node.getProp(Node.ORIGINALNAME_PROP);    generator.addMapping(    sourceFile,    sourceFile    	non-compiled	[CE]  ')'  expected	102	None	replace
512	[BUG]  [BUGGY]  sourceFile  =  fixesupSourceLocation(sourceFile.toString());  [CE]  cannot  find  symbol  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixesupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixesupSourceLocation(sourceFile.toString());	  sourceFile    =    fixupSourceLocation(sourceFile.toString()    +    1);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
513	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile.toString());  [CE]  cannot  find  symbol  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(sourceFile.toString());	  sourceFile    =    fixupSourceLocation(sourceFile.toString()    +    1);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
514	[BUG]  [BUGGY]  sourceFile  =  fixedupSourceLocation(sourceFile.toString());  [CE]  cannot  find  symbol  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixedupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixedupSourceLocation(sourceFile.toString());	  sourceFile    =    fixupSourceLocation(sourceFile.toString()    +    1);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
515	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.toString());  [CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.toString());	  sourceFile    =    fixupSourceLocation(sourceFile.toString()    +    1);    	non-compiled	[CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated	52	None	replace
516	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(node,  outputStartPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(node,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(node,  outputStartPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    inputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	112	None	replace
517	[BUG]  [BUGGY]  FilePosition  outputStartPosition  =  sourceFile.getSourcePosition();  [CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  FilePosition  outputStartPosition  =  sourceFile.getSourcePosition();  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	FilePosition  outputStartPosition  =  sourceFile.getSourcePosition();	  FilePosition    outputStartPosition    =    sourceFile.getLineno();    	non-compiled	[CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	14	None	replace
518	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  null  expected:  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  null  expected:  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  null  expected:	          junit.framework.ComparisonFailure:    null    expected:    <...t   ":1    	non-compiled	[CE]  not  a  statement	28	None	replace
519	[BUG]  [BUGGY]  sourceFile  =  fixupSource(sourceFile,  outputEndPosition,  sourceLocationFixupCache);  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSource(sourceFile,  outputEndPosition,  sourceLocationFixupCache);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSource(sourceFile,  outputEndPosition,  sourceLocationFixupCache);	  sourceFile    =    fixupSource(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
520	[BUG]  [BUGGY]  sourceFile  =  fixupSource(sourceFile,  outputEndPosition,  inputStartPosition);  [CE]  cannot  find  symbol  inputStartPosition  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSource(sourceFile,  outputEndPosition,  inputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSource(sourceFile,  outputEndPosition,  inputStartPosition);	  sourceFile    =    fixupSource(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  inputStartPosition	53	None	replace
521	[BUG]  [BUGGY]  SourceMap  generator  =  fixupSourceLocation(node,  outputStartPosition,  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  generator  =  fixupSourceLocation(node,  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  generator  =  fixupSourceLocation(node,  outputStartPosition,  outputEndPosition);	  SourceMap    generator    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	69	None	replace
522	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  sourceFile);  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  sourceFile);	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile,    outputEndPosition);    	non-compiled	[CE]  not  a  statement	12	None	replace
523	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  node);  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  node);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  node);	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile,    outputEndPosition);    	non-compiled	[CE]  not  a  statement	12	None	replace
524	[BUG]  [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  generator  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    inputStartPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	86	None	replace
525	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure(sourceFile);  }  [CE]  package  junit  does  not  exist  [FE]          AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure(sourceFile);  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure(sourceFile);  }	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator    generator    =    junit.framework.ComparisonFailure(sourceFile);    	non-compiled	[CE]  package  junit  does  not  exist	82	None	replace
526	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition);  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure(sourceFile);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition);  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure(sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition);  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure(sourceFile);	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator    generator    =    junit.framework.ComparisonFailure(sourceFile);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	82	None	replace
527	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputStartPosition);  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure(sourceFile);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputStartPosition);  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure(sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputStartPosition);  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure(sourceFile);	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator    generator    =    junit.framework.ComparisonFailure(sourceFile);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	82	None	replace
528	[BUG]  [BUGGY]  JSError.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  sourceFile.getCharno())  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  JSError.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  sourceFile.getCharno())  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	JSError.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  sourceFile.getCharno())	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile.getLineno(),    sourceFile.getCharno())    	non-compiled	[CE]  not  a  statement	104	None	replace
529	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparFailure(sourceFile.getLineno(),  sourceFile.getCharno())  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparFailure(sourceFile.getLineno(),  sourceFile.getCharno())  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparFailure(sourceFile.getLineno(),  sourceFile.getCharno())	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile.getLineno(),    sourceFile.getCharno())    	non-compiled	[CE]  not  a  statement	104	None	replace
530	[BUG]  [BUGGY]  Annotated.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  sourceFile.getCharno())  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  Annotated.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  sourceFile.getCharno())  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	Annotated.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  sourceFile.getCharno())	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile.getLineno(),    sourceFile.getCharno())    	non-compiled	[CE]  not  a  statement	104	None	replace
531	[BUG]  [BUGGY]  sourceFile  =  fixupSource(sourceFile,  outputStartPosition,  inputEndPosition);  [CE]  cannot  find  symbol  inputEndPosition  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSource(sourceFile,  outputStartPosition,  inputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSource(sourceFile,  outputStartPosition,  inputEndPosition);	  sourceFile    =    fixupSource(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol  inputEndPosition	54	None	replace
532	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  n.getLineno());  [CE]  cannot  find  symbol  n  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  n.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  n.getLineno());	  sourceFile    =    fixupSourceLocation(sourceFile,    junit.getLineno());    	non-compiled	[CE]  cannot  find  symbol  n	100	None	replace
533	[BUG]  [BUGGY]  file  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile);  [CE]  cannot  find  symbol  file  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  file  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	file  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile);	  file    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  file	7	None	replace
534	[BUG]  [BUGGY]  FilePosition  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  FilePosition  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	FilePosition  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);	  file    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	7	None	replace
535	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition.toString(),  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition.toString(),  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition.toString(),  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	47	None	replace
536	[BUG]  [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile.toString(),  outputStartPosition,  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile.toString(),  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  generator  =  fixupSourceLocation(sourceFile.toString(),  outputStartPosition,  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	47	None	replace
537	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition,  sourceFile.length());  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition,  sourceFile.length());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition,  sourceFile.length());	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	47	None	replace
538	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  generateSourceMapping(sourceFile,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  generateSourceMapping(sourceFile,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  generateSourceMapping(sourceFile,  outputEndPosition);	  sourceFile    =    calculateSourceLocation(sourceFile,    inputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
539	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition.getLineno(),  outputStartPosition);  [CE]  cannot  find  symbol  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition.getLineno(),  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition.getLineno(),  outputStartPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition.getLineno());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
540	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition.getLineno(),  node);  [CE]  cannot  find  symbol  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition.getLineno(),  node);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition.getLineno(),  node);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition.getLineno());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
541	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputEndPosition,  sourceLocationFixupCache);  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputEndPosition,  sourceLocationFixupCache);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputEndPosition,  sourceLocationFixupCache);	  SourceMapGenerator    generator    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
542	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.getLineno());  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.getLineno());	  SourceMapGenerator    generator    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
543	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node.getLineno(),  outputStartPosition.getEndPosition());  [CE]  cannot  find  symbol  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node.getLineno(),  outputStartPosition.getEndPosition());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  node.getLineno(),  outputStartPosition.getEndPosition());	  sourceFile    =    fixupSourceLocation(sourceFile.getLineno(),    node.getEndPosition());    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
544	[BUG]  [BUGGY]  FilePosition  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  FilePosition  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	FilePosition  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition);	  file    =    FixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	26	None	replace
545	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  inputStartPosition.length);  [CE]  cannot  find  symbol  inputStartPosition  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  inputStartPosition.length);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  inputStartPosition.length);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    sourceFile.length);    	non-compiled	[CE]  cannot  find  symbol  inputStartPosition	71	None	replace
546	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  generator,  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  generator,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  generator,  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition,    generator);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	64	None	replace
547	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  generator,  inputEndPosition);  [CE]  cannot  find  symbol  inputEndPosition  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  generator,  inputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  generator,  inputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition,    generator);    	non-compiled	[CE]  cannot  find  symbol  inputEndPosition	64	None	replace
548	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputStartPosition,  outputEndPosition));  [CE]  not  a  statement  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputStartPosition,  outputEndPosition));  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputStartPosition,  outputEndPosition));	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile,    outputEndPosition));    	non-compiled	[CE]  not  a  statement	15	None	replace
549	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  outputStartPosition);  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated  [FE]    AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  outputStartPosition);  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  outputStartPosition);  sourceFile  =  fixupSourceLocation(sourceFile.toString());	  	non-compiled	[CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated	36	None	add
550	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  FilePosition  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]      AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  FilePosition  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        sourceFile    =    fixupSourceLocation(sourceFile.toString());    FilePosition  sourceFile  =  fixupSourceLocation(sourceFile.toString());	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	36	None	add
551	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]        AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        sourceFile    =    fixupSourceLocation(sourceFile.toString());    Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	36	None	add
552	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  sourceMappings.get(sourceFile);  [CE]  cannot  find  symbol  sourceMappings  [FE]          AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  sourceMappings.get(sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator  generator  =  sourceMappings.get(sourceFile);	  	non-compiled	[CE]  cannot  find  symbol  sourceMappings	36	None	add
553	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	add	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	40	16	add
554	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	40	16	add
555	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  Node  node  =  node.getProp(Node.ORIGINALNAME_PROP);  [CE]  variable  node  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]      AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  Node  node  =  node.getProp(Node.ORIGINALNAME_PROP);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    Node  node  =  node.getProp(Node.ORIGINALNAME_PROP);	  	non-compiled	[CE]  variable  node  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	40	None	add
556	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  Node  node  =  node.getProp(Node.ORIGINALNAME_PROP);  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [CE]  variable  node  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]        AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  Node  node  =  node.getProp(Node.ORIGINALNAME_PROP);  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    Node  node  =  node.getProp(Node.ORIGINALNAME_PROP);  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  	non-compiled	[CE]  variable  node  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	40	None	add
557	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	add	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    sourceFile  =  fixupSourceLocation(sourceFile.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	40	16	add
558	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    sourceFile  =  fixupSourceLocation(sourceFile.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	40	16	add
559	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  Node  node  =  node.getProp(Node.ORIGINALNAME_PROP);  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [CE]  variable  node  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]            AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  Node  node  =  node.getProp(Node.ORIGINALNAME_PROP);  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    Node  node  =  node.getProp(Node.ORIGINALNAME_PROP);  sourceFile  =  fixupSourceLocation(sourceFile.toString());	  	non-compiled	[CE]  variable  node  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	40	None	add
560	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  FilePosition  outputStartPosition  =  outputEndPosition.getSourcePosition();  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]              AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  FilePosition  outputStartPosition  =  outputEndPosition.getSourcePosition();  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    FilePosition  outputStartPosition  =  outputEndPosition.getSourcePosition();  sourceFile  =  fixupSourceLocation(sourceFile.toString());	  	non-compiled	[CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	40	None	add
561	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  FilePosition  outputStartPosition  =  outputEndPosition.getSourcePosition();  [CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  FilePosition  outputStartPosition  =  outputEndPosition.getSourcePosition();  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    FilePosition  outputStartPosition  =  outputEndPosition.getSourcePosition();	  	non-compiled	[CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	40	None	add
562	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  Node  node  =  node.getProp(Node.ORIGINALNAME_PROP);  if(node!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [CE]  variable  node  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                  AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  Node  node  =  node.getProp(Node.ORIGINALNAME_PROP);  if(node!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    Node  node  =  node.getProp(Node.ORIGINALNAME_PROP);  if(node!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  	non-compiled	[CE]  variable  node  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	40	None	add
563	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(outputStartPosition,  outputEndPosition);  [CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  new  SourceMapGenerator(outputStartPosition,  outputEndPosition);	  SourceMapGenerator    generator    =    new    SourceMapGenerator(sourceFile,    outputEndPosition);    	non-compiled	[CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated	27	None	replace
564	[BUG]  [BUGGY]  if(sourceFile  ==  null)  {  ComparisonFailure  :  null;  generator.addMapping(sourceFile,  outputEndPosition,  sourceFile);  }  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile  ==  null)  {  ComparisonFailure  :  null;  generator.addMapping(sourceFile,  outputEndPosition,  sourceFile);  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile  ==  null)  {  ComparisonFailure  :  null;  generator.addMapping(sourceFile,  outputEndPosition,  sourceFile);  }	          junit.framework.ComparisonFailure:    null;    generator.addMapping(sourceFile,    outputEndPosition,    sourceFile);    	non-compiled	[CE]  not  a  statement	76	None	replace
565	[BUG]  [BUGGY]  if(node.getLineno()  ==  0)  {  ComparisonFailure  :  null;  generator.addMapping(sourceFile,  outputEndPosition,  sourceFile);  }  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(node.getLineno()  ==  0)  {  ComparisonFailure  :  null;  generator.addMapping(sourceFile,  outputEndPosition,  sourceFile);  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(node.getLineno()  ==  0)  {  ComparisonFailure  :  null;  generator.addMapping(sourceFile,  outputEndPosition,  sourceFile);  }	          junit.framework.ComparisonFailure:    null;    generator.addMapping(sourceFile,    outputEndPosition,    sourceFile);    	non-compiled	[CE]  not  a  statement	76	None	replace
566	[BUG]  [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile);  [CE]  cannot  find  symbol  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile);	  SourceMap    <    K,    V>    sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
567	[BUG]  [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length);  [CE]  cannot  find  symbol  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length);	  SourceMap    <    K,    V>    sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
568	[BUG]  [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(node,  outputStartPosition,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(node,  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(node,  outputStartPosition,  outputEndPosition);	  SourceMap    <    K,    V>    sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
569	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  sourceEndPosition);  [CE]  cannot  find  symbol  sourceEndPosition  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  sourceEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  sourceEndPosition);	  SourceMapGenerator    generator    =    FixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol  sourceEndPosition	62	None	replace
570	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile.getLineno());  [CE]  cannot  find  symbol  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile.getLineno());	  SourceMapGenerator    generator    =    calculateSourceLocation(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
571	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile,  inputStartPosition);  [CE]  cannot  find  symbol  inputStartPosition  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile,  inputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile,  inputStartPosition);	  SourceMapGenerator    generator    =    calculateSourceLocation(sourceFile);    	non-compiled	[CE]  cannot  find  symbol  inputStartPosition	87	None	replace
572	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  calculateSourceLocation(node);  [CE]  cannot  find  symbol  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  calculateSourceLocation(node);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  calculateSourceLocation(node);	  SourceMapGenerator    generator    =    calculateSourceLocation(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
573	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(outputStartPosition,  node);  [CE]  cannot  find  symbol  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(outputStartPosition,  node);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(outputStartPosition,  node);	  sourceFile    =    FixupSourceLocation(node,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
574	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  outputEndPosition);  [CE]  cannot  find  symbol  compiler  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  NodeTraversal.traverse(compiler,  node,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	NodeTraversal.traverse(compiler,  node,  outputEndPosition);	  junit.framework.ComparisonFailure:    null    expected    	non-compiled	[CE]  cannot  find  symbol  compiler	16	None	replace
575	[BUG]  [BUGGY]  sourceFile  =  resolveSource(sourceFile,  outputEndPosition,  sourceLocationFixupCache);  [CE]  cannot  find  symbol  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  resolveSource(sourceFile,  outputEndPosition,  sourceLocationFixupCache);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  resolveSource(sourceFile,  outputEndPosition,  sourceLocationFixupCache);	  sourceFile    =    resolveSource(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
576	[BUG]  [BUGGY]  sourceFile  =  resolveSource(outputStartPosition,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  resolveSource(outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  resolveSource(outputStartPosition,  outputEndPosition);	  sourceFile    =    resolveSource(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
577	[BUG]  [BUGGY]  sourceFile  =  resolveSource(sourceFile,  outputEndPosition,  inputStartPosition);  [CE]  cannot  find  symbol  inputStartPosition  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  resolveSource(sourceFile,  outputEndPosition,  inputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  resolveSource(sourceFile,  outputEndPosition,  inputStartPosition);	  sourceFile    =    resolveSource(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  inputStartPosition	57	None	replace
578	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile    ==    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    	non-compiled	[CE]  incompatible  types	46	None	replace
579	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length(),  node);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length(),  node);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length(),  node);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    sourceFile.length());    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	91	None	replace
580	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  node.length());  [CE]  cannot  find  symbol  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  node.length());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  node.length());	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    sourceFile.length());    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
581	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length(),  inputStartPosition);  [CE]  cannot  find  symbol  inputStartPosition  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length(),  inputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length(),  inputStartPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    sourceFile.length());    	non-compiled	[CE]  cannot  find  symbol  inputStartPosition	91	None	replace
582	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  null);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  null);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  null);	  sourceFile    =    fixupSourceLocation(sourceFile,    node,    outputStartPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	96	None	replace
583	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition.getLineno(),  node);  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition.getLineno(),  node);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition.getLineno(),  node);	  sourceFile    =    fixupSourceLocation(sourceFile.getLineno(),    node);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
584	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(node,  outputStartPosition,  outputEndPosition,  prefix);  [CE]  cannot  find  symbol  prefix  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(node,  outputStartPosition,  outputEndPosition,  prefix);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(node,  outputStartPosition,  outputEndPosition,  prefix);	  sourceFile    =    fixupSourceLocation(node,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  prefix	6	None	replace
585	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  inputStartPosition,  node.getLineno());  [CE]  cannot  find  symbol  inputStartPosition  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  inputStartPosition,  node.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  inputStartPosition,  node.getLineno());	  sourceFile    =    fixupSourceLocation(sourceFile,    node.getLineno());    	non-compiled	[CE]  cannot  find  symbol  inputStartPosition	29	None	replace
586	[BUG]  [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile.cloneTree());  [CE]  cannot  find  symbol  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile.cloneTree());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile.cloneTree());	  SourceMap    generator    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
587	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    else    {    String    originalName    =    (String)node.getProp(Node.ORIGINALNAME_PROP);    generator.addMapping(    sourceFile    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
588	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition.getLineno());  [CE]  cannot  find  symbol  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition.getLineno());	  sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition.getLineno());    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
589	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  junit.getLineno());  [CE]  cannot  find  symbol  junit  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  junit.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  junit.getLineno());	  sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition.getLineno());    	non-compiled	[CE]  cannot  find  symbol  junit	30	None	replace
590	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  sourceFile,  outputEndPosition;  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  sourceFile,  outputEndPosition;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  sourceFile,  outputEndPosition;	          junit.framework.ComparisonFailure:    sourceFile;    	non-compiled	[CE]  not  a  statement	74	None	replace
591	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  node;  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  node;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  node;	          junit.framework.ComparisonFailure:    sourceFile;    	non-compiled	[CE]  not  a  statement	74	None	replace
592	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFile(sourceFile);  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFile(sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFile(sourceFile);	          junit.framework.ComparisonFailure:    sourceFile;    	non-compiled	[CE]  not  a  statement	74	None	replace
593	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  prefix);  [CE]  cannot  find  symbol  prefix  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  prefix);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  prefix);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  prefix	80	None	replace
594	[BUG]  [BUGGY]  Node  junit.framework.ComparisonFailure:  null;  outputStartPosition  =  outputEndPosition;  [CE]  ';'  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  Node  junit.framework.ComparisonFailure:  null;  outputStartPosition  =  outputEndPosition;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	Node  junit.framework.ComparisonFailure:  null;  outputStartPosition  =  outputEndPosition;	          junit.framework.ComparisonFailure:    null;    outputStartPosition    =    outputEndPosition;    	non-compiled	[CE]  ';'  expected	77	None	replace
595	[BUG]  [BUGGY]  Node  node  =  node.getProp(Node.ORIGINALNAME_PROP);  outputStartPosition  =  outputEndPosition;  [CE]  variable  node  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  Node  node  =  node.getProp(Node.ORIGINALNAME_PROP);  outputStartPosition  =  outputEndPosition;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	Node  node  =  node.getProp(Node.ORIGINALNAME_PROP);  outputStartPosition  =  outputEndPosition;	          junit.framework.ComparisonFailure:    null;    outputStartPosition    =    outputEndPosition;    	non-compiled	[CE]  variable  node  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	77	None	replace
596	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile.cloneTree(),  outputStartPosition);  [CE]  cannot  find  symbol  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile.cloneTree(),  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile.cloneTree(),  outputStartPosition);	  sourceFile    =    calculateSourceLocation(sourceFile.cloneTree());    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
597	[BUG]  [BUGGY]  sourceFile  =  fixupSource(outputStartPosition,  sourceFile);  [CE]  cannot  find  symbol  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSource(outputStartPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSource(outputStartPosition,  sourceFile);	  sourceFile    =    fixupSource(sourceFile,    inputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
598	[BUG]  [BUGGY]  SourceMap  generator  =  fixupSource(sourceFile,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  generator  =  fixupSource(sourceFile,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  generator  =  fixupSource(sourceFile,  outputEndPosition);	  sourceFile    =    fixupSource(sourceFile,    inputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
599	[BUG]  [BUGGY]  SourceMap  <  String,  Object>  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length);  [CE]  type  SourceMap  does  not  take  parameters  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  <  String,  Object>  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  <  String,  Object>  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length);	  SourceMap    <    String,    Object>    sourceFile    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  type  SourceMap  does  not  take  parameters	92	None	replace
600	[BUG]  [BUGGY]  SourceMap  <  String,  Object>  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  inputStartPosition);  [CE]  type  SourceMap  does  not  take  parameters  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  <  String,  Object>  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  inputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  <  String,  Object>  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  inputStartPosition);	  SourceMap    <    String,    Object>    sourceFile    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  type  SourceMap  does  not  take  parameters	92	None	replace
601	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.getLineno(),  outputStartPosition);  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.getLineno(),  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.getLineno(),  outputStartPosition);	  SourceMapGenerator    generator    =    new    SourceMapGenerator(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
602	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  outputStartPosition  -  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  outputStartPosition  -  1);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  outputStartPosition  -  1);	  SourceMapGenerator    generator    =    new    SourceMapGenerator(sourceFile,    outputStartPosition);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	61	None	replace
603	[BUG]  [BUGGY]  sourceFile  =  resolveSource(sourceFile,  outputStartPosition,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  resolveSource(sourceFile,  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  resolveSource(sourceFile,  outputStartPosition,  outputEndPosition);	  sourceFile    =    resolveSource(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
604	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(node,  outputEndPosition,  sourceFile);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(node,  outputEndPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(node,  outputEndPosition,  sourceFile);	  sourceFile    =    fixupSourceLocation(node,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	3	None	replace
605	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  [CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile    =    fixupSourceLocation(sourceFile.toString()    +    1);    SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);	  	non-compiled	[CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated	51	None	add
606	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  SourceMapGenerator  generator  =  getSourceMapping(sourceFile.toString()  +  1);  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  [CE]  cannot  find  symbol  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  SourceMapGenerator  generator  =  getSourceMapping(sourceFile.toString()  +  1);  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile    =    fixupSourceLocation(sourceFile.toString()    +    1);    SourceMapGenerator  generator  =  getSourceMapping(sourceFile.toString()  +  1);  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);	  	non-compiled	[CE]  cannot  find  symbol	51	None	add
607	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.toString()  +  1);  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  [CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.toString()  +  1);  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile    =    fixupSourceLocation(sourceFile.toString()    +    1);    SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.toString()  +  1);  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);	  	non-compiled	[CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated	51	None	add
608	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.getLineno());  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  [CE]  cannot  find  symbol  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.getLineno());  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile    =    fixupSourceLocation(sourceFile.toString()    +    1);    SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.getLineno());  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);	  	non-compiled	[CE]  cannot  find  symbol	51	None	add
609	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  Node  node  =  node.getProp(Node.ORIGINALNAME_PROP);  [CE]  variable  node  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]    AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  Node  node  =  node.getProp(Node.ORIGINALNAME_PROP);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile    ==    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    Node  node  =  node.getProp(Node.ORIGINALNAME_PROP);	  	non-compiled	[CE]  variable  node  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	45	None	add
610	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	add	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile    ==    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	45	16	add
611	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile    ==    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	45	16	add
612	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  Node  node  =  node.getProp(Node.ORIGINALNAME_PROP);  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [CE]  variable  node  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]        AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  Node  node  =  node.getProp(Node.ORIGINALNAME_PROP);  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile    ==    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    Node  node  =  node.getProp(Node.ORIGINALNAME_PROP);  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  	non-compiled	[CE]  variable  node  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	45	None	add
613	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	add	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile    ==    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    sourceFile  =  fixupSourceLocation(sourceFile.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	45	16	add
614	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile    ==    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    sourceFile  =  fixupSourceLocation(sourceFile.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	45	16	add
615	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  Node  node  =  node.getProp(Node.ORIGINALNAME_PROP);  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [CE]  variable  node  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]            AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  Node  node  =  node.getProp(Node.ORIGINALNAME_PROP);  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile    ==    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    Node  node  =  node.getProp(Node.ORIGINALNAME_PROP);  sourceFile  =  fixupSourceLocation(sourceFile.toString());	  	non-compiled	[CE]  variable  node  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	45	None	add
616	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  FilePosition  outputStartPosition  =  outputEndPosition.getSourcePosition();  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]              AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  FilePosition  outputStartPosition  =  outputEndPosition.getSourcePosition();  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile    ==    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    FilePosition  outputStartPosition  =  outputEndPosition.getSourcePosition();  sourceFile  =  fixupSourceLocation(sourceFile.toString());	  	non-compiled	[CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	45	None	add
617	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  FilePosition  outputStartPosition  =  outputEndPosition.getSourcePosition();  [CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  FilePosition  outputStartPosition  =  outputEndPosition.getSourcePosition();  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile    ==    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    FilePosition  outputStartPosition  =  outputEndPosition.getSourcePosition();	  	non-compiled	[CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	45	None	add
618	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  Node  node  =  node.getProp(Node.ORIGINALNAME_PROP);  if(node!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [CE]  variable  node  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                  AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  Node  node  =  node.getProp(Node.ORIGINALNAME_PROP);  if(node!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile    ==    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    Node  node  =  node.getProp(Node.ORIGINALNAME_PROP);  if(node!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  	non-compiled	[CE]  variable  node  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	45	None	add
619	[BUG]  [BUGGY]  Node  node  =  junit.framework.ComparisonFailure;  [CE]  variable  node  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  Node  node  =  junit.framework.ComparisonFailure;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	Node  node  =  junit.framework.ComparisonFailure;	  junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  variable  node  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	10	None	replace
620	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure;  sourceFile  =  fixupSourceLocation(sourceFile.toString()  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure;  sourceFile  =  fixupSourceLocation(sourceFile.toString()  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure;  sourceFile  =  fixupSourceLocation(sourceFile.toString()	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator    generator    =    junit.framework.ComparisonFailure;    sourceFile    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  ')'  expected	83	None	replace
621	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure;  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [CE]  package  junit  does  not  exist  [FE]              AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure;  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure;  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator    generator    =    junit.framework.ComparisonFailure;    sourceFile    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  package  junit  does  not  exist	83	None	replace
622	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  inputStartPosition.getLineno());  [CE]  cannot  find  symbol  inputStartPosition  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  inputStartPosition.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile,  inputStartPosition.getLineno());	  sourceFile    =    calculateSourceLocation(sourceFile.getLineno());    	non-compiled	[CE]  cannot  find  symbol  inputStartPosition	20	None	replace
623	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  generator,  inputEndPosition);  [CE]  cannot  find  symbol  inputEndPosition  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  generator,  inputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  generator,  inputEndPosition);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputStartPosition,    generator);    	non-compiled	[CE]  cannot  find  symbol  inputEndPosition	59	None	replace
624	[BUG]  [BUGGY]  Node  originalName  =  node.getProp(Node.ORIGINALNAME_PROP,  outputStartPosition);  [CE]  method  getProp  in  class  Node  cannot  be  applied  to  given  types;  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  Node  originalName  =  node.getProp(Node.ORIGINALNAME_PROP,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	Node  originalName  =  node.getProp(Node.ORIGINALNAME_PROP,  outputStartPosition);	  Node    originalName    =    node.getProp(Node.ORIGINALNAME_PROP);    	non-compiled	[CE]  method  getProp  in  class  Node  cannot  be  applied  to  given  types;	106	None	replace
625	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition.getLineno());  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition.getLineno());	  sourceFile    =    fixupSourceLocation(sourceFile,    inputStartPosition.getLineno());    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
626	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition.toString(),  node);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition.toString(),  node);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition.toString(),  node);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    node);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	103	None	replace
627	[BUG]  [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  inputStartPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  inputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  inputStartPosition);	  SourceMap    sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	110	None	replace
628	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(outputStartPosition,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(outputStartPosition,  outputEndPosition);	  sourceFile    =    FixupSourceLocation(node,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
629	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(node,  outputEndPosition,  outputStartPosition);  [CE]  cannot  find  symbol  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(node,  outputEndPosition,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(node,  outputEndPosition,  outputStartPosition);	  sourceFile    =    FixupSourceLocation(node,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
630	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile.toString(),  outputStartPosition);  [CE]  cannot  find  symbol  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile.toString(),  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile.toString(),  outputStartPosition);	  sourceFile    =    calculateSourceLocation(sourceFile.toString());    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
631	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  sourceFile  =  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  sourceFile  =  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  sourceFile  =	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    Node    sourceFile    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  ';'  expected	38	None	replace
632	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile);	  SourceMapGenerator    generator    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	2	None	replace
633	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(node.getLineno(),  node.getCharno()));  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(node.getLineno(),  node.getCharno()));  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(node.getLineno(),  node.getCharno()));	          junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile.getLineno(),    sourceFile.getCharno()));    	non-compiled	[CE]  not  a  statement	108	None	replace
634	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  sourceFile.getCharno());  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  sourceFile.getCharno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  sourceFile.getCharno());	          junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile.getLineno(),    sourceFile.getCharno()));    	non-compiled	[CE]  not  a  statement	108	None	replace
635	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(node.getLineno(),  outputEndPosition);  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(node.getLineno(),  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(node.getLineno(),  outputEndPosition);	  junit.framework.ComparisonFailure:    null    expected;    	non-compiled	[CE]  not  a  statement	11	None	replace
636	[BUG]  [BUGGY]  Node  junit.framework.ComparisonFailure:  null  expected;  [CE]  ';'  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  Node  junit.framework.ComparisonFailure:  null  expected;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	Node  junit.framework.ComparisonFailure:  null  expected;	  junit.framework.ComparisonFailure:    null    expected;    	non-compiled	[CE]  ';'  expected	11	None	replace
637	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparFailure(sourceFile,  outputEndPosition);  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparFailure(sourceFile,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparFailure(sourceFile,  outputEndPosition);	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile);    	non-compiled	[CE]  not  a  statement	105	None	replace
638	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(node,  outputEndPosition);  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(node,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(node,  outputEndPosition);	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile);    	non-compiled	[CE]  not  a  statement	105	None	replace
639	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparFailure(sourceFile,  outputStartPosition);  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparFailure(sourceFile,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparFailure(sourceFile,  outputStartPosition);	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile);    	non-compiled	[CE]  not  a  statement	105	None	replace
640	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile  +  outputEndPosition);  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile  +  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile  +  outputEndPosition);	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile);    	non-compiled	[CE]  not  a  statement	105	None	replace
641	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);	  sourceFile    =    calculateSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
642	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  generator,  node);  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  generator,  node);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  generator,  node);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputEndPosition,    generator);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
643	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition,  generator);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition,  generator);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputEndPosition,    generator);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	23	None	replace
644	[BUG]  [BUGGY]  SourceFile  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputStartPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceFile  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceFile  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputStartPosition);	  SourceFile    sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	1	None	replace
645	[BUG]  [BUGGY]  SourceFile  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  inputStartPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceFile  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  inputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceFile  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  inputStartPosition);	  SourceFile    sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	1	None	replace
646	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(node.getName());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(node.getName());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(node.getName());	  sourceFile    =    fixupSourceLocation(sourceFile.getName());    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
647	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputChildPosition);  [CE]  cannot  find  symbol  outputChildPosition  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputChildPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputChildPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    inputStartPosition);    	non-compiled	[CE]  cannot  find  symbol  outputChildPosition	72	None	replace
648	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition,  inputStartPosition);  [CE]  cannot  find  symbol  inputStartPosition  [FE]          AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition,  inputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition,  inputStartPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol  inputStartPosition	48	None	replace
649	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	4	None	replace
650	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile.length);  [CE]  cannot  find  symbol  length  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile.length);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile.length);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  length	4	None	replace
651	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  junit);  [CE]  cannot  find  symbol  junit  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  junit);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  junit);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  junit	4	None	replace
652	[BUG]  [BUGGY]  Node  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition);  [CE]  ';'  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  Node  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	Node  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition);	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile,    outputStartPosition);    	non-compiled	[CE]  ';'  expected	107	None	replace
653	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(node,  outputStartPosition,  outputEndPosition);  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(node,  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(node,  outputStartPosition,  outputEndPosition);	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile,    outputStartPosition);    	non-compiled	[CE]  not  a  statement	107	None	replace
654	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputStartPosition,  sourceFile.length());  [CE]  not  a  statement  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputStartPosition,  sourceFile.length());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputStartPosition,  sourceFile.length());	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile,    outputStartPosition);    	non-compiled	[CE]  not  a  statement	107	None	replace
655	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length);  [CE]  cannot  find  symbol  length  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length);	  sourceFile    =    calculateSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  length	17	None	replace
656	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  inputStartPosition,  outputEndPosition);  [CE]  cannot  find  symbol  inputStartPosition  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  inputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(sourceFile,  inputStartPosition,  outputEndPosition);	  sourceFile    =    FixupSourceLocation(sourceFile,    node,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  inputStartPosition	93	None	replace
657	[BUG]  [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  node.getLineno());  [CE]  cannot  find  symbol  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  node.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  node.getLineno());	  sourceFile    =    fixupSourceLocation(sourceFile,    junit.getLineno());    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
658	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  compiler.getLineno());  [CE]  cannot  find  symbol  compiler  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  compiler.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  compiler.getLineno());	  sourceFile    =    fixupSourceLocation(sourceFile,    junit.getLineno());    	non-compiled	[CE]  cannot  find  symbol  compiler	100	None	replace
659	[BUG]  [BUGGY]  SourceMap  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  outputEndPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  outputEndPosition);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputEndPosition,    inputStartPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	79	None	replace
660	[BUG]  [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  <  K,  V>  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  outputEndPosition);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputEndPosition,    inputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
661	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  null);  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  null);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  null);	  junit.framework.ComparisonFailure:    null    expected;    	non-compiled	[CE]  not  a  statement	11	None	replace
662	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  NON_GLOBAL;  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  NON_GLOBAL;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  NON_GLOBAL;	  junit.framework.ComparisonFailure:    null    expected;    	non-compiled	[CE]  not  a  statement	11	None	replace
663	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  outputStartPosition,  inputEndPosition);  [CE]  cannot  find  symbol  inputEndPosition  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  outputStartPosition,  inputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile,  outputStartPosition,  inputEndPosition);	  sourceFile    =    calculateSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol  inputEndPosition	18	None	replace
664	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile.cloneTree());  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile.cloneTree());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile.cloneTree());	  sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
665	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile.length());  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile.length());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile.length());	  sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	4	None	replace
666	[BUG]  [BUGGY]  sourceFile  =  fixingSourceLocation(sourceFile.toString());  [CE]  cannot  find  symbol  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixingSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixingSourceLocation(sourceFile.toString());	  sourceFile    =    fixupSourceLocation(sourceFile.toString()    +    1);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
667	[BUG]  [BUGGY]  if(node.getLineno()  <  0)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(node.getLineno()  <  0)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(node.getLineno()  <  0)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
668	[BUG]  [BUGGY]  if(node.getLineno()  <  0)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString()  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(node.getLineno()  <  0)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString()  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(node.getLineno()  <  0)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString()	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    	non-compiled	[CE]  ')'  expected	41	None	replace
669	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure;  sourceFile  =  fixupSourceLocation(sourceFile.to  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure;  sourceFile  =  fixupSourceLocation(sourceFile.to  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure;  sourceFile  =  fixupSourceLocation(sourceFile.to	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator    generator    =    junit.framework.ComparisonFailure;    sourceFile    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  ')'  expected	83	None	replace
670	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  compiler.getLineno());  [CE]  cannot  find  symbol  compiler  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  compiler.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  compiler.getLineno());	  sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition.getLineno());    	non-compiled	[CE]  cannot  find  symbol  compiler	30	None	replace
671	[BUG]  [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile.length);  [CE]  cannot  find  symbol  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile.length);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile.length);	  SourceMap    <    K,    V>    sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
672	[BUG]  [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile);  [CE]  cannot  find  symbol  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile);	  SourceMap    <    K,    V>    sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
673	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length(),  sourceFile.length());  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length(),  sourceFile.length());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length(),  sourceFile.length());	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    sourceFile.length());    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	91	None	replace
674	[BUG]  [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile.length());  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile.length());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile.length());	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    sourceFile.length());    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	91	None	replace
675	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  file.length);  [CE]  cannot  find  symbol  file  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  file.length);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  file.length);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    sourceFile.length);    	non-compiled	[CE]  cannot  find  symbol  file	71	None	replace
676	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputStartPosition,  sourceFile);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputStartPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputStartPosition,  sourceFile);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    outputStartPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	63	None	replace
677	[BUG]  [BUGGY]  this.sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition);  [CE]  cannot  find  symbol  sourceFile  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  this.sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	this.sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition);	  file    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  sourceFile	60	None	replace
678	[BUG]  [BUGGY]  file  =  FixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length());  [CE]  cannot  find  symbol  file  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  file  =  FixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	file  =  FixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length());	  file    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  file	60	None	replace
679	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  SourceMapGenerator  generator  =  new  SourceMapGenerator  [CE]  '('  or  '['  expected  [FE]              AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  SourceMapGenerator  generator  =  new  SourceMapGenerator  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  SourceMapGenerator  generator  =  new  SourceMapGenerator	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator    generator    =    new    SourceMapGenerator(sourceFile.toString());    sourceFile    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  '('  or  '['  expected	84	None	replace
680	[BUG]  [BUGGY]  SourceMap  sourceFile  =  calculateSourceLocation(sourceFile,  outputEndPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  sourceFile  =  calculateSourceLocation(sourceFile,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  calculateSourceLocation(sourceFile,  outputEndPosition);	  sourceFile    =    calculateSourceLocation(sourceFile,    inputStartPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	21	None	replace
681	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  inputEndPosition);  [CE]  cannot  find  symbol  inputEndPosition  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  inputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile,  inputEndPosition);	  sourceFile    =    calculateSourceLocation(sourceFile,    inputStartPosition);    	non-compiled	[CE]  cannot  find  symbol  inputEndPosition	21	None	replace
682	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  inputStartPosition.cloneTree());  [CE]  cannot  find  symbol  inputStartPosition  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  inputStartPosition.cloneTree());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile,  inputStartPosition.cloneTree());	  sourceFile    =    calculateSourceLocation(sourceFile.cloneTree());    	non-compiled	[CE]  cannot  find  symbol  inputStartPosition	88	None	replace
683	[BUG]  [BUGGY]  Node  junit.framework.ComparisonFailure:  null;  generator.addMapping(sourceFile,  outputEndPosition,  sourceFile);  [CE]  ';'  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  Node  junit.framework.ComparisonFailure:  null;  generator.addMapping(sourceFile,  outputEndPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	Node  junit.framework.ComparisonFailure:  null;  generator.addMapping(sourceFile,  outputEndPosition,  sourceFile);	          junit.framework.ComparisonFailure:    null;    generator.addMapping(sourceFile,    outputEndPosition,    sourceFile);    	non-compiled	[CE]  ';'  expected	76	None	replace
684	[BUG]  [BUGGY]  FilePosition  outputStartPosition  =  sourceFile.getStartPosition();  [CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  FilePosition  outputStartPosition  =  sourceFile.getStartPosition();  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	FilePosition  outputStartPosition  =  sourceFile.getStartPosition();	  FilePosition    outputStartPosition    =    sourceFile.getLineno();    	non-compiled	[CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	14	None	replace
685	[BUG]  [BUGGY]  sourceFile  =  fixupSource(sourceFile.getLineno(),  node);  [CE]  cannot  find  symbol  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSource(sourceFile.getLineno(),  node);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSource(sourceFile.getLineno(),  node);	  sourceFile    =    fixupSource(sourceFile.getLineno());    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
686	[BUG]  [BUGGY]  sourceFile  =  resolveSource(sourceFile,  node.getLineno());  [CE]  cannot  find  symbol  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  resolveSource(sourceFile,  node.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  resolveSource(sourceFile,  node.getLineno());	  sourceFile    =    fixupSource(sourceFile.getLineno());    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
687	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  sourceFile.toString());  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.toString(),  sourceFile.toString());	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    file    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	39	None	replace
688	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputStartPosition);  file  =  fixupSourceLocation(sourceFile.toString());  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputStartPosition);  file  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputStartPosition);  file  =  fixupSourceLocation(sourceFile.toString());	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    file    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	39	None	replace
689	[BUG]  [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  DEFAULT);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  DEFAULT);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  DEFAULT);	  SourceMap    sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	89	None	replace
690	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  sourceFile.toString()));  [CE]  not  a  statement  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  sourceFile.toString()));  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition,  sourceFile.toString()));	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile,    outputEndPosition));    	non-compiled	[CE]  not  a  statement	15	None	replace
691	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile.getLineno(),  node);  [CE]  cannot  find  symbol  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile.getLineno(),  node);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile.getLineno(),  node);	  sourceFile    =    calculateSourceLocation(sourceFile.getLineno());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
692	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(node,  sourceFile.getLineno());  [CE]  cannot  find  symbol  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(node,  sourceFile.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(node,  sourceFile.getLineno());	  sourceFile    =    calculateSourceLocation(sourceFile.getLineno());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
693	[BUG]  [BUGGY]  SourceMap  <  String,  Object>  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [CE]  type  SourceMap  does  not  take  parameters  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  <  String,  Object>  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  <  String,  Object>  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition,    inputEndPosition);    	non-compiled	[CE]  type  SourceMap  does  not  take  parameters	66	None	replace
694	[BUG]  [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  inputEndPosition);  [CE]  cannot  find  symbol  inputEndPosition  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  inputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  inputEndPosition);	  SourceMap    generator    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  inputEndPosition	69	None	replace
695	[BUG]  [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  inputStartPosition,  outputEndPosition);  [CE]  cannot  find  symbol  inputStartPosition  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  inputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  generator  =  fixupSourceLocation(sourceFile,  inputStartPosition,  outputEndPosition);	  SourceMap    generator    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  inputStartPosition	69	None	replace
696	[BUG]  [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  sourceFile,  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  sourceFile,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  generator  =  fixupSourceLocation(sourceFile,  sourceFile,  outputEndPosition);	  SourceMap    generator    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	69	None	replace
697	[BUG]  [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile.toString());  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile.toString());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile.toString());	  SourceMap    generator    =    fixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	8	None	replace
698	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  node);  [CE]  cannot  find  symbol  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  node);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile,  node);	  sourceFile    =    calculateSourceLocation(sourceFile,    generator);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
699	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  generator,  null);  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  generator,  null);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  generator,  null);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputStartPosition,    generator);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
700	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(generator,  outputStartPosition,  sourceFile);  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(generator,  outputStartPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(generator,  outputStartPosition,  sourceFile);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputStartPosition,    generator);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
701	[BUG]  [BUGGY]  if(sourceFile.getLineno()  <  0)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile.getLineno()  <  0)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile.getLineno()  <  0)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile    ==    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
702	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	add	if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  }	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile    ==    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	46	16	replace
703	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  }	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile    ==    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	46	16	replace
704	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString()  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString()  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString()	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile    ==    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    	non-compiled	[CE]  ')'  expected	46	None	replace
705	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(node,  outputFixupCache,  outputStartPosition,  outputEndPosition);  [CE]  cannot  find  symbol  outputFixupCache  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(node,  outputFixupCache,  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(node,  outputFixupCache,  outputStartPosition,  outputEndPosition);	  sourceFile    =    fixupSourceLocation(node,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  outputFixupCache	6	None	replace
706	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(node,  outputStartPosition,  outputEndPosition,  sourceFile.length);  [CE]  cannot  find  symbol  length  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(node,  outputStartPosition,  outputEndPosition,  sourceFile.length);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(node,  outputStartPosition,  outputEndPosition,  sourceFile.length);	  sourceFile    =    fixupSourceLocation(node,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  length	6	None	replace
707	[BUG]  [BUGGY]  file  =  FixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile.length());  [CE]  cannot  find  symbol  file  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  file  =  FixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile.length());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	file  =  FixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile.length());	  file    =    FixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol  file	26	None	replace
708	[BUG]  [BUGGY]  file  =  FixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile.length);  [CE]  cannot  find  symbol  file  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  file  =  FixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile.length);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	file  =  FixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile.length);	  file    =    FixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol  file	26	None	replace
709	[BUG]  [BUGGY]  SourceFile  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceFile  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceFile  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile);	  SourceFile    sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	1	None	replace
710	[BUG]  [BUGGY]  SourceFile  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length());  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceFile  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceFile  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length());	  SourceFile    sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	1	None	replace
711	[BUG]  [BUGGY]  SourceFile  sourceFile  =  fixupSourceLocation(sourceFile,  node,  outputEndPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceFile  sourceFile  =  fixupSourceLocation(sourceFile,  node,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceFile  sourceFile  =  fixupSourceLocation(sourceFile,  node,  outputEndPosition);	  SourceFile    sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	1	None	replace
712	[BUG]  [BUGGY]  SourceFile  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceFile  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceFile  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length);	  SourceFile    sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	1	None	replace
713	[BUG]  [BUGGY]  sourceFile  =  fixupSource(sourceFile,  outputEndPosition,  sourceFile);  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSource(sourceFile,  outputEndPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSource(sourceFile,  outputEndPosition,  sourceFile);	  sourceFile    =    fixupSource(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
714	[BUG]  [BUGGY]  sourceFile  =  fixupSource(sourceFile,  outputEndPosition,  sourceFile.length);  [CE]  cannot  find  symbol  length  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSource(sourceFile,  outputEndPosition,  sourceFile.length);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSource(sourceFile,  outputEndPosition,  sourceFile.length);	  sourceFile    =    fixupSource(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  length	53	None	replace
715	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  getSourceMapping(sourceFile.toString());  if(generator  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  getSourceMapping(sourceFile.toString());  if(generator  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  getSourceMapping(sourceFile.toString());  if(generator  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator    generator    =    getSourceMapping(sourceFile.toString());    sourceFile    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
716	[BUG]  [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  <  K,  V>  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputStartPosition,    inputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
717	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	add	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile    ==    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	45	16	add
718	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile    ==    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	45	16	add
719	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile    ==    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
720	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  Node  sourceFile  =  node.getProp(Node.ORIGINALNAME_PROP);  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]        AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  Node  sourceFile  =  node.getProp(Node.ORIGINALNAME_PROP);  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile    ==    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    Node  sourceFile  =  node.getProp(Node.ORIGINALNAME_PROP);  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	45	None	add
721	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString()  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString()  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile    ==    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString()	  	non-compiled	[CE]  ')'  expected	45	None	add
722	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  Node  sourceFile  =  node.getProp(Node.ORIGINALNAME_PROP);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]            AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  Node  sourceFile  =  node.getProp(Node.ORIGINALNAME_PROP);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile    ==    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    Node  sourceFile  =  node.getProp(Node.ORIGINALNAME_PROP);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	45	None	add
723	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.to  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.to  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile    ==    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.to	  	non-compiled	[CE]  ')'  expected	45	None	add
724	[BUG]  [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  node,  outputEndPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  node,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  node,  outputEndPosition);	  sourceFile    =    fixupSourceLocation(node,    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	3	None	replace
725	[BUG]  [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputEndPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    inputStartPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	72	None	replace
726	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  outputEndPosition,  sourceFile.length);  [CE]  cannot  find  symbol  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  outputEndPosition,  sourceFile.length);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  outputEndPosition,  sourceFile.length);	  sourceFile    =    fixupSourceLocation(sourceFile.getLineno(),    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
727	[BUG]  [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition.getLineno());  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition.getLineno());	  sourceFile    =    fixupSourceLocation(sourceFile,    inputStartPosition.getLineno());    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	68	None	replace
728	[BUG]  [BUGGY]  sourceFile  =  resolveSource(sourceFile,  outputEndPosition,  sourceFile.length);  [CE]  cannot  find  symbol  length  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  resolveSource(sourceFile,  outputEndPosition,  sourceFile.length);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  resolveSource(sourceFile,  outputEndPosition,  sourceFile.length);	  sourceFile    =    resolveSource(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  length	57	None	replace
729	[BUG]  [BUGGY]  sourceFile  =  resolveSource(sourceFile,  outputEndPosition,  sourceFile.length());  [CE]  cannot  find  symbol  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  resolveSource(sourceFile,  outputEndPosition,  sourceFile.length());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  resolveSource(sourceFile,  outputEndPosition,  sourceFile.length());	  sourceFile    =    resolveSource(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
730	[BUG]  [BUGGY]  sourceFile  =  resolveSource(sourceFile,  outputEndPosition,  sourceFile);  [CE]  cannot  find  symbol  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  resolveSource(sourceFile,  outputEndPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  resolveSource(sourceFile,  outputEndPosition,  sourceFile);	  sourceFile    =    resolveSource(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
731	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile);  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
732	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile.length);  [CE]  cannot  find  symbol  length  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile.length);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition,  sourceFile.length);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputStartPosition,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  length	80	None	replace
733	[BUG]  [BUGGY]  sourceFile  =  resolveSourceLocation(sourceFile,  node.getLineno(),  inputStartPosition);  [CE]  cannot  find  symbol  inputStartPosition  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  resolveSourceLocation(sourceFile,  node.getLineno(),  inputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  resolveSourceLocation(sourceFile,  node.getLineno(),  inputStartPosition);	  sourceFile    =    resolveSourceLocation(sourceFile,    node.getLineno());    	non-compiled	[CE]  cannot  find  symbol  inputStartPosition	101	None	replace
734	[BUG]  [BUGGY]  SourceMap  <  String,  Object>  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length());  [CE]  type  SourceMap  does  not  take  parameters  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  <  String,  Object>  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  <  String,  Object>  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length());	  SourceMap    <    String,    Object>    sourceFile    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  type  SourceMap  does  not  take  parameters	92	None	replace
735	[BUG]  [BUGGY]  SourceMap  <  String,  Object>  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile);  [CE]  type  SourceMap  does  not  take  parameters  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  <  String,  Object>  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  <  String,  Object>  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile);	  SourceMap    <    String,    Object>    sourceFile    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  type  SourceMap  does  not  take  parameters	92	None	replace
736	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	add	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	40	16	add
737	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	40	16	add
738	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  Node  sourceFile  =  node.getProp(Node.ORIGINALNAME_PROP);  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]      AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  Node  sourceFile  =  node.getProp(Node.ORIGINALNAME_PROP);  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    Node  sourceFile  =  node.getProp(Node.ORIGINALNAME_PROP);  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	40	None	add
739	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString()  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString()  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString()	  	non-compiled	[CE]  ')'  expected	40	None	add
740	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  Node  sourceFile  =  node.getProp(Node.ORIGINALNAME_PROP);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]          AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  Node  sourceFile  =  node.getProp(Node.ORIGINALNAME_PROP);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    Node  sourceFile  =  node.getProp(Node.ORIGINALNAME_PROP);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	40	None	add
741	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.to  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.to  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.to	  	non-compiled	[CE]  ')'  expected	40	None	add
742	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  FilePosition  sourceFile  =  outputStartPosition.toString();  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]              AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  FilePosition  sourceFile  =  outputStartPosition.toString();  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    FilePosition  sourceFile  =  outputStartPosition.toString();  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	40	None	add
743	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node,  outputStartPosition,  inputEndPosition);  [CE]  cannot  find  symbol  inputEndPosition  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node,  outputStartPosition,  inputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  node,  outputStartPosition,  inputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    node,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol  inputEndPosition	96	None	replace
744	[BUG]  [BUGGY]  node.getProp(Node.ORIGINALNAME_PROP):  null;  outputStartPosition  =  outputEndPosition;  [CE]  ';'  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  node.getProp(Node.ORIGINALNAME_PROP):  null;  outputStartPosition  =  outputEndPosition;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	node.getProp(Node.ORIGINALNAME_PROP):  null;  outputStartPosition  =  outputEndPosition;	          junit.framework.ComparisonFailure:    null;    outputStartPosition    =    outputEndPosition;    	non-compiled	[CE]  ';'  expected	77	None	replace
745	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  null;  outputStartPosition  =  outputEndPosition  +  1;  [CE]  not  a  statement  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  null;  outputStartPosition  =  outputEndPosition  +  1;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  null;  outputStartPosition  =  outputEndPosition  +  1;	          junit.framework.ComparisonFailure:    null;    outputStartPosition    =    outputEndPosition;    	non-compiled	[CE]  not  a  statement	77	None	replace
746	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  sourceFile.toString(),  node);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  sourceFile.toString(),  node);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  sourceFile.toString(),  node);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    node);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	103	None	replace
747	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  sourceFile.toString(),  outputStartPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  sourceFile.toString(),  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  sourceFile.toString(),  outputStartPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    outputStartPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	48	None	replace
748	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  node.getLineno());  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  node.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  node.getLineno());	  junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	10	None	replace
749	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  sourceFile.getLineno());  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  sourceFile.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  sourceFile.getLineno());	  junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	10	None	replace
750	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  junit.framework.FixupSourceLocation(sourceFile,  outputEndPosition,  generator);  [CE]  package  junit  does  not  exist  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  junit.framework.FixupSourceLocation(sourceFile,  outputEndPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  junit.framework.FixupSourceLocation(sourceFile,  outputEndPosition,  generator);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputEndPosition,    generator);    	non-compiled	[CE]  package  junit  does  not  exist	23	None	replace
751	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  compiler.ComparisonFailure(sourceFile);  }  [CE]  cannot  find  symbol  compiler  [FE]          AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  compiler.ComparisonFailure(sourceFile);  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  compiler.ComparisonFailure(sourceFile);  }	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator    generator    =    junit.framework.ComparisonFailure(sourceFile);    	non-compiled	[CE]  cannot  find  symbol  compiler	82	None	replace
752	[BUG]  [BUGGY]  node.getProp(Node.ORIGINALNAME_PROP);  junit.framework.ComparisonFailure:  null  expected  [CE]  not  a  statement  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  node.getProp(Node.ORIGINALNAME_PROP);  junit.framework.ComparisonFailure:  null  expected  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	node.getProp(Node.ORIGINALNAME_PROP);  junit.framework.ComparisonFailure:  null  expected	  junit.framework.ComparisonFailure:    null    expected    	non-compiled	[CE]  not  a  statement	16	None	replace
753	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure(sourceFile);  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  [CE]  package  junit  does  not  exist  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure(sourceFile);  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile    =    fixupSourceLocation(sourceFile.toString()    +    1);    SourceMapGenerator  generator  =  junit.framework.ComparisonFailure(sourceFile);  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);	  	non-compiled	[CE]  package  junit  does  not  exist	51	None	add
754	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  SourceMapGenerator  generator  =  createSourceMapping(sourceFile.toString()  +  1);  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  [CE]  cannot  find  symbol  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  SourceMapGenerator  generator  =  createSourceMapping(sourceFile.toString()  +  1);  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile    =    fixupSourceLocation(sourceFile.toString()    +    1);    SourceMapGenerator  generator  =  createSourceMapping(sourceFile.toString()  +  1);  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);	  	non-compiled	[CE]  cannot  find  symbol	51	None	add
755	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure(sourceFile.toString()  +  1);  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  [CE]  package  junit  does  not  exist  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure(sourceFile.toString()  +  1);  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile    =    fixupSourceLocation(sourceFile.toString()    +    1);    SourceMapGenerator  generator  =  junit.framework.ComparisonFailure(sourceFile.toString()  +  1);  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);	  	non-compiled	[CE]  package  junit  does  not  exist	51	None	add
756	[BUG]  [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    inputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
757	[BUG]  [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]          AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    inputStartPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	86	None	replace
758	[BUG]  [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition,    sourceFile);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	65	None	replace
759	[BUG]  [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputStartPosition,  outputEndPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]        AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputStartPosition,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputStartPosition,  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	47	None	replace
760	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile);	  SourceMapGenerator    generator    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	2	None	replace
761	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  sourceFile,  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  sourceFile,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  sourceFile,  outputEndPosition);	  SourceMapGenerator    generator    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	2	None	replace
762	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  null  Expected(node.getProp(Node.ORIGINALNAME_PROP));  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  null  Expected(node.getProp(Node.ORIGINALNAME_PROP));  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  null  Expected(node.getProp(Node.ORIGINALNAME_PROP));	          junit.framework.ComparisonFailure:    null    expected:    <...t   ":1    	non-compiled	[CE]  not  a  statement	28	None	replace
763	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  inputStartPosition,  generator);  [CE]  cannot  find  symbol  inputStartPosition  [FE]              AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  inputStartPosition,  generator);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.toString(),  inputStartPosition,  generator);	  sourceFile    =    fixupSourceLocation(sourceFile.toString(),    generator);    	non-compiled	[CE]  cannot  find  symbol  inputStartPosition	50	None	replace
764	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  outputEndPosition,  sourceFile.length());  [CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  outputEndPosition,  sourceFile.length());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  outputEndPosition,  sourceFile.length());	  SourceMapGenerator    generator    =    new    SourceMapGenerator(sourceFile,    outputEndPosition);    	non-compiled	[CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated	27	None	replace
765	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.cloneTree());  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.cloneTree());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.cloneTree());	  SourceMapGenerator    generator    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
766	[BUG]  [BUGGY]  FilePosition  outputEndPosition  =  junit.framework.getComparisonFailure();  [CE]  variable  outputEndPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  FilePosition  outputEndPosition  =  junit.framework.getComparisonFailure();  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	FilePosition  outputEndPosition  =  junit.framework.getComparisonFailure();	          junit.framework.ComparisonFailure:    outputEndPosition;    	non-compiled	[CE]  variable  outputEndPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	73	None	replace
767	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  FilePosition(outputEndPosition);  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  FilePosition(outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  FilePosition(outputEndPosition);	          junit.framework.ComparisonFailure:    outputEndPosition;    	non-compiled	[CE]  not  a  statement	73	None	replace
768	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  generator,  node);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  generator,  node);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  generator,  node);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition,    generator);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	64	None	replace
769	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	add	sourceFile        =        fixupSourceLocation(sourceFile.toString());        sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	36	16	add
770	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	36	16	add
771	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  node.getProp(Node.ORIGINALNAME_PROP  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  node.getProp(Node.ORIGINALNAME_PROP  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  node.getProp(Node.ORIGINALNAME_PROP	  	non-compiled	[CE]  ')'  expected	36	None	add
772	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  return;  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	add	sourceFile        =        fixupSourceLocation(sourceFile.toString());        sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  return;  }	  	compilable	  [FE]  AssertionFailedError  	36	16	add
773	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  return;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  return;  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  return;  }	  	compilable	  [FE]  AssertionFailedError  	36	16	add
774	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  Preconditions.checkNotNull(sourceFile);  }  [CE]  cannot  find  symbol  Preconditions  [FE]          AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  Preconditions.checkNotNull(sourceFile);  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  Preconditions.checkNotNull(sourceFile);  }	  	non-compiled	[CE]  cannot  find  symbol  Preconditions	36	None	add
775	[BUG]  [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  Preconditions.checkState(sourceFile.getLine  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  Preconditions.checkState(sourceFile.getLine  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile        =        fixupSourceLocation(sourceFile.toString());        sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  Preconditions.checkState(sourceFile.getLine	  	non-compiled	[CE]  ')'  expected	36	None	add
776	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile,  sourceFile);  [CE]  cannot  find  symbol  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile,  sourceFile);	  SourceMapGenerator    generator    =    calculateSourceLocation(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
777	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile,  sourceFile.getLineno());  [CE]  cannot  find  symbol  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile,  sourceFile.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile,  sourceFile.getLineno());	  SourceMapGenerator    generator    =    calculateSourceLocation(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
778	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile,  sourceFile.length);  [CE]  cannot  find  symbol  length  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile,  sourceFile.length);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile,  sourceFile.length);	  SourceMapGenerator    generator    =    calculateSourceLocation(sourceFile);    	non-compiled	[CE]  cannot  find  symbol  length	87	None	replace
779	[BUG]  [BUGGY]  sourceFile  =  fixupSource(sourceFile,  junit.framework.ComparisonFailure,  outputEndPosition);  [CE]  package  junit  does  not  exist  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSource(sourceFile,  junit.framework.ComparisonFailure,  outputEndPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSource(sourceFile,  junit.framework.ComparisonFailure,  outputEndPosition);	  sourceFile    =    fixupSource(sourceFile,    junit.framework.ComparisonFailure);    	non-compiled	[CE]  package  junit  does  not  exist	97	None	replace
780	[BUG]  [BUGGY]  sourceFile  =  fixupSource(sourceFile,  junit.framework.ComparisonFailure,  outputStartPosition);  [CE]  package  junit  does  not  exist  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSource(sourceFile,  junit.framework.ComparisonFailure,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSource(sourceFile,  junit.framework.ComparisonFailure,  outputStartPosition);	  sourceFile    =    fixupSource(sourceFile,    junit.framework.ComparisonFailure);    	non-compiled	[CE]  package  junit  does  not  exist	97	None	replace
781	[BUG]  [BUGGY]  Parser  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  sourceFile.getCharno())  [CE]  ';'  expected  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  Parser  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  sourceFile.getCharno())  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	Parser  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  sourceFile.getCharno())	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile.getLineno(),    sourceFile.getCharno())    	non-compiled	[CE]  ';'  expected	104	None	replace
782	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile.toString(),  node);  [CE]  cannot  find  symbol  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile.toString(),  node);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile.toString(),  node);	  sourceFile    =    calculateSourceLocation(sourceFile.toString());    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
783	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    Node    sourceFile    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
784	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node.getLineno(),  sourceFile.length);  [CE]  cannot  find  symbol  length  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node.getLineno(),  sourceFile.length);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  node.getLineno(),  sourceFile.length);	  sourceFile    =    fixupSourceLocation(sourceFile,    node.getLineno());    	non-compiled	[CE]  cannot  find  symbol  length	29	None	replace
785	[BUG]  [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length());  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length());	  SourceMap    sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	110	None	replace
786	[BUG]  [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile);	  SourceMap    sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	110	None	replace
787	[BUG]  [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length);	  SourceMap    sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	110	None	replace
788	[BUG]  [BUGGY]  if(node.getLineno()  ==  0)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString()  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(node.getLineno()  ==  0)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString()  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(node.getLineno()  ==  0)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString()	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    else    {    node.getProp(Node.ORIGINALNAME_PROP);    generator.addMapping(    sourceFile,    sourceFile    	non-compiled	[CE]  ')'  expected	102	None	replace
789	[BUG]  [BUGGY]  if(node.getLineno()  ==  0)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  if(node.getLineno()  ==  0)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	if(node.getLineno()  ==  0)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=    null)    {    sourceFile    =    fixupSourceLocation(sourceFile.toString());    }    else    {    node.getProp(Node.ORIGINALNAME_PROP);    generator.addMapping(    sourceFile,    sourceFile    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
790	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(node,  outputEndPosition,  sourceFile);  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  FixupSourceLocation(node,  outputEndPosition,  sourceFile);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(node,  outputEndPosition,  sourceFile);	  sourceFile    =    FixupSourceLocation(node,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
791	[BUG]  [BUGGY]  node.getProp(Node.ORIGINALNAME_PROP):  null;  outputEndPosition  =  outputEndPosition;  [CE]  ';'  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  node.getProp(Node.ORIGINALNAME_PROP):  null;  outputEndPosition  =  outputEndPosition;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	node.getProp(Node.ORIGINALNAME_PROP):  null;  outputEndPosition  =  outputEndPosition;	          junit.framework.ComparisonFailure:    null;    outputEndPosition    =    outputEndPosition;    	non-compiled	[CE]  ';'  expected	75	None	replace
792	[BUG]  [BUGGY]  Node  junit.framework.ComparisonFailure:  null;  outputEndPosition  =  outputEndPosition;  [CE]  ';'  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  Node  junit.framework.ComparisonFailure:  null;  outputEndPosition  =  outputEndPosition;  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	Node  junit.framework.ComparisonFailure:  null;  outputEndPosition  =  outputEndPosition;	          junit.framework.ComparisonFailure:    null;    outputEndPosition    =    outputEndPosition;    	non-compiled	[CE]  ';'  expected	75	None	replace
793	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  node);  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  node);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  node);	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile);    	non-compiled	[CE]  not  a  statement	105	None	replace
794	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  sourceFile.length());  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  sourceFile.length());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  sourceFile.length());	  junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile);    	non-compiled	[CE]  not  a  statement	105	None	replace
795	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  sourceFile.getCharno());  [CE]  cannot  find  symbol  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  sourceFile.getCharno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  sourceFile.getCharno());	  sourceFile    =    fixupSourceLocation(node.getLineno());    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
796	[BUG]  [BUGGY]  SourceMap  sourceFile  =  FixupSourceLocation(sourceFile,  node,  outputStartPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMap  sourceFile  =  FixupSourceLocation(sourceFile,  node,  outputStartPosition);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  FixupSourceLocation(sourceFile,  node,  outputStartPosition);	  SourceMap    sourceFile    =    FixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	94	None	replace
797	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile.length);  [CE]  cannot  find  symbol  length  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile.length);  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile.length);	  SourceMapGenerator    generator    =    FixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol  length	62	None	replace
798	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile.getLineno());  [CE]  cannot  find  symbol  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile.getLineno());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile.getLineno());	  SourceMapGenerator    generator    =    FixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
799	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile.cloneTree());  [CE]  cannot  find  symbol  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile.cloneTree());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile.cloneTree());	  SourceMapGenerator    generator    =    FixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
800	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile.length());  [CE]  cannot  find  symbol  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }      [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile.length());  [BUGGY]        String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition,  sourceFile.length());	  SourceMapGenerator    generator    =    FixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
