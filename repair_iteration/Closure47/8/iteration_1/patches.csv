bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  SourceFile  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  SourceFile  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceFile  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    inputStartPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	5	None	replace
2	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    inputStartPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	5	None	replace
3	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(node,  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(node,  outputEndPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(node,  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    inputStartPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	5	None	replace
4	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	1	None	replace
5	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  generator);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  generator);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  generator);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	1	None	replace
6	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(node,  outputStartPosition,  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(node,  outputStartPosition,  outputEndPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(node,  outputStartPosition,  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	1	None	replace
7	[BUG]  [BUGGY]  file  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [CE]  cannot  find  symbol  file  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  file  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	file  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  file	1	None	replace
8	[BUG]  [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	1	None	replace
9	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node,  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node,  outputEndPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  node,  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	1	None	replace
10	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  null;  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  junit.framework.ComparisonFailure:  null;  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  null;	      	non-compiled	[CE]  not  a  statement	9	None	replace
11	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  null  expected;  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  junit.framework.ComparisonFailure:  null  expected;  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  null  expected;	      	non-compiled	[CE]  not  a  statement	9	None	replace
12	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition);  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition);	      	non-compiled	[CE]  not  a  statement	9	None	replace
13	[BUG]  [BUGGY]  FilePosition  outputStartPosition  =  node.getLineno();  [CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  FilePosition  outputStartPosition  =  node.getLineno();  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	FilePosition  outputStartPosition  =  node.getLineno();	      	non-compiled	[CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	9	None	replace
14	[BUG]  [BUGGY]  FilePosition  outputStartPosition  =  sourceFile.getLineno();  [CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  FilePosition  outputStartPosition  =  sourceFile.getLineno();  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	FilePosition  outputStartPosition  =  sourceFile.getLineno();	      	non-compiled	[CE]  variable  outputStartPosition  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	9	None	replace
15	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition));  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition));  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputEndPosition));	      	non-compiled	[CE]  not  a  statement	9	None	replace
16	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  null  expected  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  junit.framework.ComparisonFailure:  null  expected  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  null  expected	      	non-compiled	[CE]  not  a  statement	9	None	replace
17	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  outputEndPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile,  outputEndPosition);	  sourceFile    =    calculateSourceLocation(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
18	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  outputStartPosition);  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  outputStartPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile,  outputStartPosition);	  sourceFile    =    calculateSourceLocation(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
19	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  generator);  [CE]  cannot  find  symbol  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  generator);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile,  generator);	  sourceFile    =    calculateSourceLocation(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
20	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile.getLineno());  [CE]  cannot  find  symbol  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile.getLineno());  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile.getLineno());	  sourceFile    =    calculateSourceLocation(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
21	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  inputStartPosition);  [CE]  cannot  find  symbol  inputStartPosition  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile,  inputStartPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile,  inputStartPosition);	  sourceFile    =    calculateSourceLocation(sourceFile);    	non-compiled	[CE]  cannot  find  symbol  inputStartPosition	4	None	replace
22	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile.toString());  [CE]  cannot  find  symbol  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile.toString());  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile.toString());	  sourceFile    =    calculateSourceLocation(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
23	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  generator);  [CE]  cannot  find  symbol  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  generator);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  generator);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
24	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(node,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  FixupSourceLocation(node,  outputEndPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(node,  outputEndPosition);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
25	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(node,  outputStartPosition);  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  FixupSourceLocation(node,  outputStartPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(node,  outputStartPosition);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
26	[BUG]  [BUGGY]  file  =  FixupSourceLocation(sourceFile,  outputStartPosition);  [CE]  cannot  find  symbol  file  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  file  =  FixupSourceLocation(sourceFile,  outputStartPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	file  =  FixupSourceLocation(sourceFile,  outputStartPosition);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  file	11	None	replace
27	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  outputEndPosition);  [CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  outputEndPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  outputEndPosition);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated	11	None	replace
28	[BUG]  [BUGGY]      junit.framework.ComparisonFailure:  null  expected:  <...t ":1  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]      junit.framework.ComparisonFailure:  null  expected:  <...t ":1  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	        junit.framework.ComparisonFailure:  null  expected:  <...t ":1	  	non-compiled	[CE]  not  a  statement	8	None	add
29	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node.getLineno());  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node.getLineno());  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  node.getLineno());	  sourceFile    =    fixupSourceLocation(sourceFile.getLineno());    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	3	None	replace
30	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition.getLineno());  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition.getLineno());  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition.getLineno());	  sourceFile    =    fixupSourceLocation(sourceFile.getLineno());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
31	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  outputEndPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.getLineno());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
32	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition.getLineno());  [CE]  cannot  find  symbol  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition.getLineno());  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition.getLineno());	  sourceFile    =    fixupSourceLocation(sourceFile.getLineno());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
33	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  outputStartPosition);  [CE]  cannot  find  symbol  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  outputStartPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  outputStartPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.getLineno());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
34	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  node.getEndPosition());  [CE]  cannot  find  symbol  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  node.getEndPosition());  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  node.getEndPosition());	  sourceFile    =    fixupSourceLocation(sourceFile.getLineno());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
35	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(node.getLineno());  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(node.getLineno());  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(node.getLineno());	  sourceFile    =    fixupSourceLocation(sourceFile.getLineno());    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	3	None	replace
36	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	add	sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());	  	compilable	  [FE]  AssertionFailedError  	6	16	add
37	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile    =    fixupSourceLocation(sourceFile.toString());    sourceFile  =  fixupSourceLocation(sourceFile.toString());	  	compilable	  [FE]  AssertionFailedError  	6	16	add
38	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString());  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]      AssertionFailedError    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString());  Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile    =    fixupSourceLocation(sourceFile.toString());    Node  sourceFile  =  fixupSourceLocation(sourceFile.toString());	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	6	None	add
39	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString());  file  =  fixupSourceLocation(sourceFile.toString());  [CE]  cannot  find  symbol  file  [FE]        AssertionFailedError    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString());  file  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile    =    fixupSourceLocation(sourceFile.toString());    file  =  fixupSourceLocation(sourceFile.toString());	  	non-compiled	[CE]  cannot  find  symbol  file	6	None	add
40	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	add	sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  	compilable	  [FE]  AssertionFailedError  	6	16	add
41	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  	compilable	  [FE]  AssertionFailedError  	6	16	add
42	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  String  originalName  =  (String)node.getProp(Node.ORIGINALNAME_PROP);  generator.addMapping(  sourceFile,  originalName  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  String  originalName  =  (String)node.getProp(Node.ORIGINALNAME_PROP);  generator.addMapping(  sourceFile,  originalName  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  String  originalName  =  (String)node.getProp(Node.ORIGINALNAME_PROP);  generator.addMapping(  sourceFile,  originalName	  	non-compiled	[CE]  ')'  expected	6	None	add
43	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  String  originalName  =  (String)node.getProp(Node.ORIGINALNAME_PROP);  generator.addMapping(  sourceFile  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  String  originalName  =  (String)node.getProp(Node.ORIGINALNAME_PROP);  generator.addMapping(  sourceFile  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  String  originalName  =  (String)node.getProp(Node.ORIGINALNAME_PROP);  generator.addMapping(  sourceFile	  	non-compiled	[CE]  ')'  expected	6	None	add
44	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  String  originalName  =  (String)node.getProp(Node.ORIGINALNAME_PROP);  generator.addMapping(  sourceFile,  original  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  String  originalName  =  (String)node.getProp(Node.ORIGINALNAME_PROP);  generator.addMapping(  sourceFile,  original  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  String  originalName  =  (String)node.getProp(Node.ORIGINALNAME_PROP);  generator.addMapping(  sourceFile,  original	  	non-compiled	[CE]  ')'  expected	6	None	add
45	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	add	sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  	compilable	  [FE]  AssertionFailedError  	6	16	add
46	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [FE]  AssertionFailedError  [FE]                  AssertionFailedError    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile  ==  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }	  	compilable	  [FE]  AssertionFailedError  	6	16	add
47	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	7	None	replace
48	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputStartPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputStartPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.toString(),  outputStartPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	7	None	replace
49	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.getName());  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.getName());  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.getName());	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
50	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  generator);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  generator);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.toString(),  generator);	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	7	None	replace
51	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            AssertionFailedError    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	add	sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	7	16	replace
52	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            AssertionFailedError    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.toString()  +  1);	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	7	16	replace
53	[BUG]  [BUGGY]  sourceFile  =  fixupSource(sourceFile,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSource(sourceFile,  outputEndPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSource(sourceFile,  outputEndPosition);	  sourceFile    =    fixupSource(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
54	[BUG]  [BUGGY]  sourceFile  =  fixupSource(sourceFile,  outputStartPosition);  [CE]  cannot  find  symbol  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSource(sourceFile,  outputStartPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSource(sourceFile,  outputStartPosition);	  sourceFile    =    fixupSource(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
55	[BUG]  [BUGGY]  sourceFile  =  fixupSource(sourceFile,  generator);  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSource(sourceFile,  generator);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSource(sourceFile,  generator);	  sourceFile    =    fixupSource(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
56	[BUG]  [BUGGY]  sourceFile  =  fixupSource(sourceFile,  inputStartPosition);  [CE]  cannot  find  symbol  inputStartPosition  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSource(sourceFile,  inputStartPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSource(sourceFile,  inputStartPosition);	  sourceFile    =    fixupSource(sourceFile);    	non-compiled	[CE]  cannot  find  symbol  inputStartPosition	12	None	replace
57	[BUG]  [BUGGY]  sourceFile  =  resolveSource(sourceFile,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  resolveSource(sourceFile,  outputEndPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  resolveSource(sourceFile,  outputEndPosition);	  sourceFile    =    fixupSource(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
58	[BUG]  [BUGGY]  sourceFile  =  fixupSource(sourceFile.getLineno());  [CE]  cannot  find  symbol  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSource(sourceFile.getLineno());  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSource(sourceFile.getLineno());	  sourceFile    =    fixupSource(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
59	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  generator);  [CE]  cannot  find  symbol  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  generator);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  generator);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
60	[BUG]  [BUGGY]  file  =  FixupSourceLocation(sourceFile,  outputEndPosition);  [CE]  cannot  find  symbol  file  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  file  =  FixupSourceLocation(sourceFile,  outputEndPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	file  =  FixupSourceLocation(sourceFile,  outputEndPosition);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol  file	10	None	replace
61	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  outputStartPosition);  [CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  outputStartPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile,  outputStartPosition);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated	10	None	replace
62	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition);  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputStartPosition);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
63	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputStartPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputStartPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  outputStartPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	2	None	replace
64	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  generator);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  generator);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  generator);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	2	None	replace
65	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	2	None	replace
66	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  inputEndPosition);  [CE]  cannot  find  symbol  inputEndPosition  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  inputEndPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  inputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol  inputEndPosition	2	None	replace
67	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  input);  [CE]  cannot  find  symbol  input  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  input);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  input);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol  input	2	None	replace
68	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  inputStartPosition.getLineno());  [CE]  cannot  find  symbol  inputStartPosition  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  inputStartPosition.getLineno());  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  inputStartPosition.getLineno());	  sourceFile    =    fixupSourceLocation(sourceFile.getLineno());    	non-compiled	[CE]  cannot  find  symbol  inputStartPosition	3	None	replace
69	[BUG]  [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  generator  =  fixupSourceLocation(sourceFile,  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    inputStartPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	5	None	replace
70	[BUG]  [BUGGY]  sourceFile  =  resolveSource(sourceFile,  outputStartPosition);  [CE]  cannot  find  symbol  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  resolveSource(sourceFile,  outputStartPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  resolveSource(sourceFile,  outputStartPosition);	  sourceFile    =    fixupSource(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
71	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length);  [CE]  cannot  find  symbol  length  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  length	1	None	replace
72	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  inputStartPosition);  [CE]  cannot  find  symbol  inputStartPosition  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  inputStartPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  inputStartPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  inputStartPosition	1	None	replace
73	[BUG]  [BUGGY]      junit.framework.ComparisonFailure:  outputEndPosition;  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]      junit.framework.ComparisonFailure:  outputEndPosition;  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	        junit.framework.ComparisonFailure:  outputEndPosition;	  	non-compiled	[CE]  not  a  statement	8	None	add
74	[BUG]  [BUGGY]      junit.framework.ComparisonFailure:  sourceFile;  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]      junit.framework.ComparisonFailure:  sourceFile;  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	        junit.framework.ComparisonFailure:  sourceFile;	  	non-compiled	[CE]  not  a  statement	8	None	add
75	[BUG]  [BUGGY]      junit.framework.ComparisonFailure:  null;  outputEndPosition  =  outputEndPosition;  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]      junit.framework.ComparisonFailure:  null;  outputEndPosition  =  outputEndPosition;  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	        junit.framework.ComparisonFailure:  null;  outputEndPosition  =  outputEndPosition;	  	non-compiled	[CE]  not  a  statement	8	None	add
76	[BUG]  [BUGGY]      junit.framework.ComparisonFailure:  null;  generator.addMapping(sourceFile,  outputEndPosition,  sourceFile);  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]      junit.framework.ComparisonFailure:  null;  generator.addMapping(sourceFile,  outputEndPosition,  sourceFile);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	        junit.framework.ComparisonFailure:  null;  generator.addMapping(sourceFile,  outputEndPosition,  sourceFile);	  	non-compiled	[CE]  not  a  statement	8	None	add
77	[BUG]  [BUGGY]      junit.framework.ComparisonFailure:  null;  outputStartPosition  =  outputEndPosition;  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]      junit.framework.ComparisonFailure:  null;  outputStartPosition  =  outputEndPosition;  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	        junit.framework.ComparisonFailure:  null;  outputStartPosition  =  outputEndPosition;	  	non-compiled	[CE]  not  a  statement	8	None	add
78	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputEndPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  FixupSourceLocation(sourceFile,  outputEndPosition);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
79	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  inputStartPosition);  [CE]  cannot  find  symbol  inputStartPosition  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  inputStartPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition,  inputStartPosition);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  inputStartPosition	11	None	replace
80	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
81	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure(sourceFile);  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [CE]  package  junit  does  not  exist  [FE]    AssertionFailedError    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure(sourceFile);  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator  generator  =  junit.framework.ComparisonFailure(sourceFile);  sourceFile  =  fixupSourceLocation(sourceFile.toString());	  	non-compiled	[CE]  package  junit  does  not  exist	6	None	add
82	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure(sourceFile);  [CE]  package  junit  does  not  exist  [FE]      AssertionFailedError    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure(sourceFile);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator  generator  =  junit.framework.ComparisonFailure(sourceFile);	  	non-compiled	[CE]  package  junit  does  not  exist	6	None	add
83	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure;  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [CE]  package  junit  does  not  exist  [FE]        AssertionFailedError    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  junit.framework.ComparisonFailure;  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator  generator  =  junit.framework.ComparisonFailure;  sourceFile  =  fixupSourceLocation(sourceFile.toString());	  	non-compiled	[CE]  package  junit  does  not  exist	6	None	add
84	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated  [FE]          AssertionFailedError    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator  generator  =  new  SourceMapGenerator(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());	  	non-compiled	[CE]  SourceMapGenerator  is  abstract;  cannot  be  instantiated	6	None	add
85	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  getSourceMapping(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString());  SourceMapGenerator  generator  =  getSourceMapping(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile    =    fixupSourceLocation(sourceFile.toString());    SourceMapGenerator  generator  =  getSourceMapping(sourceFile.toString());  sourceFile  =  fixupSourceLocation(sourceFile.toString());	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
86	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  inputStartPosition);  [CE]  cannot  find  symbol  inputStartPosition  [FE]    AssertionFailedError    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  inputStartPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.toString(),  inputStartPosition);	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  cannot  find  symbol  inputStartPosition	7	None	replace
87	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile);  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMapGenerator  generator  =  calculateSourceLocation(sourceFile);	  sourceFile    =    calculateSourceLocation(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
88	[BUG]  [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile.cloneTree());  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  calculateSourceLocation(sourceFile.cloneTree());  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  calculateSourceLocation(sourceFile.cloneTree());	  sourceFile    =    calculateSourceLocation(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
89	[BUG]  [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition,  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	1	None	replace
90	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  inputStartPosition,  outputEndPosition);  [CE]  cannot  find  symbol  inputStartPosition  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  inputStartPosition,  outputEndPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  inputStartPosition,  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol  inputStartPosition	1	None	replace
91	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length());  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length());  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition,  sourceFile.length());	  sourceFile    =    fixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	1	None	replace
92	[BUG]  [BUGGY]  SourceMap  <  String,  Object>  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition);  [CE]  type  SourceMap  does  not  take  parameters  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  SourceMap  <  String,  Object>  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  <  String,  Object>  sourceFile  =  FixupSourceLocation(sourceFile,  outputEndPosition);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  type  SourceMap  does  not  take  parameters	11	None	replace
93	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  node,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  node,  outputEndPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(sourceFile,  node,  outputEndPosition);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
94	[BUG]  [BUGGY]  SourceMap  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  SourceMap  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputEndPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	11	None	replace
95	[BUG]  [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  inputEndPosition);  [CE]  cannot  find  symbol  inputEndPosition  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  inputEndPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  FixupSourceLocation(sourceFile,  outputStartPosition,  inputEndPosition);	  sourceFile    =    FixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  cannot  find  symbol  inputEndPosition	10	None	replace
96	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node,  outputStartPosition);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  node,  outputStartPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  node,  outputStartPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    outputStartPosition);    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	2	None	replace
97	[BUG]  [BUGGY]  sourceFile  =  fixupSource(sourceFile,  junit.framework.ComparisonFailure);  [CE]  package  junit  does  not  exist  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSource(sourceFile,  junit.framework.ComparisonFailure);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSource(sourceFile,  junit.framework.ComparisonFailure);	  sourceFile    =    fixupSource(sourceFile);    	non-compiled	[CE]  package  junit  does  not  exist	12	None	replace
98	[BUG]  [BUGGY]  sourceFile  =  fixupSource(sourceFile,  node);  [CE]  cannot  find  symbol  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSource(sourceFile,  node);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSource(sourceFile,  node);	  sourceFile    =    fixupSource(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
99	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  node);  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  node);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.getLineno(),  node);	  sourceFile    =    fixupSourceLocation(sourceFile.getLineno());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
100	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  junit.getLineno());  [CE]  cannot  find  symbol  junit  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  junit.getLineno());  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  junit.getLineno());	  sourceFile    =    fixupSourceLocation(sourceFile.getLineno());    	non-compiled	[CE]  cannot  find  symbol  junit	3	None	replace
101	[BUG]  [BUGGY]  sourceFile  =  resolveSourceLocation(sourceFile,  node.getLineno());  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  resolveSourceLocation(sourceFile,  node.getLineno());  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  resolveSourceLocation(sourceFile,  node.getLineno());	  sourceFile    =    fixupSourceLocation(sourceFile.getLineno());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
102	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  node.getProp(Node.ORIGINALNAME_PROP);  generator.addMapping(  sourceFile,  sourceFile  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString());  if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  node.getProp(Node.ORIGINALNAME_PROP);  generator.addMapping(  sourceFile,  sourceFile  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile    =    fixupSourceLocation(sourceFile.toString());    if(sourceFile!=  null)  {  sourceFile  =  fixupSourceLocation(sourceFile.toString());  }  else  {  node.getProp(Node.ORIGINALNAME_PROP);  generator.addMapping(  sourceFile,  sourceFile	  	non-compiled	[CE]  ')'  expected	6	None	add
103	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  node);  [CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile.toString(),  node);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile.toString(),  node);	  sourceFile    =    fixupSourceLocation(sourceFile.toString());    	non-compiled	[CE]  method  fixupSourceLocation  in  class  SourceMap  cannot  be  applied  to  given  types;	7	None	replace
104	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  sourceFile.getCharno())  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  sourceFile.getCharno())  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  sourceFile.getCharno())	      	non-compiled	[CE]  not  a  statement	9	None	replace
105	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile);  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile);	      	non-compiled	[CE]  not  a  statement	9	None	replace
106	[BUG]  [BUGGY]  Node  originalName  =  node.getProp(Node.ORIGINALNAME_PROP);  [CE]  incompatible  types  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  Node  originalName  =  node.getProp(Node.ORIGINALNAME_PROP);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	Node  originalName  =  node.getProp(Node.ORIGINALNAME_PROP);	      	non-compiled	[CE]  incompatible  types	9	None	replace
107	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputStartPosition);  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputStartPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  outputStartPosition);	      	non-compiled	[CE]  not  a  statement	9	None	replace
108	[BUG]  [BUGGY]      junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  sourceFile.getCharno()));  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]      junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  sourceFile.getCharno()));  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	        junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile.getLineno(),  sourceFile.getCharno()));	  	non-compiled	[CE]  not  a  statement	8	None	add
109	[BUG]  [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition);  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    inputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
110	[BUG]  [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition);  [CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  sourceFile  =  fixupSourceLocation(sourceFile,  outputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    inputStartPosition);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  addMapping(Node,FilePosition,FilePosition)	5	None	replace
111	[BUG]  [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition);  [CE]  cannot  find  symbol  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	SourceMap  <  K,  V>  sourceFile  =  fixupSourceLocation(sourceFile,  outputStartPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    inputStartPosition);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
112	[BUG]  [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  inputEndPosition);  [CE]  cannot  find  symbol  inputEndPosition  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    FilePosition  outputEndPosition)  {  String  sourceFile  =  node.getSourceFileName();    if  (sourceFile  ==  null  ||  node.getLineno()  <  0)  {  return;  }    [BUGGY]  sourceFile  =  fixupSourceLocation(sourceFile,  inputEndPosition);  [BUGGY]      String  originalName  =  (String)  node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping(  sourceFile,  originalName,  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  addMapping  [RETURN_TYPE]  void  Node  node  FilePosition  outputStartPosition  FilePosition  outputEndPosition  [VARIABLES]  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  Node  node  List  prefixMappings  String  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  FilePosition  outputEndPosition  outputStartPosition  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	sourceFile  =  fixupSourceLocation(sourceFile,  inputEndPosition);	  sourceFile    =    fixupSourceLocation(sourceFile,    inputStartPosition);    	non-compiled	[CE]  cannot  find  symbol  inputEndPosition	5	None	replace
