bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile.length()    ==    0)    {    return    sourceFile.toString();    }    	compilable	  [FE]  AssertionFailedError  	88	16	replace
2	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }  [FE]  AssertionFailedError  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile.length()    ==    0)    {    return    sourceFile.toString();    }    	compilable	  [FE]  AssertionFailedError  	88	16	replace
3	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.toString();  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.toString();  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.toString();  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile.length()    ==    0)    {    return    sourceFile.toString();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	88	None	replace
4	[BUG]  [BUGGY]  ||  sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  ||  sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	||  sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile.length()    ==    0)    {    return    sourceFile.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
5	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile!=  null)  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile.length()    ==    0)    {    return    sourceFile.toString();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	88	16	replace
6	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toString();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile.length()    ==    0)    {    return    sourceFile.toString();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	88	16	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()!=  0)  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()!=  0)  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile.length()    ==    0)    {    return    sourceFile.toString();    }    	compilable	  [FE]  AssertionFailedError  	88	16	replace
8	[BUG]  [BUGGY]  if(sourceFile.length()!=  0)  {  return  sourceFile.toString();  }  [FE]  AssertionFailedError  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()!=  0)  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()!=  0)  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile.length()    ==    0)    {    return    sourceFile.toString();    }    	compilable	  [FE]  AssertionFailedError  	88	16	replace
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  if(originalName.length()  ==  0)  {  return  originalName.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.toString();  if(originalName.length()  ==  0)  {  return  originalName.toString();  }	  return    sourceFile.toString();    if(sourceFile.length()    ==    0)    {    return    sourceFile.toString();    }    	compilable	  [FE]  AssertionFailedError  	88	16	replace
10	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toString();  if(originalName.length()  ==  0)  {  return  originalName.toString();  }  [FE]  AssertionFailedError  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  if(originalName.length()  ==  0)  {  return  originalName.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.toString();  if(originalName.length()  ==  0)  {  return  originalName.toString();  }	  return    sourceFile.toString();    if(sourceFile.length()    ==    0)    {    return    sourceFile.toString();    }    	compilable	  [FE]  AssertionFailedError  	88	16	replace
11	[BUG]  [BUGGY]  String  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                  ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  prefixMappings.get(sourceFile);	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    Collection    <    String>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	57	None	replace
12	[BUG]  [BUGGY]  return  sourceFile.substring(0,  prefixMappings.length()  -  3);  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  prefixMappings.length()  -  3);  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  prefixMappings.length()  -  3);  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    Collection    <    String>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
13	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length());  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    Collection    <    String>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
14	[BUG]  [BUGGY]  return  sourceFile.substring(0,  prefixMappings.length());  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  prefixMappings.length());  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  prefixMappings.length());  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    Collection    <    String>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
15	[BUG]  [BUGGY]  return  sourceFile.substring(0,  prefixMappings.length()  -  3);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  prefixMappings.length()  -  3);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  prefixMappings.length()  -  3);	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    Collection    <    String>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
16	[BUG]  [BUGGY]  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    Collection    <    String>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
17	[BUG]  [BUGGY]  String  sourceFile  =  prefixMappings.substring(0,  sourceFile.length()  -  3);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                              ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  prefixMappings.substring(0,  sourceFile.length()  -  3);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  prefixMappings.substring(0,  sourceFile.length()  -  3);	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    Collection    <    String>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	57	None	replace
18	[BUG]  [BUGGY]  String  originalName  =  prefixMappings.get(mapping.prefix);  [CE]  cannot  find  symbol  mapping  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  prefixMappings.get(mapping.prefix);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  prefixMappings.get(mapping.prefix);	          String    originalName    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol  mapping	24	None	replace
19	[BUG]  [BUGGY]  String  originalName  =  prefixMappings.get(mapping.sourceFile);  [CE]  cannot  find  symbol  mapping  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  prefixMappings.get(mapping.sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  prefixMappings.get(mapping.sourceFile);	          String    originalName    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol  mapping	24	None	replace
20	[BUG]  [BUGGY]  String  originalName  =  prefixMappings.get(mapping.originalName);  [CE]  cannot  find  symbol  mapping  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  prefixMappings.get(mapping.originalName);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  prefixMappings.get(mapping.originalName);	          String    originalName    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol  mapping	24	None	replace
21	[BUG]  [BUGGY]  String  originalName  =  prefixMappings.get(mapping.prefix,  sourceFile);  [CE]  cannot  find  symbol  mapping  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  prefixMappings.get(mapping.prefix,  sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  prefixMappings.get(mapping.prefix,  sourceFile);	          String    originalName    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol  mapping	24	None	replace
22	[BUG]  [BUGGY]  String  originalName  =  prefixMappings.get(mapping.name);  [CE]  cannot  find  symbol  mapping  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  prefixMappings.get(mapping.name);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  prefixMappings.get(mapping.name);	          String    originalName    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol  mapping	24	None	replace
23	[BUG]  [BUGGY]  String  originalName  =  prefixMappings.get(sourceFile,  sourceLocationFixupCache);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  prefixMappings.get(sourceFile,  sourceLocationFixupCache);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  prefixMappings.get(sourceFile,  sourceLocationFixupCache);	          String    originalName    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	24	None	replace
24	[BUG]  [BUGGY]  String  originalName  =  prefixMappings.get(mapping.url);  [CE]  cannot  find  symbol  mapping  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  prefixMappings.get(mapping.url);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  prefixMappings.get(mapping.url);	          String    originalName    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol  mapping	24	None	replace
25	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  return  originalName.toLowerCase();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.toLowerCase();  return  originalName.toLowerCase();	  return    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	77	16	replace
26	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  return  originalName.toLowerCase();  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  return  originalName.toLowerCase();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.toLowerCase();  return  originalName.toLowerCase();	  return    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	77	16	replace
27	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(!prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(!prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	77	16	replace
28	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(!prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(!prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	77	16	replace
29	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  mapping  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    	non-compiled	[CE]  cannot  find  symbol  mapping	77	None	replace
30	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  else  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  else  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	77	16	replace
31	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  else  {  return  sourceFile.toLowerCase();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  else  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  else  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	77	16	replace
32	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	77	16	replace
33	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	77	16	replace
34	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toLowerCase();  }  else  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  ==  0)  {  return  sourceFile.toLowerCase();  }  else  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	77	16	replace
35	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toLowerCase();  }  else  {  return  sourceFile.toLowerCase();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toLowerCase();  }  else  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.toLowerCase();  }  else  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	77	16	replace
36	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	156	None	replace
37	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	156	None	replace
38	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	156	16	replace
39	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	156	16	replace
40	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
41	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  AssertionFailedError  	156	16	replace
42	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }  [FE]  AssertionFailedError  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  AssertionFailedError  	156	16	replace
43	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toString();  String  originalName  =  sourceFile.toString();  [CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  String  originalName  =  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String    originalName    =    sourceFile.toString();    String  originalName  =  sourceFile.toString();	  	non-compiled	[CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)	98	None	add
44	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toString();  String  sourceFile  =  sourceFile.toString();  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  String  sourceFile  =  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String    originalName    =    sourceFile.toString();    String  sourceFile  =  sourceFile.toString();	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	98	None	add
45	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  String  initialName  =  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String    originalName    =    sourceFile.toString();    String  initialName  =  sourceFile.toString();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	98	16	add
46	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toString();  String  initialName  =  sourceFile.toString();  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  String  initialName  =  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String    originalName    =    sourceFile.toString();    String  initialName  =  sourceFile.toString();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	98	16	add
47	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  String  originName  =  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String    originalName    =    sourceFile.toString();    String  originName  =  sourceFile.toString();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	98	16	add
48	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toString();  String  originName  =  sourceFile.toString();  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  String  originName  =  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String    originalName    =    sourceFile.toString();    String  originName  =  sourceFile.toString();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	98	16	add
49	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  String  OriginalName  =  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String    originalName    =    sourceFile.toString();    String  OriginalName  =  sourceFile.toString();	  	compilable	  [FE]  AssertionFailedError  	98	16	add
50	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toString();  String  OriginalName  =  sourceFile.toString();  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  String  OriginalName  =  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String    originalName    =    sourceFile.toString();    String  OriginalName  =  sourceFile.toString();	  	compilable	  [FE]  AssertionFailedError  	98	16	add
51	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  String  originalFile  =  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String    originalName    =    sourceFile.toString();    String  originalFile  =  sourceFile.toString();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	98	16	add
52	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toString();  String  originalFile  =  sourceFile.toString();  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  String  originalFile  =  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String    originalName    =    sourceFile.toString();    String  originalFile  =  sourceFile.toString();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	98	16	add
53	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  String  oldName  =  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String    originalName    =    sourceFile.toString();    String  oldName  =  sourceFile.toString();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	98	16	add
54	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toString();  String  oldName  =  sourceFile.toString();  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  String  oldName  =  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String    originalName    =    sourceFile.toString();    String  oldName  =  sourceFile.toString();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	98	16	add
55	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  /  3);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.substring(0,  sourceFile.length()  /  3);	  return    sourceFile.substring(0,    sourceFile.length()    +    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	43	16	replace
56	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  /  3);  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  /  3);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length()  /  3);	  return    sourceFile.substring(0,    sourceFile.length()    +    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	43	16	replace
57	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  return  sourceFile.substring(0,  sourceFile.length());  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  return  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  return  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    return    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	72	None	replace
58	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    return    sourceFile.substring(0,    sourceFile.length()    -    2);    	compilable	  [FE]  ComparisonFailure  	72	16	replace
59	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [FE]  ComparisonFailure  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    return    sourceFile.substring(0,    sourceFile.length()    -    2);    	compilable	  [FE]  ComparisonFailure  	72	16	replace
60	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  return  sourceFile.substring(0,  sourceFile.length());  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  return  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  return  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    return    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	72	None	replace
61	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    return    sourceFile.substring(0,    sourceFile.length()    -    2);    	compilable	  [FE]  ComparisonFailure  	72	16	replace
62	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [FE]  ComparisonFailure  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    return    sourceFile.substring(0,    sourceFile.length()    -    2);    	compilable	  [FE]  ComparisonFailure  	72	16	replace
63	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  return  originalName.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  return  originalName.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    return    sourceFile.substring(0,    sourceFile.length()    -    2);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	72	16	replace
64	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  return  originalName.substring(0,  sourceFile.length());  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  return  originalName.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  return  originalName.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    return    sourceFile.substring(0,    sourceFile.length()    -    2);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	72	16	replace
65	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    return    sourceFile.substring(0,    sourceFile.length()    -    2);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	72	16	replace
66	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    return    sourceFile.substring(0,    sourceFile.length()    -    2);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	72	16	replace
67	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length());    String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	8	None	add
68	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  [CE]  unreachable  statement  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length());    String  originalName  =  sourceFile.substring(0,  sourceFile.length());	  	non-compiled	[CE]  unreachable  statement	8	None	add
69	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  unreachable  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length());    if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  	non-compiled	[CE]  unreachable  statement	8	None	add
70	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length());    if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  return  sourceFile.substring(0,  sourceFile.length());  }	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	8	None	add
71	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length());    if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
72	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length());    if(sourceFile.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
73	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length());    if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile;  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
74	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile  ==  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile  ==  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length());    if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile  ==  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
75	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  return    sourceFile.toString();    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	89	None	replace
76	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.toString();  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.toString();  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.toString();  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.toString();    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	89	None	replace
77	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.toString();  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.toString();  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.toString();  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.toString();    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	89	None	replace
78	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.toString();  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  for(int  i  =  0;  i  <  sourceFile.length();  ++i)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.toString();  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  for(int  i  =  0;  i  <  sourceFile.length();  ++i)  {  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.toString();  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  for(int  i  =  0;  i  <  sourceFile.length();  ++i)  {	  return    sourceFile.toString();    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
79	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.toString();  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  Preconditions.checkNotNull(sourceFile);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.toString();  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  Preconditions.checkNotNull(sourceFile);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.toString();  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  Preconditions.checkNotNull(sourceFile);  }	  return    sourceFile.toString();    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	89	None	replace
80	[BUG]  [BUGGY]  return  sourceFile.toString();  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString();  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toString();  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.toString();    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	89	None	replace
81	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]        ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	52	None	replace
82	[BUG]  [BUGGY]  File  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  File  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	File  sourceFile  =  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
83	[BUG]  [BUGGY]  file  =  sourceFile.substring(0,  sourceFile.length());  [CE]  cannot  find  symbol  file  [FE]            ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  file  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	file  =  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	non-compiled	[CE]  cannot  find  symbol  file	52	None	replace
84	[BUG]  [BUGGY]  char  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]              ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  char  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	char  sourceFile  =  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	52	None	replace
85	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	sourceFile  =  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	52	16	replace
86	[BUG]  [BUGGY]  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile  =  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	52	16	replace
87	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  file.length());  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                  ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  file.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  file.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	52	None	replace
88	[BUG]  [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  	non-compiled	[CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)	17	None	add
89	[BUG]  [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1));  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1));  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1));	  	non-compiled	[CE]  ';'  expected	17	None	add
90	[BUG]  [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);	  	non-compiled	[CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)	17	None	add
91	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  String  initialName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    String  initialName  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	17	16	add
92	[BUG]  [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  String  initialName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  String  initialName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    String  initialName  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	17	16	add
93	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  String  OriginalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    String  OriginalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  	compilable	  [FE]  AssertionFailedError  	17	16	add
94	[BUG]  [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  String  OriginalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  String  OriginalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    String  OriginalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  	compilable	  [FE]  AssertionFailedError  	17	16	add
95	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  String  originName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    String  originName  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  	compilable	  [FE]  AssertionFailedError  	17	16	add
96	[BUG]  [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  String  originName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  String  originName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    String  originName  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  	compilable	  [FE]  AssertionFailedError  	17	16	add
97	[BUG]  [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  *  1);  [CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  *  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  *  1);	  	non-compiled	[CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)	17	None	add
98	[BUG]  [BUGGY]  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]            ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	94	None	replace
99	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]              ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	94	None	replace
100	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	94	None	replace
101	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -1);  }  else  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                  ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -1);  }  else  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -1);  }  else  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	94	None	replace
102	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  1);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  +  1);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]    RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  1);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  +  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    1);    String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  +  1);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	62	None	add
103	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  1);  [CE]  unreachable  statement  [FE]      RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    1);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  1);	  	non-compiled	[CE]  unreachable  statement	62	None	add
104	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  1);  return  sourceFile.substring(0,  sourceFile.length()  +  1);  [CE]  unreachable  statement  [FE]        RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  1);  return  sourceFile.substring(0,  sourceFile.length()  +  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    1);    return  sourceFile.substring(0,  sourceFile.length()  +  1);	  	non-compiled	[CE]  unreachable  statement	62	None	add
105	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  1);  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  +  1);  }  [CE]  unreachable  statement  [FE]          RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  1);  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  +  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    1);    if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  +  1);  }	  	non-compiled	[CE]  unreachable  statement	62	None	add
106	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  1);  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  +  1);  [CE]  unreachable  statement  [FE]            RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  1);  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  +  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    1);    sourceFile  =  sourceFile.substring(0,  sourceFile.length()  +  1);	  	non-compiled	[CE]  unreachable  statement	62	None	add
107	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  1);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  +  1);  return  sourceFile.substring(0,  sourceFile.length()  +  1);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]              RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  1);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  +  1);  return  sourceFile.substring(0,  sourceFile.length()  +  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    1);    String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  +  1);  return  sourceFile.substring(0,  sourceFile.length()  +  1);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	62	None	add
108	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  1);  if(originalName!=  null)  {  return  originalName;  }  [CE]  unreachable  statement  [FE]                RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  1);  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    1);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  1);  if(originalName!=  null)  {  return  originalName;  }	  	non-compiled	[CE]  unreachable  statement	62	None	add
109	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  1);  return  sourceFile.substring(0,  sourceFile.length()  +  1);  [CE]  unreachable  statement  [FE]                  RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  1);  return  sourceFile.substring(0,  sourceFile.length()  +  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    1);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  1);  return  sourceFile.substring(0,  sourceFile.length()  +  1);	  	non-compiled	[CE]  unreachable  statement	62	None	add
110	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(mapping.sourceFile);  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(mapping.sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(mapping.sourceFile);	          junit.framework.ComparisonFailure:    new    ComparisonFailure();    	non-compiled	[CE]  not  a  statement	139	None	replace
111	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(mapping.originalName);  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(mapping.originalName);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(mapping.originalName);	          junit.framework.ComparisonFailure:    new    ComparisonFailure();    	non-compiled	[CE]  not  a  statement	139	None	replace
112	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparationFailure();  [CE]  not  a  statement  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparationFailure();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	junit.framework.ComparisonFailure:  new  ComparationFailure();	          junit.framework.ComparisonFailure:    new    ComparisonFailure();    	non-compiled	[CE]  not  a  statement	139	None	replace
113	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.trim();  if(sourceFile.trim().equals(mapping.prefix))  {  return  sourceFile.trim();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.trim();  if(sourceFile.trim().equals(mapping.prefix))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.trim();  if(sourceFile.trim().equals(mapping.prefix))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile.trim().equals(mapping.prefix))    {    return    sourceFile.trim();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	30	None	replace
114	[BUG]  [BUGGY]  result.trim();  if(sourceFile.trim().equals(mapping.prefix))  {  return  sourceFile.trim();  }  [CE]  cannot  find  symbol  result  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  result.trim();  if(sourceFile.trim().equals(mapping.prefix))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	result.trim();  if(sourceFile.trim().equals(mapping.prefix))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile.trim().equals(mapping.prefix))    {    return    sourceFile.trim();    }    	non-compiled	[CE]  cannot  find  symbol  result	30	None	replace
115	[BUG]  [BUGGY]  sourceFile.trim();  if(sourceFile.trim().equals(mapping.prefix))  {  return  sourceFile.trim();  }  [CE]  cannot  find  symbol  mapping  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile.trim();  if(sourceFile.trim().equals(mapping.prefix))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile.trim();  if(sourceFile.trim().equals(mapping.prefix))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile.trim().equals(mapping.prefix))    {    return    sourceFile.trim();    }    	non-compiled	[CE]  cannot  find  symbol  mapping	30	None	replace
116	[BUG]  [BUGGY]  String  sourceFile  =  source.trim();  if(sourceFile.trim().equals(mapping.prefix))  {  return  sourceFile.trim();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  source.trim();  if(sourceFile.trim().equals(mapping.prefix))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  source.trim();  if(sourceFile.trim().equals(mapping.prefix))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile.trim().equals(mapping.prefix))    {    return    sourceFile.trim();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	30	None	replace
117	[BUG]  [BUGGY]  result.trim();  if(result.trim().equals(mapping.prefix))  {  return  sourceFile.trim();  }  [CE]  cannot  find  symbol  result  [FE]                          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  result.trim();  if(result.trim().equals(mapping.prefix))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	result.trim();  if(result.trim().equals(mapping.prefix))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile.trim().equals(mapping.prefix))    {    return    sourceFile.trim();    }    	non-compiled	[CE]  cannot  find  symbol  result	30	None	replace
118	[BUG]  [BUGGY]  if(sourceFile.trim().equals(mapping.prefix))  {  return  sourceFile.trim();  }  [CE]  cannot  find  symbol  mapping  [FE]                            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.trim().equals(mapping.prefix))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.trim().equals(mapping.prefix))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile.trim().equals(mapping.prefix))    {    return    sourceFile.trim();    }    	non-compiled	[CE]  cannot  find  symbol  mapping	30	None	replace
119	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile.isLowerCase())  {  return  sourceFile.toLowerCase();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile.isLowerCase())  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile.isLowerCase())  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile.isLowerCase())    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	168	None	replace
120	[BUG]  [BUGGY]  sourceFile  =  sourceLocation.toLowerCase();  if(sourceFile.isLowerCase())  {  return  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  sourceLocation  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  sourceLocation.toLowerCase();  if(sourceFile.isLowerCase())  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile  =  sourceLocation.toLowerCase();  if(sourceFile.isLowerCase())  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile.isLowerCase())    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  cannot  find  symbol  sourceLocation	168	None	replace
121	[BUG]  [BUGGY]  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile.isLowerCase())  {  return  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile.isLowerCase())  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile  =  sourceFile.toLowerCase();  if(sourceFile.isLowerCase())  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile.isLowerCase())    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
122	[BUG]  [BUGGY]  result.toLowerCase();  if(sourceFile.isLowerCase())  {  return  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  result  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  result.toLowerCase();  if(sourceFile.isLowerCase())  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	result.toLowerCase();  if(sourceFile.isLowerCase())  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile.isLowerCase())    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  cannot  find  symbol  result	168	None	replace
123	[BUG]  [BUGGY]  sourceFile.toLowerCase();  if(sourceFile.isLowerCase())  {  return  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile.toLowerCase();  if(sourceFile.isLowerCase())  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile.toLowerCase();  if(sourceFile.isLowerCase())  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile.isLowerCase())    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
124	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile.isLowerCase()  ||  sourceFile.toLowerCase())  {  return  sourceFile.toLowerCase();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile.isLowerCase()  ||  sourceFile.toLowerCase())  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile.isLowerCase()  ||  sourceFile.toLowerCase())  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile.isLowerCase())    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	168	None	replace
125	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.toLowerCase();	  String    originalName    =    sourceFile.toString();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	99	16	replace
126	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.toLowerCase();	  String    originalName    =    sourceFile.toString();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	99	16	replace
127	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toUpperCase();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.toUpperCase();	  String    originalName    =    sourceFile.toString();    	compilable	  [FE]  AssertionFailedError  	99	16	replace
128	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toUpperCase();  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toUpperCase();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.toUpperCase();	  String    originalName    =    sourceFile.toString();    	compilable	  [FE]  AssertionFailedError  	99	16	replace
129	[BUG]  [BUGGY]  String  originalName  =  sourceFile.getName();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.getName();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.getName();	  String    originalName    =    sourceFile.toString();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
130	[BUG]  [BUGGY]  File  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [CE]  cannot  find  symbol  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  File  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	File  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
131	[BUG]  [BUGGY]  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	44	None	replace
132	[BUG]  [BUGGY]  char  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  char  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	char  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	44	None	replace
133	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(1);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	3	16	replace
134	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(1);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	3	16	replace
135	[BUG]  [BUGGY]  file  =  sourceFile.substring(1);  String  originalName  =  file.substring(0,  sourceFile.length()  -  1);  [CE]  cannot  find  symbol  file  [FE]              ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  file  =  sourceFile.substring(1);  String  originalName  =  file.substring(0,  sourceFile.length()  -  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	file  =  sourceFile.substring(1);  String  originalName  =  file.substring(0,  sourceFile.length()  -  1);	  return    sourceFile.substring(1);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol  file	3	None	replace
136	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]            ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);	  return    sourceFile.substring(1);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length());    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	125	None	replace
137	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(1);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]              ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(1);	  return    sourceFile.substring(1);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length());    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	125	None	replace
138	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(1,  sourceFile.length());  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(1,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(1,  sourceFile.length());	  return    sourceFile.substring(1);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length());    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	125	None	replace
139	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	171	16	replace
140	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	171	16	replace
141	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }  [CE]  unreachable  statement  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(!prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(!prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    	non-compiled	[CE]  unreachable  statement	171	None	replace
142	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  originalName  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(!prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(!prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    	non-compiled	[CE]  cannot  find  symbol  originalName	171	None	replace
143	[BUG]  [BUGGY]  if(prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }  [CE]  unreachable  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    	non-compiled	[CE]  unreachable  statement	171	None	replace
144	[BUG]  [BUGGY]  if(prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  originalName  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    	non-compiled	[CE]  cannot  find  symbol  originalName	171	None	replace
145	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  mapping  [FE]                        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    	non-compiled	[CE]  cannot  find  symbol  mapping	171	None	replace
146	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  mapping  [FE]                          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    	non-compiled	[CE]  cannot  find  symbol  mapping	171	None	replace
147	[BUG]  [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):     "   ";  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):   "   ";  [CE]  unreachable  statement  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):     "   ";  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):   "   ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):       "   ";    return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):   "   ";	  	non-compiled	[CE]  unreachable  statement	151	None	add
148	[BUG]  [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):     "   ";  if(  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):   "   ";  [CE]  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):     "   ";  if(  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):   "   ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):       "   ";    if(  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):   "   ";	  	non-compiled	[CE]  	151	None	add
149	[BUG]  [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):     "   ";  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1): "   ";  [CE]  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):     "   ";  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1): "   ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):       "   ";    String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1): "   ";	  	non-compiled	[CE]  	151	None	add
150	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    if(originalName!=    null)    {    return    originalName;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	169	16	replace
151	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    if(originalName!=    null)    {    return    originalName;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	169	16	replace
152	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(!prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(!prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
153	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
154	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }  }  [CE]  cannot  find  symbol  mapping  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }  }	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  cannot  find  symbol  mapping	169	None	replace
155	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }  }  [CE]  unreachable  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(!prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(!prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }  }	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  unreachable  statement	169	None	replace
156	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(!prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(!prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
157	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  + "null ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.toString()  + "null ";	  return    sourceFile.toString()    +   "n   ";    	compilable	  [FE]  ComparisonFailure  	101	16	replace
158	[BUG]  [BUGGY]  return  sourceFile.toString()  + "null ";  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  + "null ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toString()  + "null ";	  return    sourceFile.toString()    +   "n   ";    	compilable	  [FE]  ComparisonFailure  	101	16	replace
159	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  + "   ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.toString()  + "   ";	  return    sourceFile.toString()    +   "n   ";    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	101	16	replace
160	[BUG]  [BUGGY]  return  sourceFile.toString()  + "   ";  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  + "   ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toString()  + "   ";	  return    sourceFile.toString()    +   "n   ";    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	101	16	replace
161	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  + ".null ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.toString()  + ".null ";	  return    sourceFile.toString()    +   "n   ";    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	101	16	replace
162	[BUG]  [BUGGY]  return  sourceFile.toString()  + ".null ";  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  + ".null ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toString()  + ".null ";	  return    sourceFile.toString()    +   "n   ";    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	101	16	replace
163	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  + "  t ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.toString()  + "  t ";	  return    sourceFile.toString()    +   "n   ";    	compilable	  [FE]  ComparisonFailure  	101	16	replace
164	[BUG]  [BUGGY]  return  sourceFile.toString()  + "  t ";  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  + "  t ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toString()  + "  t ";	  return    sourceFile.toString()    +   "n   ";    	compilable	  [FE]  ComparisonFailure  	101	16	replace
165	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  + "  - ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.toString()  + "  - ";	  return    sourceFile.toString()    +   "n   ";    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	101	16	replace
166	[BUG]  [BUGGY]  return  sourceFile.toString()  + "  - ";  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  + "  - ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toString()  + "  - ";	  return    sourceFile.toString()    +   "n   ";    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	101	16	replace
167	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  + "_ ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.toString()  + "_ ";	  return    sourceFile.toString()    +   "n   ";    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	101	16	replace
168	[BUG]  [BUGGY]  return  sourceFile.toString()  + "_ ";  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  + "_ ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toString()  + "_ ";	  return    sourceFile.toString()    +   "n   ";    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	101	16	replace
169	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.toString();  if(sourceFile!=  null)  {  ComparisonFailure:  null  expected;  }  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.toString();  if(sourceFile!=  null)  {  ComparisonFailure:  null  expected;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.toString();  if(sourceFile!=  null)  {  ComparisonFailure:  null  expected;  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    junit.framework.ComparisonFailure:    null    expected;    }    	non-compiled	[CE]  not  a  statement	105	None	replace
170	[BUG]  [BUGGY]  String  sourceFile  =  source.toString();  if(sourceFile!=  null)  {  ComparisonFailure:  null  expected;  }  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  source.toString();  if(sourceFile!=  null)  {  ComparisonFailure:  null  expected;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  source.toString();  if(sourceFile!=  null)  {  ComparisonFailure:  null  expected;  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    junit.framework.ComparisonFailure:    null    expected;    }    	non-compiled	[CE]  not  a  statement	105	None	replace
171	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile  ==  null)  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    junit.framework.ComparisonFailure:    null    expected;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	105	16	replace
172	[BUG]  [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile.toString();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile  ==  null)  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    junit.framework.ComparisonFailure:    null    expected;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	105	16	replace
173	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.toString();  if(sourceFile!=  null)  {  ComparisonFailure:  null  expected;  }  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.toString();  if(sourceFile!=  null)  {  ComparisonFailure:  null  expected;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.toString();  if(sourceFile!=  null)  {  ComparisonFailure:  null  expected;  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    junit.framework.ComparisonFailure:    null    expected;    }    	non-compiled	[CE]  not  a  statement	105	None	replace
174	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(mapping.DEFAULT_PREFIX);  [CE]  cannot  find  symbol  mapping  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(mapping.DEFAULT_PREFIX);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(mapping.DEFAULT_PREFIX);	  return    sourceFile.toLowerCase(LocationGenerator.DEFAULT_PREFIX);    	non-compiled	[CE]  cannot  find  symbol  mapping	41	None	replace
175	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(Math.DEFAULT_PREFIX);  [CE]  cannot  find  symbol  DEFAULT_PREFIX  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(Math.DEFAULT_PREFIX);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(Math.DEFAULT_PREFIX);	  return    sourceFile.toLowerCase(LocationGenerator.DEFAULT_PREFIX);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_PREFIX	41	None	replace
176	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(Math.PI  /  DEFAULT_PREFIX);  [CE]  cannot  find  symbol  DEFAULT_PREFIX  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(Math.PI  /  DEFAULT_PREFIX);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(Math.PI  /  DEFAULT_PREFIX);	  return    sourceFile.toLowerCase(LocationGenerator.DEFAULT_PREFIX);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_PREFIX	41	None	replace
177	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(Math.PI  /  sourceFile.DEFAULT_PREFIX);  [CE]  cannot  find  symbol  DEFAULT_PREFIX  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(Math.PI  /  sourceFile.DEFAULT_PREFIX);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(Math.PI  /  sourceFile.DEFAULT_PREFIX);	  return    sourceFile.toLowerCase(LocationGenerator.DEFAULT_PREFIX);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_PREFIX	41	None	replace
178	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(SourceMapping.DEFAULT_PREFIX);  [CE]  cannot  find  symbol  SourceMapping  [FE]                        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(SourceMapping.DEFAULT_PREFIX);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(SourceMapping.DEFAULT_PREFIX);	  return    sourceFile.toLowerCase(LocationGenerator.DEFAULT_PREFIX);    	non-compiled	[CE]  cannot  find  symbol  SourceMapping	41	None	replace
179	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(Math.PI);  [CE]  no  suitable  method  found  for  toLowerCase(double)  [FE]                          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(Math.PI);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(Math.PI);	  return    sourceFile.toLowerCase(LocationGenerator.DEFAULT_PREFIX);    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(double)	41	None	replace
180	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(Math.PI  /  2);  [CE]  no  suitable  method  found  for  toLowerCase(double)  [FE]                            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(Math.PI  /  2);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(Math.PI  /  2);	  return    sourceFile.toLowerCase(LocationGenerator.DEFAULT_PREFIX);    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(double)	41	None	replace
181	[BUG]  [BUGGY]  return  sourceFile.substring(2);  String  sourceFile  =  sourceFile.substring(2);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(2);  String  sourceFile  =  sourceFile.substring(2);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(2);    String  sourceFile  =  sourceFile.substring(2);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	64	None	add
182	[BUG]  [BUGGY]  return  sourceFile.substring(2);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(2);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(2);    String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	64	None	add
183	[BUG]  [BUGGY]  return  sourceFile.substring(2);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [CE]  unreachable  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(2);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(2);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);	  	non-compiled	[CE]  unreachable  statement	64	None	add
184	[BUG]  [BUGGY]  return  sourceFile.substring(2);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(2);  }  [CE]  cannot  find  symbol  mapping  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(2);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(2);    if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(2);  }	  	non-compiled	[CE]  cannot  find  symbol  mapping	64	None	add
185	[BUG]  [BUGGY]  return  sourceFile.substring(2);  String  originalName  =  sourceFile.substring(mapping.prefix);  [CE]  cannot  find  symbol  mapping  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(2);  String  originalName  =  sourceFile.substring(mapping.prefix);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(2);    String  originalName  =  sourceFile.substring(mapping.prefix);	  	non-compiled	[CE]  cannot  find  symbol  mapping	64	None	add
186	[BUG]  [BUGGY]  return  sourceFile.substring(2);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(2);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(2);    String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	64	None	add
187	[BUG]  [BUGGY]  return  sourceFile.substring(2);  String  originalName  =  sourceFile.substring(2);  [CE]  unreachable  statement  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(2);  String  originalName  =  sourceFile.substring(2);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(2);    String  originalName  =  sourceFile.substring(2);	  	non-compiled	[CE]  unreachable  statement	64	None	add
188	[BUG]  [BUGGY]  return  sourceFile.substring(2);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [CE]  unreachable  statement  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(2);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(2);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  	non-compiled	[CE]  unreachable  statement	64	None	add
189	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.substring  [CE]  ';'  expected  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.substring  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.substring	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  ';'  expected	131	None	replace
190	[BUG]  [BUGGY]  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	131	None	replace
191	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.substring(  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.substring(  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.substring(	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
192	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile  [CE]  ';'  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  ';'  expected	131	None	replace
193	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile.length()    >    0)    {    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	51	None	replace
194	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile.length()    >    0)    {    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	51	None	replace
195	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toString();  junit.framework.ComparisonFailure:  null;  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  junit.framework.ComparisonFailure:  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.toString();  junit.framework.ComparisonFailure:  null;	  return    sourceFile.toString();    junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	86	None	replace
196	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  CompositeFailure:  null;  }  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  CompositeFailure:  null;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  CompositeFailure:  null;  }	  return    sourceFile.toString();    junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	86	None	replace
197	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  ComparisonFailure:  null;  }  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  ComparisonFailure:  null;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  ComparisonFailure:  null;  }	  return    sourceFile.toString();    junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	86	None	replace
198	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile!=    null)    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	79	None	replace
199	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile!=    null)    {    return    sourceFile.toLowerCase();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	79	16	replace
200	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName.toLowerCase();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile!=    null)    {    return    sourceFile.toLowerCase();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	79	16	replace
201	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile  ==  null)  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile!=    null)    {    return    sourceFile.toLowerCase();    }    	compilable	  [FE]  AssertionFailedError  	79	16	replace
202	[BUG]  [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile.toLowerCase();  }  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile  ==  null)  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile!=    null)    {    return    sourceFile.toLowerCase();    }    	compilable	  [FE]  AssertionFailedError  	79	16	replace
203	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName  +  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName  +  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile!=    null)    {    return    sourceFile.toLowerCase();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	79	16	replace
204	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName  +  sourceFile.toLowerCase();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName  +  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName  +  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile!=    null)    {    return    sourceFile.toLowerCase();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	79	16	replace
205	[BUG]  [BUGGY]  result.toLowerCase();  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  result  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  result.toLowerCase();  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	result.toLowerCase();  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile!=    null)    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  cannot  find  symbol  result	79	None	replace
206	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  return  sourceFile.substring(0,  sourceFile.length()  -  1);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  return  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  return  sourceFile.substring(0,  sourceFile.length()  -  1);	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile.length()    >    0)    {    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	47	None	replace
207	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  return  sourceFile.substring(0,  sourceFile.length());  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  return  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  return  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile.length()    >    0)    {    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	47	None	replace
208	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile.length()    >    0)    {    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	47	None	replace
209	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  junit.framework.ComparisonFailure:  null  expected;  }  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  junit.framework.ComparisonFailure:  null  expected;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  junit.framework.ComparisonFailure:  null  expected;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    junit.framework.ComparisonFailure:    null    expected;    }    	non-compiled	[CE]  not  a  statement	117	None	replace
210	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  junit.framework.ComparisonFailure:  null  expected;  }  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  junit.framework.ComparisonFailure:  null  expected;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  junit.framework.ComparisonFailure:  null  expected;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    junit.framework.ComparisonFailure:    null    expected;    }    	non-compiled	[CE]  not  a  statement	117	None	replace
211	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  ComparisonFailure:  null  expected;  }  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  ComparisonFailure:  null  expected;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  ComparisonFailure:  null  expected;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    junit.framework.ComparisonFailure:    null    expected;    }    	non-compiled	[CE]  not  a  statement	117	None	replace
212	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  junit.framework.ComparisonFailure:  null  expected;  }  [CE]  not  a  statement  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  junit.framework.ComparisonFailure:  null  expected;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  junit.framework.ComparisonFailure:  null  expected;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    junit.framework.ComparisonFailure:    null    expected;    }    	non-compiled	[CE]  not  a  statement	117	None	replace
213	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  ComparisonFailure:  null  expected;  }  [CE]  not  a  statement  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  ComparisonFailure:  null  expected;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  ComparisonFailure:  null  expected;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    junit.framework.ComparisonFailure:    null    expected;    }    	non-compiled	[CE]  not  a  statement	117	None	replace
214	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    junit.framework.ComparisonFailure:    null    expected;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	117	16	replace
215	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    junit.framework.ComparisonFailure:    null    expected;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	117	16	replace
216	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  ComparisonFailure:  null  expected;  }  [CE]  not  a  statement  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  ComparisonFailure:  null  expected;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  ComparisonFailure:  null  expected;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    junit.framework.ComparisonFailure:    null    expected;    }    	non-compiled	[CE]  not  a  statement	117	None	replace
217	[BUG]  [BUGGY]  file  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [CE]  cannot  find  symbol  file  [FE]              ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  file  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	file  =  sourceFile.substring(0,  sourceFile.length()  -  2);	  return    sourceFile.substring(1);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  cannot  find  symbol  file	4	None	replace
218	[BUG]  [BUGGY]  File  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  File  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	File  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);	  return    sourceFile.substring(1);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
219	[BUG]  [BUGGY]  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    SourceFile    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	116	None	replace
220	[BUG]  [BUGGY]  return  sourceFile.trim();  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  [CE]  unreachable  statement  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim();  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.trim();  String  originalName  =  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.trim();    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  unreachable  statement	27	None	replace
221	[BUG]  [BUGGY]  file.trim();  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  [CE]  cannot  find  symbol  file  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  file.trim();  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	file.trim();  String  originalName  =  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.trim();    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol  file	27	None	replace
222	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim()  +  prefixMappings.size();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.trim()  +  prefixMappings.size();	  return    sourceFile.trim()    +    suffixMappings.size();    	compilable	  [FE]  ComparisonFailure  	107	16	replace
223	[BUG]  [BUGGY]  return  sourceFile.trim()  +  prefixMappings.size();  [FE]  ComparisonFailure  [FE]        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim()  +  prefixMappings.size();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.trim()  +  prefixMappings.size();	  return    sourceFile.trim()    +    suffixMappings.size();    	compilable	  [FE]  ComparisonFailure  	107	16	replace
224	[BUG]  [BUGGY]  return  prefixMappings.trim()  +  sourceFile.size();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  prefixMappings.trim()  +  sourceFile.size();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  prefixMappings.trim()  +  sourceFile.size();	  return    sourceFile.trim()    +    suffixMappings.size();    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
225	[BUG]  [BUGGY]  return  sourceFile.trim()  +  mapping.prefixMappings.size();  [CE]  package  mapping  does  not  exist  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim()  +  mapping.prefixMappings.size();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.trim()  +  mapping.prefixMappings.size();	  return    sourceFile.trim()    +    suffixMappings.size();    	non-compiled	[CE]  package  mapping  does  not  exist	107	None	replace
226	[BUG]  [BUGGY]  return  sourceFile.trim()  +  fixupSourceLocation.size();  [CE]  cannot  find  symbol  fixupSourceLocation  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim()  +  fixupSourceLocation.size();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.trim()  +  fixupSourceLocation.size();	  return    sourceFile.trim()    +    suffixMappings.size();    	non-compiled	[CE]  cannot  find  symbol  fixupSourceLocation	107	None	replace
227	[BUG]  [BUGGY]  return  sourceFile.trim()  +  mapping.suffixMappings.size();  [CE]  package  mapping  does  not  exist  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim()  +  mapping.suffixMappings.size();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.trim()  +  mapping.suffixMappings.size();	  return    sourceFile.trim()    +    suffixMappings.size();    	non-compiled	[CE]  package  mapping  does  not  exist	107	None	replace
228	[BUG]  [BUGGY]  return  sourceFile.trim()  +  factory.fixupSourceLocation.size();  [CE]  package  factory  does  not  exist  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim()  +  factory.fixupSourceLocation.size();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.trim()  +  factory.fixupSourceLocation.size();	  return    sourceFile.trim()    +    suffixMappings.size();    	non-compiled	[CE]  package  factory  does  not  exist	107	None	replace
229	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.toLowerCase();  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.toLowerCase();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.toLowerCase();	  return    sourceFile.toLowerCase();    String    sourceFile    =    sourceFile.toLowerCase();    if(sourceFile!=    null)    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	126	None	replace
230	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    sourceFile    =    sourceFile.toLowerCase();    if(sourceFile!=    null)    {    return    sourceFile.toLowerCase();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	126	16	replace
231	[BUG]  [BUGGY]  if(prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    sourceFile    =    sourceFile.toLowerCase();    if(sourceFile!=    null)    {    return    sourceFile.toLowerCase();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	126	16	replace
232	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile  ==  null)  {  return  sourceFile.toLowerCase();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile  ==  null)  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile  ==  null)  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    sourceFile    =    sourceFile.toLowerCase();    if(sourceFile!=    null)    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	126	None	replace
233	[BUG]  [BUGGY]  if(prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  String  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile!=  null)  {  return  sourceFile.toLowerCa  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  String  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile!=  null)  {  return  sourceFile.toLowerCa  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  String  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile!=  null)  {  return  sourceFile.toLowerCa	  return    sourceFile.toLowerCase();    String    sourceFile    =    sourceFile.toLowerCase();    if(sourceFile!=    null)    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  ';'  expected	126	None	replace
234	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	sourceFile  =  sourceFile.toLowerCase();  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    sourceFile    =    sourceFile.toLowerCase();    if(sourceFile!=    null)    {    return    sourceFile.toLowerCase();    }    	compilable	  [FE]  AssertionFailedError  	126	16	replace
235	[BUG]  [BUGGY]  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile  =  sourceFile.toLowerCase();  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    sourceFile    =    sourceFile.toLowerCase();    if(sourceFile!=    null)    {    return    sourceFile.toLowerCase();    }    	compilable	  [FE]  AssertionFailedError  	126	16	replace
236	[BUG]  [BUGGY]  if(prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  String  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile!=  null)  {  return  sourceFile.toLo  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  String  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile!=  null)  {  return  sourceFile.toLo  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  String  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile!=  null)  {  return  sourceFile.toLo	  return    sourceFile.toLowerCase();    String    sourceFile    =    sourceFile.toLowerCase();    if(sourceFile!=    null)    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  ';'  expected	126	None	replace
237	[BUG]  [BUGGY]  return  sourceFile.trim().toLowerCase();  String  sourceFile  =  sourceFile.trim().toLowerCase();  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim().toLowerCase();  String  sourceFile  =  sourceFile.trim().toLowerCase();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.trim().toLowerCase();    String  sourceFile  =  sourceFile.trim().toLowerCase();	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	33	None	add
238	[BUG]  [BUGGY]  return  sourceFile.trim().toLowerCase();  if(sourceFile.trim().toLowerCase()!=  null)  {  return  sourceFile.trim().toLowerCase();  }  [CE]  unreachable  statement  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim().toLowerCase();  if(sourceFile.trim().toLowerCase()!=  null)  {  return  sourceFile.trim().toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.trim().toLowerCase();    if(sourceFile.trim().toLowerCase()!=  null)  {  return  sourceFile.trim().toLowerCase();  }	  	non-compiled	[CE]  unreachable  statement	33	None	add
239	[BUG]  [BUGGY]  return  sourceFile.trim().toLowerCase();  String  originalName  =  sourceFile.trim().toLowerCase();  [CE]  unreachable  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim().toLowerCase();  String  originalName  =  sourceFile.trim().toLowerCase();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.trim().toLowerCase();    String  originalName  =  sourceFile.trim().toLowerCase();	  	non-compiled	[CE]  unreachable  statement	33	None	add
240	[BUG]  [BUGGY]  return  sourceFile.trim().toLowerCase();  if(sourceFile.trim().toLowerCase()  ==  null)  {  return  sourceFile.trim().toLowerCase();  }  [CE]  unreachable  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim().toLowerCase();  if(sourceFile.trim().toLowerCase()  ==  null)  {  return  sourceFile.trim().toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.trim().toLowerCase();    if(sourceFile.trim().toLowerCase()  ==  null)  {  return  sourceFile.trim().toLowerCase();  }	  	non-compiled	[CE]  unreachable  statement	33	None	add
241	[BUG]  [BUGGY]  return  sourceFile.trim().toLowerCase();  if(sourceFile.trim().toLowerCase()  ==  sourceFile.trim().toLowerCase())  {  return  sourceFile.trim().toLowerCase();  }  [CE]  unreachable  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim().toLowerCase();  if(sourceFile.trim().toLowerCase()  ==  sourceFile.trim().toLowerCase())  {  return  sourceFile.trim().toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.trim().toLowerCase();    if(sourceFile.trim().toLowerCase()  ==  sourceFile.trim().toLowerCase())  {  return  sourceFile.trim().toLowerCase();  }	  	non-compiled	[CE]  unreachable  statement	33	None	add
242	[BUG]  [BUGGY]  return  sourceFile.trim().toLowerCase();  if(sourceFile.trim().toLowerCase()!=  null)  {  String  sourceFile  =  sourceFile.trim().toLowerCase();  return  sourceFile.trim().toLowerCase();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim().toLowerCase();  if(sourceFile.trim().toLowerCase()!=  null)  {  String  sourceFile  =  sourceFile.trim().toLowerCase();  return  sourceFile.trim().toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.trim().toLowerCase();    if(sourceFile.trim().toLowerCase()!=  null)  {  String  sourceFile  =  sourceFile.trim().toLowerCase();  return  sourceFile.trim().toLowerCase();  }	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	33	None	add
243	[BUG]  [BUGGY]  return  sourceFile.trim().toLowerCase();  if(sourceFile.trim().toLowerCase()  ==  null)  {  String  sourceFile  =  sourceFile.trim().toLowerCase();  return  sourceFile.trim().toLowerCase();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim().toLowerCase();  if(sourceFile.trim().toLowerCase()  ==  null)  {  String  sourceFile  =  sourceFile.trim().toLowerCase();  return  sourceFile.trim().toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.trim().toLowerCase();    if(sourceFile.trim().toLowerCase()  ==  null)  {  String  sourceFile  =  sourceFile.trim().toLowerCase();  return  sourceFile.trim().toLowerCase();  }	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	33	None	add
244	[BUG]  [BUGGY]  return  sourceFile.trim().toLowerCase();  return  sourceFile.trim().toLowerCase();  [CE]  unreachable  statement  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim().toLowerCase();  return  sourceFile.trim().toLowerCase();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.trim().toLowerCase();    return  sourceFile.trim().toLowerCase();	  	non-compiled	[CE]  unreachable  statement	33	None	add
245	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile.length()    >    0)    {    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	48	16	replace
246	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile.length()    >    0)    {    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	48	16	replace
247	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile.length()    >    0)    {    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	compilable	  [FE]  ComparisonFailure  	48	16	replace
248	[BUG]  [BUGGY]  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [FE]  ComparisonFailure  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile.length()    >    0)    {    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	compilable	  [FE]  ComparisonFailure  	48	16	replace
249	[BUG]  [BUGGY]  return  sourceFile  ==  null?  null  :  sourceFile.toString();  if(sourceFile  ==  null?  null  :  sourceFile.toString())  {  return  sourceFile  ==  null?  null  :  sourceFile.toString();  }  [CE]  incompatible  types  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile  ==  null?  null  :  sourceFile.toString();  if(sourceFile  ==  null?  null  :  sourceFile.toString())  {  return  sourceFile  ==  null?  null  :  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile    ==    null?    null    :    sourceFile.toString();    if(sourceFile  ==  null?  null  :  sourceFile.toString())  {  return  sourceFile  ==  null?  null  :  sourceFile.toString();  }	  	non-compiled	[CE]  incompatible  types	162	None	add
250	[BUG]  [BUGGY]  return  sourceFile  ==  null?  null  :  sourceFile.toString();  if(sourceFile!=  null?  null  :  sourceFile.toString())  {  return  sourceFile  ==  null?  null  :  sourceFile.toString();  }  [CE]  incompatible  types  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile  ==  null?  null  :  sourceFile.toString();  if(sourceFile!=  null?  null  :  sourceFile.toString())  {  return  sourceFile  ==  null?  null  :  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile    ==    null?    null    :    sourceFile.toString();    if(sourceFile!=  null?  null  :  sourceFile.toString())  {  return  sourceFile  ==  null?  null  :  sourceFile.toString();  }	  	non-compiled	[CE]  incompatible  types	162	None	add
251	[BUG]  [BUGGY]  return  sourceFile  ==  null?  null  :  sourceFile.toString();  if(sourceFile  ==  null)  {  return  sourceFile  ==  null?  null  :  sourceFile.toString();  }  [CE]  unreachable  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile  ==  null?  null  :  sourceFile.toString();  if(sourceFile  ==  null)  {  return  sourceFile  ==  null?  null  :  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile    ==    null?    null    :    sourceFile.toString();    if(sourceFile  ==  null)  {  return  sourceFile  ==  null?  null  :  sourceFile.toString();  }	  	non-compiled	[CE]  unreachable  statement	162	None	add
252	[BUG]  [BUGGY]  return  sourceFile  ==  null?  null  :  sourceFile.toString();  if(sourceFile  ==  null?  null  :  sourceFile.toString())  {  return  sourceFile!=  null?  null  :  sourceFile.toString();  }  [CE]  incompatible  types  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile  ==  null?  null  :  sourceFile.toString();  if(sourceFile  ==  null?  null  :  sourceFile.toString())  {  return  sourceFile!=  null?  null  :  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile    ==    null?    null    :    sourceFile.toString();    if(sourceFile  ==  null?  null  :  sourceFile.toString())  {  return  sourceFile!=  null?  null  :  sourceFile.toString();  }	  	non-compiled	[CE]  incompatible  types	162	None	add
253	[BUG]  [BUGGY]  return  sourceFile  ==  null?  null  :  sourceFile.toString();  if(sourceFile!=  null)  {  return  sourceFile  ==  null?  null  :  sourceFile.toString();  }  [CE]  unreachable  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile  ==  null?  null  :  sourceFile.toString();  if(sourceFile!=  null)  {  return  sourceFile  ==  null?  null  :  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile    ==    null?    null    :    sourceFile.toString();    if(sourceFile!=  null)  {  return  sourceFile  ==  null?  null  :  sourceFile.toString();  }	  	non-compiled	[CE]  unreachable  statement	162	None	add
254	[BUG]  [BUGGY]  return  sourceFile  ==  null?  null  :  sourceFile.toString();  return  sourceFile  ==  null?  null  :  sourceFile.toString();  [CE]  unreachable  statement  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile  ==  null?  null  :  sourceFile.toString();  return  sourceFile  ==  null?  null  :  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile    ==    null?    null    :    sourceFile.toString();    return  sourceFile  ==  null?  null  :  sourceFile.toString();	  	non-compiled	[CE]  unreachable  statement	162	None	add
255	[BUG]  [BUGGY]  return  sourceFile  ==  null?  null  :  sourceFile.toString();  if(sourceFile  ==  null?  null  :  sourceFile.toString())  {  return  sourceFile  ==  null?  null  :  sourceFile.toString();  }  else  {  return  sourceFile  ==  null?  null  :  sourceFile.toString();  }  [CE]  incompatible  types  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile  ==  null?  null  :  sourceFile.toString();  if(sourceFile  ==  null?  null  :  sourceFile.toString())  {  return  sourceFile  ==  null?  null  :  sourceFile.toString();  }  else  {  return  sourceFile  ==  null?  null  :  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile    ==    null?    null    :    sourceFile.toString();    if(sourceFile  ==  null?  null  :  sourceFile.toString())  {  return  sourceFile  ==  null?  null  :  sourceFile.toString();  }  else  {  return  sourceFile  ==  null?  null  :  sourceFile.toString();  }	  	non-compiled	[CE]  incompatible  types	162	None	add
256	[BUG]  [BUGGY]  return  sourceFile  ==  null?  null  :  sourceFile.toString();  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile  ==  null?  null  :  sourceFile.toString();  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile    ==    null?    null    :    sourceFile.toString();    String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	162	None	add
257	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	73	None	replace
258	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	73	None	replace
259	[BUG]  [BUGGY]  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  cannot  find  symbol  mapping  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  cannot  find  symbol  mapping	73	None	replace
260	[BUG]  [BUGGY]  File  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  cannot  find  symbol  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  File  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	File  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
261	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.startsWith(mapping.originalName))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.startsWith(mapping.originalName))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.startsWith(mapping.originalName))  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	73	None	replace
262	[BUG]  [BUGGY]  file  =  sourceFile.substring(0,  sourceFile.length());  if(file.startsWith(mapping.prefix))  {  return  file.substring(0,  sourceFile.length());  }  [CE]  cannot  find  symbol  file  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  file  =  sourceFile.substring(0,  sourceFile.length());  if(file.startsWith(mapping.prefix))  {  return  file.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	file  =  sourceFile.substring(0,  sourceFile.length());  if(file.startsWith(mapping.prefix))  {  return  file.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  cannot  find  symbol  file	73	None	replace
263	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    if(originalName!=    null)    {    return    originalName;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	154	16	replace
264	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    if(originalName!=    null)    {    return    originalName;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	154	16	replace
265	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
266	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
267	[BUG]  [BUGGY]  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
268	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
269	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName  ==  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName  ==  null)  {  return  originalName;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    if(originalName!=    null)    {    return    originalName;    }    	compilable	  [FE]  AssertionFailedError  	154	16	replace
270	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName  ==  null)  {  return  originalName;  }  [FE]  AssertionFailedError  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName  ==  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName  ==  null)  {  return  originalName;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    if(originalName!=    null)    {    return    originalName;    }    	compilable	  [FE]  AssertionFailedError  	154	16	replace
271	[BUG]  [BUGGY]  Tasks.ComparisonFailure:  sourceFile;  [CE]  not  a  statement  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  Tasks.ComparisonFailure:  sourceFile;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	Tasks.ComparisonFailure:  sourceFile;	          junit.framework.ComparisonFailure:    sourceFile;    	non-compiled	[CE]  not  a  statement	23	None	replace
272	[BUG]  [BUGGY]  sourceFile:  junit.framework.ComparisonFailure;  [CE]  not  a  statement  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile:  junit.framework.ComparisonFailure;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile:  junit.framework.ComparisonFailure;	          junit.framework.ComparisonFailure:    sourceFile;    	non-compiled	[CE]  not  a  statement	23	None	replace
273	[BUG]  [BUGGY]  java.util.ComparisonFailure:  sourceFile;  [CE]  not  a  statement  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  java.util.ComparisonFailure:  sourceFile;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	java.util.ComparisonFailure:  sourceFile;	          junit.framework.ComparisonFailure:    sourceFile;    	non-compiled	[CE]  not  a  statement	23	None	replace
274	[BUG]  [BUGGY]  Mapping.ComparisonFailure:  sourceFile;  [CE]  not  a  statement  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  Mapping.ComparisonFailure:  sourceFile;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	Mapping.ComparisonFailure:  sourceFile;	          junit.framework.ComparisonFailure:    sourceFile;    	non-compiled	[CE]  not  a  statement	23	None	replace
275	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  originalName  =  sourceFile.toString();  }  [CE]  cannot  find  symbol  mapping  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  originalName  =  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  originalName  =  sourceFile.toString();  }	  return    sourceFile.toString();    String    originalName    =    sourceFile.toString();    	non-compiled	[CE]  cannot  find  symbol  mapping	160	None	replace
276	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }  else  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }  [CE]  cannot  find  symbol  mapping  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }  else  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }  else  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    String    originalName    =    sourceFile.toString();    	non-compiled	[CE]  cannot  find  symbol  mapping	160	None	replace
277	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toString();  originalName  =  sourceFile.toString();  }  [CE]  cannot  find  symbol  originalName  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toString();  originalName  =  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.toString();  originalName  =  sourceFile.toString();  }	  return    sourceFile.toString();    String    originalName    =    sourceFile.toString();    	non-compiled	[CE]  cannot  find  symbol  originalName	160	None	replace
278	[BUG]  [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toString();  originalName  =  sourceFile.toString();  }  [CE]  cannot  find  symbol  originalName  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toString();  originalName  =  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.isEmpty())  {  return  sourceFile.toString();  originalName  =  sourceFile.toString();  }	  return    sourceFile.toString();    String    originalName    =    sourceFile.toString();    	non-compiled	[CE]  cannot  find  symbol  originalName	160	None	replace
279	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }  else  if(sourceFile.endsWith(mapping.prefix))  {  return  sourceFile.toString();  }  [CE]  cannot  find  symbol  mapping  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }  else  if(sourceFile.endsWith(mapping.prefix))  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }  else  if(sourceFile.endsWith(mapping.prefix))  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    String    originalName    =    sourceFile.toString();    	non-compiled	[CE]  cannot  find  symbol  mapping	160	None	replace
280	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  String  originalName  =  sourceFile.toString();  }  [CE]  cannot  find  symbol  mapping  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  String  originalName  =  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  String  originalName  =  sourceFile.toString();  }	  return    sourceFile.toString();    String    originalName    =    sourceFile.toString();    	non-compiled	[CE]  cannot  find  symbol  mapping	160	None	replace
281	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.isEmpty())  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile.isEmpty())    {    return    sourceFile.toString();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	90	16	replace
282	[BUG]  [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toString();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.isEmpty())  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile.isEmpty())    {    return    sourceFile.toString();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	90	16	replace
283	[BUG]  [BUGGY]  ||  sourceFile.isEmpty())  {  return  sourceFile.toString();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  ||  sourceFile.isEmpty())  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	||  sourceFile.isEmpty())  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile.isEmpty())    {    return    sourceFile.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
284	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.toString();  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.toString();	  return    sourceFile.toString();    if(sourceFile.isEmpty())    {    return    sourceFile.toString();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	90	None	replace
285	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  if(originalName.equals(sourceFile.toString()))  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.toString();  if(originalName.equals(sourceFile.toString()))  {  return  originalName;  }	  return    sourceFile.toString();    if(sourceFile.isEmpty())    {    return    sourceFile.toString();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	90	16	replace
286	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toString();  if(originalName.equals(sourceFile.toString()))  {  return  originalName;  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  if(originalName.equals(sourceFile.toString()))  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.toString();  if(originalName.equals(sourceFile.toString()))  {  return  originalName;  }	  return    sourceFile.toString();    if(sourceFile.isEmpty())    {    return    sourceFile.toString();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	90	16	replace
287	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1): "n ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1): "n ";	  return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):       "   ";    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	152	16	replace
288	[BUG]  [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1): "n ";  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1): "n ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1): "n ";	  return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):       "   ";    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	152	16	replace
289	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1): " ".trim();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1): " ".trim();	  return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):       "   ";    	compilable	  [FE]  ComparisonFailure  	152	16	replace
290	[BUG]  [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1): " ".trim();  [FE]  ComparisonFailure  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1): " ".trim();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1): " ".trim();	  return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):       "   ";    	compilable	  [FE]  ComparisonFailure  	152	16	replace
291	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1): "/ ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1): "/ ";	  return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):       "   ";    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	152	16	replace
292	[BUG]  [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1): "/ ";  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1): "/ ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1): "/ ";	  return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):       "   ";    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	152	16	replace
293	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  mapping  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    	non-compiled	[CE]  cannot  find  symbol  mapping	78	None	replace
294	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  }  [CE]  unreachable  statement  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    	non-compiled	[CE]  unreachable  statement	78	None	replace
295	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  mapping  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    	non-compiled	[CE]  cannot  find  symbol  mapping	78	None	replace
296	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  originalName  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    	non-compiled	[CE]  cannot  find  symbol  originalName	78	None	replace
297	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  else  {  String  originalName  =  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  mapping  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  else  {  String  originalName  =  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  else  {  String  originalName  =  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    	non-compiled	[CE]  cannot  find  symbol  mapping	78	None	replace
298	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]              ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile.length()    -    3!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    3);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	55	None	replace
299	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  ==  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  ==  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  ==  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile.length()    -    3!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    3);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	55	None	replace
300	[BUG]  [BUGGY]  file  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()!=  null)  {  return  file.substring(0,  sourceFile.length());  }  [CE]  cannot  find  symbol  file  [FE]                  ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  file  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()!=  null)  {  return  file.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	file  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()!=  null)  {  return  file.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile.length()    -    3!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    3);    }    	non-compiled	[CE]  cannot  find  symbol  file	55	None	replace
301	[BUG]  [BUGGY]  File  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  File  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	File  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile.length()    -    3!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    3);    }    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
302	[BUG]  [BUGGY]  file  =  sourceFile.substring(0,  sourceFile.length());  if(file.length()!=  null)  {  return  file.substring(0,  sourceFile.length());  }  [CE]  cannot  find  symbol  file  [FE]                      ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  file  =  sourceFile.substring(0,  sourceFile.length());  if(file.length()!=  null)  {  return  file.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	file  =  sourceFile.substring(0,  sourceFile.length());  if(file.length()!=  null)  {  return  file.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile.length()    -    3!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    3);    }    	non-compiled	[CE]  cannot  find  symbol  file	55	None	replace
303	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	157	None	replace
304	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
305	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	157	None	replace
306	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	157	16	replace
307	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	157	16	replace
308	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(1,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(1,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(1,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	157	None	replace
309	[BUG]  [BUGGY]  return  sourceFile!=  null?  null  :  sourceFile.toString();  if(sourceFile!=  null?  null  :  sourceFile.toString())  {  return  sourceFile!=  null?  null  :  sourceFile.toString();  }  [CE]  incompatible  types  [FE]    junit.framework.ComparisonFailure:  null  expected:<...unt   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile!=  null?  null  :  sourceFile.toString();  if(sourceFile!=  null?  null  :  sourceFile.toString())  {  return  sourceFile!=  null?  null  :  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile!=    null?    null    :    sourceFile.toString();    if(sourceFile!=  null?  null  :  sourceFile.toString())  {  return  sourceFile!=  null?  null  :  sourceFile.toString();  }	  	non-compiled	[CE]  incompatible  types	96	None	add
310	[BUG]  [BUGGY]  return  sourceFile!=  null?  null  :  sourceFile.toString();  if(sourceFile  ==  null?  null  :  sourceFile.toString())  {  return  sourceFile!=  null?  null  :  sourceFile.toString();  }  [CE]  incompatible  types  [FE]      junit.framework.ComparisonFailure:  null  expected:<...unt   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile!=  null?  null  :  sourceFile.toString();  if(sourceFile  ==  null?  null  :  sourceFile.toString())  {  return  sourceFile!=  null?  null  :  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile!=    null?    null    :    sourceFile.toString();    if(sourceFile  ==  null?  null  :  sourceFile.toString())  {  return  sourceFile!=  null?  null  :  sourceFile.toString();  }	  	non-compiled	[CE]  incompatible  types	96	None	add
311	[BUG]  [BUGGY]  return  sourceFile!=  null?  null  :  sourceFile.toString();  if(sourceFile!=  null)  {  return  sourceFile!=  null?  null  :  sourceFile.toString();  }  [CE]  unreachable  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...unt   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile!=  null?  null  :  sourceFile.toString();  if(sourceFile!=  null)  {  return  sourceFile!=  null?  null  :  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile!=    null?    null    :    sourceFile.toString();    if(sourceFile!=  null)  {  return  sourceFile!=  null?  null  :  sourceFile.toString();  }	  	non-compiled	[CE]  unreachable  statement	96	None	add
312	[BUG]  [BUGGY]  return  sourceFile!=  null?  null  :  sourceFile.toString();  if(sourceFile!=  null?  null  :  sourceFile.toString())  {  return  sourceFile  ==  null?  null  :  sourceFile.toString();  }  [CE]  incompatible  types  [FE]          junit.framework.ComparisonFailure:  null  expected:<...unt   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile!=  null?  null  :  sourceFile.toString();  if(sourceFile!=  null?  null  :  sourceFile.toString())  {  return  sourceFile  ==  null?  null  :  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile!=    null?    null    :    sourceFile.toString();    if(sourceFile!=  null?  null  :  sourceFile.toString())  {  return  sourceFile  ==  null?  null  :  sourceFile.toString();  }	  	non-compiled	[CE]  incompatible  types	96	None	add
313	[BUG]  [BUGGY]  return  sourceFile!=  null?  null  :  sourceFile.toString();  return  sourceFile!=  null?  null  :  sourceFile.toString();  [CE]  unreachable  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...unt   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile!=  null?  null  :  sourceFile.toString();  return  sourceFile!=  null?  null  :  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile!=    null?    null    :    sourceFile.toString();    return  sourceFile!=  null?  null  :  sourceFile.toString();	  	non-compiled	[CE]  unreachable  statement	96	None	add
314	[BUG]  [BUGGY]  return  sourceFile!=  null?  null  :  sourceFile.toString();  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]              junit.framework.ComparisonFailure:  null  expected:<...unt   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile!=  null?  null  :  sourceFile.toString();  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile!=    null?    null    :    sourceFile.toString();    String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	96	None	add
315	[BUG]  [BUGGY]  return  sourceFile!=  null?  null  :  sourceFile.toString();  String  sourceFile  =  sourceFile!=  null?  null  :  sourceFile.toString();  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                junit.framework.ComparisonFailure:  null  expected:<...unt   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile!=  null?  null  :  sourceFile.toString();  String  sourceFile  =  sourceFile!=  null?  null  :  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile!=    null?    null    :    sourceFile.toString();    String  sourceFile  =  sourceFile!=  null?  null  :  sourceFile.toString();	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	96	None	add
316	[BUG]  [BUGGY]  return  sourceFile!=  null?  null  :  sourceFile.toString();  if(sourceFile!=  null?  null  :  sourceFile.toString())  {  return  sourceFile  >=  null?  null  :  sourceFile.toString();  }  [CE]  incompatible  types  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...unt   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile!=  null?  null  :  sourceFile.toString();  if(sourceFile!=  null?  null  :  sourceFile.toString())  {  return  sourceFile  >=  null?  null  :  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile!=    null?    null    :    sourceFile.toString();    if(sourceFile!=  null?  null  :  sourceFile.toString())  {  return  sourceFile  >=  null?  null  :  sourceFile.toString();  }	  	non-compiled	[CE]  incompatible  types	96	None	add
317	[BUG]  [BUGGY]  result.toLowerCase();  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  cannot  find  symbol  result  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  result.toLowerCase();  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	result.toLowerCase();  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);	  return    sourceFile.toLowerCase();    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol  result	129	None	replace
318	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.trim();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.trim();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.trim();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.trim();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	173	None	replace
319	[BUG]  [BUGGY]  String  originalName  =  sourceFile.trim();  if(originalName.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  [CE]  cannot  find  symbol  mapping  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.trim();  if(originalName.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.trim();  if(originalName.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.trim();    }    	non-compiled	[CE]  cannot  find  symbol  mapping	173	None	replace
320	[BUG]  [BUGGY]  String  sourceFile  =  source.trim();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  source.trim();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  source.trim();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.trim();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	173	None	replace
321	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  [CE]  cannot  find  symbol  mapping  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.trim();    }    	non-compiled	[CE]  cannot  find  symbol  mapping	173	None	replace
322	[BUG]  [BUGGY]  result.trim();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  [CE]  cannot  find  symbol  result  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  result.trim();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	result.trim();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.trim();    }    	non-compiled	[CE]  cannot  find  symbol  result	173	None	replace
323	[BUG]  [BUGGY]  sourceFile.trim();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  [CE]  cannot  find  symbol  mapping  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile.trim();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile.trim();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.trim();    }    	non-compiled	[CE]  cannot  find  symbol  mapping	173	None	replace
324	[BUG]  [BUGGY]  result.trim();  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  [CE]  cannot  find  symbol  result  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  result.trim();  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	result.trim();  String  originalName  =  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.trim();    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  cannot  find  symbol  result	32	None	replace
325	[BUG]  [BUGGY]  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  type  SourceMap  does  not  take  parameters  [FE]          ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    SourceMap    <    String,    DetailLevel>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  type  SourceMap  does  not  take  parameters	144	None	replace
326	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(originalName);  [CE]  type  SourceMap  does  not  take  parameters  [FE]            ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(originalName);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(originalName);	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    SourceMap    <    String,    DetailLevel>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  type  SourceMap  does  not  take  parameters	144	None	replace
327	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(originalName);  [CE]  type  SourceMap  does  not  take  parameters  [FE]              ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(originalName);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(originalName);	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    SourceMap    <    String,    DetailLevel>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  type  SourceMap  does  not  take  parameters	144	None	replace
328	[BUG]  [BUGGY]  sourceFile.substring(0,  sourceFile.length());  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  type  SourceMap  does  not  take  parameters  [FE]                ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile.substring(0,  sourceFile.length());  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile.substring(0,  sourceFile.length());  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    SourceMap    <    String,    DetailLevel>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  type  SourceMap  does  not  take  parameters	144	None	replace
329	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -1);  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(originalName);  [CE]  type  SourceMap  does  not  take  parameters  [FE]                  ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -1);  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(originalName);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -1);  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(originalName);	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    SourceMap    <    String,    DetailLevel>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  type  SourceMap  does  not  take  parameters	144	None	replace
330	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  2);  return  sourceFile.substring(0,  sourceFile.length()  +  2);  [CE]  unreachable  statement  [FE]    RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  2);  return  sourceFile.substring(0,  sourceFile.length()  +  2);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    2);    return  sourceFile.substring(0,  sourceFile.length()  +  2);	  	non-compiled	[CE]  unreachable  statement	13	None	add
331	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  2);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  +  2);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]      RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  2);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  +  2);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    2);    String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  +  2);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	13	None	add
332	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  2);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  2);  [CE]  unreachable  statement  [FE]        RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  2);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  2);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    2);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  2);	  	non-compiled	[CE]  unreachable  statement	13	None	add
333	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  2);  if(sourceFile.length()  +  2!=  sourceFile.length())  {  return  sourceFile.substring(0,  sourceFile.length()  +  2);  }  [CE]  unreachable  statement  [FE]          RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  2);  if(sourceFile.length()  +  2!=  sourceFile.length())  {  return  sourceFile.substring(0,  sourceFile.length()  +  2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    2);    if(sourceFile.length()  +  2!=  sourceFile.length())  {  return  sourceFile.substring(0,  sourceFile.length()  +  2);  }	  	non-compiled	[CE]  unreachable  statement	13	None	add
334	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  2);  if(sourceFile.length()  +  2  ==  sourceFile.length())  {  return  sourceFile.substring(0,  sourceFile.length()  +  2);  }  [CE]  unreachable  statement  [FE]            RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  2);  if(sourceFile.length()  +  2  ==  sourceFile.length())  {  return  sourceFile.substring(0,  sourceFile.length()  +  2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    2);    if(sourceFile.length()  +  2  ==  sourceFile.length())  {  return  sourceFile.substring(0,  sourceFile.length()  +  2);  }	  	non-compiled	[CE]  unreachable  statement	13	None	add
335	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  2);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  +  2);  }  [CE]  cannot  find  symbol  mapping  [FE]              RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  2);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  +  2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    2);    if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  +  2);  }	  	non-compiled	[CE]  cannot  find  symbol  mapping	13	None	add
336	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  2);  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  +  2);  [CE]  unreachable  statement  [FE]                RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  2);  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  +  2);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    2);    sourceFile  =  sourceFile.substring(0,  sourceFile.length()  +  2);	  	non-compiled	[CE]  unreachable  statement	13	None	add
337	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  2);  if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  +  2);  }  [CE]  cannot  find  symbol  mapping  [FE]                  RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  2);  if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  +  2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    2);    if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  +  2);  }	  	non-compiled	[CE]  cannot  find  symbol  mapping	13	None	add
338	[BUG]  [BUGGY]  return  sourceFile.toUpperCase(mapping.prefix);  [CE]  cannot  find  symbol  mapping  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toUpperCase(mapping.prefix);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toUpperCase(mapping.prefix);	  return    sourceFile.toUpperCase();    	non-compiled	[CE]  cannot  find  symbol  mapping	36	None	replace
339	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toUpperCase()  +  1;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.toUpperCase()  +  1;	  return    sourceFile.toUpperCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	36	16	replace
340	[BUG]  [BUGGY]  return  sourceFile.toUpperCase()  +  1;  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toUpperCase()  +  1;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toUpperCase()  +  1;	  return    sourceFile.toUpperCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	36	16	replace
341	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toUpperCase()  + ": ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.toUpperCase()  + ": ";	  return    sourceFile.toUpperCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	36	16	replace
342	[BUG]  [BUGGY]  return  sourceFile.toUpperCase()  + ": ";  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toUpperCase()  + ": ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toUpperCase()  + ": ";	  return    sourceFile.toUpperCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	36	16	replace
343	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(1);  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]        ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(1);  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(1);  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);	  return    sourceFile.substring(1);    SourceMapGenerator    generator    =    sourceLocationFixupCache.get(sourceFile);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	123	None	replace
344	[BUG]  [BUGGY]  String  sourceFile  =  sourceLocationFixupCache.get(sourceFile);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]          ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceLocationFixupCache.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceLocationFixupCache.get(sourceFile);	  return    sourceFile.substring(1);    SourceMapGenerator    generator    =    sourceLocationFixupCache.get(sourceFile);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	123	None	replace
345	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);	  return    sourceFile.substring(1);    SourceMapGenerator    generator    =    sourceLocationFixupCache.get(sourceFile);    	non-compiled	[CE]  incompatible  types	123	None	replace
346	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  sourceLocationFixupCache.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	sourceFile  =  sourceLocationFixupCache.get(sourceFile);	  return    sourceFile.substring(1);    SourceMapGenerator    generator    =    sourceLocationFixupCache.get(sourceFile);    	compilable	  [FE]  AssertionFailedError  	123	16	replace
347	[BUG]  [BUGGY]  sourceFile  =  sourceLocationFixupCache.get(sourceFile);  [FE]  AssertionFailedError  [FE]              ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  sourceLocationFixupCache.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile  =  sourceLocationFixupCache.get(sourceFile);	  return    sourceFile.substring(1);    SourceMapGenerator    generator    =    sourceLocationFixupCache.get(sourceFile);    	compilable	  [FE]  AssertionFailedError  	123	16	replace
348	[BUG]  [BUGGY]  String  sourceFile  =  sourceLocationFixupCache.get(sourceFile).substring(1);  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceLocationFixupCache.get(sourceFile).substring(1);  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceLocationFixupCache.get(sourceFile).substring(1);  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);	  return    sourceFile.substring(1);    SourceMapGenerator    generator    =    sourceLocationFixupCache.get(sourceFile);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	123	None	replace
349	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  null;  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [CE]  not  a  statement  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  junit.framework.ComparisonFailure:  null;  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	junit.framework.ComparisonFailure:  null;  sourceFile  =  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    junit.framework.ComparisonFailure:    null;    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  not  a  statement	135	None	replace
350	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    junit.framework.ComparisonFailure:    null;    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	135	16	replace
351	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    junit.framework.ComparisonFailure:    null;    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	135	16	replace
352	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(mapping.prefix,  false);  [CE]  cannot  find  symbol  mapping  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(mapping.prefix,  false);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(mapping.prefix,  false);	  return    sourceFile.toLowerCase(false);    	non-compiled	[CE]  cannot  find  symbol  mapping	40	None	replace
353	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(true,  false);  [CE]  no  suitable  method  found  for  toLowerCase(boolean,boolean)  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(true,  false);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(true,  false);	  return    sourceFile.toLowerCase(false);    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(boolean,boolean)	40	None	replace
354	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(false,  sourceFile.length());  [CE]  no  suitable  method  found  for  toLowerCase(boolean,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(false,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(false,  sourceFile.length());	  return    sourceFile.toLowerCase(false);    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(boolean,int)	40	None	replace
355	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(false,  mapping.prefix);  [CE]  cannot  find  symbol  mapping  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(false,  mapping.prefix);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(false,  mapping.prefix);	  return    sourceFile.toLowerCase(false);    	non-compiled	[CE]  cannot  find  symbol  mapping	40	None	replace
356	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(false,  false);  [CE]  no  suitable  method  found  for  toLowerCase(boolean,boolean)  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(false,  false);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(false,  false);	  return    sourceFile.toLowerCase(false);    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(boolean,boolean)	40	None	replace
357	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(false,  sourceFile);  [CE]  no  suitable  method  found  for  toLowerCase(boolean,String)  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(false,  sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(false,  sourceFile);	  return    sourceFile.toLowerCase(true);    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(boolean,String)	103	None	replace
358	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(false,  true);  [CE]  no  suitable  method  found  for  toLowerCase(boolean,boolean)  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(false,  true);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(false,  true);	  return    sourceFile.toLowerCase(true);    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(boolean,boolean)	103	None	replace
359	[BUG]  [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);	  	non-compiled	[CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)	19	None	add
360	[BUG]  [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2));  [CE]  ';'  expected  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2));  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2));	  	non-compiled	[CE]  ';'  expected	19	None	add
361	[BUG]  [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  	non-compiled	[CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)	19	None	add
362	[BUG]  [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);	  	non-compiled	[CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)	19	None	add
363	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  String  OriginalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    String  OriginalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	19	16	add
364	[BUG]  [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  String  OriginalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  String  OriginalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    String  OriginalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	19	16	add
365	[BUG]  [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2;  [CE]  ')'  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2;	  	non-compiled	[CE]  ')'  expected	19	None	add
366	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  String  initialName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    String  initialName  =  sourceFile.substring(0,  sourceFile.length()  -  2);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	19	16	add
367	[BUG]  [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  String  initialName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  String  initialName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    String  initialName  =  sourceFile.substring(0,  sourceFile.length()  -  2);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	19	16	add
368	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...unt ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...unt   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile!=  null  ||  sourceFile.toString().length()  ==  0?  null  :  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile!=  null  ||  sourceFile.toString().length()  ==  0?  null  :  sourceFile.toString();	  return    sourceFile!=    null?    null    :    sourceFile.toString();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...unt ":1  	97	16	replace
369	[BUG]  [BUGGY]  return  sourceFile!=  null  ||  sourceFile.toString().length()  ==  0?  null  :  sourceFile.toString();  [FE]  junit.framework.ComparisonFailure:  null  expected:<...unt ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...unt   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile!=  null  ||  sourceFile.toString().length()  ==  0?  null  :  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile!=  null  ||  sourceFile.toString().length()  ==  0?  null  :  sourceFile.toString();	  return    sourceFile!=    null?    null    :    sourceFile.toString();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...unt ":1  	97	16	replace
370	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...unt ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...unt   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile!=  null?  null  :  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile!=  null)  {  return  sourceFile!=  null?  null  :  sourceFile.toString();  }	  return    sourceFile!=    null?    null    :    sourceFile.toString();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...unt ":1  	97	16	replace
371	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile!=  null?  null  :  sourceFile.toString();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...unt ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...unt   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile!=  null?  null  :  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile!=  null?  null  :  sourceFile.toString();  }	  return    sourceFile!=    null?    null    :    sourceFile.toString();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...unt ":1  	97	16	replace
372	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile!=  null?  null  :  sourceFile.toString();  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]        junit.framework.ComparisonFailure:  null  expected:<...unt   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile!=  null?  null  :  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile!=  null?  null  :  sourceFile.toString();	  return    sourceFile!=    null?    null    :    sourceFile.toString();    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	97	None	replace
373	[BUG]  [BUGGY]  Tasks.ComparisonFailure:  null  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  Tasks.ComparisonFailure:  null  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	Tasks.ComparisonFailure:  null	  junit.framework.ComparisonFailure:    null    	non-compiled	[CE]  not  a  statement	110	None	replace
374	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  null  expected  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  junit.framework.ComparisonFailure:  null  expected  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	junit.framework.ComparisonFailure:  null  expected	  junit.framework.ComparisonFailure:    null    	non-compiled	[CE]  not  a  statement	110	None	replace
375	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  sourceFile!=  null  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  junit.framework.ComparisonFailure:  sourceFile!=  null  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	junit.framework.ComparisonFailure:  sourceFile!=  null	  junit.framework.ComparisonFailure:    null    	non-compiled	[CE]  not  a  statement	110	None	replace
376	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  sourceFile  ==  null  [CE]  not  a  statement  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  junit.framework.ComparisonFailure:  sourceFile  ==  null  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	junit.framework.ComparisonFailure:  sourceFile  ==  null	  junit.framework.ComparisonFailure:    null    	non-compiled	[CE]  not  a  statement	110	None	replace
377	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  sourceFile.substring(0,  sourceFile.length());  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  junit.framework.ComparisonFailure:  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	junit.framework.ComparisonFailure:  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    junit.framework.ComparisonFailure:    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  not  a  statement	119	None	replace
378	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparisonFailure:  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparisonFailure:  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    junit.framework.ComparisonFailure:    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	119	16	replace
379	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparisonFailure:  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparisonFailure:  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparisonFailure:  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    junit.framework.ComparisonFailure:    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	119	16	replace
380	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  junit.framework.ComparisonFailure:  sourceFile.substring(0,  sourceFile.length());  [CE]  not  a  statement  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  junit.framework.ComparisonFailure:  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  junit.framework.ComparisonFailure:  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    junit.framework.ComparisonFailure:    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  not  a  statement	119	None	replace
381	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	70	16	replace
382	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	70	16	replace
383	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	70	16	replace
384	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	70	16	replace
385	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	70	16	replace
386	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	70	16	replace
387	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -1);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -1);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	70	16	replace
388	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -1);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -1);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -1);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	70	16	replace
389	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [CE]  cannot  find  symbol  originalName  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  cannot  find  symbol  originalName	70	None	replace
390	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toString();  String  sourceFile  =  sourceFile.toString();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toString();  String  sourceFile  =  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.toString();  String  sourceFile  =  sourceFile.toString();  }	  return    sourceFile.toString();    String    sourceFile    =    sourceFile.toString();    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	84	None	replace
391	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }  else  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }  [CE]  cannot  find  symbol  mapping  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }  else  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }  else  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    String    sourceFile    =    sourceFile.toString();    	non-compiled	[CE]  cannot  find  symbol  mapping	84	None	replace
392	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }  else  if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.toString();  }  [CE]  cannot  find  symbol  mapping  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }  else  if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }  else  if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.toString();  }	  return    sourceFile.toString();    String    sourceFile    =    sourceFile.toString();    	non-compiled	[CE]  cannot  find  symbol  mapping	84	None	replace
393	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  String  sourceFile  =  sourceFile.toString();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  String  sourceFile  =  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  String  sourceFile  =  sourceFile.toString();  }	  return    sourceFile.toString();    String    sourceFile    =    sourceFile.toString();    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	84	None	replace
394	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }  else  if(!prefixMappings.isEmpty())  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }  else  if(!prefixMappings.isEmpty())  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    String    sourceFile    =    sourceFile.toString();    	compilable	  [FE]  AssertionFailedError  	84	16	replace
395	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }  else  if(!prefixMappings.isEmpty())  {  return  sourceFile.toString();  }  [FE]  AssertionFailedError  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }  else  if(!prefixMappings.isEmpty())  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }  else  if(!prefixMappings.isEmpty())  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    String    sourceFile    =    sourceFile.toString();    	compilable	  [FE]  AssertionFailedError  	84	16	replace
396	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  1);	          String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  RuntimeException  	18	18	replace
397	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  1);  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  1);	          String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  RuntimeException  	18	18	replace
398	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()));  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()));  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()));	          String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  ';'  expected	18	None	replace
399	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length();  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length();	          String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  ')'  expected	18	None	replace
400	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	53	16	replace
401	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	53	16	replace
402	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  if(!prefixMappings.isEmpty())  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  if(!prefixMappings.isEmpty())  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	53	16	replace
403	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  if(!prefixMappings.isEmpty())  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  if(!prefixMappings.isEmpty())  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  if(!prefixMappings.isEmpty())  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	53	16	replace
404	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  if(!prefixMappings.isEmpty())  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  if(!prefixMappings.isEmpty())  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	53	16	replace
405	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  if(!prefixMappings.isEmpty())  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  if(!prefixMappings.isEmpty())  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  if(!prefixMappings.isEmpty())  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	53	16	replace
406	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	53	16	replace
407	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	53	16	replace
408	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  2);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  2);	          String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	compilable	  [FE]  RuntimeException  	20	18	replace
409	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  2);  [FE]  RuntimeException  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  2);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  2);	          String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	compilable	  [FE]  RuntimeException  	20	18	replace
410	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  file.length());  [CE]  cannot  find  symbol  file  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  file.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  file.length());	          String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  cannot  find  symbol  file	20	None	replace
411	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  ComparisonFailure:  null  expected;  }  [CE]  not  a  statement  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  ComparisonFailure:  null  expected;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  ComparisonFailure:  null  expected;  }	  return    sourceFile.toString();    junit.framework.ComparisonFailure:    null    expected;    	non-compiled	[CE]  not  a  statement	91	None	replace
412	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  CompositeFailure:  null  expected;  }  [CE]  not  a  statement  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  CompositeFailure:  null  expected;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  CompositeFailure:  null  expected;  }	  return    sourceFile.toString();    junit.framework.ComparisonFailure:    null    expected;    	non-compiled	[CE]  not  a  statement	91	None	replace
413	[BUG]  [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toString();  ComparisonFailure:  null  expected;  }  [CE]  not  a  statement  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toString();  ComparisonFailure:  null  expected;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.isEmpty())  {  return  sourceFile.toString();  ComparisonFailure:  null  expected;  }	  return    sourceFile.toString();    junit.framework.ComparisonFailure:    null    expected;    	non-compiled	[CE]  not  a  statement	91	None	replace
414	[BUG]  [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toString();  CompositeFailure:  null  expected;  }  [CE]  not  a  statement  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toString();  CompositeFailure:  null  expected;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.isEmpty())  {  return  sourceFile.toString();  CompositeFailure:  null  expected;  }	  return    sourceFile.toString();    junit.framework.ComparisonFailure:    null    expected;    	non-compiled	[CE]  not  a  statement	91	None	replace
415	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toString();  ComparisonFailure:  null  expected;  [CE]  not  a  statement  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  ComparisonFailure:  null  expected;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.toString();  ComparisonFailure:  null  expected;	  return    sourceFile.toString();    junit.framework.ComparisonFailure:    null    expected;    	non-compiled	[CE]  not  a  statement	91	None	replace
416	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  compositeFailure:  null  expected;  }  [CE]  not  a  statement  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  compositeFailure:  null  expected;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  compositeFailure:  null  expected;  }	  return    sourceFile.toString();    junit.framework.ComparisonFailure:    null    expected;    	non-compiled	[CE]  not  a  statement	91	None	replace
417	[BUG]  [BUGGY]  file  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [CE]  cannot  find  symbol  file  [FE]        ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  file  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	file  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  return    sourceFile.substring(1);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol  file	1	None	replace
418	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  return  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  return  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    return    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	95	16	replace
419	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  return  sourceFile.substring(0,  sourceFile.length());  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  return  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  return  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    return    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	95	16	replace
420	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  return  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  return  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    return    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	95	16	replace
421	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  return  sourceFile.substring(0,  sourceFile.length());  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  return  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  return  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    return    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	95	16	replace
422	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  final  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  return  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	final  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  return  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    return    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	95	16	replace
423	[BUG]  [BUGGY]  final  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  return  sourceFile.substring(0,  sourceFile.length());  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  final  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  return  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	final  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  return  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    return    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	95	16	replace
424	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(1,  sourceFile.length());  return  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(1,  sourceFile.length());  return  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    return    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	95	16	replace
425	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(1,  sourceFile.length());  return  sourceFile.substring(0,  sourceFile.length());  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(1,  sourceFile.length());  return  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(1,  sourceFile.length());  return  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    return    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	95	16	replace
426	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                      ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    return    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  ComparisonFailure  	95	16	replace
427	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [FE]  ComparisonFailure  [FE]                      ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    return    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  ComparisonFailure  	95	16	replace
428	[BUG]  [BUGGY]  return  sourceFile.toString();  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  [CE]  unreachable  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString();  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toString();  String  originalName  =  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.toString();    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  unreachable  statement	159	None	replace
429	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.toString();  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  unreachable  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.toString();  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.toString();  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.toString();    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  unreachable  statement	159	None	replace
430	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.toString();  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  cannot  find  symbol  originalName  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.toString();  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.toString();  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.toString();    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol  originalName	159	None	replace
431	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.toString();  }  else  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  cannot  find  symbol  mapping  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.toString();  }  else  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.toString();  }  else  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.toString();    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol  mapping	159	None	replace
432	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [CE]  cannot  find  symbol  mapping  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.startsWith(mapping.prefix))    {    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  cannot  find  symbol  mapping	75	None	replace
433	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [CE]  cannot  find  symbol  mapping  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.startsWith(mapping.prefix))    {    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  cannot  find  symbol  mapping	75	None	replace
434	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.startsWith(mapping.originalName))  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [CE]  cannot  find  symbol  mapping  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.startsWith(mapping.originalName))  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.startsWith(mapping.originalName))  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.startsWith(mapping.prefix))    {    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  cannot  find  symbol  mapping	75	None	replace
435	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.startsWith(mapping.name))  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [CE]  cannot  find  symbol  mapping  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.startsWith(mapping.name))  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.startsWith(mapping.name))  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.startsWith(mapping.prefix))    {    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  cannot  find  symbol  mapping	75	None	replace
436	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.endsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [CE]  cannot  find  symbol  mapping  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.endsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.endsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.startsWith(mapping.prefix))    {    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  cannot  find  symbol  mapping	75	None	replace
437	[BUG]  [BUGGY]  sourceFile  =  prefixMappings.get(mapping.sourceFile);  [CE]  cannot  find  symbol  mapping  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  prefixMappings.get(mapping.sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile  =  prefixMappings.get(mapping.sourceFile);	  sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol  mapping	108	None	replace
438	[BUG]  [BUGGY]  sourceFile  =  prefixMappings.get(mapping.prefix);  [CE]  cannot  find  symbol  mapping  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  prefixMappings.get(mapping.prefix);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile  =  prefixMappings.get(mapping.prefix);	  sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol  mapping	108	None	replace
439	[BUG]  [BUGGY]  sourceFile  =  prefixMappings.get(mapping.originalName);  [CE]  cannot  find  symbol  mapping  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  prefixMappings.get(mapping.originalName);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile  =  prefixMappings.get(mapping.originalName);	  sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol  mapping	108	None	replace
440	[BUG]  [BUGGY]  sourceFile  =  prefixMappings.get(sourceFile.toLowerCase());  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  prefixMappings.get(sourceFile.toLowerCase());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile  =  prefixMappings.get(sourceFile.toLowerCase());	  sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	108	None	replace
441	[BUG]  [BUGGY]  sourceFile  =  prefixMappings.get(mapping.name);  [CE]  cannot  find  symbol  mapping  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  prefixMappings.get(mapping.name);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile  =  prefixMappings.get(mapping.name);	  sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol  mapping	108	None	replace
442	[BUG]  [BUGGY]  sourceFile  =  prefixMappings.get(sourceFile.toString());  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  prefixMappings.get(sourceFile.toString());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile  =  prefixMappings.get(sourceFile.toString());	  sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	108	None	replace
443	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(1);	  return    sourceFile.substring(1);    String    originalName    =    sourceFile.substring(1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	5	16	replace
444	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(1);  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(1);	  return    sourceFile.substring(1);    String    originalName    =    sourceFile.substring(1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	5	16	replace
445	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(2);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(2);	  return    sourceFile.substring(1);    String    originalName    =    sourceFile.substring(1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	5	16	replace
446	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(2);  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(2);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(2);	  return    sourceFile.substring(1);    String    originalName    =    sourceFile.substring(1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	5	16	replace
447	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(1);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(1);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]          ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(1);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(1);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(1);  }	  return    sourceFile.substring(1);    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.substring(1);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	146	None	replace
448	[BUG]  [BUGGY]  sourceFile  =  sourceFile.substring(1);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(1);  }  [CE]  cannot  find  symbol  mapping  [FE]            ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  sourceFile.substring(1);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile  =  sourceFile.substring(1);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(1);  }	  return    sourceFile.substring(1);    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.substring(1);    }    	non-compiled	[CE]  cannot  find  symbol  mapping	146	None	replace
449	[BUG]  [BUGGY]  result  =  sourceFile.substring(1);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(1);  }  [CE]  cannot  find  symbol  result  [FE]              ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  result  =  sourceFile.substring(1);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	result  =  sourceFile.substring(1);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(1);  }	  return    sourceFile.substring(1);    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.substring(1);    }    	non-compiled	[CE]  cannot  find  symbol  result	146	None	replace
450	[BUG]  [BUGGY]  file  =  sourceFile.substring(1);  if(sourceFile.startsWith(mapping.prefix))  {  return  file.substring(1);  }  [CE]  cannot  find  symbol  file  [FE]                ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  file  =  sourceFile.substring(1);  if(sourceFile.startsWith(mapping.prefix))  {  return  file.substring(1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	file  =  sourceFile.substring(1);  if(sourceFile.startsWith(mapping.prefix))  {  return  file.substring(1);  }	  return    sourceFile.substring(1);    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.substring(1);    }    	non-compiled	[CE]  cannot  find  symbol  file	146	None	replace
451	[BUG]  [BUGGY]  file  =  sourceFile.substring(1);  if(file.startsWith(mapping.prefix))  {  return  file.substring(1);  }  [CE]  cannot  find  symbol  file  [FE]                  ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  file  =  sourceFile.substring(1);  if(file.startsWith(mapping.prefix))  {  return  file.substring(1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	file  =  sourceFile.substring(1);  if(file.startsWith(mapping.prefix))  {  return  file.substring(1);  }	  return    sourceFile.substring(1);    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.substring(1);    }    	non-compiled	[CE]  cannot  find  symbol  file	146	None	replace
452	[BUG]  [BUGGY]  return  sourceFile.toString()  +   "n   ";  String  sourceFile  =  sourceFile.toString()  +   "n   ";  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]    ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  +   "n   ";  String  sourceFile  =  sourceFile.toString()  +   "n   ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toString()    +   "n   ";    String  sourceFile  =  sourceFile.toString()  +   "n   ";	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	100	None	add
453	[BUG]  [BUGGY]  return  sourceFile.toString()  +   "n   ";  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [CE]  unreachable  statement  [FE]      ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  +   "n   ";  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toString()    +   "n   ";    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  	non-compiled	[CE]  unreachable  statement	100	None	add
454	[BUG]  [BUGGY]  return  sourceFile.toString()  +   "n   ";  String  originalName  =  sourceFile.toString()  + "n   ";  [CE]  unreachable  statement  [FE]        ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  +   "n   ";  String  originalName  =  sourceFile.toString()  + "n   ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toString()    +   "n   ";    String  originalName  =  sourceFile.toString()  + "n   ";	  	non-compiled	[CE]  unreachable  statement	100	None	add
455	[BUG]  [BUGGY]  return  sourceFile.toString()  +   "n   ";  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]          ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  +   "n   ";  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toString()    +   "n   ";    String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	100	None	add
456	[BUG]  [BUGGY]  return  sourceFile.toString()  +   "n   ";  sourceFile.toString()  +   "n   ";  [CE]  not  a  statement  [FE]            ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  +   "n   ";  sourceFile.toString()  +   "n   ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toString()    +   "n   ";    sourceFile.toString()  +   "n   ";	  	non-compiled	[CE]  not  a  statement	100	None	add
457	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1).trim();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.substring(0,  sourceFile.length()  -  1).trim();	  return    sourceFile.substring(0,    sourceFile.length()).trim();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	122	16	replace
458	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1).trim();  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1).trim();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length()  -  1).trim();	  return    sourceFile.substring(0,    sourceFile.length()).trim();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	122	16	replace
459	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2).trim();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.substring(0,  sourceFile.length()  -  2).trim();	  return    sourceFile.substring(0,    sourceFile.length()).trim();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	122	16	replace
460	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2).trim();  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2).trim();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length()  -  2).trim();	  return    sourceFile.substring(0,    sourceFile.length()).trim();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	122	16	replace
461	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  4).trim();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.substring(0,  sourceFile.length()  -  4).trim();	  return    sourceFile.substring(0,    sourceFile.length()).trim();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	122	16	replace
462	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  4).trim();  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  4).trim();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length()  -  4).trim();	  return    sourceFile.substring(0,    sourceFile.length()).trim();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	122	16	replace
463	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  3).trim();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.substring(0,  sourceFile.length()  -  3).trim();	  return    sourceFile.substring(0,    sourceFile.length()).trim();    	compilable	  [FE]  ComparisonFailure  	122	16	replace
464	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  3).trim();  [FE]  ComparisonFailure  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  3).trim();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length()  -  3).trim();	  return    sourceFile.substring(0,    sourceFile.length()).trim();    	compilable	  [FE]  ComparisonFailure  	122	16	replace
465	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.trim();  if(sourceFile.trim().equals( " "))  {  return  sourceFile.trim();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.trim();  if(sourceFile.trim().equals( " "))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.trim();  if(sourceFile.trim().equals( " "))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile.trim().equals(   "   "))    {    return    sourceFile.trim();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	28	None	replace
466	[BUG]  [BUGGY]  ||  sourceFile.trim().equals( "   "))  {  return  sourceFile.trim();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  ||  sourceFile.trim().equals( "   "))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	||  sourceFile.trim().equals( "   "))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile.trim().equals(   "   "))    {    return    sourceFile.trim();    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
467	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.trim();  if(originalName.equals( " "))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.trim();  if(originalName.equals( " "))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile.trim().equals(   "   "))    {    return    sourceFile.trim();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	28	16	replace
468	[BUG]  [BUGGY]  String  originalName  =  sourceFile.trim();  if(originalName.equals( " "))  {  return  sourceFile.trim();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.trim();  if(originalName.equals( " "))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.trim();  if(originalName.equals( " "))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile.trim().equals(   "   "))    {    return    sourceFile.trim();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	28	16	replace
469	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.trim().equals( " "))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.trim().equals( " "))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile.trim().equals(   "   "))    {    return    sourceFile.trim();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	28	16	replace
470	[BUG]  [BUGGY]  if(sourceFile.trim().equals( " "))  {  return  sourceFile.trim();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.trim().equals( " "))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.trim().equals( " "))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile.trim().equals(   "   "))    {    return    sourceFile.trim();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	28	16	replace
471	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.trim();  if(sourceFile.trim().equals( "* "))  {  return  sourceFile.trim();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.trim();  if(sourceFile.trim().equals( "* "))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.trim();  if(sourceFile.trim().equals( "* "))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile.trim().equals(   "   "))    {    return    sourceFile.trim();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	28	None	replace
472	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toString();  }  else  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile!=  null)  {  return  sourceFile.toString();  }  else  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    return    sourceFile.toString();    }    else    {    return    sourceFile.toString();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	161	16	replace
473	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toString();  }  else  {  return  sourceFile.toString();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toString();  }  else  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.toString();  }  else  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    return    sourceFile.toString();    }    else    {    return    sourceFile.toString();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	161	16	replace
474	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(prefixMappings.isEmpty())  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(prefixMappings.isEmpty())  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    return    sourceFile.toString();    }    else    {    return    sourceFile.toString();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	161	16	replace
475	[BUG]  [BUGGY]  if(prefixMappings.isEmpty())  {  return  sourceFile.toString();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(prefixMappings.isEmpty())  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(prefixMappings.isEmpty())  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    return    sourceFile.toString();    }    else    {    return    sourceFile.toString();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	161	16	replace
476	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }  [CE]  cannot  find  symbol  mapping  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    return    sourceFile.toString();    }    else    {    return    sourceFile.toString();    }    	non-compiled	[CE]  cannot  find  symbol  mapping	161	None	replace
477	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName.toString();  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    return    sourceFile.toString();    }    else    {    return    sourceFile.toString();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	161	16	replace
478	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName.toString();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName.toString();  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    return    sourceFile.toString();    }    else    {    return    sourceFile.toString();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	161	16	replace
479	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile.toString();  }  else  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile  ==  null)  {  return  sourceFile.toString();  }  else  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    return    sourceFile.toString();    }    else    {    return    sourceFile.toString();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	161	16	replace
480	[BUG]  [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile.toString();  }  else  {  return  sourceFile.toString();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile.toString();  }  else  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile  ==  null)  {  return  sourceFile.toString();  }  else  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    return    sourceFile.toString();    }    else    {    return    sourceFile.toString();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	161	16	replace
481	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(2);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]          ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(2);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(2);	  return    sourceFile.substring(1);    String    sourceFile    =    sourceFile.substring(1);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	2	None	replace
482	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	58	16	replace
483	[BUG]  [BUGGY]  sourceFile.substring(0,  sourceFile.length());  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	58	16	replace
484	[BUG]  [BUGGY]  file.substring(0,  sourceFile.length());  [CE]  cannot  find  symbol  file  [FE]                      ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  file.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	file.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    sourceFile.substring(0,    sourceFile.length()    -    3);    	non-compiled	[CE]  cannot  find  symbol  file	58	None	replace
485	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  final  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	final  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	46	16	replace
486	[BUG]  [BUGGY]  final  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  final  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	final  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	46	16	replace
487	[BUG]  [BUGGY]  Preconditions.checkState(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0);  [CE]  cannot  find  symbol  Preconditions  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  Preconditions.checkState(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	Preconditions.checkState(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0);	          Preconditions.checkState(!prefixMappings.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  Preconditions	138	None	replace
488	[BUG]  [BUGGY]  Preconditions.checkState(!prefixMappings.isEmpty()  ||  prefixMappings.isEmpty());  [CE]  cannot  find  symbol  Preconditions  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  Preconditions.checkState(!prefixMappings.isEmpty()  ||  prefixMappings.isEmpty());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	Preconditions.checkState(!prefixMappings.isEmpty()  ||  prefixMappings.isEmpty());	          Preconditions.checkState(!prefixMappings.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  Preconditions	138	None	replace
489	[BUG]  [BUGGY]  Preconditions.checkState(!prefixMappings.isEmpty()  &&  sourceFile.startsWith(mapping.prefix));  [CE]  cannot  find  symbol  mapping  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  Preconditions.checkState(!prefixMappings.isEmpty()  &&  sourceFile.startsWith(mapping.prefix));  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	Preconditions.checkState(!prefixMappings.isEmpty()  &&  sourceFile.startsWith(mapping.prefix));	          Preconditions.checkState(!prefixMappings.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  mapping	138	None	replace
490	[BUG]  [BUGGY]  Preconditions.checkState(!prefixMappings.isEmpty(),  sourceFile.length());  [CE]  cannot  find  symbol  Preconditions  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  Preconditions.checkState(!prefixMappings.isEmpty(),  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	Preconditions.checkState(!prefixMappings.isEmpty(),  sourceFile.length());	          Preconditions.checkState(!prefixMappings.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  Preconditions	138	None	replace
491	[BUG]  [BUGGY]  Preconditions.checkState(!prefixMappings.isEmpty()  ||!mapping.prefixMappings.isEmpty());  [CE]  package  mapping  does  not  exist  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  Preconditions.checkState(!prefixMappings.isEmpty()  ||!mapping.prefixMappings.isEmpty());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	Preconditions.checkState(!prefixMappings.isEmpty()  ||!mapping.prefixMappings.isEmpty());	          Preconditions.checkState(!prefixMappings.isEmpty());    	non-compiled	[CE]  package  mapping  does  not  exist	138	None	replace
492	[BUG]  [BUGGY]  Preconditions.checkState(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0);  [CE]  cannot  find  symbol  Preconditions  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  Preconditions.checkState(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	Preconditions.checkState(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0);	          Preconditions.checkState(!prefixMappings.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  Preconditions	138	None	replace
493	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  junit.framework.ComparisonFailure:  null;  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  junit.framework.ComparisonFailure:  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  junit.framework.ComparisonFailure:  null;	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	130	None	replace
494	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  junit.framework.ComparisonFailure:  null;  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  junit.framework.ComparisonFailure:  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  junit.framework.ComparisonFailure:  null;	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	130	None	replace
495	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  ComparisonFailure.ComparisonFailure:  null;  }  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  ComparisonFailure.ComparisonFailure:  null;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  ComparisonFailure.ComparisonFailure:  null;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	130	None	replace
496	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  ComparisonFailure.ComparisonFailure:  null;  }  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  ComparisonFailure.ComparisonFailure:  null;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  ComparisonFailure.ComparisonFailure:  null;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	130	None	replace
497	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  junit.framework.ComparisonFailure:  null;  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  junit.framework.ComparisonFailure:  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  junit.framework.ComparisonFailure:  null;	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	130	None	replace
498	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  junit.framework.ComparisonFailure:  sourceFile;  [CE]  not  a  statement  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  junit.framework.ComparisonFailure:  sourceFile;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  junit.framework.ComparisonFailure:  sourceFile;	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    junit.framework.ComparisonFailure:    sourceFile;    	non-compiled	[CE]  not  a  statement	120	None	replace
499	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  junit.framework.ComparisonFailure:  sourceFile;  [CE]  not  a  statement  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  junit.framework.ComparisonFailure:  sourceFile;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  junit.framework.ComparisonFailure:  sourceFile;	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    junit.framework.ComparisonFailure:    sourceFile;    	non-compiled	[CE]  not  a  statement	120	None	replace
500	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparisonFailure:  sourceFile;  }  [CE]  not  a  statement  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparisonFailure:  sourceFile;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparisonFailure:  sourceFile;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    junit.framework.ComparisonFailure:    sourceFile;    	non-compiled	[CE]  not  a  statement	120	None	replace
501	[BUG]  [BUGGY]  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	134	None	replace
502	[BUG]  [BUGGY]  String  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	134	None	replace
503	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(originalName);  if(sourceFile!=  null)  {  return  sourceFile.substring  [CE]  ';'  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(originalName);  if(sourceFile!=  null)  {  return  sourceFile.substring  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(originalName);  if(sourceFile!=  null)  {  return  sourceFile.substring	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	non-compiled	[CE]  ';'  expected	134	None	replace
504	[BUG]  [BUGGY]  string  =  sourceFile.substring(1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  [CE]  cannot  find  symbol  string  [FE]                    ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  string  =  sourceFile.substring(1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	string  =  sourceFile.substring(1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(1);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  cannot  find  symbol  string	7	None	replace
505	[BUG]  [BUGGY]  file  =  sourceFile.substring(1);  String  originalName  =  file.substring(0,  sourceFile.length());  [CE]  cannot  find  symbol  file  [FE]                      ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  file  =  sourceFile.substring(1);  String  originalName  =  file.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	file  =  sourceFile.substring(1);  String  originalName  =  file.substring(0,  sourceFile.length());	  return    sourceFile.substring(1);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  cannot  find  symbol  file	7	None	replace
506	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	164	None	replace
507	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile  ==  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile  ==  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile  ==  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	164	None	replace
508	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	164	16	replace
509	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	164	16	replace
510	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.endsWith(   ".java   "))    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	155	None	replace
511	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.endsWith(   ".java   "))    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	155	16	replace
512	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.endsWith(   ".java   "))    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	155	16	replace
513	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.endsWith( "java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.endsWith( "java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.endsWith( "java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.endsWith(   ".java   "))    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	155	None	replace
514	[BUG]  [BUGGY]  return  sourceFile.trim();  Collection  <  String>  sourceFile  =  prefixMappings.get(mapping.sourceFile);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim();  Collection  <  String>  sourceFile  =  prefixMappings.get(mapping.sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.trim();  Collection  <  String>  sourceFile  =  prefixMappings.get(mapping.sourceFile);	  return    sourceFile.trim();    Collection    <    String>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
515	[BUG]  [BUGGY]  return  sourceFile.trim();  Collection  <  String>  sourceFile  =  prefixMappings.get(mapping.prefix);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim();  Collection  <  String>  sourceFile  =  prefixMappings.get(mapping.prefix);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.trim();  Collection  <  String>  sourceFile  =  prefixMappings.get(mapping.prefix);	  return    sourceFile.trim();    Collection    <    String>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
516	[BUG]  [BUGGY]  String  originalName  =  sourceFile.trim();  Collection  <  String>  sourceFile  =  prefixMappings.get(originalName);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.trim();  Collection  <  String>  sourceFile  =  prefixMappings.get(originalName);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.trim();  Collection  <  String>  sourceFile  =  prefixMappings.get(originalName);	  return    sourceFile.trim();    Collection    <    String>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
517	[BUG]  [BUGGY]  return  prefixMappings.trim();  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  prefixMappings.trim();  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  prefixMappings.trim();  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);	  return    sourceFile.trim();    Collection    <    String>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
518	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    if(originalName!=    null)    {    return    originalName;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	165	16	replace
519	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName;  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    if(originalName!=    null)    {    return    originalName;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	165	16	replace
520	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
521	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
522	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
523	[BUG]  [BUGGY]  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    SourceFile    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	132	None	replace
524	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1));  [CE]  ';'  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1));  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length()  -  1));	  return    sourceFile.substring(0,    sourceFile.length()));    	non-compiled	[CE]  ';'  expected	12	None	replace
525	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2));  [CE]  ';'  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2));  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length()  -  2));	  return    sourceFile.substring(0,    sourceFile.length()));    	non-compiled	[CE]  ';'  expected	12	None	replace
526	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  1));  [CE]  ';'  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  1));  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length()  +  1));	  return    sourceFile.substring(0,    sourceFile.length()));    	non-compiled	[CE]  ';'  expected	12	None	replace
527	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  return  sourceFile.trim();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    return    sourceFile.trim();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	172	None	replace
528	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    return    sourceFile.trim();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	172	16	replace
529	[BUG]  [BUGGY]  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName.trim();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    return    sourceFile.trim();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	172	16	replace
530	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile!=  null)  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    return    sourceFile.trim();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	172	16	replace
531	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.trim();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    return    sourceFile.trim();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	172	16	replace
532	[BUG]  [BUGGY]  String  sourceFile  =  source.trim();  if(sourceFile!=  null)  {  return  sourceFile.trim();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  source.trim();  if(sourceFile!=  null)  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  source.trim();  if(sourceFile!=  null)  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    return    sourceFile.trim();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	172	None	replace
533	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    return    sourceFile.trim();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	172	None	replace
534	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  return  sourceFile.toString();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  return  sourceFile.toString();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    return    sourceFile.trim();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	172	None	replace
535	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	80	None	replace
536	[BUG]  [BUGGY]  sourceFile  =  mapping.toLowerCase();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  mapping  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  mapping.toLowerCase();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile  =  mapping.toLowerCase();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  cannot  find  symbol  mapping	80	None	replace
537	[BUG]  [BUGGY]  result.toLowerCase();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  result  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  result.toLowerCase();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	result.toLowerCase();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  cannot  find  symbol  result	80	None	replace
538	[BUG]  [BUGGY]  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  mapping  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  cannot  find  symbol  mapping	80	None	replace
539	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);  if(generator.startsWith(mapping.prefix))  {  return  generator.toLowerCase();  }  [CE]  incompatible  types  [FE]                        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);  if(generator.startsWith(mapping.prefix))  {  return  generator.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);  if(generator.startsWith(mapping.prefix))  {  return  generator.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  incompatible  types	80	None	replace
540	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  generator);  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  generator);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  generator);	          junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile);    	non-compiled	[CE]  not  a  statement	140	None	replace
541	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  sourceLocationFixupCache);  [CE]  not  a  statement  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  sourceLocationFixupCache);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  sourceLocationFixupCache);	          junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile);    	non-compiled	[CE]  not  a  statement	140	None	replace
542	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(mapping.originalName,  sourceFile);  [CE]  not  a  statement  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(mapping.originalName,  sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(mapping.originalName,  sourceFile);	          junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile);    	non-compiled	[CE]  not  a  statement	140	None	replace
543	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    if(originalName!=    null)    {    return    originalName;    }    	compilable	  [FE]  ComparisonFailure  	114	16	replace
544	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName;  }  [FE]  ComparisonFailure  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    if(originalName!=    null)    {    return    originalName;    }    	compilable	  [FE]  ComparisonFailure  	114	16	replace
545	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName  ==  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName  ==  null)  {  return  originalName;  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    if(originalName!=    null)    {    return    originalName;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	114	16	replace
546	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName  ==  null)  {  return  originalName;  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName  ==  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName  ==  null)  {  return  originalName;  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    if(originalName!=    null)    {    return    originalName;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	114	16	replace
547	[BUG]  [BUGGY]  return  sourceFile.toLowerCase()  :  null;  [CE]  ';'  expected  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase()  :  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase()  :  null;	  return    sourceFile.toLowerCase()    +    1;    	non-compiled	[CE]  ';'  expected	38	None	replace
548	[BUG]  [BUGGY]  return  sourceFile.toLowerCase()  /  1;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase()  /  1;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase()  /  1;	  return    sourceFile.toLowerCase()    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	38	None	replace
549	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(),  1;  [CE]  ';'  expected  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(),  1;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(),  1;	  return    sourceFile.toLowerCase()    +    1;    	non-compiled	[CE]  ';'  expected	38	None	replace
550	[BUG]  [BUGGY]  return  sourceFile.toLowerCase()  -  1;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase()  -  1;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase()  -  1;	  return    sourceFile.toLowerCase()    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	38	None	replace
551	[BUG]  [BUGGY]  Tasks.ComparisonFailure:  null;  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  Tasks.ComparisonFailure:  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	Tasks.ComparisonFailure:  null;	          junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	15	None	replace
552	[BUG]  [BUGGY]  Mapping.ComparisonFailure:  null;  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  Mapping.ComparisonFailure:  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	Mapping.ComparisonFailure:  null;	          junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	15	None	replace
553	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  Collections.emptyList();  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  junit.framework.ComparisonFailure:  Collections.emptyList();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	junit.framework.ComparisonFailure:  Collections.emptyList();	          junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	15	None	replace
554	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  /  2);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.substring(0,  sourceFile.length()  /  2);	  return    sourceFile.substring(0,    sourceFile.length()    +    2);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	14	16	replace
555	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  /  2);  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  /  2);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length()  /  2);	  return    sourceFile.substring(0,    sourceFile.length()    +    2);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	14	16	replace
556	[BUG]  [BUGGY]  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    if(sourceFile!=    null)    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	128	None	replace
557	[BUG]  [BUGGY]  if(mapping.prefix!=  null)  {  return  sourceFile.toLowerCase();  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.toLowerCa  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(mapping.prefix!=  null)  {  return  sourceFile.toLowerCase();  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.toLowerCa  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(mapping.prefix!=  null)  {  return  sourceFile.toLowerCase();  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.toLowerCa	  return    sourceFile.toLowerCase();    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    if(sourceFile!=    null)    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  ';'  expected	128	None	replace
558	[BUG]  [BUGGY]  if(mapping.prefix  ==  null)  {  return  sourceFile.toLowerCase();  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.toLowerCa  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(mapping.prefix  ==  null)  {  return  sourceFile.toLowerCase();  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.toLowerCa  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(mapping.prefix  ==  null)  {  return  sourceFile.toLowerCase();  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.toLowerCa	  return    sourceFile.toLowerCase();    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    if(sourceFile!=    null)    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  ';'  expected	128	None	replace
559	[BUG]  [BUGGY]  if(mapping.prefix!=  null)  {  return  sourceFile.toLowerCase();  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.toLowerCas  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(mapping.prefix!=  null)  {  return  sourceFile.toLowerCase();  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.toLowerCas  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(mapping.prefix!=  null)  {  return  sourceFile.toLowerCase();  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.toLowerCas	  return    sourceFile.toLowerCase();    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    if(sourceFile!=    null)    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  ';'  expected	128	None	replace
560	[BUG]  [BUGGY]  if(mapping.prefix!=  null)  {  return  sourceFile.toLowerCase();  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase()  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(mapping.prefix!=  null)  {  return  sourceFile.toLowerCase();  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase()  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(mapping.prefix!=  null)  {  return  sourceFile.toLowerCase();  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase()	  return    sourceFile.toLowerCase();    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    if(sourceFile!=    null)    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  ';'  expected	128	None	replace
561	[BUG]  [BUGGY]  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    if(sourceFile!=    null)    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	128	None	replace
562	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim().toLowerCase()  +  1;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.trim().toLowerCase()  +  1;	  return    sourceFile.trim().toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	34	16	replace
563	[BUG]  [BUGGY]  return  sourceFile.trim().toLowerCase()  +  1;  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim().toLowerCase()  +  1;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.trim().toLowerCase()  +  1;	  return    sourceFile.trim().toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	34	16	replace
564	[BUG]  [BUGGY]  return  sourceFile.trim().toLowerCase(false);  [CE]  no  suitable  method  found  for  toLowerCase(boolean)  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim().toLowerCase(false);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.trim().toLowerCase(false);	  return    sourceFile.trim().toLowerCase();    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(boolean)	34	None	replace
565	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.trim().toLowerCase();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.trim().toLowerCase();	  return    sourceFile.trim().toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	34	16	replace
566	[BUG]  [BUGGY]  String  originalName  =  sourceFile.trim().toLowerCase();  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.trim().toLowerCase();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.trim().toLowerCase();	  return    sourceFile.trim().toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	34	16	replace
567	[BUG]  [BUGGY]  return  sourceFile.trim().toLowerCase(mapping.prefix);  [CE]  cannot  find  symbol  mapping  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim().toLowerCase(mapping.prefix);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.trim().toLowerCase(mapping.prefix);	  return    sourceFile.trim().toLowerCase();    	non-compiled	[CE]  cannot  find  symbol  mapping	34	None	replace
568	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim().toLowerCase()  + ": ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.trim().toLowerCase()  + ": ";	  return    sourceFile.trim().toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	34	16	replace
569	[BUG]  [BUGGY]  return  sourceFile.trim().toLowerCase()  + ": ";  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim().toLowerCase()  + ": ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.trim().toLowerCase()  + ": ";	  return    sourceFile.trim().toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	34	16	replace
570	[BUG]  [BUGGY]  return  sourceFile.trim().toLowerCase(LocationFixupCache.DEFAULT_PREFIX);  [CE]  cannot  find  symbol  LocationFixupCache  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim().toLowerCase(LocationFixupCache.DEFAULT_PREFIX);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.trim().toLowerCase(LocationFixupCache.DEFAULT_PREFIX);	  return    sourceFile.trim().toLowerCase();    	non-compiled	[CE]  cannot  find  symbol  LocationFixupCache	34	None	replace
571	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.toString();  if(sourceFile!=  null)  {  return  sourceFile.toString();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.toString();  if(sourceFile!=  null)  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.toString();  if(sourceFile!=  null)  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    String    sourceFile    =    sourceFile.toString();    if(sourceFile!=    null)    {    return    sourceFile.toString();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	104	None	replace
572	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.toString();  if(sourceFile!=  null)  {  return  sourceFile.toString();  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.toString();  if(sourceFile!=  null)  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.toString();  if(sourceFile!=  null)  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    String    sourceFile    =    sourceFile.toString();    if(sourceFile!=    null)    {    return    sourceFile.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
573	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(!prefixMappings.isEmpty())  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(!prefixMappings.isEmpty())  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    String    sourceFile    =    sourceFile.toString();    if(sourceFile!=    null)    {    return    sourceFile.toString();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	104	16	replace
574	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty())  {  return  sourceFile.toString();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(!prefixMappings.isEmpty())  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(!prefixMappings.isEmpty())  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    String    sourceFile    =    sourceFile.toString();    if(sourceFile!=    null)    {    return    sourceFile.toString();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	104	16	replace
575	[BUG]  [BUGGY]  if(mapping.prefix!=  null)  {  return  sourceFile.toString();  }  [CE]  cannot  find  symbol  mapping  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(mapping.prefix!=  null)  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(mapping.prefix!=  null)  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    String    sourceFile    =    sourceFile.toString();    if(sourceFile!=    null)    {    return    sourceFile.toString();    }    	non-compiled	[CE]  cannot  find  symbol  mapping	104	None	replace
576	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.toString();  if(sourceFile  ==  null)  {  return  sourceFile.toString();  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.toString();  if(sourceFile  ==  null)  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.toString();  if(sourceFile  ==  null)  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    String    sourceFile    =    sourceFile.toString();    if(sourceFile!=    null)    {    return    sourceFile.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
577	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	71	16	replace
578	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	71	16	replace
579	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()):  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()):  null;	  return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):    null;    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	150	16	replace
580	[BUG]  [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()):  null;  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()):  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()):  null;	  return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):    null;    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	150	16	replace
581	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...unt ":1  [FE]      ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()  ==  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.length()  ==  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;	  return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):    null;    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...unt ":1  	150	16	replace
582	[BUG]  [BUGGY]  return  sourceFile.length()  ==  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  [FE]  junit.framework.ComparisonFailure:  null  expected:<...unt ":1  [FE]      ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()  ==  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.length()  ==  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;	  return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):    null;    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...unt ":1  	150	16	replace
583	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()!=  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.length()!=  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;	  return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):    null;    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	150	16	replace
584	[BUG]  [BUGGY]  return  sourceFile.length()!=  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()!=  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.length()!=  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;	  return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):    null;    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	150	16	replace
585	[BUG]  [BUGGY]  return  mapping.toLowerCase(sourceFile.prefix);  [CE]  cannot  find  symbol  prefix  [FE]        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  mapping.toLowerCase(sourceFile.prefix);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  mapping.toLowerCase(sourceFile.prefix);	  return    sourceFile.toLowerCase(mapping.prefix);    	non-compiled	[CE]  cannot  find  symbol  prefix	102	None	replace
586	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(sourceFile.prefix);  [CE]  cannot  find  symbol  prefix  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(sourceFile.prefix);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(sourceFile.prefix);	  return    sourceFile.toLowerCase(mapping.prefix);    	non-compiled	[CE]  cannot  find  symbol  prefix	102	None	replace
587	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(mapping.sourceFile);  [CE]  cannot  find  symbol  mapping  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(mapping.sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(mapping.sourceFile);	  return    sourceFile.toLowerCase(mapping.prefix);    	non-compiled	[CE]  cannot  find  symbol  mapping	102	None	replace
588	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(mapping.sourceFile.prefix);  [CE]  package  mapping  does  not  exist  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(mapping.sourceFile.prefix);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(mapping.sourceFile.prefix);	  return    sourceFile.toLowerCase(mapping.prefix);    	non-compiled	[CE]  package  mapping  does  not  exist	102	None	replace
589	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(mapping.prefix,  sourceFile.length());  [CE]  cannot  find  symbol  mapping  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(mapping.prefix,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(mapping.prefix,  sourceFile.length());	  return    sourceFile.toLowerCase(mapping.prefix);    	non-compiled	[CE]  cannot  find  symbol  mapping	102	None	replace
590	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(map.prefix);  [CE]  cannot  find  symbol  map  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(map.prefix);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(map.prefix);	  return    sourceFile.toLowerCase(mapping.prefix);    	non-compiled	[CE]  cannot  find  symbol  map	102	None	replace
591	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
592	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  originalName;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    if(originalName!=    null)    {    return    originalName;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	93	16	replace
593	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  originalName;  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  originalName;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    if(originalName!=    null)    {    return    originalName;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	93	16	replace
594	[BUG]  [BUGGY]  file  =  sourceFile.substring(0,  sourceFile.length());  if(file!=  null)  {  String  originalName  =  file.substring(0,  file.length());  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  file  =  sourceFile.substring(0,  sourceFile.length());  if(file!=  null)  {  String  originalName  =  file.substring(0,  file.length());  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	file  =  sourceFile.substring(0,  sourceFile.length());  if(file!=  null)  {  String  originalName  =  file.substring(0,  file.length());  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
595	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.toString();    if(originalName!=    null)    {    return    originalName;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	158	16	replace
596	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName;  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.toString();    if(originalName!=    null)    {    return    originalName;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	158	16	replace
597	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.toString();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.toString();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.toString();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.toString();    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
598	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.toString();    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
599	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName;  }  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName;  }  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName;  }  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.toString();    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
600	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName  [CE]  ';'  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName	  return    sourceFile.toString();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.toString();    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  ';'  expected	158	None	replace
601	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  if(sourceFile!=  null)  {  originalName  =  sourceFile.toString();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  if(sourceFile!=  null)  {  originalName  =  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  if(sourceFile!=  null)  {  originalName  =  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.toString();    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
602	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix)||    sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	81	None	replace
603	[BUG]  [BUGGY]  result.toLowerCase();  if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  result  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  result.toLowerCase();  if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	result.toLowerCase();  if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix)||    sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  cannot  find  symbol  result	81	None	replace
604	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  mapping  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix)||    sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  cannot  find  symbol  mapping	81	None	replace
605	[BUG]  [BUGGY]  file.toLowerCase();  if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  file  [FE]                        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  file.toLowerCase();  if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	file.toLowerCase();  if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix)||    sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  cannot  find  symbol  file	81	None	replace
606	[BUG]  [BUGGY]  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  mapping  [FE]                          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix)||    sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  cannot  find  symbol  mapping	81	None	replace
607	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);  return  sourceFile.substring(0,  sourceFile.length());  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]            ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);  return  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);  return  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    return    sourceFile.substring(0,    sourceFile.length()    -    3);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	54	None	replace
608	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    return    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	54	16	replace
609	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    return    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	54	16	replace
610	[BUG]  [BUGGY]  file  =  sourceFile.substring(0,  sourceFile.length());  return  file.substring(0,  sourceFile.length());  [CE]  cannot  find  symbol  file  [FE]                ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  file  =  sourceFile.substring(0,  sourceFile.length());  return  file.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	file  =  sourceFile.substring(0,  sourceFile.length());  return  file.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    return    sourceFile.substring(0,    sourceFile.length()    -    3);    	non-compiled	[CE]  cannot  find  symbol  file	54	None	replace
611	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	69	16	replace
612	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	69	16	replace
613	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  1)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  1)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  1)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	69	None	replace
614	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile.length()    >    0)    {    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	49	16	replace
615	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile.length()    >    0)    {    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	49	16	replace
616	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile.length()    >    0)    {    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	49	16	replace
617	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile.length()    >    0)    {    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	49	16	replace
618	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                      ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    SourceFile    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	59	None	replace
619	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                        ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    SourceFile    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	59	None	replace
620	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.trim();  return  originalName.trim();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.trim();  return  originalName.trim();	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    return    originalName.trim();    }    	compilable	  [FE]  AssertionFailedError  	175	16	replace
621	[BUG]  [BUGGY]  String  originalName  =  sourceFile.trim();  return  originalName.trim();  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.trim();  return  originalName.trim();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.trim();  return  originalName.trim();	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    return    originalName.trim();    }    	compilable	  [FE]  AssertionFailedError  	175	16	replace
622	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  return  originalName.trim();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  return  originalName.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  return  originalName.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    return    originalName.trim();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	175	None	replace
623	[BUG]  [BUGGY]  String  sourceFile  =  sourceLocation.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  return  originalName.trim();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceLocation.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  return  originalName.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceLocation.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  return  originalName.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    return    originalName.trim();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	175	None	replace
624	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  return  originalName.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  return  originalName.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    return    originalName.trim();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	175	16	replace
625	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  return  originalName.trim();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  return  originalName.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  return  originalName.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    return    originalName.trim();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	175	16	replace
626	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.trim();  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.trim();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.trim();	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    return    originalName.trim();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	175	None	replace
627	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toString();  junit.framework.ComparisonFailure:  sourceFile;  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  junit.framework.ComparisonFailure:  sourceFile;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.toString();  junit.framework.ComparisonFailure:  sourceFile;	  return    sourceFile.toString();    junit.framework.ComparisonFailure:    sourceFile;    	non-compiled	[CE]  not  a  statement	106	None	replace
628	[BUG]  [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toString();  }  else  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }  [CE]  cannot  find  symbol  mapping  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toString();  }  else  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.isEmpty())  {  return  sourceFile.toString();  }  else  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    junit.framework.ComparisonFailure:    sourceFile;    	non-compiled	[CE]  cannot  find  symbol  mapping	106	None	replace
629	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }  else  if(sourceFile.startsWith(mapping.originalName))  {  return  sourceFile.toString();  }  [CE]  cannot  find  symbol  mapping  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }  else  if(sourceFile.startsWith(mapping.originalName))  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }  else  if(sourceFile.startsWith(mapping.originalName))  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    junit.framework.ComparisonFailure:    sourceFile;    	non-compiled	[CE]  cannot  find  symbol  mapping	106	None	replace
630	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  /  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.substring(0,  sourceFile.length()  /  1);	  return    sourceFile.substring(0,    sourceFile.length()    +    1);    	compilable	  [FE]  AssertionFailedError  	63	16	replace
631	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  /  1);  [FE]  AssertionFailedError  [FE]    RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  /  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length()  /  1);	  return    sourceFile.substring(0,    sourceFile.length()    +    1);    	compilable	  [FE]  AssertionFailedError  	63	16	replace
632	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  junit.framework.ComparisonFailure:  null;  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  junit.framework.ComparisonFailure:  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  junit.framework.ComparisonFailure:  null;	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	115	None	replace
633	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  junit.framework.ComparisonFailure:  null;  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  junit.framework.ComparisonFailure:  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  junit.framework.ComparisonFailure:  null;	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	115	None	replace
634	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.toString();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.toString();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.toString();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.toString();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	87	None	replace
635	[BUG]  [BUGGY]  String  sourceFile  =  source.toString();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  source.toString();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  source.toString();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.toString();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	87	None	replace
636	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.toString();  if(sourceFile.startsWith(prefix))  {  return  sourceFile.toString();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.toString();  if(sourceFile.startsWith(prefix))  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.toString();  if(sourceFile.startsWith(prefix))  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.toString();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	87	None	replace
637	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.toString();  if(sourceFile.startsWith(originalName))  {  return  sourceFile.toString();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.toString();  if(sourceFile.startsWith(originalName))  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.toString();  if(sourceFile.startsWith(originalName))  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.toString();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	87	None	replace
638	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.toString();  if(sourceFile.startsWith(mapping.originalName))  {  return  sourceFile.toString();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.toString();  if(sourceFile.startsWith(mapping.originalName))  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.toString();  if(sourceFile.startsWith(mapping.originalName))  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.toString();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	87	None	replace
639	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(1);  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(originalName);  [CE]  type  SourceMap  does  not  take  parameters  [FE]              ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(1);  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(originalName);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(1);  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(originalName);	  return    sourceFile.substring(1);    SourceMap    <    String,    DetailLevel>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  type  SourceMap  does  not  take  parameters	148	None	replace
640	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(2);  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(originalName);  [CE]  type  SourceMap  does  not  take  parameters  [FE]                ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(2);  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(originalName);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(2);  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(originalName);	  return    sourceFile.substring(1);    SourceMap    <    String,    DetailLevel>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  type  SourceMap  does  not  take  parameters	148	None	replace
641	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    3);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	56	16	replace
642	[BUG]  [BUGGY]  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    3);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	56	16	replace
643	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.trim();  String  sourceFile  =  prefixMappings.get(sourceFile);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.trim();  String  sourceFile  =  prefixMappings.get(sourceFile);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.trim();  String  sourceFile  =  prefixMappings.get(sourceFile);  }	  return    sourceFile.trim();    String    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	31	None	replace
644	[BUG]  [BUGGY]  String  sourceFile  =  prefixMappings.get(mapping.prefix);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  prefixMappings.get(mapping.prefix);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  prefixMappings.get(mapping.prefix);	  return    sourceFile.trim();    String    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	31	None	replace
645	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.trim();  }  else  if(prefixMappings.containsKey(sourceFile))  {  String  sourceFile  =  prefixMappings.get(sourceFile);  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.trim();  }  else  if(prefixMappings.containsKey(sourceFile))  {  String  sourceFile  =  prefixMappings.get(sourceFile);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.trim();  }  else  if(prefixMappings.containsKey(sourceFile))  {  String  sourceFile  =  prefixMappings.get(sourceFile);  }	  return    sourceFile.trim();    String    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
646	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.trim();  }  else  if(!prefixMappings.containsKey(sourceFile))  {  String  sourceFile  =  prefixMappings.get(sourceFile);  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.trim();  }  else  if(!prefixMappings.containsKey(sourceFile))  {  String  sourceFile  =  prefixMappings.get(sourceFile);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.trim();  }  else  if(!prefixMappings.containsKey(sourceFile))  {  String  sourceFile  =  prefixMappings.get(sourceFile);  }	  return    sourceFile.trim();    String    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
647	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  3);  return  sourceFile.substring(0,  sourceFile.length()  +  3);  [CE]  unreachable  statement  [FE]    RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  3);  return  sourceFile.substring(0,  sourceFile.length()  +  3);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    3);    return  sourceFile.substring(0,  sourceFile.length()  +  3);	  	non-compiled	[CE]  unreachable  statement	42	None	add
648	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  3);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  +  3);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]      RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  3);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  +  3);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    3);    String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  +  3);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	42	None	add
649	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  3);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  3);  [CE]  unreachable  statement  [FE]        RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  3);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  3);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    3);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  3);	  	non-compiled	[CE]  unreachable  statement	42	None	add
650	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  3);  if(sourceFile.length()  +  3!=  sourceFile.length())  {  return  sourceFile.substring(0,  sourceFile.length()  +  3);  }  [CE]  unreachable  statement  [FE]          RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  3);  if(sourceFile.length()  +  3!=  sourceFile.length())  {  return  sourceFile.substring(0,  sourceFile.length()  +  3);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    3);    if(sourceFile.length()  +  3!=  sourceFile.length())  {  return  sourceFile.substring(0,  sourceFile.length()  +  3);  }	  	non-compiled	[CE]  unreachable  statement	42	None	add
651	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  3);  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  +  3);  [CE]  unreachable  statement  [FE]            RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  3);  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  +  3);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    3);    sourceFile  =  sourceFile.substring(0,  sourceFile.length()  +  3);	  	non-compiled	[CE]  unreachable  statement	42	None	add
652	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  3);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  +  3);  return  sourceFile.substring(0,  sourceFile.length()  +  3);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]              RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  3);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  +  3);  return  sourceFile.substring(0,  sourceFile.length()  +  3);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    3);    String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  +  3);  return  sourceFile.substring(0,  sourceFile.length()  +  3);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	42	None	add
653	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  3);  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  return  sourceFile.substring(0,  sourceFile.length()  +  3);  [CE]  cannot  find  symbol  [FE]                RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  3);  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  return  sourceFile.substring(0,  sourceFile.length()  +  3);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    3);    Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  return  sourceFile.substring(0,  sourceFile.length()  +  3);	  	non-compiled	[CE]  cannot  find  symbol	42	None	add
654	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  3);  result  =  sourceFile.substring(0,  sourceFile.length()  +  3);  [CE]  cannot  find  symbol  result  [FE]                  RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  3);  result  =  sourceFile.substring(0,  sourceFile.length()  +  3);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    3);    result  =  sourceFile.substring(0,  sourceFile.length()  +  3);	  	non-compiled	[CE]  cannot  find  symbol  result	42	None	add
655	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName  +  sourceFile.trim();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName  +  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName  +  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    if(originalName!=    null)    {    return    originalName    +    sourceFile.trim();    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
656	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName  +  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName  +  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    if(originalName!=    null)    {    return    originalName    +    sourceFile.trim();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	113	16	replace
657	[BUG]  [BUGGY]  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName  +  sourceFile.trim();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName  +  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName  +  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    if(originalName!=    null)    {    return    originalName    +    sourceFile.trim();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	113	16	replace
658	[BUG]  [BUGGY]  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName  ==  null)  {  return  originalName  +  sourceFile.trim();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName  ==  null)  {  return  originalName  +  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName  ==  null)  {  return  originalName  +  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    if(originalName!=    null)    {    return    originalName    +    sourceFile.trim();    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
659	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  return  originalName  +  sourceFile.trim();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  return  originalName  +  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  return  originalName  +  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    if(originalName!=    null)    {    return    originalName    +    sourceFile.trim();    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
660	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName  ==  null)  {  return  originalName  +  sourceFile.trim();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName  ==  null)  {  return  originalName  +  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName  ==  null)  {  return  originalName  +  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    if(originalName!=    null)    {    return    originalName    +    sourceFile.trim();    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
661	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  4);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  4);	  return    sourceFile.substring(1);    String    originalName    =    sourceFile.substring(0,    sourceFile.length());    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	147	16	replace
662	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  4);  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  4);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  4);	  return    sourceFile.substring(1);    String    originalName    =    sourceFile.substring(0,    sourceFile.length());    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	147	16	replace
663	[BUG]  [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);	  	non-compiled	[CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)	21	None	add
664	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  String  OriginalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    String  OriginalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	21	16	add
665	[BUG]  [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  String  OriginalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  String  OriginalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    String  OriginalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	21	16	add
666	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  String  originName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    String  originName  =  sourceFile.substring(0,  sourceFile.length()  -  3);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	21	16	add
667	[BUG]  [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  String  originName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  String  originName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    String  originName  =  sourceFile.substring(0,  sourceFile.length()  -  3);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	21	16	add
668	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  String  initialName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    String  initialName  =  sourceFile.substring(0,  sourceFile.length()  -  3);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	21	16	add
669	[BUG]  [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  String  initialName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  String  initialName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    String  initialName  =  sourceFile.substring(0,  sourceFile.length()  -  3);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	21	16	add
670	[BUG]  [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [CE]  illegal  start  of  type  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  }	  	non-compiled	[CE]  illegal  start  of  type	21	None	add
671	[BUG]  [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3;  [CE]  ')'  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3;	  	non-compiled	[CE]  ')'  expected	21	None	add
672	[BUG]  [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  *  3);  [CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  *  3);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  *  3);	  	non-compiled	[CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)	21	None	add
673	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    3);    }    	compilable	  [FE]  AssertionFailedError  	143	16	replace
674	[BUG]  [BUGGY]  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [FE]  AssertionFailedError  [FE]        ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    3);    }    	compilable	  [FE]  AssertionFailedError  	143	16	replace
675	[BUG]  [BUGGY]  file  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  file.substring(0,  sourceFile.length());  }  [CE]  cannot  find  symbol  file  [FE]          ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  file  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  file.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	file  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  file.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    3);    }    	non-compiled	[CE]  cannot  find  symbol  file	143	None	replace
676	[BUG]  [BUGGY]  result.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  cannot  find  symbol  result  [FE]            ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  result.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	result.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    3);    }    	non-compiled	[CE]  cannot  find  symbol  result	143	None	replace
677	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  ==  0)  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    return    sourceFile.trim();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	174	16	replace
678	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.trim();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    return    sourceFile.trim();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	174	16	replace
679	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()!=  0)  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()!=  0)  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    return    sourceFile.trim();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	174	16	replace
680	[BUG]  [BUGGY]  if(sourceFile.length()!=  0)  {  return  sourceFile.trim();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()!=  0)  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()!=  0)  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    return    sourceFile.trim();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	174	16	replace
681	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1)+  1;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.substring(0,  sourceFile.length()  -  1)+  1;	  return    sourceFile.substring(0,    sourceFile.length())+    1;    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	142	16	replace
682	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1)+  1;  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1)+  1;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length()  -  1)+  1;	  return    sourceFile.substring(0,    sourceFile.length())+    1;    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	142	16	replace
683	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  2;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.substring(0,  sourceFile.length())+  2;	  return    sourceFile.substring(0,    sourceFile.length())+    1;    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	142	16	replace
684	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  2;  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  2;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length())+  2;	  return    sourceFile.substring(0,    sourceFile.length())+    1;    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	142	16	replace
685	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  1)+  1;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.substring(0,  sourceFile.length()  +  1)+  1;	  return    sourceFile.substring(0,    sourceFile.length())+    1;    	compilable	  [FE]  RuntimeException  	142	18	replace
686	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  1)+  1;  [FE]  RuntimeException  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  1)+  1;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length()  +  1)+  1;	  return    sourceFile.substring(0,    sourceFile.length())+    1;    	compilable	  [FE]  RuntimeException  	142	18	replace
687	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  3;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.substring(0,  sourceFile.length())+  3;	  return    sourceFile.substring(0,    sourceFile.length())+    1;    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	142	16	replace
688	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  3;  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  3;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length())+  3;	  return    sourceFile.substring(0,    sourceFile.length())+    1;    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	142	16	replace
689	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  4;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.substring(0,  sourceFile.length())+  4;	  return    sourceFile.substring(0,    sourceFile.length())+    1;    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	142	16	replace
690	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  4;  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  4;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length())+  4;	  return    sourceFile.substring(0,    sourceFile.length())+    1;    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	142	16	replace
691	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  0;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.substring(0,  sourceFile.length())+  0;	  return    sourceFile.substring(0,    sourceFile.length())+    1;    	compilable	  [FE]  ComparisonFailure  	142	16	replace
692	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  0;  [FE]  ComparisonFailure  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  0;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length())+  0;	  return    sourceFile.substring(0,    sourceFile.length())+    1;    	compilable	  [FE]  ComparisonFailure  	142	16	replace
693	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.trim();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.trim();	  return    sourceFile.trim();    String    originalName    =    sourceFile.trim();    	compilable	  [FE]  AssertionFailedError  	26	16	replace
694	[BUG]  [BUGGY]  String  originalName  =  sourceFile.trim();  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.trim();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.trim();	  return    sourceFile.trim();    String    originalName    =    sourceFile.trim();    	compilable	  [FE]  AssertionFailedError  	26	16	replace
695	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  else  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  [CE]  cannot  find  symbol  mapping  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  else  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  else  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    String    originalName    =    sourceFile.trim();    	non-compiled	[CE]  cannot  find  symbol  mapping	26	None	replace
696	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  originalName  =  sourceFile.trim();  }  [CE]  cannot  find  symbol  mapping  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  originalName  =  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  originalName  =  sourceFile.trim();  }	  return    sourceFile.trim();    String    originalName    =    sourceFile.trim();    	non-compiled	[CE]  cannot  find  symbol  mapping	26	None	replace
697	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  String  originalName  =  sourceFile.trim();  }  [CE]  cannot  find  symbol  mapping  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  String  originalName  =  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  String  originalName  =  sourceFile.trim();  }	  return    sourceFile.trim();    String    originalName    =    sourceFile.trim();    	non-compiled	[CE]  cannot  find  symbol  mapping	26	None	replace
698	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  else  if(sourceFile.startsWith(mapping.prefix))  {  String  originalName  =  sourceFile.trim();  }  [CE]  cannot  find  symbol  mapping  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  else  if(sourceFile.startsWith(mapping.prefix))  {  String  originalName  =  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  else  if(sourceFile.startsWith(mapping.prefix))  {  String  originalName  =  sourceFile.trim();  }	  return    sourceFile.trim();    String    originalName    =    sourceFile.trim();    	non-compiled	[CE]  cannot  find  symbol  mapping	26	None	replace
699	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  else  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(1);  }  [CE]  cannot  find  symbol  mapping  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  else  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  else  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(1);  }	  return    sourceFile.trim();    String    originalName    =    sourceFile.trim();    	non-compiled	[CE]  cannot  find  symbol  mapping	26	None	replace
700	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	74	None	replace
701	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  ==  0)  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	127	16	replace
702	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toLowerCase();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	127	16	replace
703	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  sourceFile.toLowerCase();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.toLowerCase();  sourceFile.toLowerCase();	  return    sourceFile.toLowerCase();    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	127	16	replace
704	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  sourceFile.toLowerCase();  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  sourceFile.toLowerCase();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.toLowerCase();  sourceFile.toLowerCase();	  return    sourceFile.toLowerCase();    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	127	16	replace
705	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  sourceFile.toLowerCase();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	sourceFile  =  sourceFile.toLowerCase();	  return    sourceFile.toLowerCase();    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	127	16	replace
706	[BUG]  [BUGGY]  sourceFile  =  sourceFile.toLowerCase();  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  sourceFile.toLowerCase();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile  =  sourceFile.toLowerCase();	  return    sourceFile.toLowerCase();    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	127	16	replace
707	[BUG]  [BUGGY]  return  sourceFile.toString()  +   ":   ";  String  sourceFile  =  sourceFile.toString()  + ": ";  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  +   ":   ";  String  sourceFile  =  sourceFile.toString()  + ": ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toString()    +   ":   ";    String  sourceFile  =  sourceFile.toString()  + ": ";	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	60	None	add
708	[BUG]  [BUGGY]  return  sourceFile.toString()  +   ":   ";  junit.framework.ComparisonFailure:  null;  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  +   ":   ";  junit.framework.ComparisonFailure:  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toString()    +   ":   ";    junit.framework.ComparisonFailure:  null;	  	non-compiled	[CE]  not  a  statement	60	None	add
709	[BUG]  [BUGGY]  return  sourceFile.toString()  +   ":   ";  if(sourceFile.startsWith(mapping.prefix))  {  ComparisonFailure:  null  expected:  <...t ":1  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  +   ":   ";  if(sourceFile.startsWith(mapping.prefix))  {  ComparisonFailure:  null  expected:  <...t ":1  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toString()    +   ":   ";    if(sourceFile.startsWith(mapping.prefix))  {  ComparisonFailure:  null  expected:  <...t ":1	  	non-compiled	[CE]  not  a  statement	60	None	add
710	[BUG]  [BUGGY]  return  sourceFile.toString()  +   ":   ";  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString()  +   ": ";  }  [CE]  cannot  find  symbol  mapping  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  +   ":   ";  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString()  +   ": ";  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toString()    +   ":   ";    if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString()  +   ": ";  }	  	non-compiled	[CE]  cannot  find  symbol  mapping	60	None	add
711	[BUG]  [BUGGY]  return  sourceFile.toString()  +   ":   ";  if(sourceFile.isEmpty())  {  return  sourceFile.toString()  +   ": ";  }  [CE]  unreachable  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  +   ":   ";  if(sourceFile.isEmpty())  {  return  sourceFile.toString()  +   ": ";  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toString()    +   ":   ";    if(sourceFile.isEmpty())  {  return  sourceFile.toString()  +   ": ";  }	  	non-compiled	[CE]  unreachable  statement	60	None	add
712	[BUG]  [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):    null;    String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1):  null;	  	non-compiled	[CE]  ';'  expected	149	None	add
713	[BUG]  [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  [CE]  unreachable  statement  [FE]      ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):    null;    return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;	  	non-compiled	[CE]  unreachable  statement	149	None	add
714	[BUG]  [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):    null;    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1):  null;	  	non-compiled	[CE]  ';'  expected	149	None	add
715	[BUG]  [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  [CE]  not  a  statement  [FE]          ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):    null;    0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;	  	non-compiled	[CE]  not  a  statement	149	None	add
716	[BUG]  [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):    null;    Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);	  	non-compiled	[CE]  cannot  find  symbol	149	None	add
717	[BUG]  [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  String  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]              ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  String  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):    null;    String  sourceFile  =  prefixMappings.get(sourceFile);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	149	None	add
718	[BUG]  [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):    null;    String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	149	None	add
719	[BUG]  [BUGGY]  PrefixMapping  mapping  =  prefixMappings.get(mapping.sourceFile);  [CE]  cannot  find  symbol  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  PrefixMapping  mapping  =  prefixMappings.get(mapping.sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	PrefixMapping  mapping  =  prefixMappings.get(mapping.sourceFile);	  PrefixMapping    mapping    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
720	[BUG]  [BUGGY]  PrefixMapping  mapping  =  sourceFile.get(prefixMappings);  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  PrefixMapping  mapping  =  sourceFile.get(prefixMappings);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	PrefixMapping  mapping  =  sourceFile.get(prefixMappings);	  PrefixMapping    mapping    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
721	[BUG]  [BUGGY]  PrefixMapping  mapping  =  prefixMappings.get(mapping.prefix);  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  PrefixMapping  mapping  =  prefixMappings.get(mapping.prefix);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	PrefixMapping  mapping  =  prefixMappings.get(mapping.prefix);	  PrefixMapping    mapping    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
722	[BUG]  [BUGGY]  PrefixMapping  mapping  =  sourceFileMappings.get(prefix);  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  PrefixMapping  mapping  =  sourceFileMappings.get(prefix);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	PrefixMapping  mapping  =  sourceFileMappings.get(prefix);	  PrefixMapping    mapping    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
723	[BUG]  [BUGGY]  PrefixMapping  mapping  =  this.prefixMappings.get(sourceFile);  [CE]  cannot  find  symbol  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  PrefixMapping  mapping  =  this.prefixMappings.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	PrefixMapping  mapping  =  this.prefixMappings.get(sourceFile);	  PrefixMapping    mapping    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
724	[BUG]  [BUGGY]  PrefixMapping  mapping  =  mappings.get(sourceFile);  [CE]  cannot  find  symbol  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  PrefixMapping  mapping  =  mappings.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	PrefixMapping  mapping  =  mappings.get(sourceFile);	  PrefixMapping    mapping    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
725	[BUG]  [BUGGY]  PrefixMapping  mapping  =  sourceFile.getPrefixMappings().get(sourceFile);  [CE]  cannot  find  symbol  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  PrefixMapping  mapping  =  sourceFile.getPrefixMappings().get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	PrefixMapping  mapping  =  sourceFile.getPrefixMappings().get(sourceFile);	  PrefixMapping    mapping    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
726	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	50	None	replace
727	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile.startsWith(mapping.originalName))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile.startsWith(mapping.originalName))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile.startsWith(mapping.originalName))  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	50	None	replace
728	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile.startsWith(mapping.name))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile.startsWith(mapping.name))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile.startsWith(mapping.name))  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	50	None	replace
729	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile.endsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile.endsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile.endsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	50	None	replace
730	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(originalName);  [CE]  type  SourceMap  does  not  take  parameters  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(originalName);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.toLowerCase();  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(originalName);	  return    sourceFile.toLowerCase();    SourceMap    <    String,    DetailLevel>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  type  SourceMap  does  not  take  parameters	170	None	replace
731	[BUG]  [BUGGY]  result.toLowerCase();  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  cannot  find  symbol  result  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  result.toLowerCase();  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	result.toLowerCase();  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);	  return    sourceFile.toLowerCase();    SourceMap    <    String,    DetailLevel>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol  result	170	None	replace
732	[BUG]  [BUGGY]  return  sourceFile.toLowerCase();  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(mapping.prefix);  [CE]  type  SourceMap  does  not  take  parameters  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase();  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(mapping.prefix);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase();  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(mapping.prefix);	  return    sourceFile.toLowerCase();    SourceMap    <    String,    DetailLevel>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  type  SourceMap  does  not  take  parameters	170	None	replace
733	[BUG]  [BUGGY]  String  sourceFile  =  source.toString();  if(sourceFile!=  null)  {  return  sourceFile.toString();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  source.toString();  if(sourceFile!=  null)  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  source.toString();  if(sourceFile!=  null)  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    return    sourceFile.toString();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	85	None	replace
734	[BUG]  [BUGGY]  ||  sourceFile!=  null)  {  return  sourceFile.toString();  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  ||  sourceFile!=  null)  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	||  sourceFile!=  null)  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    return    sourceFile.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
735	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.trim();  String  sourceFile  =  sourceFile.trim();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.trim();  String  sourceFile  =  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.trim();  String  sourceFile  =  sourceFile.trim();  }	  return    sourceFile.trim();    String    sourceFile    =    sourceFile.trim();    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	25	None	replace
736	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.trim();  }  else  if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.trim();  }  [CE]  cannot  find  symbol  mapping  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.trim();  }  else  if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.trim();  }  else  if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.trim();  }	  return    sourceFile.trim();    String    sourceFile    =    sourceFile.trim();    	non-compiled	[CE]  cannot  find  symbol  mapping	25	None	replace
737	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.trim();  }  else  if(!prefixMappings.isEmpty())  {  String  sourceFile  =  sourceFile.trim();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.trim();  }  else  if(!prefixMappings.isEmpty())  {  String  sourceFile  =  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.trim();  }  else  if(!prefixMappings.isEmpty())  {  String  sourceFile  =  sourceFile.trim();  }	  return    sourceFile.trim();    String    sourceFile    =    sourceFile.trim();    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	25	None	replace
738	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.trim();  }  else  if(!prefixMappings.isEmpty())  {  String  sourceFile  =  sourceFile.trim();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.trim();  }  else  if(!prefixMappings.isEmpty())  {  String  sourceFile  =  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.trim();  }  else  if(!prefixMappings.isEmpty())  {  String  sourceFile  =  sourceFile.trim();  }	  return    sourceFile.trim();    String    sourceFile    =    sourceFile.trim();    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	25	None	replace
739	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.trim();  }  else  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  [CE]  cannot  find  symbol  mapping  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.trim();  }  else  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.trim();  }  else  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    String    sourceFile    =    sourceFile.trim();    	non-compiled	[CE]  cannot  find  symbol  mapping	25	None	replace
740	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.trim();  }  else  if(!prefixMappings.isEmpty())  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  ==  0)  {  return  sourceFile.trim();  }  else  if(!prefixMappings.isEmpty())  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    String    sourceFile    =    sourceFile.trim();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	25	16	replace
741	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.trim();  }  else  if(!prefixMappings.isEmpty())  {  return  sourceFile.trim();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.trim();  }  else  if(!prefixMappings.isEmpty())  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.trim();  }  else  if(!prefixMappings.isEmpty())  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    String    sourceFile    =    sourceFile.trim();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	25	16	replace
742	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  mapping.prefix);  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  mapping.prefix);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  mapping.prefix);	          junit.framework.ComparisonFailure:    new    ComparisonFailure(mapping.prefix);    	non-compiled	[CE]  not  a  statement	137	None	replace
743	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(mapping.sourceFile,  sourceFile);  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(mapping.sourceFile,  sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(mapping.sourceFile,  sourceFile);	          junit.framework.ComparisonFailure:    new    ComparisonFailure(mapping.prefix);    	non-compiled	[CE]  not  a  statement	137	None	replace
744	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	92	16	replace
745	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	92	16	replace
746	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	92	16	replace
747	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	92	16	replace
748	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  String  sourceFile  =  sourceFile.toLowerCase();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  String  sourceFile  =  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  String  sourceFile  =  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    sourceFile    =    sourceFile.toLowerCase();    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	76	None	replace
749	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toLowerCase();  String  sourceFile  =  sourceFile.toLowerCase();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toLowerCase();  String  sourceFile  =  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.toLowerCase();  String  sourceFile  =  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    sourceFile    =    sourceFile.toLowerCase();    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	76	None	replace
750	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toLowerCase();  }  else  {  String  sourceFile  =  sourceFile.toLowerCase();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toLowerCase();  }  else  {  String  sourceFile  =  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.toLowerCase();  }  else  {  String  sourceFile  =  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    sourceFile    =    sourceFile.toLowerCase();    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	76	None	replace
751	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toLowerCase();  }  else  if(!prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  ==  0)  {  return  sourceFile.toLowerCase();  }  else  if(!prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    sourceFile    =    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	76	16	replace
752	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toLowerCase();  }  else  if(!prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toLowerCase();  }  else  if(!prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.toLowerCase();  }  else  if(!prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    sourceFile    =    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	76	16	replace
753	[BUG]  [BUGGY]  Tasks.ComparisonFailure:  null  expected;  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  Tasks.ComparisonFailure:  null  expected;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	Tasks.ComparisonFailure:  null  expected;	          junit.framework.ComparisonFailure:    null    expected;    	non-compiled	[CE]  not  a  statement	16	None	replace
754	[BUG]  [BUGGY]  ComparisonFailure:  null;  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  ComparisonFailure:  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	ComparisonFailure:  null;	          junit.framework.ComparisonFailure:    null    expected;    	non-compiled	[CE]  not  a  statement	16	None	replace
755	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile  ==  null  ||  sourceFile.toString().length()  ==  0?  null  :  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile  ==  null  ||  sourceFile.toString().length()  ==  0?  null  :  sourceFile.toString();	  return    sourceFile    ==    null?    null    :    sourceFile.toString();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	163	16	replace
756	[BUG]  [BUGGY]  return  sourceFile  ==  null  ||  sourceFile.toString().length()  ==  0?  null  :  sourceFile.toString();  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile  ==  null  ||  sourceFile.toString().length()  ==  0?  null  :  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile  ==  null  ||  sourceFile.toString().length()  ==  0?  null  :  sourceFile.toString();	  return    sourceFile    ==    null?    null    :    sourceFile.toString();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	163	16	replace
757	[BUG]  [BUGGY]  return  sourceFile  ==  null  ||  sourceFile.toString().equals( " "))?  null  :  sourceFile.toString();  [CE]  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile  ==  null  ||  sourceFile.toString().equals( " "))?  null  :  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile  ==  null  ||  sourceFile.toString().equals( " "))?  null  :  sourceFile.toString();	  return    sourceFile    ==    null?    null    :    sourceFile.toString();    	non-compiled	[CE]  	163	None	replace
758	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile  ==  null?  null  :  sourceFile.toString();  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile  ==  null?  null  :  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile  ==  null?  null  :  sourceFile.toString();	  return    sourceFile    ==    null?    null    :    sourceFile.toString();    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	163	None	replace
759	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
760	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName  ==  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName  ==  null)  {  return  originalName;  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    if(originalName!=    null)    {    return    originalName;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	112	16	replace
761	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName  ==  null)  {  return  originalName;  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName  ==  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName  ==  null)  {  return  originalName;  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    if(originalName!=    null)    {    return    originalName;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	112	16	replace
762	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName  ==  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName  ==  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName  ==  null)  {  return  originalName;  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
763	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(1);  SourceMapGenerator  sourceFile  =  prefixMappings.get(originalName);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]          ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(1);  SourceMapGenerator  sourceFile  =  prefixMappings.get(originalName);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(1);  SourceMapGenerator  sourceFile  =  prefixMappings.get(originalName);	  return    sourceFile.substring(1);    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	124	None	replace
764	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  SourceMapGenerator  sourceFile  =  prefixMappings.get(originalName);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]            ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  SourceMapGenerator  sourceFile  =  prefixMappings.get(originalName);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  SourceMapGenerator  sourceFile  =  prefixMappings.get(originalName);	  return    sourceFile.substring(1);    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	124	None	replace
765	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	45	None	replace
766	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();	  return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix))    {    String    sourceFile    =    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	82	None	replace
767	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  mapping  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix))    {    String    sourceFile    =    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  cannot  find  symbol  mapping	82	None	replace
768	[BUG]  [BUGGY]  String  sourceFile  =  mapping.toLowerCase();  return  sourceFile.toLowerCase();  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  mapping.toLowerCase();  return  sourceFile.toLowerCase();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  mapping.toLowerCase();  return  sourceFile.toLowerCase();	  return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix))    {    String    sourceFile    =    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	82	None	replace
769	[BUG]  [BUGGY]  String  sourceFile  =  source.toLowerCase();  return  sourceFile.toLowerCase();  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  source.toLowerCase();  return  sourceFile.toLowerCase();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  source.toLowerCase();  return  sourceFile.toLowerCase();	  return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix))    {    String    sourceFile    =    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	82	None	replace
770	[BUG]  [BUGGY]  return  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase	  return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix))    {    String    sourceFile    =    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  ';'  expected	82	None	replace
771	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(mapping.prefix,  sourceFile,  generator);  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(mapping.prefix,  sourceFile,  generator);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(mapping.prefix,  sourceFile,  generator);	          junit.framework.ComparisonFailure:    new    ComparisonFailure(mapping.prefix,    sourceFile);    	non-compiled	[CE]  not  a  statement	136	None	replace
772	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(mapping.prefix,  sourceFile,  sourceLocationFixupCache);  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(mapping.prefix,  sourceFile,  sourceLocationFixupCache);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(mapping.prefix,  sourceFile,  sourceLocationFixupCache);	          junit.framework.ComparisonFailure:    new    ComparisonFailure(mapping.prefix,    sourceFile);    	non-compiled	[CE]  not  a  statement	136	None	replace
773	[BUG]  [BUGGY]  return  sourceFile.toLowerCase()  +  1;  return  sourceFile.toLowerCase()  +  1;  [CE]  unreachable  statement  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase()  +  1;  return  sourceFile.toLowerCase()  +  1;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toLowerCase()    +    1;    return  sourceFile.toLowerCase()  +  1;	  	non-compiled	[CE]  unreachable  statement	37	None	add
774	[BUG]  [BUGGY]  return  sourceFile.toLowerCase()  +  1;  String  sourceFile  =  sourceFile.toLowerCase()  +  1;  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase()  +  1;  String  sourceFile  =  sourceFile.toLowerCase()  +  1;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toLowerCase()    +    1;    String  sourceFile  =  sourceFile.toLowerCase()  +  1;	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	37	None	add
775	[BUG]  [BUGGY]  return  sourceFile.toLowerCase()  +  1;  if(sourceFile.toLowerCase()  +  1!=  null)  {  return  sourceFile.toLowerCase()  +  1;  }  [CE]  unreachable  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase()  +  1;  if(sourceFile.toLowerCase()  +  1!=  null)  {  return  sourceFile.toLowerCase()  +  1;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toLowerCase()    +    1;    if(sourceFile.toLowerCase()  +  1!=  null)  {  return  sourceFile.toLowerCase()  +  1;  }	  	non-compiled	[CE]  unreachable  statement	37	None	add
776	[BUG]  [BUGGY]  return  sourceFile.toLowerCase()  +  1;  if(sourceFile.toLowerCase()  +  1!=  sourceFile.toLowerCase())  {  return  sourceFile.toLowerCase()  +  1;  }  [CE]  unreachable  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase()  +  1;  if(sourceFile.toLowerCase()  +  1!=  sourceFile.toLowerCase())  {  return  sourceFile.toLowerCase()  +  1;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toLowerCase()    +    1;    if(sourceFile.toLowerCase()  +  1!=  sourceFile.toLowerCase())  {  return  sourceFile.toLowerCase()  +  1;  }	  	non-compiled	[CE]  unreachable  statement	37	None	add
777	[BUG]  [BUGGY]  return  sourceFile.toLowerCase()  +  1;  if(sourceFile.toLowerCase()  +  1)  {  return  sourceFile.toLowerCase()  +  1;  }  [CE]  incompatible  types  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase()  +  1;  if(sourceFile.toLowerCase()  +  1)  {  return  sourceFile.toLowerCase()  +  1;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toLowerCase()    +    1;    if(sourceFile.toLowerCase()  +  1)  {  return  sourceFile.toLowerCase()  +  1;  }	  	non-compiled	[CE]  incompatible  types	37	None	add
778	[BUG]  [BUGGY]  return  sourceFile.toLowerCase()  +  1;  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase()  +  1;  }  [CE]  cannot  find  symbol  mapping  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase()  +  1;  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase()  +  1;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toLowerCase()    +    1;    if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase()  +  1;  }	  	non-compiled	[CE]  cannot  find  symbol  mapping	37	None	add
779	[BUG]  [BUGGY]  return  sourceFile.toLowerCase()  +  1;  if(sourceFile.toLowerCase()  +  1!=  sourceFile.toLowerCase()  +  1)  {  return  sourceFile.toLowerCase()  +  1;  }  [CE]  unreachable  statement  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase()  +  1;  if(sourceFile.toLowerCase()  +  1!=  sourceFile.toLowerCase()  +  1)  {  return  sourceFile.toLowerCase()  +  1;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toLowerCase()    +    1;    if(sourceFile.toLowerCase()  +  1!=  sourceFile.toLowerCase()  +  1)  {  return  sourceFile.toLowerCase()  +  1;  }	  	non-compiled	[CE]  unreachable  statement	37	None	add
780	[BUG]  [BUGGY]  return  sourceFile.toLowerCase()  +  1;  String  originalName  =  sourceFile.toLowerCase()  +  1;  [CE]  unreachable  statement  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase()  +  1;  String  originalName  =  sourceFile.toLowerCase()  +  1;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toLowerCase()    +    1;    String  originalName  =  sourceFile.toLowerCase()  +  1;	  	non-compiled	[CE]  unreachable  statement	37	None	add
781	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(mapping.deFAULT_PREFIX);  [CE]  cannot  find  symbol  mapping  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(mapping.deFAULT_PREFIX);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(mapping.deFAULT_PREFIX);	  return    sourceFile.toLowerCase(LocationFixupCache.DEFAULT_PREFIX);    	non-compiled	[CE]  cannot  find  symbol  mapping	39	None	replace
782	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(Math.PREFIX);  [CE]  cannot  find  symbol  PREFIX  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(Math.PREFIX);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(Math.PREFIX);	  return    sourceFile.toLowerCase(LocationFixupCache.DEFAULT_PREFIX);    	non-compiled	[CE]  cannot  find  symbol  PREFIX	39	None	replace
783	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  1;  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length())+  1;  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  1;  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length())+  1;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length())+    1;    String  sourceFile  =  sourceFile.substring(0,  sourceFile.length())+  1;	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	141	None	add
784	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  1;  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length())+  1;  }  [CE]  unreachable  statement  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  1;  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length())+  1;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length())+    1;    if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length())+  1;  }	  	non-compiled	[CE]  unreachable  statement	141	None	add
785	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  1;  String  originalName  =  sourceFile.substring(0,  sourceFile.length())+  1;  [CE]  unreachable  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  1;  String  originalName  =  sourceFile.substring(0,  sourceFile.length())+  1;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length())+    1;    String  originalName  =  sourceFile.substring(0,  sourceFile.length())+  1;	  	non-compiled	[CE]  unreachable  statement	141	None	add
786	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  1;  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length())+  1;  }  [CE]  cannot  find  symbol  mapping  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  1;  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length())+  1;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length())+    1;    if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length())+  1;  }	  	non-compiled	[CE]  cannot  find  symbol  mapping	141	None	add
787	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  1;  if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  return  sourceFile.substring(0,  sourceFile.length())+  1;  }  [CE]  cannot  find  symbol  mapping  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  1;  if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  return  sourceFile.substring(0,  sourceFile.length())+  1;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length())+    1;    if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  return  sourceFile.substring(0,  sourceFile.length())+  1;  }	  	non-compiled	[CE]  cannot  find  symbol  mapping	141	None	add
788	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  1;  return  sourceFile.substring(0,  sourceFile.length())+  1;  [CE]  unreachable  statement  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  1;  return  sourceFile.substring(0,  sourceFile.length())+  1;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length())+    1;    return  sourceFile.substring(0,  sourceFile.length())+  1;	  	non-compiled	[CE]  unreachable  statement	141	None	add
789	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  1;  sourceFile.substring(0,  sourceFile.length())+  1;  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  1;  sourceFile.substring(0,  sourceFile.length())+  1;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length())+    1;    sourceFile.substring(0,  sourceFile.length())+  1;	  	non-compiled	[CE]  not  a  statement	141	None	add
790	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  1;  if(sourceFile.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length())+  1;  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  1;  if(sourceFile.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length())+  1;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length())+    1;    if(sourceFile.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length())+  1;  }	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	141	None	add
791	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	153	16	replace
792	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	153	16	replace
793	[BUG]  [BUGGY]  return  sourceFile.toUpperCase();  String  sourceFile  =  sourceFile.toUpperCase();  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toUpperCase();  String  sourceFile  =  sourceFile.toUpperCase();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toUpperCase();    String  sourceFile  =  sourceFile.toUpperCase();	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	35	None	add
794	[BUG]  [BUGGY]  return  sourceFile.toUpperCase();  return  sourceFile.toUpperCase();  [CE]  unreachable  statement  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toUpperCase();  return  sourceFile.toUpperCase();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toUpperCase();    return  sourceFile.toUpperCase();	  	non-compiled	[CE]  unreachable  statement	35	None	add
795	[BUG]  [BUGGY]  return  sourceFile.toUpperCase();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toUpperCase();  }  [CE]  cannot  find  symbol  mapping  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toUpperCase();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toUpperCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toUpperCase();    if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toUpperCase();  }	  	non-compiled	[CE]  cannot  find  symbol  mapping	35	None	add
796	[BUG]  [BUGGY]  return  sourceFile.toUpperCase();  String  originalName  =  sourceFile.toUpperCase();  [CE]  unreachable  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toUpperCase();  String  originalName  =  sourceFile.toUpperCase();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toUpperCase();    String  originalName  =  sourceFile.toUpperCase();	  	non-compiled	[CE]  unreachable  statement	35	None	add
797	[BUG]  [BUGGY]  return  sourceFile.toUpperCase();  if(sourceFile!=  null)  {  return  sourceFile.toUpperCase();  }  [CE]  unreachable  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toUpperCase();  if(sourceFile!=  null)  {  return  sourceFile.toUpperCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toUpperCase();    if(sourceFile!=  null)  {  return  sourceFile.toUpperCase();  }	  	non-compiled	[CE]  unreachable  statement	35	None	add
798	[BUG]  [BUGGY]  return  sourceFile.toUpperCase();  if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toUpperCase();  }  [CE]  cannot  find  symbol  mapping  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toUpperCase();  if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toUpperCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toUpperCase();    if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toUpperCase();  }	  	non-compiled	[CE]  cannot  find  symbol  mapping	35	None	add
799	[BUG]  [BUGGY]  return  sourceFile.toUpperCase();  if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.toUpperCase();  return  sourceFile.toUpperCase();  }  [CE]  cannot  find  symbol  mapping  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toUpperCase();  if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.toUpperCase();  return  sourceFile.toUpperCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toUpperCase();    if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.toUpperCase();  return  sourceFile.toUpperCase();  }	  	non-compiled	[CE]  cannot  find  symbol  mapping	35	None	add
800	[BUG]  [BUGGY]  return  sourceFile.toUpperCase();  if(sourceFile.isEmpty())  {  return  sourceFile.toUpperCase();  }  [CE]  unreachable  statement  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toUpperCase();  if(sourceFile.isEmpty())  {  return  sourceFile.toUpperCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toUpperCase();    if(sourceFile.isEmpty())  {  return  sourceFile.toUpperCase();  }	  	non-compiled	[CE]  unreachable  statement	35	None	add
801	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  4);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  4);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  4);	  String    sourceFile    =    sourceFile.substring(0,    sourceFile.length());    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	11	None	replace
802	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  5);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  5);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  5);	  String    sourceFile    =    sourceFile.substring(0,    sourceFile.length());    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	11	None	replace
803	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  10);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  10);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  10);	  String    sourceFile    =    sourceFile.substring(0,    sourceFile.length());    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	11	None	replace
804	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    if(originalName!=    null)    {    return    originalName;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	111	16	replace
805	[BUG]  [BUGGY]  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName;  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    if(originalName!=    null)    {    return    originalName;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	111	16	replace
806	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
807	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName;  }  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName;  }  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName;  }  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
808	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
809	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName;  }  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName;  }  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName;  }  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
810	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  ';'  expected	111	None	replace
811	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	167	16	replace
812	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	167	16	replace
813	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile  ==  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	167	16	replace
814	[BUG]  [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile  ==  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	167	16	replace
815	[BUG]  [BUGGY]  return  sourceFile.toLowerCase();  Collection  <  String>  sourceFile  =  prefixMappings.get(mapping.sourceFile);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase();  Collection  <  String>  sourceFile  =  prefixMappings.get(mapping.sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase();  Collection  <  String>  sourceFile  =  prefixMappings.get(mapping.sourceFile);	  return    sourceFile.toLowerCase();    Collection    <    String>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
816	[BUG]  [BUGGY]  return  sourceFile.toLowerCase();  Collection  <  String>  sourceFile  =  prefixMappings.get(mapping.prefix);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase();  Collection  <  String>  sourceFile  =  prefixMappings.get(mapping.prefix);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase();  Collection  <  String>  sourceFile  =  prefixMappings.get(mapping.prefix);	  return    sourceFile.toLowerCase();    Collection    <    String>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
817	[BUG]  [BUGGY]  return  prefixMappings.toLowerCase();  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  prefixMappings.toLowerCase();  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  prefixMappings.toLowerCase();  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);	  return    sourceFile.toLowerCase();    Collection    <    String>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
818	[BUG]  [BUGGY]  return  prefixMapping.toLowerCase();  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  cannot  find  symbol  prefixMapping  [FE]                            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  prefixMapping.toLowerCase();  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  prefixMapping.toLowerCase();  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);	  return    sourceFile.toLowerCase();    Collection    <    String>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol  prefixMapping	83	None	replace
819	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()).trim();  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()).trim();  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()).trim();  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()).trim();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()).trim();    String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()).trim();	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	121	None	add
820	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()).trim();  String  originalName  =  sourceFile.substring(0,  sourceFile.length()).trim();  [CE]  unreachable  statement  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()).trim();  String  originalName  =  sourceFile.substring(0,  sourceFile.length()).trim();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()).trim();    String  originalName  =  sourceFile.substring(0,  sourceFile.length()).trim();	  	non-compiled	[CE]  unreachable  statement	121	None	add
821	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()).trim();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()).trim();  }  [CE]  cannot  find  symbol  mapping  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()).trim();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()).trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()).trim();    if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()).trim();  }	  	non-compiled	[CE]  cannot  find  symbol  mapping	121	None	add
822	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()).trim();  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()).trim();  }  [CE]  unreachable  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()).trim();  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()).trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()).trim();    if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()).trim();  }	  	non-compiled	[CE]  unreachable  statement	121	None	add
823	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()).trim();  if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()).trim();  }  [CE]  cannot  find  symbol  mapping  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()).trim();  if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()).trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()).trim();    if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()).trim();  }	  	non-compiled	[CE]  cannot  find  symbol  mapping	121	None	add
824	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()).trim();  return  sourceFile.substring(0,  sourceFile.length()).trim();  [CE]  unreachable  statement  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()).trim();  return  sourceFile.substring(0,  sourceFile.length()).trim();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()).trim();    return  sourceFile.substring(0,  sourceFile.length()).trim();	  	non-compiled	[CE]  unreachable  statement	121	None	add
825	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()).trim();  String  originalName  =  sourceFile.substring(0,  sourceFile.length()).trim();  junit.framework.ComparisonFailure:  null;  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()).trim();  String  originalName  =  sourceFile.substring(0,  sourceFile.length()).trim();  junit.framework.ComparisonFailure:  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()).trim();    String  originalName  =  sourceFile.substring(0,  sourceFile.length()).trim();  junit.framework.ComparisonFailure:  null;	  	non-compiled	[CE]  not  a  statement	121	None	add
826	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()).trim();  if(sourceFile.startsWith(mapping.prefix))  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()).trim();  }  [CE]  cannot  find  symbol  mapping  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()).trim();  if(sourceFile.startsWith(mapping.prefix))  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()).trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()).trim();    if(sourceFile.startsWith(mapping.prefix))  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()).trim();  }	  	non-compiled	[CE]  cannot  find  symbol  mapping	121	None	add
827	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  4);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  4);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  4);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  4);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    4);    String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  4);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	66	None	add
828	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  4);  return  sourceFile.substring(0,  sourceFile.length()  -  4);  [CE]  unreachable  statement  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  4);  return  sourceFile.substring(0,  sourceFile.length()  -  4);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    4);    return  sourceFile.substring(0,  sourceFile.length()  -  4);	  	non-compiled	[CE]  unreachable  statement	66	None	add
829	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  4);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  4);  [CE]  unreachable  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  4);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  4);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    4);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  4);	  	non-compiled	[CE]  unreachable  statement	66	None	add
830	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  4);  if(sourceFile.length()  >  4)  {  return  sourceFile.substring(0,  sourceFile.length()  -  4);  }  [CE]  unreachable  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  4);  if(sourceFile.length()  >  4)  {  return  sourceFile.substring(0,  sourceFile.length()  -  4);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    4);    if(sourceFile.length()  >  4)  {  return  sourceFile.substring(0,  sourceFile.length()  -  4);  }	  	non-compiled	[CE]  unreachable  statement	66	None	add
831	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  4);  if(sourceFile.length()  -  4!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  4);  }  [CE]  incomparable  types:  int  and  <null>  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  4);  if(sourceFile.length()  -  4!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  4);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    4);    if(sourceFile.length()  -  4!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  4);  }	  	non-compiled	[CE]  incomparable  types:  int  and  <null>	66	None	add
832	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  4);  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  4);  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    4);    Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);	  	non-compiled	[CE]  cannot  find  symbol	66	None	add
833	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  4);  sourceFile.substring(0,  sourceFile.length()  -  4);  [CE]  unreachable  statement  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  4);  sourceFile.substring(0,  sourceFile.length()  -  4);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    4);    sourceFile.substring(0,  sourceFile.length()  -  4);	  	non-compiled	[CE]  unreachable  statement	66	None	add
834	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  4);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  4);  return  sourceFile.substring(0,  sourceFile.length()  -  4);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  4);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  4);  return  sourceFile.substring(0,  sourceFile.length()  -  4);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    4);    String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  4);  return  sourceFile.substring(0,  sourceFile.length()  -  4);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	66	None	add
835	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  + ".: ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.toString()  + ".: ";	  return    sourceFile.toString()    +   ":   ";    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	61	16	replace
836	[BUG]  [BUGGY]  return  sourceFile.toString()  + ".: ";  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  + ".: ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toString()  + ".: ";	  return    sourceFile.toString()    +   ":   ";    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	61	16	replace
837	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  + ",: ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.toString()  + ",: ";	  return    sourceFile.toString()    +   ":   ";    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	61	16	replace
838	[BUG]  [BUGGY]  return  sourceFile.toString()  + ",: ";  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  + ",: ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toString()  + ",: ";	  return    sourceFile.toString()    +   ":   ";    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	61	16	replace
839	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  + ",  t ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.toString()  + ",  t ";	  return    sourceFile.toString()    +   ":   ";    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	61	16	replace
840	[BUG]  [BUGGY]  return  sourceFile.toString()  + ",  t ";  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  + ",  t ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toString()  + ",  t ";	  return    sourceFile.toString()    +   ":   ";    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	61	16	replace
841	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  + ":n ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.toString()  + ":n ";	  return    sourceFile.toString()    +   ":   ";    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	61	16	replace
842	[BUG]  [BUGGY]  return  sourceFile.toString()  + ":n ";  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  + ":n ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toString()  + ":n ";	  return    sourceFile.toString()    +   ":   ";    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	61	16	replace
843	[BUG]  [BUGGY]  return  sourceFile.toString()  + ": "+mapping.prefix;  [CE]  cannot  find  symbol  mapping  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  + ": "+mapping.prefix;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toString()  + ": "+mapping.prefix;	  return    sourceFile.toString()    +   ":   ";    	non-compiled	[CE]  cannot  find  symbol  mapping	61	None	replace
844	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  }	  return    sourceFile.toLowerCase();    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	129	None	replace
845	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  }  else  {  String  originalName  =  sourceFile.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  }  else  {  String  originalName  =  sourceFile.toLowerCase();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  }  else  {  String  originalName  =  sourceFile.toLowerCase();	  return    sourceFile.toLowerCase();    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
846	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  }  else  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  }  else  {  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  }  else  {	  return    sourceFile.toLowerCase();    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
847	[BUG]  [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	17	None	add
848	[BUG]  [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  1);  [CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  1);	  	non-compiled	[CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)	17	None	add
849	[BUG]  [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length())  -  1);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length())  -  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    String  originalName  =  sourceFile.substring(0,  sourceFile.length())  -  1);	  	non-compiled	[CE]  ';'  expected	17	None	add
850	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                      ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    SourceFile    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	59	None	replace
851	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                        ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    SourceFile    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	59	None	replace
852	[BUG]  [BUGGY]  return  sourceFile.toLowerCase()  +  1;  sourceFile.toLowerCase()  +  1;  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase()  +  1;  sourceFile.toLowerCase()  +  1;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toLowerCase()    +    1;    sourceFile.toLowerCase()  +  1;	  	non-compiled	[CE]  not  a  statement	37	None	add
853	[BUG]  [BUGGY]  return  sourceFile.toLowerCase()  +  1;  junit.framework.ComparisonFailure:  sourceFile.toLowerCase()  +  1;  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase()  +  1;  junit.framework.ComparisonFailure:  sourceFile.toLowerCase()  +  1;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toLowerCase()    +    1;    junit.framework.ComparisonFailure:  sourceFile.toLowerCase()  +  1;	  	non-compiled	[CE]  not  a  statement	37	None	add
854	[BUG]  [BUGGY]  return  sourceFile.toLowerCase()  +  1;  junit.framework.ComparisonFailure:  null;  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase()  +  1;  junit.framework.ComparisonFailure:  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toLowerCase()    +    1;    junit.framework.ComparisonFailure:  null;	  	non-compiled	[CE]  not  a  statement	37	None	add
855	[BUG]  [BUGGY]  return  sourceFile.toLowerCase()  +  1;  SourceMapGenerator  generator  =  sourceFile.toLowerCase()  +  1;  [CE]  incompatible  types  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase()  +  1;  SourceMapGenerator  generator  =  sourceFile.toLowerCase()  +  1;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toLowerCase()    +    1;    SourceMapGenerator  generator  =  sourceFile.toLowerCase()  +  1;	  	non-compiled	[CE]  incompatible  types	37	None	add
856	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }  else  {  ComparisonFailure:  null;  }  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }  else  {  ComparisonFailure:  null;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }  else  {  ComparisonFailure:  null;  }	  return    sourceFile.toString();    junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	86	None	replace
857	[BUG]  [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toString();  }  else  {  ComparisonFailure:  null;  }  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toString();  }  else  {  ComparisonFailure:  null;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.isEmpty())  {  return  sourceFile.toString();  }  else  {  ComparisonFailure:  null;  }	  return    sourceFile.toString();    junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	86	None	replace
858	[BUG]  [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile.toLowerCase();  String  sourceFile  =  sourceFile.toLowerCase();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile.toLowerCase();  String  sourceFile  =  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile  ==  null)  {  return  sourceFile.toLowerCase();  String  sourceFile  =  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    sourceFile    =    sourceFile.toLowerCase();    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	76	None	replace
859	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  else  {  String  sourceFile  =  sourceFile.toLowerCase();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  else  {  String  sourceFile  =  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  else  {  String  sourceFile  =  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    sourceFile    =    sourceFile.toLowerCase();    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	76	None	replace
860	[BUG]  [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile.toLowerCase();  }  else  {  String  sourceFile  =  sourceFile.toLowerCase();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile.toLowerCase();  }  else  {  String  sourceFile  =  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile  ==  null)  {  return  sourceFile.toLowerCase();  }  else  {  String  sourceFile  =  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    sourceFile    =    sourceFile.toLowerCase();    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	76	None	replace
861	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	70	16	replace
862	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	70	16	replace
863	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  }  [CE]  unreachable  statement  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  unreachable  statement	70	None	replace
864	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  originalName  =  sourceFile.substring(0,  sourceFile.length());  }  [CE]  cannot  find  symbol  originalName  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  originalName  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  originalName  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  cannot  find  symbol  originalName	70	None	replace
865	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  }  [CE]  unreachable  statement  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  unreachable  statement	70	None	replace
866	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(mapping.prefix,  true);  [CE]  cannot  find  symbol  mapping  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(mapping.prefix,  true);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(mapping.prefix,  true);	  return    sourceFile.toLowerCase(true);    	non-compiled	[CE]  cannot  find  symbol  mapping	103	None	replace
867	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(false,  prefixMappings);  [CE]  no  suitable  method  found  for  toLowerCase(boolean,List<LocationMapping>)  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(false,  prefixMappings);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(false,  prefixMappings);	  return    sourceFile.toLowerCase(true);    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(boolean,List<LocationMapping>)	103	None	replace
868	[BUG]  [BUGGY]  Preconditions.checkState(!prefixMappings.isEmpty()  ||  sourceFile.startsWith(mapping.prefix));  [CE]  cannot  find  symbol  mapping  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  Preconditions.checkState(!prefixMappings.isEmpty()  ||  sourceFile.startsWith(mapping.prefix));  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	Preconditions.checkState(!prefixMappings.isEmpty()  ||  sourceFile.startsWith(mapping.prefix));	          Preconditions.checkState(!prefixMappings.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  mapping	138	None	replace
869	[BUG]  [BUGGY]  Preconditions.checkState(!mapping.prefixMappings.isEmpty());  [CE]  package  mapping  does  not  exist  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  Preconditions.checkState(!mapping.prefixMappings.isEmpty());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	Preconditions.checkState(!mapping.prefixMappings.isEmpty());	          Preconditions.checkState(!prefixMappings.isEmpty());    	non-compiled	[CE]  package  mapping  does  not  exist	138	None	replace
870	[BUG]  [BUGGY]  Preconditions.checkState(!prefixMappings.isEmpty()  &&  sourceFile.endsWith(mapping.prefix));  [CE]  cannot  find  symbol  mapping  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  Preconditions.checkState(!prefixMappings.isEmpty()  &&  sourceFile.endsWith(mapping.prefix));  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	Preconditions.checkState(!prefixMappings.isEmpty()  &&  sourceFile.endsWith(mapping.prefix));	          Preconditions.checkState(!prefixMappings.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  mapping	138	None	replace
871	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    SourceFile    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	132	None	replace
872	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    SourceFile    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	132	None	replace
873	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName  +  sourceFile.trim();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName  +  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName  +  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    if(originalName!=    null)    {    return    originalName    +    sourceFile.trim();    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
874	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName  +  sourceFile.trim();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName  +  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName  +  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    if(originalName!=    null)    {    return    originalName    +    sourceFile.trim();    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
875	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  return  originalName  +  sourceFile.trim();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  return  originalName  +  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  return  originalName  +  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    if(originalName!=    null)    {    return    originalName    +    sourceFile.trim();    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
876	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.trim();  if(originalName!=  null)  {  return  sourceFile  +  sourceFile.trim();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.trim();  if(originalName!=  null)  {  return  sourceFile  +  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.trim();  if(originalName!=  null)  {  return  sourceFile  +  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    if(originalName!=    null)    {    return    originalName    +    sourceFile.trim();    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
877	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName  +  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName  +  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile.length()    ==    0)    {    return    sourceFile.toString();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	88	16	replace
878	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName  +  sourceFile.toString();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName  +  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName  +  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile.length()    ==    0)    {    return    sourceFile.toString();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	88	16	replace
879	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  if(originalName  ==  null)  {  return  originalName  +  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.toString();  if(originalName  ==  null)  {  return  originalName  +  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile.length()    ==    0)    {    return    sourceFile.toString();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	88	16	replace
880	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toString();  if(originalName  ==  null)  {  return  originalName  +  sourceFile.toString();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  if(originalName  ==  null)  {  return  originalName  +  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.toString();  if(originalName  ==  null)  {  return  originalName  +  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile.length()    ==    0)    {    return    sourceFile.toString();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	88	16	replace
881	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  originalName  =  sourceFile.substring(0,  sourceFile.length());  }  [CE]  cannot  find  symbol  originalName  [FE]          ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  originalName  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  originalName  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	non-compiled	[CE]  cannot  find  symbol  originalName	53	None	replace
882	[BUG]  [BUGGY]  return  sourceFile.trim().toLowerCase(true);  [CE]  no  suitable  method  found  for  toLowerCase(boolean)  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim().toLowerCase(true);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.trim().toLowerCase(true);	  return    sourceFile.trim().toLowerCase();    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(boolean)	34	None	replace
883	[BUG]  [BUGGY]  return  sourceFile.trim().toLowerCase(location);  [CE]  cannot  find  symbol  location  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim().toLowerCase(location);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.trim().toLowerCase(location);	  return    sourceFile.trim().toLowerCase();    	non-compiled	[CE]  cannot  find  symbol  location	34	None	replace
884	[BUG]  [BUGGY]  return  sourceFile.substring(2);  if(sourceFile.startsWith(mapping.prefix))  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(2);  if(sourceFile.startsWith(mapping.prefix))  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(2);    if(sourceFile.startsWith(mapping.prefix))  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName;  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
885	[BUG]  [BUGGY]  return  sourceFile.substring(2);  if(sourceFile.startsWith(mapping.prefix))  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(2);  if(sourceFile.startsWith(mapping.prefix))  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(2);    if(sourceFile.startsWith(mapping.prefix))  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName;  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
886	[BUG]  [BUGGY]  return  sourceFile.substring(2);  if(sourceFile.startsWith(mapping.prefix))  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(2);  if(sourceFile.startsWith(mapping.prefix))  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(2);    if(sourceFile.startsWith(mapping.prefix))  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  if(originalName!=  null)  {  return  originalName;  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
887	[BUG]  [BUGGY]  return  sourceFile.substring(2);  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);  [CE]  incompatible  types  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(2);  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(2);    SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);	  	non-compiled	[CE]  incompatible  types	64	None	add
888	[BUG]  [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  String  originalName  =  sourceFile.substring(0,  sourceFile.length())  -  2;  [CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  String  originalName  =  sourceFile.substring(0,  sourceFile.length())  -  2;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    String  originalName  =  sourceFile.substring(0,  sourceFile.length())  -  2;	  	non-compiled	[CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)	19	None	add
889	[BUG]  [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  2);  [CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  2);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  2);	  	non-compiled	[CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)	19	None	add
890	[BUG]  [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  *  2);  [CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  *  2);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  *  2);	  	non-compiled	[CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)	19	None	add
891	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }  [CE]  unreachable  statement  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    	non-compiled	[CE]  unreachable  statement	171	None	replace
892	[BUG]  [BUGGY]  if(prefixMappings!=  null)  {  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }  [CE]  unreachable  statement  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(prefixMappings!=  null)  {  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(prefixMappings!=  null)  {  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    	non-compiled	[CE]  unreachable  statement	171	None	replace
893	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }  [CE]  unreachable  statement  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    	non-compiled	[CE]  unreachable  statement	77	None	replace
894	[BUG]  [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }  [CE]  unreachable  statement  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile  ==  null)  {  return  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    	non-compiled	[CE]  unreachable  statement	77	None	replace
895	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	compilable	  [FE]  ComparisonFailure  	167	16	replace
896	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [FE]  ComparisonFailure  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	compilable	  [FE]  ComparisonFailure  	167	16	replace
897	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile  ==  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	167	16	replace
898	[BUG]  [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile  ==  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	167	16	replace
899	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  cannot  find  symbol  originalName  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.toString();    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol  originalName	159	None	replace
900	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparisonFailure:  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparisonFailure:  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    junit.framework.ComparisonFailure:    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  AssertionFailedError  	119	16	replace
901	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparisonFailure:  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [FE]  AssertionFailedError  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparisonFailure:  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparisonFailure:  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    junit.framework.ComparisonFailure:    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  AssertionFailedError  	119	16	replace
902	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparisonFailure:  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparisonFailure:  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    junit.framework.ComparisonFailure:    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	119	16	replace
903	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparisonFailure:  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparisonFailure:  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparisonFailure:  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    junit.framework.ComparisonFailure:    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	119	16	replace
904	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  128).trim();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.substring(0,  sourceFile.length()  -  128).trim();	  return    sourceFile.substring(0,    sourceFile.length()).trim();    	compilable	  [FE]  RuntimeException  	122	18	replace
905	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  128).trim();  [FE]  RuntimeException  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  128).trim();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length()  -  128).trim();	  return    sourceFile.substring(0,    sourceFile.length()).trim();    	compilable	  [FE]  RuntimeException  	122	18	replace
906	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }  else  {  ComparisonFailure:  null  expected;  }  [CE]  not  a  statement  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }  else  {  ComparisonFailure:  null  expected;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }  else  {  ComparisonFailure:  null  expected;  }	  return    sourceFile.toString();    junit.framework.ComparisonFailure:    null    expected;    	non-compiled	[CE]  not  a  statement	91	None	replace
907	[BUG]  [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toString();  }  else  {  ComparisonFailure:  null  expected;  }  [CE]  not  a  statement  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toString();  }  else  {  ComparisonFailure:  null  expected;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.isEmpty())  {  return  sourceFile.toString();  }  else  {  ComparisonFailure:  null  expected;  }	  return    sourceFile.toString();    junit.framework.ComparisonFailure:    null    expected;    	non-compiled	[CE]  not  a  statement	91	None	replace
908	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  ComparisonFailure:  null  expected;  }  [CE]  not  a  statement  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  ComparisonFailure:  null  expected;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  ComparisonFailure:  null  expected;  }	  return    sourceFile.toString();    junit.framework.ComparisonFailure:    null    expected;    	non-compiled	[CE]  not  a  statement	91	None	replace
909	[BUG]  [BUGGY]  return  sourceFile.toString();  ComparisonFailure:  null;  [CE]  not  a  statement  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString();  ComparisonFailure:  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toString();  ComparisonFailure:  null;	  return    sourceFile.toString();    junit.framework.ComparisonFailure:    null    expected;    	non-compiled	[CE]  not  a  statement	91	None	replace
910	[BUG]  [BUGGY]  sourceFile  =  sourceLocationFixupCache.trim();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  sourceLocationFixupCache.trim();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile  =  sourceLocationFixupCache.trim();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.trim();    }    	non-compiled	[CE]  cannot  find  symbol	173	None	replace
911	[BUG]  [BUGGY]  String  sourceFile  =  sourceLocationFixupCache.trim();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceLocationFixupCache.trim();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceLocationFixupCache.trim();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.trim();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	173	None	replace
912	[BUG]  [BUGGY]  String  sourceFile  =  sourceLocationFixup.trim();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceLocationFixup.trim();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceLocationFixup.trim();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.trim();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	173	None	replace
913	[BUG]  [BUGGY]  sourceFile  =  sourceLocationFixup.trim();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  [CE]  cannot  find  symbol  sourceLocationFixup  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  sourceLocationFixup.trim();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile  =  sourceLocationFixup.trim();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.trim();    }    	non-compiled	[CE]  cannot  find  symbol  sourceLocationFixup	173	None	replace
914	[BUG]  [BUGGY]  result  =  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  result  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  result  =  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	result  =  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix)||    sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  cannot  find  symbol  result	81	None	replace
915	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase()  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase()  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase()	  return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix)||    sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  ';'  expected	81	None	replace
916	[BUG]  [BUGGY]  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  mapping  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile  =  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix)||    sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  cannot  find  symbol  mapping	81	None	replace
917	[BUG]  [BUGGY]  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase()  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase()  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile  =  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase()	  return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix)||    sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  ';'  expected	81	None	replace
918	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  incomparable  types:  int  and  <null>  [FE]              ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile.length()    -    3!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    3);    }    	non-compiled	[CE]  incomparable  types:  int  and  <null>	55	None	replace
919	[BUG]  [BUGGY]  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  incomparable  types:  int  and  <null>  [FE]                ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile.length()    -    3!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    3);    }    	non-compiled	[CE]  incomparable  types:  int  and  <null>	55	None	replace
920	[BUG]  [BUGGY]  result  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  cannot  find  symbol  result  [FE]                  ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  result  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	result  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile.length()    -    3!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    3);    }    	non-compiled	[CE]  cannot  find  symbol  result	55	None	replace
921	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparisonFailure:  null;  }  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparisonFailure:  null;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparisonFailure:  null;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	115	None	replace
922	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparisonFailure:  null;  }  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparisonFailure:  null;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparisonFailure:  null;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	115	None	replace
923	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  + ": "  +  sourceFile;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.toString()  + ": "  +  sourceFile;	  return    sourceFile.toString()    +   ":   ";    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	61	16	replace
924	[BUG]  [BUGGY]  return  sourceFile.toString()  + ": "  +  sourceFile;  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  + ": "  +  sourceFile;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toString()  + ": "  +  sourceFile;	  return    sourceFile.toString()    +   ":   ";    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	61	16	replace
925	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    return    sourceFile.substring(0,    sourceFile.length()    -    2);    	compilable	  [FE]  AssertionFailedError  	72	16	replace
926	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }  [FE]  AssertionFailedError  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    return    sourceFile.substring(0,    sourceFile.length()    -    2);    	compilable	  [FE]  AssertionFailedError  	72	16	replace
927	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	68	None	replace
928	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	68	None	replace
929	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	68	None	replace
930	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	68	None	replace
931	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	68	None	replace
932	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	68	None	replace
933	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(null);  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(null);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(null);	          junit.framework.ComparisonFailure:    new    ComparisonFailure();    	non-compiled	[CE]  not  a  statement	139	None	replace
934	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  sourceFile.toLowerCase();  }  [CE]  unreachable  statement  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    sourceFile.toLowerCase();    	non-compiled	[CE]  unreachable  statement	127	None	replace
935	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile.toLowerCase();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	sourceFile.toLowerCase();	  return    sourceFile.toLowerCase();    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	127	16	replace
936	[BUG]  [BUGGY]  sourceFile.toLowerCase();  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile.toLowerCase();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile.toLowerCase();	  return    sourceFile.toLowerCase();    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	127	16	replace
937	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  else  {  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  else  {  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	127	16	replace
938	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  else  {  sourceFile.toLowerCase();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  else  {  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  else  {  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	127	16	replace
939	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1): ". ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1): ". ";	  return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):       "   ";    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	152	16	replace
940	[BUG]  [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1): ". ";  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1): ". ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1): ". ";	  return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):       "   ";    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	152	16	replace
941	[BUG]  [BUGGY]  if(sourceFile.length()  ==  1)  {  return  sourceFile.substring(1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  unreachable  statement  [FE]            ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  1)  {  return  sourceFile.substring(1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  1)  {  return  sourceFile.substring(1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(1);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  unreachable  statement	3	None	replace
942	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);  }  [CE]  type  SourceMap  does  not  take  parameters  [FE]          ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    SourceMap    <    String,    DetailLevel>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  type  SourceMap  does  not  take  parameters	144	None	replace
943	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);  }  [CE]  type  SourceMap  does  not  take  parameters  [FE]            ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    SourceMap    <    String,    DetailLevel>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  type  SourceMap  does  not  take  parameters	144	None	replace
944	[BUG]  [BUGGY]  SourceMapGenerator  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile.isLowerCase())  {  return  sourceFile.toLowerCase();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  SourceMapGenerator  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile.isLowerCase())  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	SourceMapGenerator  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile.isLowerCase())  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile.isLowerCase())    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	168	None	replace
945	[BUG]  [BUGGY]  result  =  sourceFile.toLowerCase();  if(sourceFile.isLowerCase())  {  return  result.toLowerCase();  }  [CE]  cannot  find  symbol  result  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  result  =  sourceFile.toLowerCase();  if(sourceFile.isLowerCase())  {  return  result.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	result  =  sourceFile.toLowerCase();  if(sourceFile.isLowerCase())  {  return  result.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile.isLowerCase())    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  cannot  find  symbol  result	168	None	replace
946	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(Mapping.DEFAULT_PREFIX);  [CE]  cannot  find  symbol  Mapping  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(Mapping.DEFAULT_PREFIX);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(Mapping.DEFAULT_PREFIX);	  return    sourceFile.toLowerCase(LocationGenerator.DEFAULT_PREFIX);    	non-compiled	[CE]  cannot  find  symbol  Mapping	41	None	replace
947	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(Math.PI  *  SourceMapping.DEFAULT_PREFIX);  [CE]  cannot  find  symbol  SourceMapping  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(Math.PI  *  SourceMapping.DEFAULT_PREFIX);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(Math.PI  *  SourceMapping.DEFAULT_PREFIX);	  return    sourceFile.toLowerCase(LocationGenerator.DEFAULT_PREFIX);    	non-compiled	[CE]  cannot  find  symbol  SourceMapping	41	None	replace
948	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  >  0)  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	71	16	replace
949	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	71	16	replace
950	[BUG]  [BUGGY]  return  sourceFile.toUpperCase(false);  [CE]  no  suitable  method  found  for  toUpperCase(boolean)  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toUpperCase(false);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toUpperCase(false);	  return    sourceFile.toUpperCase();    	non-compiled	[CE]  no  suitable  method  found  for  toUpperCase(boolean)	36	None	replace
951	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName  +  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName  +  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    3);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	56	16	replace
952	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName  +  sourceFile.substring(0,  sourceFile.length());  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName  +  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName  +  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    3);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	56	16	replace
953	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  ComparisonFailure:  null  expected;  }  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  ComparisonFailure:  null  expected;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  ComparisonFailure:  null  expected;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    junit.framework.ComparisonFailure:    null    expected;    }    	non-compiled	[CE]  not  a  statement	117	None	replace
954	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  compilerFailure:  null  expected;  }  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  compilerFailure:  null  expected;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  compilerFailure:  null  expected;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    junit.framework.ComparisonFailure:    null    expected;    }    	non-compiled	[CE]  not  a  statement	117	None	replace
955	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  ComparisonFailure:  null  expected;  }  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  ComparisonFailure:  null  expected;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  ComparisonFailure:  null  expected;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    junit.framework.ComparisonFailure:    null    expected;    }    	non-compiled	[CE]  not  a  statement	117	None	replace
956	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  }  [CE]  unreachable  statement  [FE]        ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(1);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	non-compiled	[CE]  unreachable  statement	145	None	replace
957	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [CE]  unreachable  statement  [FE]          ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  }	  return    sourceFile.substring(1);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	non-compiled	[CE]  unreachable  statement	145	None	replace
958	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(Math.PI  *  LocationFixupCache.DEFAULT_PREFIX);  [CE]  cannot  find  symbol  LocationFixupCache  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(Math.PI  *  LocationFixupCache.DEFAULT_PREFIX);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(Math.PI  *  LocationFixupCache.DEFAULT_PREFIX);	  return    sourceFile.toLowerCase(LocationFixupCache.DEFAULT_PREFIX);    	non-compiled	[CE]  cannot  find  symbol  LocationFixupCache	39	None	replace
959	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]        ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	52	None	replace
960	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -1);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]          ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -1);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -1);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	52	None	replace
961	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile  ==  null)  {  String  originalName  =  sourceFile.trim();  return  originalName.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile  ==  null)  {  String  originalName  =  sourceFile.trim();  return  originalName.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    return    originalName.trim();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	175	16	replace
962	[BUG]  [BUGGY]  if(sourceFile  ==  null)  {  String  originalName  =  sourceFile.trim();  return  originalName.trim();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile  ==  null)  {  String  originalName  =  sourceFile.trim();  return  originalName.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile  ==  null)  {  String  originalName  =  sourceFile.trim();  return  originalName.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    return    originalName.trim();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	175	16	replace
963	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.trim();  return  sourceFile.trim();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.trim();  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.trim();  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    return    originalName.trim();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	175	None	replace
964	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  replacement  =  sourceFile.trim();  if(replacement!=  null)  {  String  originalName  =  sourceFile.trim();  return  replacement.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  replacement  =  sourceFile.trim();  if(replacement!=  null)  {  String  originalName  =  sourceFile.trim();  return  replacement.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    return    originalName.trim();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	175	16	replace
965	[BUG]  [BUGGY]  String  replacement  =  sourceFile.trim();  if(replacement!=  null)  {  String  originalName  =  sourceFile.trim();  return  replacement.trim();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  replacement  =  sourceFile.trim();  if(replacement!=  null)  {  String  originalName  =  sourceFile.trim();  return  replacement.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  replacement  =  sourceFile.trim();  if(replacement!=  null)  {  String  originalName  =  sourceFile.trim();  return  replacement.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    return    originalName.trim();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	175	16	replace
966	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  return  sourceFile.substring(sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  return  sourceFile.substring(sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    return    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	95	16	replace
967	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  return  sourceFile.substring(sourceFile.length());  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  return  sourceFile.substring(sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  return  sourceFile.substring(sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    return    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	95	16	replace
968	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  return  sourceFile.substring(0,  sourceFile.length()  -  3);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  return  sourceFile.substring(0,  sourceFile.length()  -  3);	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    return    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	95	16	replace
969	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  return  sourceFile.substring(0,  sourceFile.length()  -  3);  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  return  sourceFile.substring(0,  sourceFile.length()  -  3);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  return  sourceFile.substring(0,  sourceFile.length()  -  3);	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    return    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	95	16	replace
970	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.trim();  }  else  {  String  sourceFile  =  sourceFile.trim();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.trim();  }  else  {  String  sourceFile  =  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.trim();  }  else  {  String  sourceFile  =  sourceFile.trim();  }	  return    sourceFile.trim();    String    sourceFile    =    sourceFile.trim();    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	25	None	replace
971	[BUG]  [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile.trim();  String  sourceFile  =  sourceFile.trim();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile.trim();  String  sourceFile  =  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile  ==  null)  {  return  sourceFile.trim();  String  sourceFile  =  sourceFile.trim();  }	  return    sourceFile.trim();    String    sourceFile    =    sourceFile.trim();    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	25	None	replace
972	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.trim();  }  else  {  String  sourceFile  =  sourceFile.trim();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.trim();  }  else  {  String  sourceFile  =  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.trim();  }  else  {  String  sourceFile  =  sourceFile.trim();  }	  return    sourceFile.trim();    String    sourceFile    =    sourceFile.trim();    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	25	None	replace
973	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	46	16	replace
974	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	46	16	replace
975	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	46	16	replace
976	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	46	16	replace
977	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  cannot  find  symbol  originalName  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol  originalName	46	None	replace
978	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
979	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  5);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.substring(0,  sourceFile.length()  -  5);	  return    sourceFile.substring(0,    sourceFile.length();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	10	17	replace
980	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  5);  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  5);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length()  -  5);	  return    sourceFile.substring(0,    sourceFile.length();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	10	17	replace
981	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2;  [CE]  ')'  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length()  -  2;	  return    sourceFile.substring(0,    sourceFile.length();    	non-compiled	[CE]  ')'  expected	10	None	replace
982	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    SourceFile    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	116	None	replace
983	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }  else  {  ComparisonFailure:  sourceFile;  }  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }  else  {  ComparisonFailure:  sourceFile;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }  else  {  ComparisonFailure:  sourceFile;  }	  return    sourceFile.toString();    junit.framework.ComparisonFailure:    sourceFile;    	non-compiled	[CE]  not  a  statement	106	None	replace
984	[BUG]  [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toString();  }  else  {  ComparisonFailure:  sourceFile;  }  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toString();  }  else  {  ComparisonFailure:  sourceFile;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.isEmpty())  {  return  sourceFile.toString();  }  else  {  ComparisonFailure:  sourceFile;  }	  return    sourceFile.toString();    junit.framework.ComparisonFailure:    sourceFile;    	non-compiled	[CE]  not  a  statement	106	None	replace
985	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toString();  }  else  {  ComparisonFailure:  sourceFile;  }  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toString();  }  else  {  ComparisonFailure:  sourceFile;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.toString();  }  else  {  ComparisonFailure:  sourceFile;  }	  return    sourceFile.toString();    junit.framework.ComparisonFailure:    sourceFile;    	non-compiled	[CE]  not  a  statement	106	None	replace
986	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.toString();  junit.framework.ComparisonFailure:  sourceFile;  [CE]  not  a  statement  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.toString();  junit.framework.ComparisonFailure:  sourceFile;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.toString();  junit.framework.ComparisonFailure:  sourceFile;	  return    sourceFile.toString();    junit.framework.ComparisonFailure:    sourceFile;    	non-compiled	[CE]  not  a  statement	106	None	replace
987	[BUG]  [BUGGY]  Return  sourceFile.substring(0,  sourceFile.length());  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  Return  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	Return  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    +    3);    	non-compiled	[CE]  ';'  expected	43	None	replace
988	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
989	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(originalName);  if(sourceFile!=  null)  {  return  sourceFile  [CE]  ';'  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(originalName);  if(sourceFile!=  null)  {  return  sourceFile  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(originalName);  if(sourceFile!=  null)  {  return  sourceFile	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	non-compiled	[CE]  ';'  expected	134	None	replace
990	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(originalName);  if(sourceFile!=  null)  {  return  sourceFile.substring(  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(originalName);  if(sourceFile!=  null)  {  return  sourceFile.substring(  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(originalName);  if(sourceFile!=  null)  {  return  sourceFile.substring(	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
991	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  sourceLocation);  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  sourceLocation);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  sourceLocation);	          junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile);    	non-compiled	[CE]  not  a  statement	140	None	replace
992	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  sourceFile);  [CE]  not  a  statement  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  sourceFile);	          junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile);    	non-compiled	[CE]  not  a  statement	140	None	replace
993	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  prefixMappings);  [CE]  not  a  statement  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  prefixMappings);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  prefixMappings);	          junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile);    	non-compiled	[CE]  not  a  statement	140	None	replace
994	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  4);  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  4);  return  sourceFile.substring(0,  sourceFile.length()  -  4);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  4);  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  4);  return  sourceFile.substring(0,  sourceFile.length()  -  4);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    4);    if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  4);  return  sourceFile.substring(0,  sourceFile.length()  -  4);  }	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	66	None	add
995	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  4);  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  4);  [CE]  unreachable  statement  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  4);  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  4);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    4);    sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  4);	  	non-compiled	[CE]  unreachable  statement	66	None	add
996	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  4);  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  4);  if(sourceFile!=  null)  {  return  sourceFile;  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  4);  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  4);  if(sourceFile!=  null)  {  return  sourceFile;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    4);    if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  4);  if(sourceFile!=  null)  {  return  sourceFile;  }	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
997	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()).trim();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length()).trim();	          String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	18	16	replace
998	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()).trim();  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()).trim();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()).trim();	          String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	18	16	replace
999	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.toString();    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
1000	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.toString();    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
1001	[BUG]  [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile.toString();  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile.toString();  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile  ==  null)  {  return  sourceFile.toString();  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.toString();    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
1002	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  if(sourceFile!=  null)  {  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  if(sourceFile!=  null)  {  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  if(sourceFile!=  null)  {  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.toString();    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
1003	[BUG]  [BUGGY]  String  originalName  =  prefixMappings.get(sourceFile.toLowerCase());  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  prefixMappings.get(sourceFile.toLowerCase());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  prefixMappings.get(sourceFile.toLowerCase());	          String    originalName    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	24	None	replace
1004	[BUG]  [BUGGY]  String  originalName  =  prefixMappings.get(sourceFile,  sourceFile.length());  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  prefixMappings.get(sourceFile,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  prefixMappings.get(sourceFile,  sourceFile.length());	          String    originalName    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	24	None	replace
1005	[BUG]  [BUGGY]  String  originalName  =  prefixMappings.get(sourceFile,  mapping.prefix);  [CE]  cannot  find  symbol  mapping  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  prefixMappings.get(sourceFile,  mapping.prefix);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  prefixMappings.get(sourceFile,  mapping.prefix);	          String    originalName    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol  mapping	24	None	replace
1006	[BUG]  [BUGGY]  String  originalName  =  prefixMappings.get(sourceFile,  sourceFile);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  prefixMappings.get(sourceFile,  sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  prefixMappings.get(sourceFile,  sourceFile);	          String    originalName    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	24	None	replace
1007	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(1);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                  ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(1);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(1);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);  }	  return    sourceFile.substring(1);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	6	None	replace
1008	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(1);  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [CE]  unreachable  statement  [FE]                    ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(1);  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(1);  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);  }	  return    sourceFile.substring(1);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	non-compiled	[CE]  unreachable  statement	6	None	replace
1009	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.trim();  originalName  =  sourceFile.trim();  }  [CE]  cannot  find  symbol  originalName  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.trim();  originalName  =  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.trim();  originalName  =  sourceFile.trim();  }	  return    sourceFile.trim();    String    originalName    =    sourceFile.trim();    	non-compiled	[CE]  cannot  find  symbol  originalName	26	None	replace
1010	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  else  {  String  originalName  =  sourceFile.trim();  }  [CE]  cannot  find  symbol  mapping  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  else  {  String  originalName  =  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  else  {  String  originalName  =  sourceFile.trim();  }	  return    sourceFile.trim();    String    originalName    =    sourceFile.trim();    	non-compiled	[CE]  cannot  find  symbol  mapping	26	None	replace
1011	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  1;  junit.framework.ComparisonFailure:  null;  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  1;  junit.framework.ComparisonFailure:  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length())+    1;    junit.framework.ComparisonFailure:  null;	  	non-compiled	[CE]  not  a  statement	141	None	add
1012	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  1;  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  return  sourceFile.substring(0,  sourceFile.length())+  1;  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  1;  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  return  sourceFile.substring(0,  sourceFile.length())+  1;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length())+    1;    String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  return  sourceFile.substring(0,  sourceFile.length())+  1;	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	141	None	add
1013	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  1;  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  1;  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length())+    1;    String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	141	None	add
1014	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  1;  junit.framework.ComparisonFailure:  sourceFile.substring(0,  sourceFile.length())+  1;  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  1;  junit.framework.ComparisonFailure:  sourceFile.substring(0,  sourceFile.length())+  1;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length())+    1;    junit.framework.ComparisonFailure:  sourceFile.substring(0,  sourceFile.length())+  1;	  	non-compiled	[CE]  not  a  statement	141	None	add
1015	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  1;  if(sourceFile!=  null)  {  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);  if(  generator!=  null)  {  return  generator.toString();  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  1;  if(sourceFile!=  null)  {  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);  if(  generator!=  null)  {  return  generator.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length())+    1;    if(sourceFile!=  null)  {  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);  if(  generator!=  null)  {  return  generator.toString();  }	  	non-compiled	[CE]  illegal  start  of  expression	141	None	add
1016	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
1017	[BUG]  [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):     "   ";  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):   "   ";  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):     "   ";  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):   "   ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):       "   ";    sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):   "   ";	  	non-compiled	[CE]  not  a  statement	151	None	add
1018	[BUG]  [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):     "   ";  if(sourceFile!=  null)  {  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):   "   ";  }  [CE]  unreachable  statement  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):     "   ";  if(sourceFile!=  null)  {  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):   "   ";  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):       "   ";    if(sourceFile!=  null)  {  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):   "   ";  }	  	non-compiled	[CE]  unreachable  statement	151	None	add
1019	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.trim();  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [CE]  cannot  find  symbol  originalName  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.trim();  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.trim();  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  return    sourceFile.trim();    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  cannot  find  symbol  originalName	32	None	replace
1020	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.trim();  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  }  [CE]  unreachable  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.trim();  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.trim();  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.trim();    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  unreachable  statement	32	None	replace
1021	[BUG]  [BUGGY]  return  sourceFile.trim()  +  PrefixMappings.size();  [CE]  cannot  find  symbol  PrefixMappings  [FE]        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim()  +  PrefixMappings.size();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.trim()  +  PrefixMappings.size();	  return    sourceFile.trim()    +    suffixMappings.size();    	non-compiled	[CE]  cannot  find  symbol  PrefixMappings	107	None	replace
1022	[BUG]  [BUGGY]  return  sourceFile.trim()  +  fixupSourceLocationMappings.size();  [CE]  cannot  find  symbol  fixupSourceLocationMappings  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim()  +  fixupSourceLocationMappings.size();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.trim()  +  fixupSourceLocationMappings.size();	  return    sourceFile.trim()    +    suffixMappings.size();    	non-compiled	[CE]  cannot  find  symbol  fixupSourceLocationMappings	107	None	replace
1023	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(1);  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(originalName);  [CE]  incompatible  types  [FE]        ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(1);  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(originalName);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(1);  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(originalName);	  return    sourceFile.substring(1);    SourceMapGenerator    generator    =    sourceLocationFixupCache.get(sourceFile);    	non-compiled	[CE]  incompatible  types	123	None	replace
1024	[BUG]  [BUGGY]  sourceFile  =  sourceFile.substring(1);  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  sourceFile.substring(1);  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile  =  sourceFile.substring(1);  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);	  return    sourceFile.substring(1);    SourceMapGenerator    generator    =    sourceLocationFixupCache.get(sourceFile);    	non-compiled	[CE]  incompatible  types	123	None	replace
1025	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(originalName);  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(originalName);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(originalName);	  return    sourceFile.substring(1);    SourceMapGenerator    generator    =    sourceLocationFixupCache.get(sourceFile);    	non-compiled	[CE]  incompatible  types	123	None	replace
1026	[BUG]  [BUGGY]  return  prefixMappings.toLowerCase();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  prefixMappings.toLowerCase();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  prefixMappings.toLowerCase();	  return    sourceFile.toLowerCase();    Collection    <    String>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
1027	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  Collection  <  String>  sourceFile  =  prefixMappings.get(originalName);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  Collection  <  String>  sourceFile  =  prefixMappings.get(originalName);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.toLowerCase();  Collection  <  String>  sourceFile  =  prefixMappings.get(originalName);	  return    sourceFile.toLowerCase();    Collection    <    String>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
1028	[BUG]  [BUGGY]  Return  sourceFile.toLowerCase();  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  Return  sourceFile.toLowerCase();  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	Return  sourceFile.toLowerCase();  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);	  return    sourceFile.toLowerCase();    Collection    <    String>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  ';'  expected	83	None	replace
1029	[BUG]  [BUGGY]  return  sourceFile  ==  null?  null  :  sourceFile.toString();  String  sourceFile  ==  null?  null  :  sourceFile.toString();  [CE]  ';'  expected  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile  ==  null?  null  :  sourceFile.toString();  String  sourceFile  ==  null?  null  :  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile    ==    null?    null    :    sourceFile.toString();    String  sourceFile  ==  null?  null  :  sourceFile.toString();	  	non-compiled	[CE]  ';'  expected	162	None	add
1030	[BUG]  [BUGGY]  return  sourceFile  ==  null?  null  :  sourceFile.toString();  junit.framework.ComparisonFailure:  null;  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile  ==  null?  null  :  sourceFile.toString();  junit.framework.ComparisonFailure:  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile    ==    null?    null    :    sourceFile.toString();    junit.framework.ComparisonFailure:  null;	  	non-compiled	[CE]  not  a  statement	162	None	add
1031	[BUG]  [BUGGY]  return  sourceFile  ==  null?  null  :  sourceFile.toString();  Object  sourceFile  ==  null?  null  :  sourceFile.toString();  [CE]  ';'  expected  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile  ==  null?  null  :  sourceFile.toString();  Object  sourceFile  ==  null?  null  :  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile    ==    null?    null    :    sourceFile.toString();    Object  sourceFile  ==  null?  null  :  sourceFile.toString();	  	non-compiled	[CE]  ';'  expected	162	None	add
1032	[BUG]  [BUGGY]  return  sourceFile  ==  null?  null  :  sourceFile.toString();  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  cannot  find  symbol  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile  ==  null?  null  :  sourceFile.toString();  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile    ==    null?    null    :    sourceFile.toString();    Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);	  	non-compiled	[CE]  cannot  find  symbol	162	None	add
1033	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toString();  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toString();  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.toString();  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.toString();    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	89	None	replace
1034	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.toString();    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	89	None	replace
1035	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.toString();    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	89	None	replace
1036	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toString();  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toString();  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.toString();  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.toString();    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	89	None	replace
1037	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  unreachable  statement  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.toString();    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  unreachable  statement	89	None	replace
1038	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  mipping.prefix);  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  mipping.prefix);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  mipping.prefix);	          junit.framework.ComparisonFailure:    new    ComparisonFailure(mapping.prefix,    sourceFile);    	non-compiled	[CE]  not  a  statement	136	None	replace
1039	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
1040	[BUG]  [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile  ==  null)  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
1041	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
1042	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toString();  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName;  }  [CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String    originalName    =    sourceFile.toString();    String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName;  }	  	non-compiled	[CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)	98	None	add
1043	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toString();  String  originalName  =  sourceFile.toString();  junit.framework.ComparisonFailure  =  null;  [CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  String  originalName  =  sourceFile.toString();  junit.framework.ComparisonFailure  =  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String    originalName    =    sourceFile.toString();    String  originalName  =  sourceFile.toString();  junit.framework.ComparisonFailure  =  null;	  	non-compiled	[CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)	98	None	add
1044	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toString();  String  originalName  =  sourceFile.toString();  junit.framework.ComparisonFailure:  null;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  String  originalName  =  sourceFile.toString();  junit.framework.ComparisonFailure:  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String    originalName    =    sourceFile.toString();    String  originalName  =  sourceFile.toString();  junit.framework.ComparisonFailure:  null;	  	non-compiled	[CE]  not  a  statement	98	None	add
1045	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toString();  String  originalName  =  sourceFile.toString();  if(originalName  ==  null)  {  return  originalName;  }  [CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)  [FE]          AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  String  originalName  =  sourceFile.toString();  if(originalName  ==  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String    originalName    =    sourceFile.toString();    String  originalName  =  sourceFile.toString();  if(originalName  ==  null)  {  return  originalName;  }	  	non-compiled	[CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)	98	None	add
1046	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toString();  String  originalName  =  sourceFile.toString();  initialName  =  sourceFile.toString();  [CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)  [FE]            AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  String  originalName  =  sourceFile.toString();  initialName  =  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String    originalName    =    sourceFile.toString();    String  originalName  =  sourceFile.toString();  initialName  =  sourceFile.toString();	  	non-compiled	[CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)	98	None	add
1047	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(originalName);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  [CE]  ')'  expected  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(originalName);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(originalName);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  ')'  expected	131	None	replace
1048	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(originalName);  if(sourceFile!=  null)  {  return  sourceFile.substring(  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(originalName);  if(sourceFile!=  null)  {  return  sourceFile.substring(  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(originalName);  if(sourceFile!=  null)  {  return  sourceFile.substring(	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
1049	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(originalName);  if(sourceFile!=  null)  {  return  sourceFile  [CE]  ';'  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(originalName);  if(sourceFile!=  null)  {  return  sourceFile  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(originalName);  if(sourceFile!=  null)  {  return  sourceFile	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  ';'  expected	131	None	replace
1050	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
1051	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
1052	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
1053	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  ';'  expected	114	None	replace
1054	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
1055	[BUG]  [BUGGY]  sourceFile  =  prefixMappings.get(sourceFile,  sourceFile);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  prefixMappings.get(sourceFile,  sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile  =  prefixMappings.get(sourceFile,  sourceFile);	  sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	108	None	replace
1056	[BUG]  [BUGGY]  sourceFile  =  prefixMappings.get(sourceFile,  mapping.prefix);  [CE]  cannot  find  symbol  mapping  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  prefixMappings.get(sourceFile,  mapping.prefix);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile  =  prefixMappings.get(sourceFile,  mapping.prefix);	  sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol  mapping	108	None	replace
1057	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
1058	[BUG]  [BUGGY]  return  sourceFile.toString()  +   "n   ";  junit.framework.ComparisonFailure  =  sourceFile.toString()  +   "n ";  [CE]  package  junit  does  not  exist  [FE]    ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  +   "n   ";  junit.framework.ComparisonFailure  =  sourceFile.toString()  +   "n ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toString()    +   "n   ";    junit.framework.ComparisonFailure  =  sourceFile.toString()  +   "n ";	  	non-compiled	[CE]  package  junit  does  not  exist	100	None	add
1059	[BUG]  [BUGGY]  return  sourceFile.toString()  +   "n   ";  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]      ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  +   "n   ";  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toString()    +   "n   ";    SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	100	None	add
1060	[BUG]  [BUGGY]  PrefixMapping  mapping  =  sourceFileMappings.get(prefixMapping);  [CE]  cannot  find  symbol  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  PrefixMapping  mapping  =  sourceFileMappings.get(prefixMapping);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	PrefixMapping  mapping  =  sourceFileMappings.get(prefixMapping);	  PrefixMapping    mapping    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
1061	[BUG]  [BUGGY]  PrefixMapping  mapping  =  junit.prefixMappings.get(sourceFile);  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  PrefixMapping  mapping  =  junit.prefixMappings.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	PrefixMapping  mapping  =  junit.prefixMappings.get(sourceFile);	  PrefixMapping    mapping    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
1062	[BUG]  [BUGGY]  PrefixMapping  mapping  =  prefixMappings.get(mapping.name);  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  PrefixMapping  mapping  =  prefixMappings.get(mapping.name);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	PrefixMapping  mapping  =  prefixMappings.get(mapping.name);	  PrefixMapping    mapping    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
1063	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  AssertionFailedError  	58	16	replace
1064	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [FE]  AssertionFailedError  [FE]                    ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  AssertionFailedError  	58	16	replace
1065	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.trim();  if(originalName.equals( "* "))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.trim();  if(originalName.equals( "* "))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile.trim().equals(   "   "))    {    return    sourceFile.trim();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	28	16	replace
1066	[BUG]  [BUGGY]  String  originalName  =  sourceFile.trim();  if(originalName.equals( "* "))  {  return  sourceFile.trim();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.trim();  if(originalName.equals( "* "))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.trim();  if(originalName.equals( "* "))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile.trim().equals(   "   "))    {    return    sourceFile.trim();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	28	16	replace
1067	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.trim();  if(originalName.equals( "- "))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.trim();  if(originalName.equals( "- "))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile.trim().equals(   "   "))    {    return    sourceFile.trim();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	28	16	replace
1068	[BUG]  [BUGGY]  String  originalName  =  sourceFile.trim();  if(originalName.equals( "- "))  {  return  sourceFile.trim();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.trim();  if(originalName.equals( "- "))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.trim();  if(originalName.equals( "- "))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile.trim().equals(   "   "))    {    return    sourceFile.trim();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	28	16	replace
1069	[BUG]  [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):    null;    sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;	  	non-compiled	[CE]  not  a  statement	149	None	add
1070	[BUG]  [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):    null;    sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1):  null;	  	non-compiled	[CE]  ';'  expected	149	None	add
1071	[BUG]  [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):    null;    SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1):  null;	  	non-compiled	[CE]  ';'  expected	149	None	add
1072	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  junit.framework.ComparisonFailure:  null;  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  junit.framework.ComparisonFailure:  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length());    junit.framework.ComparisonFailure:  null;	  	non-compiled	[CE]  not  a  statement	8	None	add
1073	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile;  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length());    if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile;  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
1074	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length());    SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length());	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	8	None	add
1075	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile  ==  null)  {  return  sourceFile;  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile  ==  null)  {  return  sourceFile;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length());    if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile  ==  null)  {  return  sourceFile;  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
1076	[BUG]  [BUGGY]  String  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    if(sourceFile!=    null)    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	128	None	replace
1077	[BUG]  [BUGGY]  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile  ==  null)  {  return  sourceFile.toLowerCase();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile  ==  null)  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile  ==  null)  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    if(sourceFile!=    null)    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	128	None	replace
1078	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	164	16	replace
1079	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	164	16	replace
1080	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	164	16	replace
1081	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	164	16	replace
1082	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  if(originalName.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  mapping  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  if(originalName.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.toLowerCase();  if(originalName.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix))    {    String    sourceFile    =    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  cannot  find  symbol  mapping	82	None	replace
1083	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  if(originalName.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase()  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  if(originalName.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase()  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.toLowerCase();  if(originalName.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase()	  return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix))    {    String    sourceFile    =    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  ';'  expected	82	None	replace
1084	[BUG]  [BUGGY]  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCa  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCa  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile  =  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCa	  return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix))    {    String    sourceFile    =    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  ';'  expected	82	None	replace
1085	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  return  originalName.trim();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  return  originalName.trim();	  return    sourceFile.trim();    return    sourceFile.trim();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	174	16	replace
1086	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  return  originalName.trim();  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  return  originalName.trim();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  return  originalName.trim();	  return    sourceFile.trim();    return    sourceFile.trim();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	174	16	replace
1087	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile  ==  null)  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    return    sourceFile.trim();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	174	16	replace
1088	[BUG]  [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile.trim();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile  ==  null)  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    return    sourceFile.trim();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	174	16	replace
1089	[BUG]  [BUGGY]  result  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  cannot  find  symbol  result  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  result  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	result  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  cannot  find  symbol  result	73	None	replace
1090	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  cannot  find  symbol  mapping  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  cannot  find  symbol  mapping	73	None	replace
1091	[BUG]  [BUGGY]  file  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.startsWith(mapping.prefix))  {  return  file.substring(0,  sourceFile.length());  }  [CE]  cannot  find  symbol  file  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  file  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.startsWith(mapping.prefix))  {  return  file.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	file  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.startsWith(mapping.prefix))  {  return  file.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  cannot  find  symbol  file	73	None	replace
1092	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  6);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.substring(0,  sourceFile.length()  -  6);	  return    sourceFile.substring(0,    sourceFile.length());    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	9	17	replace
1093	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  6);  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  6);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length()  -  6);	  return    sourceFile.substring(0,    sourceFile.length());    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	9	17	replace
1094	[BUG]  [BUGGY]  return  sourceFile  ==  null  ||  sourceFile.toString().length()  ==  0;  [CE]  incompatible  types  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile  ==  null  ||  sourceFile.toString().length()  ==  0;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile  ==  null  ||  sourceFile.toString().length()  ==  0;	  return    sourceFile    ==    null?    null    :    sourceFile.toString();    	non-compiled	[CE]  incompatible  types	163	None	replace
1095	[BUG]  [BUGGY]  return  sourceFile  ==  null  ||  sourceFile.toString().length()!=  0;  [CE]  incompatible  types  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile  ==  null  ||  sourceFile.toString().length()!=  0;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile  ==  null  ||  sourceFile.toString().length()!=  0;	  return    sourceFile    ==    null?    null    :    sourceFile.toString();    	non-compiled	[CE]  incompatible  types	163	None	replace
1096	[BUG]  [BUGGY]  result  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  cannot  find  symbol  result  [FE]        ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  result  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	result  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    3);    }    	non-compiled	[CE]  cannot  find  symbol  result	143	None	replace
1097	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.trim();  if(sourceFile.trim().equals(mapping.originalName))  {  return  sourceFile.trim();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.trim();  if(sourceFile.trim().equals(mapping.originalName))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.trim();  if(sourceFile.trim().equals(mapping.originalName))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile.trim().equals(mapping.prefix))    {    return    sourceFile.trim();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	30	None	replace
1098	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.trim();  if(sourceFile.trim().equals(mapping.url))  {  return  sourceFile.trim();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.trim();  if(sourceFile.trim().equals(mapping.url))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.trim();  if(sourceFile.trim().equals(mapping.url))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile.trim().equals(mapping.prefix))    {    return    sourceFile.trim();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	30	None	replace
1099	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  Collection  <  String>  sourceFile  =  prefixMappings.get(originalName);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  Collection  <  String>  sourceFile  =  prefixMappings.get(originalName);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  Collection  <  String>  sourceFile  =  prefixMappings.get(originalName);	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    Collection    <    String>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
1100	[BUG]  [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  String  originalName  =  sourceFile.substring(0,  sourceFile.length())  -  3;  [CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  String  originalName  =  sourceFile.substring(0,  sourceFile.length())  -  3;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    String  originalName  =  sourceFile.substring(0,  sourceFile.length())  -  3;	  	non-compiled	[CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)	21	None	add
1101	[BUG]  [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  4);  [CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  4);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  4);	  	non-compiled	[CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)	21	None	add
1102	[BUG]  [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  3);  [CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  3);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  3);	  	non-compiled	[CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)	21	None	add
1103	[BUG]  [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	21	None	add
1104	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	156	16	replace
1105	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	156	16	replace
1106	[BUG]  [BUGGY]  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
1107	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
1108	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
1109	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparisonFailure:  sourceFile;  }  [CE]  not  a  statement  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparisonFailure:  sourceFile;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparisonFailure:  sourceFile;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    junit.framework.ComparisonFailure:    sourceFile;    	non-compiled	[CE]  not  a  statement	120	None	replace
1110	[BUG]  [BUGGY]  return  sourceFile.toUpperCase();  junit.framework.ComparisonFailure:  sourceFile.toUpperCase();  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toUpperCase();  junit.framework.ComparisonFailure:  sourceFile.toUpperCase();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toUpperCase();    junit.framework.ComparisonFailure:  sourceFile.toUpperCase();	  	non-compiled	[CE]  not  a  statement	35	None	add
1111	[BUG]  [BUGGY]  return  sourceFile.toUpperCase();  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.toUpperCase();  if(sourceFile!=  null)  {  return  sourceFile.toUpperCase();  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toUpperCase();  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.toUpperCase();  if(sourceFile!=  null)  {  return  sourceFile.toUpperCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toUpperCase();    if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.toUpperCase();  if(sourceFile!=  null)  {  return  sourceFile.toUpperCase();  }	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
1112	[BUG]  [BUGGY]  return  sourceFile.toUpperCase();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.toUpperCase();  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toUpperCase();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.toUpperCase();  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toUpperCase();    if(sourceFile!=  null)  {  String  originalName  =  sourceFile.toUpperCase();  if(originalName!=  null)  {  return  originalName;  }	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
1113	[BUG]  [BUGGY]  return  sourceFile.toUpperCase();  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.toUpperCase();  return  sourceFile.toUpperCase();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toUpperCase();  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.toUpperCase();  return  sourceFile.toUpperCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toUpperCase();    if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.toUpperCase();  return  sourceFile.toUpperCase();  }	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	35	None	add
1114	[BUG]  [BUGGY]  return  sourceFile.toUpperCase();  sourceFile.toUpperCase();  [CE]  unreachable  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toUpperCase();  sourceFile.toUpperCase();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toUpperCase();    sourceFile.toUpperCase();	  	non-compiled	[CE]  unreachable  statement	35	None	add
1115	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  3);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  3);  return  sourceFile.substring(0,  sourceFile.length()  +  3);  [CE]  unreachable  statement  [FE]    RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  3);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  3);  return  sourceFile.substring(0,  sourceFile.length()  +  3);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    3);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  3);  return  sourceFile.substring(0,  sourceFile.length()  +  3);	  	non-compiled	[CE]  unreachable  statement	42	None	add
1116	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  3);  sourceFile.substring(0,  sourceFile.length()  +  3);  [CE]  unreachable  statement  [FE]      RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  3);  sourceFile.substring(0,  sourceFile.length()  +  3);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    3);    sourceFile.substring(0,  sourceFile.length()  +  3);	  	non-compiled	[CE]  unreachable  statement	42	None	add
1117	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  3);  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);  [CE]  incompatible  types  [FE]        RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  3);  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    3);    SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);	  	non-compiled	[CE]  incompatible  types	42	None	add
1118	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  3);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  3);  if(originalName!=  null)  {  return  originalName;  }  [CE]  unreachable  statement  [FE]          RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  3);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  3);  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    3);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  3);  if(originalName!=  null)  {  return  originalName;  }	  	non-compiled	[CE]  unreachable  statement	42	None	add
1119	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  + "/null ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.toString()  + "/null ";	  return    sourceFile.toString()    +   "n   ";    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	101	16	replace
1120	[BUG]  [BUGGY]  return  sourceFile.toString()  + "/null ";  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  + "/null ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toString()  + "/null ";	  return    sourceFile.toString()    +   "n   ";    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	101	16	replace
1121	[BUG]  [BUGGY]  return  sourceFile.trim().toLowerCase();  junit.framework.ComparisonFailure:  sourceFile.trim().toLowerCase();  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim().toLowerCase();  junit.framework.ComparisonFailure:  sourceFile.trim().toLowerCase();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.trim().toLowerCase();    junit.framework.ComparisonFailure:  sourceFile.trim().toLowerCase();	  	non-compiled	[CE]  not  a  statement	33	None	add
1122	[BUG]  [BUGGY]  return  sourceFile.trim().toLowerCase();  sourceFile.trim().toLowerCase();  [CE]  unreachable  statement  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim().toLowerCase();  sourceFile.trim().toLowerCase();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.trim().toLowerCase();    sourceFile.trim().toLowerCase();	  	non-compiled	[CE]  unreachable  statement	33	None	add
1123	[BUG]  [BUGGY]  return  sourceFile.trim().toLowerCase();  if(sourceFile.trim().toLowerCase()!=  null)  {  String  originalName  =  sourceFile.trim().toLowerCase();  junit.framework.ComparisonFailure:  null;  }  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim().toLowerCase();  if(sourceFile.trim().toLowerCase()!=  null)  {  String  originalName  =  sourceFile.trim().toLowerCase();  junit.framework.ComparisonFailure:  null;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.trim().toLowerCase();    if(sourceFile.trim().toLowerCase()!=  null)  {  String  originalName  =  sourceFile.trim().toLowerCase();  junit.framework.ComparisonFailure:  null;  }	  	non-compiled	[CE]  not  a  statement	33	None	add
1124	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  1);  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  1);  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  1);  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  1);  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    1);    if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  1);  if(originalName!=  null)  {  return  originalName;  }	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
1125	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  1);  sourceFile.substring(0,  sourceFile.length()  +  1);  [CE]  unreachable  statement  [FE]      RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  1);  sourceFile.substring(0,  sourceFile.length()  +  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    1);    sourceFile.substring(0,  sourceFile.length()  +  1);	  	non-compiled	[CE]  unreachable  statement	62	None	add
1126	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.endsWith(   ".java   "))    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	155	16	replace
1127	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.endsWith(   ".java   "))    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	155	16	replace
1128	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.endsWith(   ".java   "))    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	155	16	replace
1129	[BUG]  [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.endsWith(   ".java   "))    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	155	16	replace
1130	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	157	16	replace
1131	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	157	16	replace
1132	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  AssertionFailedError  	157	16	replace
1133	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }  [FE]  AssertionFailedError  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  AssertionFailedError  	157	16	replace
1134	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	157	16	replace
1135	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	157	16	replace
1136	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  ComparisonFailure  	157	16	replace
1137	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [FE]  ComparisonFailure  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  ComparisonFailure  	157	16	replace
1138	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	157	16	replace
1139	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	157	16	replace
1140	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  String  sourceFile  =  sourceFile.toString();  if(sourceFile!=  null)  {  return  sourceFile.toString();  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  String  sourceFile  =  sourceFile.toString();  if(sourceFile!=  null)  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  String  sourceFile  =  sourceFile.toString();  if(sourceFile!=  null)  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    String    sourceFile    =    sourceFile.toString();    if(sourceFile!=    null)    {    return    sourceFile.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
1141	[BUG]  [BUGGY]  if(sourceFile  ==  null)  {  String  sourceFile  =  sourceFile.toString();  if(sourceFile!=  null)  {  return  sourceFile.toString();  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile  ==  null)  {  String  sourceFile  =  sourceFile.toString();  if(sourceFile!=  null)  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile  ==  null)  {  String  sourceFile  =  sourceFile.toString();  if(sourceFile!=  null)  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    String    sourceFile    =    sourceFile.toString();    if(sourceFile!=    null)    {    return    sourceFile.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
1142	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  String  sourceFile  =  sourceFile.toString();  if(sourceFile!=  null)  {  return  sourceFile.toString()  [CE]  ';'  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  String  sourceFile  =  sourceFile.toString();  if(sourceFile!=  null)  {  return  sourceFile.toString()  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  String  sourceFile  =  sourceFile.toString();  if(sourceFile!=  null)  {  return  sourceFile.toString()	  return    sourceFile.toString();    if(sourceFile!=    null)    {    String    sourceFile    =    sourceFile.toString();    if(sourceFile!=    null)    {    return    sourceFile.toString();    }    	non-compiled	[CE]  ';'  expected	104	None	replace
1143	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName.toString();  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName.toString();  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    String    sourceFile    =    sourceFile.toString();    if(sourceFile!=    null)    {    return    sourceFile.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
1144	[BUG]  [BUGGY]  result  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  cannot  find  symbol  result  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  result  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	result  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	non-compiled	[CE]  cannot  find  symbol  result	50	None	replace
1145	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  cannot  find  symbol  mapping  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	non-compiled	[CE]  cannot  find  symbol  mapping	50	None	replace
1146	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()).trim();  sourceFile.substring(0,  sourceFile.length()).trim();  [CE]  unreachable  statement  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()).trim();  sourceFile.substring(0,  sourceFile.length()).trim();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()).trim();    sourceFile.substring(0,  sourceFile.length()).trim();	  	non-compiled	[CE]  unreachable  statement	121	None	add
1147	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()).trim();  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()).trim();  }  [CE]  unreachable  statement  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()).trim();  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()).trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()).trim();    if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()).trim();  }	  	non-compiled	[CE]  unreachable  statement	121	None	add
1148	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()).trim();  sourceFile  =  sourceFile.substring(0,  sourceFile.length()).trim();  [CE]  unreachable  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()).trim();  sourceFile  =  sourceFile.substring(0,  sourceFile.length()).trim();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()).trim();    sourceFile  =  sourceFile.substring(0,  sourceFile.length()).trim();	  	non-compiled	[CE]  unreachable  statement	121	None	add
1149	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()).trim();  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()).trim();  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()).trim();    String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	121	None	add
1150	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()).trim();  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  return  sourceFile.substring(0,  sourceFile.length()).trim();  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()).trim();  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  return  sourceFile.substring(0,  sourceFile.length()).trim();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()).trim();    String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  return  sourceFile.substring(0,  sourceFile.length()).trim();	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	121	None	add
1151	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  ';'  expected	112	None	replace
1152	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
1153	[BUG]  [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.endsWith( ".java "))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
1154	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	44	None	replace
1155	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	44	None	replace
1156	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	44	16	replace
1157	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	44	16	replace
1158	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [CE]  unreachable  statement  [FE]        ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	non-compiled	[CE]  unreachable  statement	92	None	replace
1159	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	92	16	replace
1160	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	92	16	replace
1161	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  String  sourceFile  =  prefixMappings.get(sourceFile);  }  [CE]  cannot  find  symbol  mapping  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  String  sourceFile  =  prefixMappings.get(sourceFile);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  String  sourceFile  =  prefixMappings.get(sourceFile);  }	  return    sourceFile.trim();    String    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol  mapping	31	None	replace
1162	[BUG]  [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile.trim();  String  sourceFile  =  prefixMappings.get(sourceFile);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile.trim();  String  sourceFile  =  prefixMappings.get(sourceFile);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile  ==  null)  {  return  sourceFile.trim();  String  sourceFile  =  prefixMappings.get(sourceFile);  }	  return    sourceFile.trim();    String    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	31	None	replace
1163	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.trim();  }  else  {  String  sourceFile  =  prefixMappings.get(sourceFile);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.trim();  }  else  {  String  sourceFile  =  prefixMappings.get(sourceFile);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.trim();  }  else  {  String  sourceFile  =  prefixMappings.get(sourceFile);  }	  return    sourceFile.trim();    String    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	31	None	replace
1164	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  else  {  String  sourceFile  =  prefixMappings.get(sourceFile);  }  [CE]  cannot  find  symbol  mapping  [FE]                          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  else  {  String  sourceFile  =  prefixMappings.get(sourceFile);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  else  {  String  sourceFile  =  prefixMappings.get(sourceFile);  }	  return    sourceFile.trim();    String    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol  mapping	31	None	replace
1165	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);  if(generator!=  null)  {  return  generator.toString();  }  [CE]  incompatible  types  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);  if(generator!=  null)  {  return  generator.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);  if(generator!=  null)  {  return  generator.toString();  }	  return    sourceFile.toString();    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.toString();    }    	non-compiled	[CE]  incompatible  types	87	None	replace
1166	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  2);  sourceFile.substring(0,  sourceFile.length()  +  2);  [CE]  unreachable  statement  [FE]    RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  2);  sourceFile.substring(0,  sourceFile.length()  +  2);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    2);    sourceFile.substring(0,  sourceFile.length()  +  2);	  	non-compiled	[CE]  unreachable  statement	13	None	add
1167	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  2);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  2);  return  sourceFile.substring(0,  sourceFile.length()  +  2);  [CE]  unreachable  statement  [FE]      RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  2);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  2);  return  sourceFile.substring(0,  sourceFile.length()  +  2);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    2);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  2);  return  sourceFile.substring(0,  sourceFile.length()  +  2);	  	non-compiled	[CE]  unreachable  statement	13	None	add
1168	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  2);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  2);  if(originalName!=  null)  {  return  originalName;  }  [CE]  unreachable  statement  [FE]        RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  2);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  2);  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    2);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  +  2);  if(originalName!=  null)  {  return  originalName;  }	  	non-compiled	[CE]  unreachable  statement	13	None	add
1169	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  2);  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  +  2);  }  [CE]  unreachable  statement  [FE]          RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  2);  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  +  2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    2);    if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  +  2);  }	  	non-compiled	[CE]  unreachable  statement	13	None	add
1170	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    return    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  ComparisonFailure  	54	16	replace
1171	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    return    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  ComparisonFailure  	54	16	replace
1172	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	118	16	replace
1173	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	118	16	replace
1174	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	118	16	replace
1175	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	118	16	replace
1176	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFile(sourceFile);  [CE]  not  a  statement  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFile(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFile(sourceFile);	          junit.framework.ComparisonFailure:    sourceFile;    	non-compiled	[CE]  not  a  statement	23	None	replace
1177	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  sourceFile  + "n ";  [CE]  not  a  statement  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  junit.framework.ComparisonFailure:  sourceFile  + "n ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	junit.framework.ComparisonFailure:  sourceFile  + "n ";	          junit.framework.ComparisonFailure:    sourceFile;    	non-compiled	[CE]  not  a  statement	23	None	replace
1178	[BUG]  [BUGGY]  junit.framework.ComparisonFile:  sourceFile;  [CE]  not  a  statement  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  junit.framework.ComparisonFile:  sourceFile;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	junit.framework.ComparisonFile:  sourceFile;	          junit.framework.ComparisonFailure:    sourceFile;    	non-compiled	[CE]  not  a  statement	23	None	replace
1179	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  sourceFile  + "_ "  +  sourceFile;  [CE]  not  a  statement  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  junit.framework.ComparisonFailure:  sourceFile  + "_ "  +  sourceFile;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	junit.framework.ComparisonFailure:  sourceFile  + "_ "  +  sourceFile;	          junit.framework.ComparisonFailure:    sourceFile;    	non-compiled	[CE]  not  a  statement	23	None	replace
1180	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  sourceFile  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  junit.framework.ComparisonFailure:  sourceFile  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	junit.framework.ComparisonFailure:  sourceFile	  junit.framework.ComparisonFailure:    null    	non-compiled	[CE]  not  a  statement	110	None	replace
1181	[BUG]  [BUGGY]  java.util.ComparisonFailure:  null  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  java.util.ComparisonFailure:  null  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	java.util.ComparisonFailure:  null	  junit.framework.ComparisonFailure:    null    	non-compiled	[CE]  not  a  statement	110	None	replace
1182	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...unt   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile!=  null?  null  :  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile  ==  null)  {  return  sourceFile!=  null?  null  :  sourceFile.toString();  }	  return    sourceFile!=    null?    null    :    sourceFile.toString();    	compilable	  [FE]  AssertionFailedError  	97	16	replace
1183	[BUG]  [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile!=  null?  null  :  sourceFile.toString();  }  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...unt   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile!=  null?  null  :  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile  ==  null)  {  return  sourceFile!=  null?  null  :  sourceFile.toString();  }	  return    sourceFile!=    null?    null    :    sourceFile.toString();    	compilable	  [FE]  AssertionFailedError  	97	16	replace
1184	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toString();  }  else  {  String  sourceFile  =  sourceFile.toString();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.toString();  }  else  {  String  sourceFile  =  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.toString();  }  else  {  String  sourceFile  =  sourceFile.toString();  }	  return    sourceFile.toString();    String    sourceFile    =    sourceFile.toString();    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	84	None	replace
1185	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  ComparisonFailure:  null  expected;  }  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  ComparisonFailure:  null  expected;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  ComparisonFailure:  null  expected;  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    junit.framework.ComparisonFailure:    null    expected;    }    	non-compiled	[CE]  not  a  statement	105	None	replace
1186	[BUG]  [BUGGY]  return  sourceFile.toString();  if(sourceFile!=  null)  {  ComparisonFailure:  null  expected;  }  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString();  if(sourceFile!=  null)  {  ComparisonFailure:  null  expected;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toString();  if(sourceFile!=  null)  {  ComparisonFailure:  null  expected;  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    junit.framework.ComparisonFailure:    null    expected;    }    	non-compiled	[CE]  not  a  statement	105	None	replace
1187	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(mapping.sourceName);  [CE]  cannot  find  symbol  mapping  [FE]        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(mapping.sourceName);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(mapping.sourceName);	  return    sourceFile.toLowerCase(mapping.prefix);    	non-compiled	[CE]  cannot  find  symbol  mapping	102	None	replace
1188	[BUG]  [BUGGY]  return  mapping.toLowerCase(sourceFile);  [CE]  cannot  find  symbol  mapping  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  mapping.toLowerCase(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  mapping.toLowerCase(sourceFile);	  return    sourceFile.toLowerCase(mapping.prefix);    	non-compiled	[CE]  cannot  find  symbol  mapping	102	None	replace
1189	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(mapping.name);  [CE]  cannot  find  symbol  mapping  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(mapping.name);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(mapping.name);	  return    sourceFile.toLowerCase(mapping.prefix);    	non-compiled	[CE]  cannot  find  symbol  mapping	102	None	replace
1190	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(mapping.localName);  [CE]  cannot  find  symbol  mapping  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(mapping.localName);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(mapping.localName);	  return    sourceFile.toLowerCase(mapping.prefix);    	non-compiled	[CE]  cannot  find  symbol  mapping	102	None	replace
1191	[BUG]  [BUGGY]  ServiceFailure  junit.framework.ComparisonFailure:  null;  [CE]  ';'  expected  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  ServiceFailure  junit.framework.ComparisonFailure:  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	ServiceFailure  junit.framework.ComparisonFailure:  null;	          junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  ';'  expected	15	None	replace
1192	[BUG]  [BUGGY]  java.util.ComparisonFailure:  null;  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  java.util.ComparisonFailure:  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	java.util.ComparisonFailure:  null;	          junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	15	None	replace
1193	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  originalName  =  sourceFile.toString();  }  [CE]  cannot  find  symbol  originalName  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  originalName  =  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  originalName  =  sourceFile.toString();  }	  return    sourceFile.toString();    String    originalName    =    sourceFile.toString();    	non-compiled	[CE]  cannot  find  symbol  originalName	160	None	replace
1194	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }  else  {  String  originalName  =  sourceFile.toString();  }  [CE]  cannot  find  symbol  mapping  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }  else  {  String  originalName  =  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }  else  {  String  originalName  =  sourceFile.toString();  }	  return    sourceFile.toString();    String    originalName    =    sourceFile.toString();    	non-compiled	[CE]  cannot  find  symbol  mapping	160	None	replace
1195	[BUG]  [BUGGY]  return  sourceFile!=  null?  null  :  sourceFile.toString();  junit.framework.ComparisonFailure:  null;  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  null  expected:<...unt   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile!=  null?  null  :  sourceFile.toString();  junit.framework.ComparisonFailure:  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile!=    null?    null    :    sourceFile.toString();    junit.framework.ComparisonFailure:  null;	  	non-compiled	[CE]  not  a  statement	96	None	add
1196	[BUG]  [BUGGY]  return  sourceFile!=  null?  null  :  sourceFile.toString();  junit.framework.ComparisonFailure:  sourceFile!=  null?  null  :  sourceFile.toString();  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  null  expected:<...unt   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile!=  null?  null  :  sourceFile.toString();  junit.framework.ComparisonFailure:  sourceFile!=  null?  null  :  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile!=    null?    null    :    sourceFile.toString();    junit.framework.ComparisonFailure:  sourceFile!=  null?  null  :  sourceFile.toString();	  	non-compiled	[CE]  not  a  statement	96	None	add
1197	[BUG]  [BUGGY]  return  sourceFile!=  null?  null  :  sourceFile.toString();  sourceFile!=  null?  null  :  sourceFile.toString();  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...unt   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile!=  null?  null  :  sourceFile.toString();  sourceFile!=  null?  null  :  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile!=    null?    null    :    sourceFile.toString();    sourceFile!=  null?  null  :  sourceFile.toString();	  	non-compiled	[CE]  not  a  statement	96	None	add
1198	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    return    sourceFile.trim();    }    	compilable	  [FE]  ComparisonFailure  	172	16	replace
1199	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName.trim();  }  [FE]  ComparisonFailure  [FE]        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    return    sourceFile.trim();    }    	compilable	  [FE]  ComparisonFailure  	172	16	replace
1200	[BUG]  [BUGGY]  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.trim();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    return    sourceFile.trim();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	172	None	replace
1201	[BUG]  [BUGGY]  java.util.ComparisonFailure:  null  expected;  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  java.util.ComparisonFailure:  null  expected;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	java.util.ComparisonFailure:  null  expected;	          junit.framework.ComparisonFailure:    null    expected;    	non-compiled	[CE]  not  a  statement	16	None	replace
1202	[BUG]  [BUGGY]  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  mapping  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile  =  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  cannot  find  symbol  mapping	80	None	replace
1203	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);  if(generator!=  null)  {  return  generator.toLowerCase();  }  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);  if(generator!=  null)  {  return  generator.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);  if(generator!=  null)  {  return  generator.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  incompatible  types	80	None	replace
1204	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);  if(generator  ==  null)  {  return  generator.toLowerCase();  }  [CE]  incompatible  types  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);  if(generator  ==  null)  {  return  generator.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);  if(generator  ==  null)  {  return  generator.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  incompatible  types	80	None	replace
1205	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(1);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(2);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]          ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(1);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(1);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(2);  }	  return    sourceFile.substring(1);    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.substring(1);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	146	None	replace
1206	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(1);  if(sourceFile.endsWith(mapping.prefix))  {  return  sourceFile.substring(1);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]            ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(1);  if(sourceFile.endsWith(mapping.prefix))  {  return  sourceFile.substring(1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(1);  if(sourceFile.endsWith(mapping.prefix))  {  return  sourceFile.substring(1);  }	  return    sourceFile.substring(1);    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.substring(1);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	146	None	replace
1207	[BUG]  [BUGGY]  return  prefixMapping.trim();  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  cannot  find  symbol  prefixMapping  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  prefixMapping.trim();  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  prefixMapping.trim();  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);	  return    sourceFile.trim();    Collection    <    String>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol  prefixMapping	29	None	replace
1208	[BUG]  [BUGGY]  String  originalName  =  prefixMappings.trim();  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  prefixMappings.trim();  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  prefixMappings.trim();  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);	  return    sourceFile.trim();    Collection    <    String>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
1209	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  ComparisonFailure:  null;  }  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  ComparisonFailure:  null;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  ComparisonFailure:  null;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	130	None	replace
1210	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  ComparisonFailure:  null;  }  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  ComparisonFailure:  null;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  ComparisonFailure:  null;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	130	None	replace
1211	[BUG]  [BUGGY]  return  sourceFile.toString()  +   ":   ";  String  sourceFile  =  sourceFile.toString();  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  +   ":   ";  String  sourceFile  =  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toString()    +   ":   ";    String  sourceFile  =  sourceFile.toString();	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	60	None	add
1212	[BUG]  [BUGGY]  return  sourceFile.toString()  +   ":   ";  junit.framework.ComparisonFailure:  sourceFile;  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  +   ":   ";  junit.framework.ComparisonFailure:  sourceFile;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toString()    +   ":   ";    junit.framework.ComparisonFailure:  sourceFile;	  	non-compiled	[CE]  not  a  statement	60	None	add
1213	[BUG]  [BUGGY]  return  sourceFile.toString()  +   ":   ";  junit.framework.ComparisonFailure:  null  expected;  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  +   ":   ";  junit.framework.ComparisonFailure:  null  expected;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toString()    +   ":   ";    junit.framework.ComparisonFailure:  null  expected;	  	non-compiled	[CE]  not  a  statement	60	None	add
1214	[BUG]  [BUGGY]  return  sourceFile.toString()  +   ":   ";  sourceFile.toString()  + ":   ";  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  +   ":   ";  sourceFile.toString()  + ":   ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toString()    +   ":   ";    sourceFile.toString()  + ":   ";	  	non-compiled	[CE]  not  a  statement	60	None	add
1215	[BUG]  [BUGGY]  return  sourceFile.toString()  +   ":   ";  String  originalName  =  sourceFile.toString()  + ": ";  [CE]  unreachable  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  +   ":   ";  String  originalName  =  sourceFile.toString()  + ": ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toString()    +   ":   ";    String  originalName  =  sourceFile.toString()  + ": ";	  	non-compiled	[CE]  unreachable  statement	60	None	add
1216	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [CE]  unreachable  statement  [FE]                    ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  return    sourceFile.substring(1);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  unreachable  statement	7	None	replace
1217	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(1);  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [CE]  cannot  find  symbol  originalName  [FE]                      ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(1);  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(1);  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  return    sourceFile.substring(1);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  cannot  find  symbol  originalName	7	None	replace
1218	[BUG]  [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toLowerCase();  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);  }  [CE]  type  SourceMap  does  not  take  parameters  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toLowerCase();  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.isEmpty())  {  return  sourceFile.toLowerCase();  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);  }	  return    sourceFile.toLowerCase();    SourceMap    <    String,    DetailLevel>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  type  SourceMap  does  not  take  parameters	170	None	replace
1219	[BUG]  [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toLowerCase();  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);  }  else  {  Preconditions.checkNotNull(sourceFile);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toLowerCase();  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);  }  else  {  Preconditions.checkNotNull(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.isEmpty())  {  return  sourceFile.toLowerCase();  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);  }  else  {  Preconditions.checkNotNull(sourceFile);	  return    sourceFile.toLowerCase();    SourceMap    <    String,    DetailLevel>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
1220	[BUG]  [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toLowerCase();  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);  }  else  {  Preconditions.checkState(!sourceFile.startsWith(  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toLowerCase();  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);  }  else  {  Preconditions.checkState(!sourceFile.startsWith(  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.isEmpty())  {  return  sourceFile.toLowerCase();  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);  }  else  {  Preconditions.checkState(!sourceFile.startsWith(	  return    sourceFile.toLowerCase();    SourceMap    <    String,    DetailLevel>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
1221	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  sourceFile  =  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  AssertionFailedError  	92	16	replace
1222	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [FE]  AssertionFailedError  [FE]        ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  sourceFile  =  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  AssertionFailedError  	92	16	replace
1223	[BUG]  [BUGGY]  return  sourceFile.toLowerCase();  Collection  <  String>  sourceFile  =  prefixMappings.get(SourceFile.class);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase();  Collection  <  String>  sourceFile  =  prefixMappings.get(SourceFile.class);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase();  Collection  <  String>  sourceFile  =  prefixMappings.get(SourceFile.class);	  return    sourceFile.toLowerCase();    Collection    <    String>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
1224	[BUG]  [BUGGY]  return  sourceFile.substring(0,  prefixMappings.length());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  prefixMappings.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  prefixMappings.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    Collection    <    String>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
1225	[BUG]  [BUGGY]  return  prefixMappings.substring(0,  sourceFile.length()  -  3);  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  prefixMappings.substring(0,  sourceFile.length()  -  3);  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  prefixMappings.substring(0,  sourceFile.length()  -  3);  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    Collection    <    String>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
1226	[BUG]  [BUGGY]  return  sourceFile.substring(0,  prefixMappings.length()  -  3);  collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  prefixMappings.length()  -  3);  collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  prefixMappings.length()  -  3);  collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    Collection    <    String>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
1227	[BUG]  [BUGGY]  String  originalName  =  sourceFile.trim();  if(originalName.startsWith(mapping.prefix))  {  return  originalName.trim();  }  [CE]  cannot  find  symbol  mapping  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.trim();  if(originalName.startsWith(mapping.prefix))  {  return  originalName.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.trim();  if(originalName.startsWith(mapping.prefix))  {  return  originalName.trim();  }	  return    sourceFile.trim();    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.trim();    }    	non-compiled	[CE]  cannot  find  symbol  mapping	173	None	replace
1228	[BUG]  [BUGGY]  String  replacement  =  sourceFile.trim();  if(replacement.startsWith(mapping.prefix))  {  return  replacement.trim();  }  [CE]  cannot  find  symbol  mapping  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  replacement  =  sourceFile.trim();  if(replacement.startsWith(mapping.prefix))  {  return  replacement.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  replacement  =  sourceFile.trim();  if(replacement.startsWith(mapping.prefix))  {  return  replacement.trim();  }	  return    sourceFile.trim();    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.trim();    }    	non-compiled	[CE]  cannot  find  symbol  mapping	173	None	replace
1229	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName.startsWith(mapping.prefix))  {  return  originalName.trim();  }  [CE]  cannot  find  symbol  mapping  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName.startsWith(mapping.prefix))  {  return  originalName.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName.startsWith(mapping.prefix))  {  return  originalName.trim();  }	  return    sourceFile.trim();    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.trim();    }    	non-compiled	[CE]  cannot  find  symbol  mapping	173	None	replace
1230	[BUG]  [BUGGY]  if(sourceFile.isLowerCase())  {  return  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.isLowerCase())  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.isLowerCase())  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile.isLowerCase())    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
1231	[BUG]  [BUGGY]  result  =  sourceFile.toLowerCase();  if(result.isLowerCase())  {  return  result.toLowerCase();  }  [CE]  cannot  find  symbol  result  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  result  =  sourceFile.toLowerCase();  if(result.isLowerCase())  {  return  result.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	result  =  sourceFile.toLowerCase();  if(result.isLowerCase())  {  return  result.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile.isLowerCase())    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  cannot  find  symbol  result	168	None	replace
1232	[BUG]  [BUGGY]  file  =  sourceFile.toLowerCase();  if(sourceFile.isLowerCase())  {  return  file.toLowerCase();  }  [CE]  cannot  find  symbol  file  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  file  =  sourceFile.toLowerCase();  if(sourceFile.isLowerCase())  {  return  file.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	file  =  sourceFile.toLowerCase();  if(sourceFile.isLowerCase())  {  return  file.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile.isLowerCase())    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  cannot  find  symbol  file	168	None	replace
1233	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1): ", ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1): ", ";	  return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):       "   ";    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	152	16	replace
1234	[BUG]  [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1): ", ";  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1): ", ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1): ", ";	  return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):       "   ";    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	152	16	replace
1235	[BUG]  [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1): " ",  sourceFile.length();  [CE]  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1): " ",  sourceFile.length();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1): " ",  sourceFile.length();	  return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):       "   ";    	non-compiled	[CE]  	152	None	replace
1236	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  cannot  find  symbol  mapping  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  cannot  find  symbol  mapping	73	None	replace
1237	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  cannot  find  symbol  mapping  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  cannot  find  symbol  mapping	73	None	replace
1238	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.endsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.endsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.endsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	73	None	replace
1239	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  2);  file  =  sourceFile.substring(0,  sourceFile.length()  +  2);  [CE]  cannot  find  symbol  file  [FE]    RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  2);  file  =  sourceFile.substring(0,  sourceFile.length()  +  2);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    2);    file  =  sourceFile.substring(0,  sourceFile.length()  +  2);	  	non-compiled	[CE]  cannot  find  symbol  file	13	None	add
1240	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.endsWith( ".java "))  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    sourceFile    =    sourceFile.toLowerCase();    if(sourceFile!=    null)    {    return    sourceFile.toLowerCase();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	126	16	replace
1241	[BUG]  [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.toLowerCase();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.endsWith( ".java "))  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    sourceFile    =    sourceFile.toLowerCase();    if(sourceFile!=    null)    {    return    sourceFile.toLowerCase();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	126	16	replace
1242	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.containsKey(sourceFile))  {  return  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.containsKey(sourceFile))  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(prefixMappings.isEmpty()  ||  prefixMappings.containsKey(sourceFile))  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    sourceFile    =    sourceFile.toLowerCase();    if(sourceFile!=    null)    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
1243	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]        ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	52	None	replace
1244	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]          ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	52	None	replace
1245	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]            ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	52	None	replace
1246	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]              ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	52	None	replace
1247	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile.length()    >    0)    {    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	51	16	replace
1248	[BUG]  [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile.length()    >    0)    {    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	51	16	replace
1249	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  unreachable  statement  [FE]        ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    3);    }    	non-compiled	[CE]  unreachable  statement	143	None	replace
1250	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    3);    }    	compilable	  [FE]  AssertionFailedError  	143	16	replace
1251	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName.substring(0,  sourceFile.length());  }  [FE]  AssertionFailedError  [FE]          ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    3);    }    	compilable	  [FE]  AssertionFailedError  	143	16	replace
1252	[BUG]  [BUGGY]  return  sourceFile.toUpperCase();  if(sourceFile.isUpperCase())  {  return  sourceFile.toUpperCase();  }  [CE]  cannot  find  symbol  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toUpperCase();  if(sourceFile.isUpperCase())  {  return  sourceFile.toUpperCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toUpperCase();    if(sourceFile.isUpperCase())  {  return  sourceFile.toUpperCase();  }	  	non-compiled	[CE]  cannot  find  symbol	35	None	add
1253	[BUG]  [BUGGY]  return  sourceFile.toUpperCase();  junit.framework.ComparisonFailure  =  sourceFile.toUpperCase();  [CE]  package  junit  does  not  exist  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toUpperCase();  junit.framework.ComparisonFailure  =  sourceFile.toUpperCase();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toUpperCase();    junit.framework.ComparisonFailure  =  sourceFile.toUpperCase();	  	non-compiled	[CE]  package  junit  does  not  exist	35	None	add
1254	[BUG]  [BUGGY]  return  sourceFile.toUpperCase();  String  originalName  =  sourceFile.toUpperCase();  if(originalName!=  null)  {  return  originalName;  }  [CE]  unreachable  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toUpperCase();  String  originalName  =  sourceFile.toUpperCase();  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toUpperCase();    String  originalName  =  sourceFile.toUpperCase();  if(originalName!=  null)  {  return  originalName;  }	  	non-compiled	[CE]  unreachable  statement	35	None	add
1255	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(false,  sourceFile.toLowerCase());  [CE]  no  suitable  method  found  for  toLowerCase(boolean,String)  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(false,  sourceFile.toLowerCase());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(false,  sourceFile.toLowerCase());	  return    sourceFile.toLowerCase(false);    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(boolean,String)	40	None	replace
1256	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(1);  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  unreachable  statement  [FE]        ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(1);  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(1);  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(1);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  unreachable  statement	1	None	replace
1257	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile.length()    >    0)    {    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	47	None	replace
1258	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	compilable	  [FE]  ComparisonFailure  	166	16	replace
1259	[BUG]  [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [FE]  ComparisonFailure  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	compilable	  [FE]  ComparisonFailure  	166	16	replace
1260	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.startsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	166	16	replace
1261	[BUG]  [BUGGY]  if(sourceFile.startsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	166	16	replace
1262	[BUG]  [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toString();  }  else  {  ComparableFailure:  null  expected;  }  [CE]  not  a  statement  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toString();  }  else  {  ComparableFailure:  null  expected;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.isEmpty())  {  return  sourceFile.toString();  }  else  {  ComparableFailure:  null  expected;  }	  return    sourceFile.toString();    junit.framework.ComparisonFailure:    null    expected;    	non-compiled	[CE]  not  a  statement	91	None	replace
1263	[BUG]  [BUGGY]  String  originalName  =  prefixMappings.get(sourceFile.toString());  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  prefixMappings.get(sourceFile.toString());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  prefixMappings.get(sourceFile.toString());	          String    originalName    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	24	None	replace
1264	[BUG]  [BUGGY]  String  originalName  =  prefixMappings.get(sourceFile.toUpperCase());  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  prefixMappings.get(sourceFile.toUpperCase());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  prefixMappings.get(sourceFile.toUpperCase());	          String    originalName    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	24	None	replace
1265	[BUG]  [BUGGY]  String  originalName  =  prefixMappings.get(sourceFile.substring(1));  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  prefixMappings.get(sourceFile.substring(1));  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  prefixMappings.get(sourceFile.substring(1));	          String    originalName    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	24	None	replace
1266	[BUG]  [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  if(  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  if(  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):    null;    if(  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;	  	non-compiled	[CE]  ')'  expected	149	None	add
1267	[BUG]  [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  if(  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  }  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  if(  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):    null;    if(  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  }	  	non-compiled	[CE]  ';'  expected	149	None	add
1268	[BUG]  [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  if(  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  }  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  if(  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):    null;    if(  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  }	  	non-compiled	[CE]  ')'  expected	149	None	add
1269	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.endsWith( ". "))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.endsWith( ". "))  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.endsWith(   ".java   "))    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	155	16	replace
1270	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.endsWith( ". "))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.endsWith( ". "))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.endsWith( ". "))  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.endsWith(   ".java   "))    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	155	16	replace
1271	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.endsWith(   ".java   "))    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	155	16	replace
1272	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.endsWith(   ".java   "))    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	155	16	replace
1273	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.endsWith( ".java "))  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.endsWith( ".java "))  {  return  originalName;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.endsWith(   ".java   "))    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	155	16	replace
1274	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.endsWith( ".java "))  {  return  originalName;  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.endsWith( ".java "))  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.endsWith( ".java "))  {  return  originalName;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.endsWith(   ".java   "))    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	155	16	replace
1275	[BUG]  [BUGGY]  return  sourceFile.trim(),  prefixMappings.get(sourceFile);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim(),  prefixMappings.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.trim(),  prefixMappings.get(sourceFile);	  return    sourceFile.trim();    String    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  ';'  expected	31	None	replace
1276	[BUG]  [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.trim();  }  else  {  String  sourceFile  =  prefixMappings.get(sourceFile);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.trim();  }  else  {  String  sourceFile  =  prefixMappings.get(sourceFile);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.endsWith( ".java "))  {  return  sourceFile.trim();  }  else  {  String  sourceFile  =  prefixMappings.get(sourceFile);  }	  return    sourceFile.trim();    String    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	31	None	replace
1277	[BUG]  [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.trim();  String  sourceFile  =  prefixMappings.get(sourceFile);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.trim();  String  sourceFile  =  prefixMappings.get(sourceFile);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.endsWith( ".java "))  {  return  sourceFile.trim();  String  sourceFile  =  prefixMappings.get(sourceFile);  }	  return    sourceFile.trim();    String    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	31	None	replace
1278	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java ")||  sourceFile.endsWith( ".java "))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.endsWith( ".java ")||  sourceFile.endsWith( ".java "))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    String    sourceFile    =    prefixMappings.get(sourceFile);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	31	16	replace
1279	[BUG]  [BUGGY]  if(sourceFile.endsWith( ".java ")||  sourceFile.endsWith( ".java "))  {  return  sourceFile.trim();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java ")||  sourceFile.endsWith( ".java "))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.endsWith( ".java ")||  sourceFile.endsWith( ".java "))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    String    sourceFile    =    prefixMappings.get(sourceFile);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	31	16	replace
1280	[BUG]  [BUGGY]  if(sourceFile.startsWith( "file: "))  {  return  sourceFile.trim();  String  sourceFile  =  prefixMappings.get(sourceFile);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith( "file: "))  {  return  sourceFile.trim();  String  sourceFile  =  prefixMappings.get(sourceFile);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith( "file: "))  {  return  sourceFile.trim();  String  sourceFile  =  prefixMappings.get(sourceFile);  }	  return    sourceFile.trim();    String    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	31	None	replace
1281	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  3);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  +  3);  }  [CE]  cannot  find  symbol  mapping  [FE]    RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  3);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  +  3);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    3);    if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  +  3);  }	  	non-compiled	[CE]  cannot  find  symbol  mapping	42	None	add
1282	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  3);  file  =  sourceFile.substring(0,  sourceFile.length()  +  3);  [CE]  cannot  find  symbol  file  [FE]      RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  3);  file  =  sourceFile.substring(0,  sourceFile.length()  +  3);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    3);    file  =  sourceFile.substring(0,  sourceFile.length()  +  3);	  	non-compiled	[CE]  cannot  find  symbol  file	42	None	add
1283	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.endsWith( ".java "))  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile.length()    ==    0)    {    return    sourceFile.toString();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	88	16	replace
1284	[BUG]  [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.toString();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.endsWith( ".java "))  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile.length()    ==    0)    {    return    sourceFile.toString();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	88	16	replace
1285	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( "/ "))  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.endsWith( "/ "))  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile.length()    ==    0)    {    return    sourceFile.toString();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	88	16	replace
1286	[BUG]  [BUGGY]  if(sourceFile.endsWith( "/ "))  {  return  sourceFile.toString();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( "/ "))  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.endsWith( "/ "))  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile.length()    ==    0)    {    return    sourceFile.toString();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	88	16	replace
1287	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	58	16	replace
1288	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  sourceFile.substring(0,  sourceFile.length());  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	58	16	replace
1289	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  6);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  6);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  6);	  String    sourceFile    =    sourceFile.substring(0,    sourceFile.length());    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	11	None	replace
1290	[BUG]  [BUGGY]  return  sourceFile  ==  null?  null  :  sourceFile.toString();  String  sourceFile  =  sourceFile  ==  null?  null  :  sourceFile.toString();  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile  ==  null?  null  :  sourceFile.toString();  String  sourceFile  =  sourceFile  ==  null?  null  :  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile    ==    null?    null    :    sourceFile.toString();    String  sourceFile  =  sourceFile  ==  null?  null  :  sourceFile.toString();	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	162	None	add
1291	[BUG]  [BUGGY]  return  sourceFile  ==  null?  null  :  sourceFile.toString();  if(sourceFile  ==  null?  null  :  sourceFile.toString() "))  {  return  sourceFile  ==  null?  null  :  sourceFile.toString();  }  [CE]  unclosed  string  literal  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile  ==  null?  null  :  sourceFile.toString();  if(sourceFile  ==  null?  null  :  sourceFile.toString() "))  {  return  sourceFile  ==  null?  null  :  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile    ==    null?    null    :    sourceFile.toString();    if(sourceFile  ==  null?  null  :  sourceFile.toString() "))  {  return  sourceFile  ==  null?  null  :  sourceFile.toString();  }	  	non-compiled	[CE]  unclosed  string  literal	162	None	add
1292	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(prefixMappings.isEmpty())  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(prefixMappings.isEmpty())  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    if(originalName!=    null)    {    return    originalName    +    sourceFile.trim();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	113	16	replace
1293	[BUG]  [BUGGY]  if(prefixMappings.isEmpty())  {  return  sourceFile.trim();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(prefixMappings.isEmpty())  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(prefixMappings.isEmpty())  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    if(originalName!=    null)    {    return    originalName    +    sourceFile.trim();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	113	16	replace
1294	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  return  originalName  +  sourceFile.trim();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  return  originalName  +  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.trim();  if(sourceFile!=  null)  {  return  originalName  +  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    if(originalName!=    null)    {    return    originalName    +    sourceFile.trim();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	113	None	replace
1295	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName  +  file.trim();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName  +  file.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName  +  file.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    if(originalName!=    null)    {    return    originalName    +    sourceFile.trim();    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
1296	[BUG]  [BUGGY]  return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();  [CE]  cannot  find  symbol  originalName  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    	non-compiled	[CE]  cannot  find  symbol  originalName	78	None	replace
1297	[BUG]  [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  originalName  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.isEmpty())  {  return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    	non-compiled	[CE]  cannot  find  symbol  originalName	78	None	replace
1298	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toLowerCase();  }  else  {  String  originalName  =  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.isEmpty())  {  return  sourceFile.toLowerCase();  }  else  {  String  originalName  =  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	78	16	replace
1299	[BUG]  [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toLowerCase();  }  else  {  String  originalName  =  sourceFile.toLowerCase();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toLowerCase();  }  else  {  String  originalName  =  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.isEmpty())  {  return  sourceFile.toLowerCase();  }  else  {  String  originalName  =  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	78	16	replace
1300	[BUG]  [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  originalName  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.endsWith( ".java "))  {  return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    	non-compiled	[CE]  cannot  find  symbol  originalName	78	None	replace
1301	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.toLowerCase();  }  else  {  String  originalName  =  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.endsWith( ".java "))  {  return  sourceFile.toLowerCase();  }  else  {  String  originalName  =  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	78	16	replace
1302	[BUG]  [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.toLowerCase();  }  else  {  String  originalName  =  sourceFile.toLowerCase();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.toLowerCase();  }  else  {  String  originalName  =  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.endsWith( ".java "))  {  return  sourceFile.toLowerCase();  }  else  {  String  originalName  =  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	78	16	replace
1303	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  1);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  +  1);  }  [CE]  unreachable  statement  [FE]    RuntimeException    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  1);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  +  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    +    1);    if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  +  1);  }	  	non-compiled	[CE]  unreachable  statement	62	None	add
1304	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [CE]  cannot  find  symbol  mapping  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.startsWith(mapping.prefix))    {    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  cannot  find  symbol  mapping	75	None	replace
1305	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [CE]  cannot  find  symbol  mapping  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.startsWith(mapping.prefix))    {    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  cannot  find  symbol  mapping	75	None	replace
1306	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    SourceFile    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	116	None	replace
1307	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.endsWith( ".java "))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    return    sourceFile.trim();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	174	16	replace
1308	[BUG]  [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.trim();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.endsWith( ".java "))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    return    sourceFile.trim();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	174	16	replace
1309	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  4);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  4);  }  [CE]  unreachable  statement  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  4);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  4);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    4);    if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  4);  }	  	non-compiled	[CE]  unreachable  statement	66	None	add
1310	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  4);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  -  4);  }  [CE]  cannot  find  symbol  mapping  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  4);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  -  4);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    4);    if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  -  4);  }	  	non-compiled	[CE]  cannot  find  symbol  mapping	66	None	add
1311	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  4);  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  4);  }  [CE]  unreachable  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  4);  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  4);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    4);    if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  4);  }	  	non-compiled	[CE]  unreachable  statement	66	None	add
1312	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java ")||  sourceFile.endsWith( ".java "))  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.endsWith( ".java ")||  sourceFile.endsWith( ".java "))  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    String    originalName    =    sourceFile.toString();    	compilable	  [FE]  AssertionFailedError  	160	16	replace
1313	[BUG]  [BUGGY]  if(sourceFile.endsWith( ".java ")||  sourceFile.endsWith( ".java "))  {  return  sourceFile.toString();  }  [FE]  AssertionFailedError  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java ")||  sourceFile.endsWith( ".java "))  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.endsWith( ".java ")||  sourceFile.endsWith( ".java "))  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    String    originalName    =    sourceFile.toString();    	compilable	  [FE]  AssertionFailedError  	160	16	replace
1314	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toString();  }  else  {  String  originalName  =  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.isEmpty())  {  return  sourceFile.toString();  }  else  {  String  originalName  =  sourceFile.toString();  }	  return    sourceFile.toString();    String    originalName    =    sourceFile.toString();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	160	16	replace
1315	[BUG]  [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toString();  }  else  {  String  originalName  =  sourceFile.toString();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toString();  }  else  {  String  originalName  =  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.isEmpty())  {  return  sourceFile.toString();  }  else  {  String  originalName  =  sourceFile.toString();  }	  return    sourceFile.toString();    String    originalName    =    sourceFile.toString();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	160	16	replace
1316	[BUG]  [BUGGY]  if(originalName!=  null)  {  return  sourceFile.toString();  }  [CE]  cannot  find  symbol  originalName  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(originalName!=  null)  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(originalName!=  null)  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    String    originalName    =    sourceFile.toString();    	non-compiled	[CE]  cannot  find  symbol  originalName	160	None	replace
1317	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    return    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	54	16	replace
1318	[BUG]  [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    return    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	54	16	replace
1319	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    return    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	54	16	replace
1320	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    return    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	54	16	replace
1321	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.toString();  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  >  0)  {  return  sourceFile.toString();  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.toString();    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	159	16	replace
1322	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.toString();  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.toString();  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.toString();  }  else  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.toString();    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	159	16	replace
1323	[BUG]  [BUGGY]  return  sourceFile.toString();  originalName  =  sourceFile.substring(0,  sourceFile.length());  [CE]  cannot  find  symbol  originalName  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString();  originalName  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toString();  originalName  =  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.toString();    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol  originalName	159	None	replace
1324	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(SourceMapGenerator.DEFAULT_PREFIX);  [CE]  cannot  find  symbol  DEFAULT_PREFIX  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(SourceMapGenerator.DEFAULT_PREFIX);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(SourceMapGenerator.DEFAULT_PREFIX);	  return    sourceFile.toLowerCase(LocationFixupCache.DEFAULT_PREFIX);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_PREFIX	39	None	replace
1325	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(Map.DEFAULT_PREFIX);  [CE]  cannot  find  symbol  DEFAULT_PREFIX  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(Map.DEFAULT_PREFIX);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(Map.DEFAULT_PREFIX);	  return    sourceFile.toLowerCase(LocationFixupCache.DEFAULT_PREFIX);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_PREFIX	39	None	replace
1326	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()).trim();  if(sourceFile.startsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()).trim();  }  [CE]  unreachable  statement  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()).trim();  if(sourceFile.startsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()).trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()).trim();    if(sourceFile.startsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()).trim();  }	  	non-compiled	[CE]  unreachable  statement	121	None	add
1327	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()).trim();  if(sourceFile.startsWith( "/ "))  {  return  sourceFile.substring(0,  sourceFile.length()).trim();  }  [CE]  unreachable  statement  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()).trim();  if(sourceFile.startsWith( "/ "))  {  return  sourceFile.substring(0,  sourceFile.length()).trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()).trim();    if(sourceFile.startsWith( "/ "))  {  return  sourceFile.substring(0,  sourceFile.length()).trim();  }	  	non-compiled	[CE]  unreachable  statement	121	None	add
1328	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  prefixMappings.length()  -  3);  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  prefixMappings.length()  -  3);  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  prefixMappings.length()  -  3);  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    SourceMap    <    String,    DetailLevel>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
1329	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  prefixMappings.length()  -  3);  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(originalName);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  prefixMappings.length()  -  3);  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(originalName);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  prefixMappings.length()  -  3);  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(originalName);	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    SourceMap    <    String,    DetailLevel>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
1330	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  prefixMappings.length());  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  prefixMappings.length());  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  prefixMappings.length());  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    SourceMap    <    String,    DetailLevel>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
1331	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  prefixMappings.length());  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(originalName);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  prefixMappings.length());  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(originalName);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  prefixMappings.length());  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(originalName);	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    SourceMap    <    String,    DetailLevel>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
1332	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(null,  sourceFile);  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(null,  sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(null,  sourceFile);	          junit.framework.ComparisonFailure:    null    expected;    	non-compiled	[CE]  not  a  statement	16	None	replace
1333	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  >  0)  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	89	16	replace
1334	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.toString();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	89	16	replace
1335	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
1336	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith( ". ")||  sourceFile.startsWith( ". "))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.startsWith( ". ")||  sourceFile.startsWith( ". "))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    String    sourceFile    =    sourceFile.trim();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	25	16	replace
1337	[BUG]  [BUGGY]  if(sourceFile.startsWith( ". ")||  sourceFile.startsWith( ". "))  {  return  sourceFile.trim();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith( ". ")||  sourceFile.startsWith( ". "))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith( ". ")||  sourceFile.startsWith( ". "))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    String    sourceFile    =    sourceFile.trim();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	25	16	replace
1338	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith( "file: "))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.startsWith( "file: "))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    String    sourceFile    =    sourceFile.trim();    	compilable	  [FE]  AssertionFailedError  	25	16	replace
1339	[BUG]  [BUGGY]  if(sourceFile.startsWith( "file: "))  {  return  sourceFile.trim();  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith( "file: "))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith( "file: "))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    String    sourceFile    =    sourceFile.trim();    	compilable	  [FE]  AssertionFailedError  	25	16	replace
1340	[BUG]  [BUGGY]  return  sourceFile.trim()  +  super.fixupSourceLocation.size();  [CE]  cannot  find  symbol  fixupSourceLocation  [FE]        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim()  +  super.fixupSourceLocation.size();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.trim()  +  super.fixupSourceLocation.size();	  return    sourceFile.trim()    +    suffixMappings.size();    	non-compiled	[CE]  cannot  find  symbol  fixupSourceLocation	107	None	replace
1341	[BUG]  [BUGGY]  return  sourceFile.trim()  +  super.fixupSourceLocationMappings.size();  [CE]  cannot  find  symbol  fixupSourceLocationMappings  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim()  +  super.fixupSourceLocationMappings.size();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.trim()  +  super.fixupSourceLocationMappings.size();	  return    sourceFile.trim()    +    suffixMappings.size();    	non-compiled	[CE]  cannot  find  symbol  fixupSourceLocationMappings	107	None	replace
1342	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java ")||  sourceFile.endsWith( ".java "))  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.endsWith( ".java ")||  sourceFile.endsWith( ".java "))  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	77	16	replace
1343	[BUG]  [BUGGY]  if(sourceFile.endsWith( ".java ")||  sourceFile.endsWith( ".java "))  {  return  sourceFile.toLowerCase();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java ")||  sourceFile.endsWith( ".java "))  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.endsWith( ".java ")||  sourceFile.endsWith( ".java "))  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	77	16	replace
1344	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.toLowerCase();  }  else  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.endsWith( ".java "))  {  return  sourceFile.toLowerCase();  }  else  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	77	16	replace
1345	[BUG]  [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.toLowerCase();  }  else  {  return  sourceFile.toLowerCase();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.toLowerCase();  }  else  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.endsWith( ".java "))  {  return  sourceFile.toLowerCase();  }  else  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	77	16	replace
1346	[BUG]  [BUGGY]  sourceFile  =  prefixMappings.get(sourceFile.substring(1));  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  sourceFile  =  prefixMappings.get(sourceFile.substring(1));  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile  =  prefixMappings.get(sourceFile.substring(1));	  sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	108	None	replace
1347	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	74	None	replace
1348	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	74	None	replace
1349	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  sourceFile.length());  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile,  sourceFile.length());	          junit.framework.ComparisonFailure:    new    ComparisonFailure(sourceFile);    	non-compiled	[CE]  not  a  statement	140	None	replace
1350	[BUG]  [BUGGY]  return  sourceFile.toString()  +   ":   ";  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [CE]  unreachable  statement  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  +   ":   ";  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toString()    +   ":   ";    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  	non-compiled	[CE]  unreachable  statement	60	None	add
1351	[BUG]  [BUGGY]  return  sourceFile.toString()  +   ":   ";  return  sourceFile.toString()  + ":   ";  [CE]  unreachable  statement  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  +   ":   ";  return  sourceFile.toString()  + ":   ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toString()    +   ":   ";    return  sourceFile.toString()  + ":   ";	  	non-compiled	[CE]  unreachable  statement	60	None	add
1352	[BUG]  [BUGGY]  return  sourceFile.toString()  +   ":   ";  if(sourceFile!=  null)  {  return  sourceFile.toString()  + ":   ";  }  [CE]  unreachable  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  +   ":   ";  if(sourceFile!=  null)  {  return  sourceFile.toString()  + ":   ";  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toString()    +   ":   ";    if(sourceFile!=  null)  {  return  sourceFile.toString()  + ":   ";  }	  	non-compiled	[CE]  unreachable  statement	60	None	add
1353	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim().toLowerCase()  + ". ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.trim().toLowerCase()  + ". ";	  return    sourceFile.trim().toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	34	16	replace
1354	[BUG]  [BUGGY]  return  sourceFile.trim().toLowerCase()  + ". ";  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim().toLowerCase()  + ". ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.trim().toLowerCase()  + ". ";	  return    sourceFile.trim().toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	34	16	replace
1355	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith( "/ "))  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.startsWith( "/ "))  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    String    sourceFile    =    sourceFile.toString();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	84	16	replace
1356	[BUG]  [BUGGY]  if(sourceFile.startsWith( "/ "))  {  return  sourceFile.toString();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith( "/ "))  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith( "/ "))  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    String    sourceFile    =    sourceFile.toString();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	84	16	replace
1357	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  1;  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length())+  1;  }  [CE]  unreachable  statement  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  1;  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length())+  1;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length())+    1;    if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length())+  1;  }	  	non-compiled	[CE]  unreachable  statement	141	None	add
1358	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  1;  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length())+  1;  }  [CE]  unreachable  statement  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  1;  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length())+  1;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length())+    1;    if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length())+  1;  }	  	non-compiled	[CE]  unreachable  statement	141	None	add
1359	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.length()  >  0)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.length()  >  0)  {  return  originalName;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    3);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	56	16	replace
1360	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.length()  >  0)  {  return  originalName;  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.length()  >  0)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.length()  >  0)  {  return  originalName;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    3);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	56	16	replace
1361	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                  ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName  + ": "  +  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName  + ": "  +  originalName;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    3);    }    	compilable	  [FE]  ComparisonFailure  	56	16	replace
1362	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName  + ": "  +  originalName;  }  [FE]  ComparisonFailure  [FE]                  ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName  + ": "  +  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName  + ": "  +  originalName;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    3);    }    	compilable	  [FE]  ComparisonFailure  	56	16	replace
1363	[BUG]  [BUGGY]  return  sourceFile.substring(1);  originalName  =  sourceFile.substring(0,  sourceFile.length());  [CE]  cannot  find  symbol  originalName  [FE]        ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(1);  originalName  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(1);  originalName  =  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(1);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    	non-compiled	[CE]  cannot  find  symbol  originalName	145	None	replace
1364	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    return    sourceFile.trim();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	172	16	replace
1365	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName.trim();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    return    sourceFile.trim();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	172	16	replace
1366	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  if(originalName.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  mapping  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  if(originalName.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.toLowerCase();  if(originalName.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix)||    sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  cannot  find  symbol  mapping	81	None	replace
1367	[BUG]  [BUGGY]  result  =  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  result;  }  [CE]  cannot  find  symbol  result  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  result  =  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  result;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	result  =  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  result;  }	  return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix)||    sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  cannot  find  symbol  result	81	None	replace
1368	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
1369	[BUG]  [BUGGY]  file  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  String  originalName  =  file.substring(0,  file.length());  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  file  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  String  originalName  =  file.substring(0,  file.length());  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	file  =  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  String  originalName  =  file.substring(0,  file.length());  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
1370	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(1,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(1,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(1,  sourceFile.length());  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
1371	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(mapping.prefix,  sourceFile);  [CE]  cannot  find  symbol  mapping  [FE]        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(mapping.prefix,  sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(mapping.prefix,  sourceFile);	  return    sourceFile.toLowerCase(mapping.prefix);    	non-compiled	[CE]  cannot  find  symbol  mapping	102	None	replace
1372	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(mapping.url);  [CE]  cannot  find  symbol  mapping  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(mapping.url);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(mapping.url);	  return    sourceFile.toLowerCase(mapping.prefix);    	non-compiled	[CE]  cannot  find  symbol  mapping	102	None	replace
1373	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  junit.framework.ComparisonFailure:  null;  }  [CE]  not  a  statement  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  junit.framework.ComparisonFailure:  null;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  junit.framework.ComparisonFailure:  null;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    junit.framework.ComparisonFailure:    sourceFile;    	non-compiled	[CE]  not  a  statement	120	None	replace
1374	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  junit.framework.ComparisonFailure:  sourceFile;  }  [CE]  not  a  statement  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  junit.framework.ComparisonFailure:  sourceFile;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  junit.framework.ComparisonFailure:  sourceFile;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    junit.framework.ComparisonFailure:    sourceFile;    	non-compiled	[CE]  not  a  statement	120	None	replace
1375	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  junit.framework.ComparisonFailure:  null;  }  [CE]  not  a  statement  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  junit.framework.ComparisonFailure:  null;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  junit.framework.ComparisonFailure:  null;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    junit.framework.ComparisonFailure:    sourceFile;    	non-compiled	[CE]  not  a  statement	120	None	replace
1376	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  junit.framework.ComparisonFailure:  sourceFile;  }  [CE]  not  a  statement  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  junit.framework.ComparisonFailure:  sourceFile;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  junit.framework.ComparisonFailure:  sourceFile;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    junit.framework.ComparisonFailure:    sourceFile;    	non-compiled	[CE]  not  a  statement	120	None	replace
1377	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  SourceMapGenerator  sourceFile  =  prefixMappings.get(originalName);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  SourceMapGenerator  sourceFile  =  prefixMappings.get(originalName);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.toLowerCase();  SourceMapGenerator  sourceFile  =  prefixMappings.get(originalName);	  return    sourceFile.toLowerCase();    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	129	None	replace
1378	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(),  prefixMappings.get(sourceFile);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(),  prefixMappings.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(),  prefixMappings.get(sourceFile);	  return    sourceFile.toLowerCase();    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  ';'  expected	129	None	replace
1379	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile  ==  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	156	16	replace
1380	[BUG]  [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile  ==  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile  ==  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	156	16	replace
1381	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(1,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(1,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	156	16	replace
1382	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(1,  sourceFile.length());  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(1,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(1,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	156	16	replace
1383	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	156	16	replace
1384	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(1);  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	156	16	replace
1385	[BUG]  [BUGGY]  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  file.toLowerCase();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  file.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  file.toLowerCase();  }	  return    sourceFile.toLowerCase();    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    if(sourceFile!=    null)    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	128	None	replace
1386	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(mapping.prefix,  sourceFile,  sourceFile.length());  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(mapping.prefix,  sourceFile,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(mapping.prefix,  sourceFile,  sourceFile.length());	          junit.framework.ComparisonFailure:    new    ComparisonFailure(mapping.prefix,    sourceFile);    	non-compiled	[CE]  not  a  statement	136	None	replace
1387	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(mapping.prefix,  sourceFile,  sourceFile);  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(mapping.prefix,  sourceFile,  sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(mapping.prefix,  sourceFile,  sourceFile);	          junit.framework.ComparisonFailure:    new    ComparisonFailure(mapping.prefix,    sourceFile);    	non-compiled	[CE]  not  a  statement	136	None	replace
1388	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(mapping.prefix,  sourceFile,  prefixMappings);  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(mapping.prefix,  sourceFile,  prefixMappings);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(mapping.prefix,  sourceFile,  prefixMappings);	          junit.framework.ComparisonFailure:    new    ComparisonFailure(mapping.prefix,    sourceFile);    	non-compiled	[CE]  not  a  statement	136	None	replace
1389	[BUG]  [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.toLowerCase();  }  else  {  String  sourceFile  =  sourceFile.toLowerCase();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.toLowerCase();  }  else  {  String  sourceFile  =  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.endsWith( ".java "))  {  return  sourceFile.toLowerCase();  }  else  {  String  sourceFile  =  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    sourceFile    =    sourceFile.toLowerCase();    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	76	None	replace
1390	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.toString();  return  originalName.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile!=  null)  {  String  originalName  =  sourceFile.toString();  return  originalName.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    return    originalName.trim();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	175	16	replace
1391	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.toString();  return  originalName.trim();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.toString();  return  originalName.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  String  originalName  =  sourceFile.toString();  return  originalName.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    return    originalName.trim();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	175	16	replace
1392	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()  >=  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.length()  >=  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;	  return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):    null;    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	150	16	replace
1393	[BUG]  [BUGGY]  return  sourceFile.length()  >=  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.length()  >=  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.length()  >=  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;	  return    sourceFile.length()    >    0?    sourceFile.substring(0,    sourceFile.length()    -    1):    null;    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	150	16	replace
1394	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	68	None	replace
1395	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	68	None	replace
1396	[BUG]  [BUGGY]  String  originalName  =  sourceFile.trim();  if(originalName.trim().equals(mapping.prefix))  {  return  sourceFile.trim();  }  [CE]  cannot  find  symbol  mapping  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.trim();  if(originalName.trim().equals(mapping.prefix))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.trim();  if(originalName.trim().equals(mapping.prefix))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile.trim().equals(mapping.prefix))    {    return    sourceFile.trim();    }    	non-compiled	[CE]  cannot  find  symbol  mapping	30	None	replace
1397	[BUG]  [BUGGY]  String  replacement  =  sourceFile.trim();  if(replacement.trim().equals(mapping.prefix))  {  return  replacement.trim();  }  [CE]  cannot  find  symbol  mapping  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  replacement  =  sourceFile.trim();  if(replacement.trim().equals(mapping.prefix))  {  return  replacement.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  replacement  =  sourceFile.trim();  if(replacement.trim().equals(mapping.prefix))  {  return  replacement.trim();  }	  return    sourceFile.trim();    if(sourceFile.trim().equals(mapping.prefix))    {    return    sourceFile.trim();    }    	non-compiled	[CE]  cannot  find  symbol  mapping	30	None	replace
1398	[BUG]  [BUGGY]  String  replacement  =  sourceFile.trim();  if(originalName.trim().equals(mapping.prefix))  {  return  replacement.trim();  }  [CE]  cannot  find  symbol  mapping  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  replacement  =  sourceFile.trim();  if(originalName.trim().equals(mapping.prefix))  {  return  replacement.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  replacement  =  sourceFile.trim();  if(originalName.trim().equals(mapping.prefix))  {  return  replacement.trim();  }	  return    sourceFile.trim();    if(sourceFile.trim().equals(mapping.prefix))    {    return    sourceFile.trim();    }    	non-compiled	[CE]  cannot  find  symbol  mapping	30	None	replace
1399	[BUG]  [BUGGY]  String  originalName  =  sourceFile.trim();  if(originalName.equals(mapping.prefix))  {  return  sourceFile.trim();  }  [CE]  cannot  find  symbol  mapping  [FE]                        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.trim();  if(originalName.equals(mapping.prefix))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.trim();  if(originalName.equals(mapping.prefix))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile.trim().equals(mapping.prefix))    {    return    sourceFile.trim();    }    	non-compiled	[CE]  cannot  find  symbol  mapping	30	None	replace
1400	[BUG]  [BUGGY]  return  sourceFile.substring(2);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [CE]  cannot  find  symbol  mapping  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(2);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(2);    if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  	non-compiled	[CE]  cannot  find  symbol  mapping	64	None	add
1401	[BUG]  [BUGGY]  return  sourceFile.substring(2);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  cannot  find  symbol  mapping  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(2);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(2);    if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  	non-compiled	[CE]  cannot  find  symbol  mapping	64	None	add
1402	[BUG]  [BUGGY]  return  sourceFile.substring(2);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [CE]  unreachable  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(2);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(2);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);	  	non-compiled	[CE]  unreachable  statement	64	None	add
1403	[BUG]  [BUGGY]  return  sourceFile.substring(2);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [CE]  cannot  find  symbol  mapping  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(2);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(2);    if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }	  	non-compiled	[CE]  cannot  find  symbol  mapping	64	None	add
1404	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  junit.framework.ComparisonFailure:  null;  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2  [CE]  not  a  statement  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  junit.framework.ComparisonFailure:  null;  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  junit.framework.ComparisonFailure:  null;  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    junit.framework.ComparisonFailure:    null;    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  not  a  statement	135	None	replace
1405	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  junit.framework.ComparisonFailure:  null;  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [CE]  not  a  statement  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  junit.framework.ComparisonFailure:  null;  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  junit.framework.ComparisonFailure:  null;  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    junit.framework.ComparisonFailure:    null;    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  not  a  statement	135	None	replace
1406	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  junit.framework.ComparisonFailure:  null;  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  [CE]  not  a  statement  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  junit.framework.ComparisonFailure:  null;  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  junit.framework.ComparisonFailure:  null;  sourceFile  =  sourceFile.substring(0,  sourceFile.length()	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    junit.framework.ComparisonFailure:    null;    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  not  a  statement	135	None	replace
1407	[BUG]  [BUGGY]  return  sourceFile!=  null?  null  :  sourceFile.toString();  if(sourceFile  ==  null)  {  return  sourceFile!=  null?  null  :  sourceFile.toString();  }  [CE]  unreachable  statement  [FE]    junit.framework.ComparisonFailure:  null  expected:<...unt   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile!=  null?  null  :  sourceFile.toString();  if(sourceFile  ==  null)  {  return  sourceFile!=  null?  null  :  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile!=    null?    null    :    sourceFile.toString();    if(sourceFile  ==  null)  {  return  sourceFile!=  null?  null  :  sourceFile.toString();  }	  	non-compiled	[CE]  unreachable  statement	96	None	add
1408	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparableFailure:  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparableFailure:  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    junit.framework.ComparisonFailure:    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	119	16	replace
1409	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparableFailure:  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparableFailure:  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparableFailure:  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    junit.framework.ComparisonFailure:    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	119	16	replace
1410	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparableFailure:  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparableFailure:  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    junit.framework.ComparisonFailure:    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	119	16	replace
1411	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparableFailure:  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparableFailure:  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  ==  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  ComparableFailure:  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    junit.framework.ComparisonFailure:    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	119	16	replace
1412	[BUG]  [BUGGY]  Preconditions.checkState(!prefixMappings.isEmpty()  ||!prefixMappings.isEmpty());  [CE]  cannot  find  symbol  Preconditions  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  Preconditions.checkState(!prefixMappings.isEmpty()  ||!prefixMappings.isEmpty());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	Preconditions.checkState(!prefixMappings.isEmpty()  ||!prefixMappings.isEmpty());	          Preconditions.checkState(!prefixMappings.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  Preconditions	138	None	replace
1413	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }  else  {  return  sourceFile.toString();  }  [CE]  cannot  find  symbol  mapping  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }  else  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }  else  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    return    sourceFile.toString();    }    else    {    return    sourceFile.toString();    }    	non-compiled	[CE]  cannot  find  symbol  mapping	161	None	replace
1414	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(prefixMappings.isEmpty())  {  return  sourceFile.toString();  }  else  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(prefixMappings.isEmpty())  {  return  sourceFile.toString();  }  else  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    return    sourceFile.toString();    }    else    {    return    sourceFile.toString();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	161	16	replace
1415	[BUG]  [BUGGY]  if(prefixMappings.isEmpty())  {  return  sourceFile.toString();  }  else  {  return  sourceFile.toString();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(prefixMappings.isEmpty())  {  return  sourceFile.toString();  }  else  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(prefixMappings.isEmpty())  {  return  sourceFile.toString();  }  else  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    return    sourceFile.toString();    }    else    {    return    sourceFile.toString();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	161	16	replace
1416	[BUG]  [BUGGY]  String  replacement  =  sourceFile.substring(0,  sourceFile.length());  junit.framework.ComparisonFailure:  null;  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  replacement  =  sourceFile.substring(0,  sourceFile.length());  junit.framework.ComparisonFailure:  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  replacement  =  sourceFile.substring(0,  sourceFile.length());  junit.framework.ComparisonFailure:  null;	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	130	None	replace
1417	[BUG]  [BUGGY]  File  file  =  sourceFile.substring(0,  sourceFile.length());  junit.framework.ComparisonFailure:  null;  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  File  file  =  sourceFile.substring(0,  sourceFile.length());  junit.framework.ComparisonFailure:  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	File  file  =  sourceFile.substring(0,  sourceFile.length());  junit.framework.ComparisonFailure:  null;	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	130	None	replace
1418	[BUG]  [BUGGY]  return  sourceFile.trim(),  originalName  =  sourceFile.trim();  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim(),  originalName  =  sourceFile.trim();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.trim(),  originalName  =  sourceFile.trim();	  return    sourceFile.trim();    String    originalName    =    sourceFile.trim();    	non-compiled	[CE]  ';'  expected	26	None	replace
1419	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".xml "))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.endsWith( ".xml "))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    String    originalName    =    sourceFile.trim();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	26	16	replace
1420	[BUG]  [BUGGY]  if(sourceFile.endsWith( ".xml "))  {  return  sourceFile.trim();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".xml "))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.endsWith( ".xml "))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    String    originalName    =    sourceFile.trim();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	26	16	replace
1421	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }  }  [CE]  cannot  find  symbol  mapping  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }  }	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  cannot  find  symbol  mapping	169	None	replace
1422	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  final  String  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	final  String  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    if(originalName!=    null)    {    return    originalName;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	169	16	replace
1423	[BUG]  [BUGGY]  final  String  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  final  String  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	final  String  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    if(originalName!=    null)    {    return    originalName;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	169	16	replace
1424	[BUG]  [BUGGY]  if(prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
1425	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName;  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
1426	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  originalName  =  sourceFile.trim();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  originalName  =  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  originalName  =  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.trim();    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
1427	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	compilable	  [FE]  AssertionFailedError  	134	16	replace
1428	[BUG]  [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [FE]  AssertionFailedError  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	compilable	  [FE]  AssertionFailedError  	134	16	replace
1429	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  [CE]  ')'  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	non-compiled	[CE]  ')'  expected	134	None	replace
1430	[BUG]  [BUGGY]  char  originalName  =  sourceFile.substring(0,  sourceFile.length());  [CE]  incompatible  types  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  char  originalName  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	char  originalName  =  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  incompatible  types	46	None	replace
1431	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  final  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	final  String  originalName  =  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  AssertionFailedError  	46	16	replace
1432	[BUG]  [BUGGY]  final  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  [FE]  AssertionFailedError  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  final  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	final  String  originalName  =  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  AssertionFailedError  	46	16	replace
1433	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(LocationGenerator.DEFAULT_PREFIX,  sourceFile.toLowerCase());  [CE]  cannot  find  symbol  LocationGenerator  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(LocationGenerator.DEFAULT_PREFIX,  sourceFile.toLowerCase());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(LocationGenerator.DEFAULT_PREFIX,  sourceFile.toLowerCase());	  return    sourceFile.toLowerCase(LocationGenerator.DEFAULT_PREFIX);    	non-compiled	[CE]  cannot  find  symbol  LocationGenerator	41	None	replace
1434	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(LocationFinder.DEFAULT_PREFIX);  [CE]  cannot  find  symbol  LocationFinder  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(LocationFinder.DEFAULT_PREFIX);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(LocationFinder.DEFAULT_PREFIX);	  return    sourceFile.toLowerCase(LocationGenerator.DEFAULT_PREFIX);    	non-compiled	[CE]  cannot  find  symbol  LocationFinder	41	None	replace
1435	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(LocationGenerator.DEFAULT_PREFIX  +  sourceFile.length());  [CE]  cannot  find  symbol  LocationGenerator  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(LocationGenerator.DEFAULT_PREFIX  +  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(LocationGenerator.DEFAULT_PREFIX  +  sourceFile.length());	  return    sourceFile.toLowerCase(LocationGenerator.DEFAULT_PREFIX);    	non-compiled	[CE]  cannot  find  symbol  LocationGenerator	41	None	replace
1436	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(LocationGenerator.DEFAULT_PREFIX,  sourceFile);  [CE]  cannot  find  symbol  LocationGenerator  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(LocationGenerator.DEFAULT_PREFIX,  sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(LocationGenerator.DEFAULT_PREFIX,  sourceFile);	  return    sourceFile.toLowerCase(LocationGenerator.DEFAULT_PREFIX);    	non-compiled	[CE]  cannot  find  symbol  LocationGenerator	41	None	replace
1437	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(LocationGenerator.DEFAULT_PREFIX  +  sourceFile.substring(1));  [CE]  cannot  find  symbol  LocationGenerator  [FE]                        AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(LocationGenerator.DEFAULT_PREFIX  +  sourceFile.substring(1));  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(LocationGenerator.DEFAULT_PREFIX  +  sourceFile.substring(1));	  return    sourceFile.toLowerCase(LocationGenerator.DEFAULT_PREFIX);    	non-compiled	[CE]  cannot  find  symbol  LocationGenerator	41	None	replace
1438	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.startsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	157	16	replace
1439	[BUG]  [BUGGY]  if(sourceFile.startsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	157	16	replace
1440	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	157	16	replace
1441	[BUG]  [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	157	16	replace
1442	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  ==  0)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.substring  [CE]  ';'  expected  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  ==  0)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.substring  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  ==  0)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.substring	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  ';'  expected	131	None	replace
1443	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  ==  0)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile  [CE]  ';'  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  ==  0)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  ==  0)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    SourceMapGenerator    sourceFile    =    prefixMappings.get(sourceFile);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	non-compiled	[CE]  ';'  expected	131	None	replace
1444	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(true,  prefixMappings);  [CE]  no  suitable  method  found  for  toLowerCase(boolean,List<LocationMapping>)  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toLowerCase(true,  prefixMappings);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(true,  prefixMappings);	  return    sourceFile.toLowerCase(true);    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(boolean,List<LocationMapping>)	103	None	replace
1445	[BUG]  [BUGGY]  return  sourceFile.trim();  Collection  <  String>  sourceFile  =  prefixMappings.get(SourceFile.class);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim();  Collection  <  String>  sourceFile  =  prefixMappings.get(SourceFile.class);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.trim();  Collection  <  String>  sourceFile  =  prefixMappings.get(SourceFile.class);	  return    sourceFile.trim();    Collection    <    String>    sourceFile    =    prefixMappings.get(sourceFile);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
1446	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  junit.framework.ComparisonFailure:  null  expected;  }  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  junit.framework.ComparisonFailure:  null  expected;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  junit.framework.ComparisonFailure:  null  expected;  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    junit.framework.ComparisonFailure:    null    expected;    }    	non-compiled	[CE]  not  a  statement	117	None	replace
1447	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toString();  String  originalName  =  sourceFile.toString();  System.arraycopy(mapping.prefix,  0,  originalName,  0,  prefixMappings.size());  [CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)  [FE]    AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  String  originalName  =  sourceFile.toString();  System.arraycopy(mapping.prefix,  0,  originalName,  0,  prefixMappings.size());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String    originalName    =    sourceFile.toString();    String  originalName  =  sourceFile.toString();  System.arraycopy(mapping.prefix,  0,  originalName,  0,  prefixMappings.size());	  	non-compiled	[CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)	98	None	add
1448	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toString();  String  originalName  =  sourceFile.toString();  System.arraycopy(sourceFile,  0,  originalName,  0,  prefixMappings.size());  [CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)  [FE]      AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  String  originalName  =  sourceFile.toString();  System.arraycopy(sourceFile,  0,  originalName,  0,  prefixMappings.size());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String    originalName    =    sourceFile.toString();    String  originalName  =  sourceFile.toString();  System.arraycopy(sourceFile,  0,  originalName,  0,  prefixMappings.size());	  	non-compiled	[CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)	98	None	add
1449	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toString();  String  originalName  =  sourceFile.toString();  }  else  if(mapping.prefix!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  String  originalName  =  sourceFile.toString();  }  else  if(mapping.prefix!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String    originalName    =    sourceFile.toString();    String  originalName  =  sourceFile.toString();  }  else  if(mapping.prefix!=  null)  {  return  originalName;  }	  	non-compiled	[CE]  illegal  start  of  type	98	None	add
1450	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toString();  String  originalName  =  sourceFile.toString();  System.arraycopy(mapping.prefix,  0,  originalName,  0,  prefixMappings.size()  -  1);  [CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)  [FE]          AssertionFailedError    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  String  originalName  =  sourceFile.toString();  System.arraycopy(mapping.prefix,  0,  originalName,  0,  prefixMappings.size()  -  1);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String    originalName    =    sourceFile.toString();    String  originalName  =  sourceFile.toString();  System.arraycopy(mapping.prefix,  0,  originalName,  0,  prefixMappings.size()  -  1);	  	non-compiled	[CE]  variable  originalName  is  already  defined  in  method  fixupSourceLocation(String)	98	None	add
1451	[BUG]  [BUGGY]  String  replacement  =  sourceFile.substring(0,  sourceFile.length()  -  1);  junit.framework.ComparisonFailure:  null;  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  replacement  =  sourceFile.substring(0,  sourceFile.length()  -  1);  junit.framework.ComparisonFailure:  null;  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  replacement  =  sourceFile.substring(0,  sourceFile.length()  -  1);  junit.framework.ComparisonFailure:  null;	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  not  a  statement	115	None	replace
1452	[BUG]  [BUGGY]  return  sourceFile.trim().toLowerCase();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim().toLowerCase();  }  [CE]  cannot  find  symbol  mapping  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim().toLowerCase();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim().toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.trim().toLowerCase();    if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim().toLowerCase();  }	  	non-compiled	[CE]  cannot  find  symbol  mapping	33	None	add
1453	[BUG]  [BUGGY]  return  sourceFile.trim().toLowerCase();  if(sourceFile.trim().toLowerCase()!=  sourceFile.length())  {  return  sourceFile.trim().toLowerCase();  }  [CE]  incomparable  types:  String  and  int  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim().toLowerCase();  if(sourceFile.trim().toLowerCase()!=  sourceFile.length())  {  return  sourceFile.trim().toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.trim().toLowerCase();    if(sourceFile.trim().toLowerCase()!=  sourceFile.length())  {  return  sourceFile.trim().toLowerCase();  }	  	non-compiled	[CE]  incomparable  types:  String  and  int	33	None	add
1454	[BUG]  [BUGGY]  return  sourceFile.trim().toLowerCase();  String  originalName  =  sourceFile.trim().toLowerCase();  if(originalName!=  null)  {  return  originalName;  }  [CE]  unreachable  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim().toLowerCase();  String  originalName  =  sourceFile.trim().toLowerCase();  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.trim().toLowerCase();    String  originalName  =  sourceFile.trim().toLowerCase();  if(originalName!=  null)  {  return  originalName;  }	  	non-compiled	[CE]  unreachable  statement	33	None	add
1455	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	44	None	replace
1456	[BUG]  [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  File  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  cannot  find  symbol  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  File  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  File  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    String    sourceFile    =    sourceFile.substring(0,    sourceFile.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
1457	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  unreachable  statement  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length());    if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length());  }	  	non-compiled	[CE]  unreachable  statement	8	None	add
1458	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [CE]  unreachable  statement  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length());    if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length());  }	  	non-compiled	[CE]  unreachable  statement	8	None	add
1459	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  junit.framework.ComparisonFailure:  null  expected;  }  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  junit.framework.ComparisonFailure:  null  expected;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  junit.framework.ComparisonFailure:  null  expected;  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    junit.framework.ComparisonFailure:    null    expected;    }    	non-compiled	[CE]  not  a  statement	105	None	replace
1460	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile  ==  null  ||  sourceFile.toString().endsWith( ".java ")?  null  :  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile  ==  null  ||  sourceFile.toString().endsWith( ".java ")?  null  :  sourceFile.toString();	  return    sourceFile    ==    null?    null    :    sourceFile.toString();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	163	16	replace
1461	[BUG]  [BUGGY]  return  sourceFile  ==  null  ||  sourceFile.toString().endsWith( ".java ")?  null  :  sourceFile.toString();  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile  ==  null  ||  sourceFile.toString().endsWith( ".java ")?  null  :  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile  ==  null  ||  sourceFile.toString().endsWith( ".java ")?  null  :  sourceFile.toString();	  return    sourceFile    ==    null?    null    :    sourceFile.toString();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	163	16	replace
1462	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile  ==  null  ||  sourceFile.toString().equals( " ")?  null  :  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile  ==  null  ||  sourceFile.toString().equals( " ")?  null  :  sourceFile.toString();	  return    sourceFile    ==    null?    null    :    sourceFile.toString();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	163	16	replace
1463	[BUG]  [BUGGY]  return  sourceFile  ==  null  ||  sourceFile.toString().equals( " ")?  null  :  sourceFile.toString();  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile  ==  null  ||  sourceFile.toString().equals( " ")?  null  :  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile  ==  null  ||  sourceFile.toString().equals( " ")?  null  :  sourceFile.toString();	  return    sourceFile    ==    null?    null    :    sourceFile.toString();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	163	16	replace
1464	[BUG]  [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  String  originalName  =  sourceFile.substring(0,  sourceFile.length())  -  3);  [CE]  ';'  expected  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]          String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  String  originalName  =  sourceFile.substring(0,  sourceFile.length())  -  3);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	                String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    String  originalName  =  sourceFile.substring(0,  sourceFile.length())  -  3);	  	non-compiled	[CE]  ';'  expected	21	None	add
1465	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toString();  if(originalName.startsWith(mapping.prefix))  {  return  originalName.toString();  }  [CE]  cannot  find  symbol  mapping  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  if(originalName.startsWith(mapping.prefix))  {  return  originalName.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.toString();  if(originalName.startsWith(mapping.prefix))  {  return  originalName.toString();  }	  return    sourceFile.toString();    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.toString();    }    	non-compiled	[CE]  cannot  find  symbol  mapping	87	None	replace
1466	[BUG]  [BUGGY]  String  replacement  =  sourceFile.toString();  if(replacement.startsWith(mapping.prefix))  {  return  replacement.toString();  }  [CE]  cannot  find  symbol  mapping  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  replacement  =  sourceFile.toString();  if(replacement.startsWith(mapping.prefix))  {  return  replacement.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  replacement  =  sourceFile.toString();  if(replacement.startsWith(mapping.prefix))  {  return  replacement.toString();  }	  return    sourceFile.toString();    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.toString();    }    	non-compiled	[CE]  cannot  find  symbol  mapping	87	None	replace
1467	[BUG]  [BUGGY]  String  replacement  =  sourceFile.toString();  if(originalName.startsWith(mapping.prefix))  {  return  replacement.toString();  }  [CE]  cannot  find  symbol  mapping  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  replacement  =  sourceFile.toString();  if(originalName.startsWith(mapping.prefix))  {  return  replacement.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  replacement  =  sourceFile.toString();  if(originalName.startsWith(mapping.prefix))  {  return  replacement.toString();  }	  return    sourceFile.toString();    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.toString();    }    	non-compiled	[CE]  cannot  find  symbol  mapping	87	None	replace
1468	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toString();  if(originalName.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }  [CE]  cannot  find  symbol  mapping  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  if(originalName.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.toString();  if(originalName.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }	  return    sourceFile.toString();    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.toString();    }    	non-compiled	[CE]  cannot  find  symbol  mapping	87	None	replace
1469	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...unt   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile  ==  null? "null "  :  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile  ==  null? "null "  :  sourceFile.toString();	  return    sourceFile!=    null?    null    :    sourceFile.toString();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	97	16	replace
1470	[BUG]  [BUGGY]  return  sourceFile  ==  null? "null "  :  sourceFile.toString();  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...unt   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile  ==  null? "null "  :  sourceFile.toString();  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile  ==  null? "null "  :  sourceFile.toString();	  return    sourceFile!=    null?    null    :    sourceFile.toString();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	97	16	replace
1471	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.trim();  if(originalName.equals( " "))  {  return  originalName.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.trim();  if(originalName.equals( " "))  {  return  originalName.trim();  }	  return    sourceFile.trim();    if(sourceFile.trim().equals(   "   "))    {    return    sourceFile.trim();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	28	16	replace
1472	[BUG]  [BUGGY]  String  originalName  =  sourceFile.trim();  if(originalName.equals( " "))  {  return  originalName.trim();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.trim();  if(originalName.equals( " "))  {  return  originalName.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.trim();  if(originalName.equals( " "))  {  return  originalName.trim();  }	  return    sourceFile.trim();    if(sourceFile.trim().equals(   "   "))    {    return    sourceFile.trim();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	28	16	replace
1473	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith( "- "))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.startsWith( "- "))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile.trim().equals(   "   "))    {    return    sourceFile.trim();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	28	16	replace
1474	[BUG]  [BUGGY]  if(sourceFile.startsWith( "- "))  {  return  sourceFile.trim();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith( "- "))  {  return  sourceFile.trim();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith( "- "))  {  return  sourceFile.trim();  }	  return    sourceFile.trim();    if(sourceFile.trim().equals(   "   "))    {    return    sourceFile.trim();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	28	16	replace
1475	[BUG]  [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  original  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  original  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  original	  return    sourceFile.trim();    if(sourceFile!=    null)    {    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    1);    if(originalName!=    null)    {    return    originalName;    }    	non-compiled	[CE]  ';'  expected	112	None	replace
1476	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	50	None	replace
1477	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  + ". ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.toString()  + ". ";	  return    sourceFile.toString()    +   "n   ";    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	101	16	replace
1478	[BUG]  [BUGGY]  return  sourceFile.toString()  + ". ";  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    ComparisonFailure    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  + ". ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toString()  + ". ";	  return    sourceFile.toString()    +   "n   ";    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	101	16	replace
1479	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  128));  [CE]  ';'  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  128));  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length()  -  128));	  return    sourceFile.substring(0,    sourceFile.length()));    	non-compiled	[CE]  ';'  expected	12	None	replace
1480	[BUG]  [BUGGY]  return  sourceFile.trim();  originalName  =  sourceFile.substring(0,  sourceFile.length());  [CE]  cannot  find  symbol  originalName  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.trim();  originalName  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.trim();  originalName  =  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.trim();    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  cannot  find  symbol  originalName	32	None	replace
1481	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]        ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);	  return    sourceFile.substring(1);    SourceMapGenerator    generator    =    sourceLocationFixupCache.get(sourceFile);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	123	None	replace
1482	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName.toLowerCase();  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    return    sourceFile.toString();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	85	16	replace
1483	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName.toLowerCase();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName.toLowerCase();  }	  return    sourceFile.toString();    if(sourceFile!=    null)    {    return    sourceFile.toString();    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	85	16	replace
1484	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  }  else  {  String  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  }  else  {  String  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	171	16	replace
1485	[BUG]  [BUGGY]  if(prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  }  else  {  String  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  }  else  {  String  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(prefixMappings.isEmpty())  {  return  sourceFile.toLowerCase();  }  else  {  String  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    String    originalName    =    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	171	16	replace
1486	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.length()  >  0)  {  return  originalName  +  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.length()  >  0)  {  return  originalName  +  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	69	16	replace
1487	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.length()  >  0)  {  return  originalName  +  sourceFile.substring(0,  sourceFile.length());  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.length()  >  0)  {  return  originalName  +  sourceFile.substring(0,  sourceFile.length());  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length());  if(originalName.length()  >  0)  {  return  originalName  +  sourceFile.substring(0,  sourceFile.length());  }	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()    >    0)    {    return    sourceFile.substring(0,    sourceFile.length()    -    2);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	69	16	replace
1488	[BUG]  [BUGGY]  result  =  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  result  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  result  =  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	result  =  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix))    {    String    sourceFile    =    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  cannot  find  symbol  result	82	None	replace
1489	[BUG]  [BUGGY]  if(sourceFile.endsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  mapping  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.endsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix))    {    String    sourceFile    =    sourceFile.toLowerCase();    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  cannot  find  symbol  mapping	82	None	replace
1490	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.isEmpty())  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	127	16	replace
1491	[BUG]  [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toLowerCase();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.isEmpty())  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.isEmpty())  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	127	16	replace
1492	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java ")||  sourceFile.startsWith( ".java "))  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.endsWith( ".java ")||  sourceFile.startsWith( ".java "))  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	127	16	replace
1493	[BUG]  [BUGGY]  if(sourceFile.endsWith( ".java ")||  sourceFile.startsWith( ".java "))  {  return  sourceFile.toLowerCase();  }  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java ")||  sourceFile.startsWith( ".java "))  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.endsWith( ".java ")||  sourceFile.startsWith( ".java "))  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	127	16	replace
1494	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  + ".ComparisonFailure:  null  expected: ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.toString()  + ".ComparisonFailure:  null  expected: ";	  return    sourceFile.toString()    +   ":   ";    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	61	16	replace
1495	[BUG]  [BUGGY]  return  sourceFile.toString()  + ".ComparisonFailure:  null  expected: ";  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  + ".ComparisonFailure:  null  expected: ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toString()  + ".ComparisonFailure:  null  expected: ";	  return    sourceFile.toString()    +   ":   ";    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	61	16	replace
1496	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  + ".ComparisonFailure:  null  expected:  <...t ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.toString()  + ".ComparisonFailure:  null  expected:  <...t ";	  return    sourceFile.toString()    +   ":   ";    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	61	16	replace
1497	[BUG]  [BUGGY]  return  sourceFile.toString()  + ".ComparisonFailure:  null  expected:  <...t ";  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  + ".ComparisonFailure:  null  expected:  <...t ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toString()  + ".ComparisonFailure:  null  expected:  <...t ";	  return    sourceFile.toString()    +   ":   ";    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	61	16	replace
1498	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  + ".ComparisonFailure:  null  expected:n ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.toString()  + ".ComparisonFailure:  null  expected:n ";	  return    sourceFile.toString()    +   ":   ";    	compilable	  [FE]  ComparisonFailure  	61	16	replace
1499	[BUG]  [BUGGY]  return  sourceFile.toString()  + ".ComparisonFailure:  null  expected:n ";  [FE]  ComparisonFailure  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  return  sourceFile.toString()  + ".ComparisonFailure:  null  expected:n ";  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toString()  + ".ComparisonFailure:  null  expected:n ";	  return    sourceFile.toString()    +   ":   ";    	compilable	  [FE]  ComparisonFailure  	61	16	replace
1500	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  if(originalName.startsWith(mapping.prefix))  {  return  originalName.toLowerCase();  }  [CE]  cannot  find  symbol  mapping  [FE]                AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  if(originalName.startsWith(mapping.prefix))  {  return  originalName.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.toLowerCase();  if(originalName.startsWith(mapping.prefix))  {  return  originalName.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  cannot  find  symbol  mapping	80	None	replace
1501	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  if(originalName.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  mapping  [FE]                  AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  if(originalName.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.toLowerCase();  if(originalName.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  cannot  find  symbol  mapping	80	None	replace
1502	[BUG]  [BUGGY]  result  =  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix))  {  return  result;  }  [CE]  cannot  find  symbol  result  [FE]                    AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  result  =  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix))  {  return  result;  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	result  =  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix))  {  return  result;  }	  return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  cannot  find  symbol  result	80	None	replace
1503	[BUG]  [BUGGY]  result  =  sourceFile.toLowerCase();  if(result.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  result  [FE]                      AssertionFailedError      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  result  =  sourceFile.toLowerCase();  if(result.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	result  =  sourceFile.toLowerCase();  if(result.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }	  return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix))    {    return    sourceFile.toLowerCase();    }    	non-compiled	[CE]  cannot  find  symbol  result	80	None	replace
1504	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  null  ||  sourceFile.startsWith(mapping.prefix))  {  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  junit.framework.ComparisonFailure:  null  ||  sourceFile.startsWith(mapping.prefix))  {  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	junit.framework.ComparisonFailure:  null  ||  sourceFile.startsWith(mapping.prefix))  {	  junit.framework.ComparisonFailure:    null    	non-compiled	[CE]  not  a  statement	110	None	replace
1505	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	compilable	  [FE]  AssertionFailedError  	167	16	replace
1506	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [FE]  AssertionFailedError  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t     ":1      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length());  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=    null)    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    else    {    return    sourceFile.substring(0,    sourceFile.length()    -    1);    }    	compilable	  [FE]  AssertionFailedError  	167	16	replace
1507	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    return    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  ComparisonFailure  	95	16	replace
1508	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    return    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  ComparisonFailure  	95	16	replace
1509	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    return    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  ComparisonFailure  	95	16	replace
1510	[BUG]  [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {      [BUGGY]  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [BUGGY]      }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    String    originalName    =    sourceFile.substring(0,    sourceFile.length()    -    3);    return    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  ComparisonFailure  	95	16	replace
