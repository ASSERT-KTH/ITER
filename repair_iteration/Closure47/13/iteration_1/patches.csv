bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  sourceFile.substring(1);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]    ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(1);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(1);    String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	11	None	add
2	[BUG]  [BUGGY]  return  sourceFile.substring(1);  String  sourceFile  =  sourceFile.substring(1);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]      ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(1);  String  sourceFile  =  sourceFile.substring(1);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(1);    String  sourceFile  =  sourceFile.substring(1);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	11	None	add
3	[BUG]  [BUGGY]  return  sourceFile.substring(1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [CE]  unreachable  statement  [FE]        ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(1);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  	non-compiled	[CE]  unreachable  statement	11	None	add
4	[BUG]  [BUGGY]  return  sourceFile.substring(1);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]          ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(1);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(1);    String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	11	None	add
5	[BUG]  [BUGGY]  return  sourceFile.substring(1);  String  originalName  =  sourceFile.substring(1);  [CE]  unreachable  statement  [FE]            ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(1);  String  originalName  =  sourceFile.substring(1);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(1);    String  originalName  =  sourceFile.substring(1);	  	non-compiled	[CE]  unreachable  statement	11	None	add
6	[BUG]  [BUGGY]  return  sourceFile.substring(1);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]              ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(1);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(1);    String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	11	None	add
7	[BUG]  [BUGGY]  return  sourceFile.substring(1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [CE]  unreachable  statement  [FE]                ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(1);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);	  	non-compiled	[CE]  unreachable  statement	11	None	add
8	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	8	16	replace
9	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length());  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	8	16	replace
10	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length();  [CE]  ')'  expected  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length();  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length();	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  ')'  expected	8	None	replace
11	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	8	None	replace
12	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()));  [CE]  ';'  expected  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()));  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length()));	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    	non-compiled	[CE]  ';'  expected	8	None	replace
13	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  2);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.substring(0,  sourceFile.length()  +  2);	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    	compilable	  [FE]  RuntimeException  	8	18	replace
14	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  2);  [FE]  RuntimeException  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  2);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length()  +  2);	  return    sourceFile.substring(0,    sourceFile.length()    -    2);    	compilable	  [FE]  RuntimeException  	8	18	replace
15	[BUG]  [BUGGY]      junit.framework.ComparisonFailure:  null;  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]      junit.framework.ComparisonFailure:  null;  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	        junit.framework.ComparisonFailure:  null;	  	non-compiled	[CE]  not  a  statement	13	None	add
16	[BUG]  [BUGGY]      junit.framework.ComparisonFailure:  null  expected;  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]      junit.framework.ComparisonFailure:  null  expected;  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	        junit.framework.ComparisonFailure:  null  expected;	  	non-compiled	[CE]  not  a  statement	13	None	add
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]      String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	        String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  	compilable	  [FE]  AssertionFailedError  	13	16	add
18	[BUG]  [BUGGY]      String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [FE]  AssertionFailedError  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]      String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	        String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  	compilable	  [FE]  AssertionFailedError  	13	16	add
19	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]      String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	        String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	13	16	add
20	[BUG]  [BUGGY]      String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]      String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	        String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	13	16	add
21	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]      String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	        String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	13	16	add
22	[BUG]  [BUGGY]      String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]      String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	        String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	13	16	add
23	[BUG]  [BUGGY]      junit.framework.ComparisonFailure:  sourceFile;  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]      junit.framework.ComparisonFailure:  sourceFile;  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	        junit.framework.ComparisonFailure:  sourceFile;	  	non-compiled	[CE]  not  a  statement	13	None	add
24	[BUG]  [BUGGY]      String  originalName  =  prefixMappings.get(sourceFile);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]      String  originalName  =  prefixMappings.get(sourceFile);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	        String  originalName  =  prefixMappings.get(sourceFile);	  	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	13	None	add
25	[BUG]  [BUGGY]  return  sourceFile.trim();  String  sourceFile  =  sourceFile.trim();  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.trim();  String  sourceFile  =  sourceFile.trim();  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.trim();    String  sourceFile  =  sourceFile.trim();	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	5	None	add
26	[BUG]  [BUGGY]  return  sourceFile.trim();  String  originalName  =  sourceFile.trim();  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.trim();  String  originalName  =  sourceFile.trim();  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.trim();    String  originalName  =  sourceFile.trim();	  	non-compiled	[CE]  unreachable  statement	5	None	add
27	[BUG]  [BUGGY]  return  sourceFile.trim();  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.trim();  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.trim();    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  	non-compiled	[CE]  unreachable  statement	5	None	add
28	[BUG]  [BUGGY]  return  sourceFile.trim();  if(sourceFile.trim().equals( " "))  {  return  sourceFile.trim();  }  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.trim();  if(sourceFile.trim().equals( " "))  {  return  sourceFile.trim();  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.trim();    if(sourceFile.trim().equals( " "))  {  return  sourceFile.trim();  }	  	non-compiled	[CE]  unreachable  statement	5	None	add
29	[BUG]  [BUGGY]  return  sourceFile.trim();  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.trim();  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.trim();    Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
30	[BUG]  [BUGGY]  return  sourceFile.trim();  if(sourceFile.trim().equals(mapping.prefix))  {  return  sourceFile.trim();  }  [CE]  cannot  find  symbol  mapping  [FE]              AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.trim();  if(sourceFile.trim().equals(mapping.prefix))  {  return  sourceFile.trim();  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.trim();    if(sourceFile.trim().equals(mapping.prefix))  {  return  sourceFile.trim();  }	  	non-compiled	[CE]  cannot  find  symbol  mapping	5	None	add
31	[BUG]  [BUGGY]  return  sourceFile.trim();  String  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.trim();  String  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.trim();    String  sourceFile  =  prefixMappings.get(sourceFile);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	5	None	add
32	[BUG]  [BUGGY]  return  sourceFile.trim();  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [CE]  unreachable  statement  [FE]                  AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.trim();  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.trim();    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);	  	non-compiled	[CE]  unreachable  statement	5	None	add
33	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.trim().toLowerCase();  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.trim().toLowerCase();	  return    sourceFile.trim();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	6	16	replace
34	[BUG]  [BUGGY]  return  sourceFile.trim().toLowerCase();  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.trim().toLowerCase();  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.trim().toLowerCase();	  return    sourceFile.trim();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	6	16	replace
35	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toUpperCase();  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.toUpperCase();	  return    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	2	16	replace
36	[BUG]  [BUGGY]  return  sourceFile.toUpperCase();  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toUpperCase();  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toUpperCase();	  return    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	2	16	replace
37	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toLowerCase()  +  1;  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.toLowerCase()  +  1;	  return    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	2	16	replace
38	[BUG]  [BUGGY]  return  sourceFile.toLowerCase()  +  1;  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toLowerCase()  +  1;  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase()  +  1;	  return    sourceFile.toLowerCase();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	2	16	replace
39	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(LocationFixupCache.DEFAULT_PREFIX);  [CE]  cannot  find  symbol  LocationFixupCache  [FE]        AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toLowerCase(LocationFixupCache.DEFAULT_PREFIX);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(LocationFixupCache.DEFAULT_PREFIX);	  return    sourceFile.toLowerCase();    	non-compiled	[CE]  cannot  find  symbol  LocationFixupCache	2	None	replace
40	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(false);  [CE]  no  suitable  method  found  for  toLowerCase(boolean)  [FE]          AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toLowerCase(false);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(false);	  return    sourceFile.toLowerCase();    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(boolean)	2	None	replace
41	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(LocationGenerator.DEFAULT_PREFIX);  [CE]  cannot  find  symbol  LocationGenerator  [FE]            AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toLowerCase(LocationGenerator.DEFAULT_PREFIX);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(LocationGenerator.DEFAULT_PREFIX);	  return    sourceFile.toLowerCase();    	non-compiled	[CE]  cannot  find  symbol  LocationGenerator	2	None	replace
42	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  3);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.substring(0,  sourceFile.length()  +  3);	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  RuntimeException  	10	18	replace
43	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  3);  [FE]  RuntimeException  [FE]    ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  3);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length()  +  3);	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  RuntimeException  	10	18	replace
44	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    1);    String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	3	None	add
45	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  unreachable  statement  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  	non-compiled	[CE]  unreachable  statement	3	None	add
46	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [CE]  unreachable  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    1);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  	non-compiled	[CE]  unreachable  statement	3	None	add
47	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	3	None	add
48	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile.length()  >  0)  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  unreachable  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile.length()  >  0)  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile.length()  >  0)  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  	non-compiled	[CE]  unreachable  statement	3	None	add
49	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile.length()  >  0)  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  unreachable  statement  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile.length()  >  0)  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile.length()  >  0)  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  	non-compiled	[CE]  unreachable  statement	3	None	add
50	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  cannot  find  symbol  mapping  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  	non-compiled	[CE]  cannot  find  symbol  mapping	3	None	add
51	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	3	None	add
52	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  3);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]    ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  3);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    3);    String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	9	None	add
53	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  3);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [CE]  unreachable  statement  [FE]      ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  3);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    3);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);	  	non-compiled	[CE]  unreachable  statement	9	None	add
54	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  3);  return  sourceFile.substring(0,  sourceFile.length()  -  3);  [CE]  unreachable  statement  [FE]        ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  3);  return  sourceFile.substring(0,  sourceFile.length()  -  3);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    3);    return  sourceFile.substring(0,  sourceFile.length()  -  3);	  	non-compiled	[CE]  unreachable  statement	9	None	add
55	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  3);  if(sourceFile.length()  -  3!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [CE]  incomparable  types:  int  and  <null>  [FE]          ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  3);  if(sourceFile.length()  -  3!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile.length()  -  3!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }	  	non-compiled	[CE]  incomparable  types:  int  and  <null>	9	None	add
56	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  3);  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [CE]  unreachable  statement  [FE]            ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  3);  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }	  	non-compiled	[CE]  unreachable  statement	9	None	add
57	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  3);  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  3);  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    3);    Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
58	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  3);  sourceFile.substring(0,  sourceFile.length()  -  3);  [CE]  unreachable  statement  [FE]                ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  3);  sourceFile.substring(0,  sourceFile.length()  -  3);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    3);    sourceFile.substring(0,  sourceFile.length()  -  3);	  	non-compiled	[CE]  unreachable  statement	9	None	add
59	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  3);  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                  ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  3);  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    3);    SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	9	None	add
60	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toString()  + ": ";  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.toString()  + ": ";	  return    sourceFile.toString();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	16	16	replace
61	[BUG]  [BUGGY]  return  sourceFile.toString()  + ": ";  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toString()  + ": ";  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toString()  + ": ";	  return    sourceFile.toString();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	16	16	replace
62	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  1);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.substring(0,  sourceFile.length()  +  1);	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  RuntimeException  	4	18	replace
63	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  1);  [FE]  RuntimeException  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  +  1);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length()  +  1);	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  RuntimeException  	4	18	replace
64	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(2);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.substring(2);	  return    sourceFile.substring(1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	12	16	replace
65	[BUG]  [BUGGY]  return  sourceFile.substring(2);  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(2);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(2);	  return    sourceFile.substring(1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	12	16	replace
66	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  4);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.substring(0,  sourceFile.length()  -  4);	  return    sourceFile.substring(1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	12	16	replace
67	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  4);  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  4);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length()  -  4);	  return    sourceFile.substring(1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	12	16	replace
68	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    2);    String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	7	None	add
69	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [CE]  unreachable  statement  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  	non-compiled	[CE]  unreachable  statement	7	None	add
70	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [CE]  unreachable  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    2);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);	  	non-compiled	[CE]  unreachable  statement	7	None	add
71	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  if(sourceFile.length()  >  0)  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [CE]  unreachable  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  if(sourceFile.length()  >  0)  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()  >  0)  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  	non-compiled	[CE]  unreachable  statement	7	None	add
72	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  return  sourceFile.substring(0,  sourceFile.length()  -  2);  [CE]  unreachable  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  return  sourceFile.substring(0,  sourceFile.length()  -  2);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    2);    return  sourceFile.substring(0,  sourceFile.length()  -  2);	  	non-compiled	[CE]  unreachable  statement	7	None	add
73	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [CE]  cannot  find  symbol  mapping  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  	non-compiled	[CE]  cannot  find  symbol  mapping	7	None	add
74	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  if(sourceFile.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  if(sourceFile.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()  >  0)  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	7	None	add
75	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [CE]  cannot  find  symbol  mapping  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  	non-compiled	[CE]  cannot  find  symbol  mapping	7	None	add
76	[BUG]  [BUGGY]  return  sourceFile.toLowerCase();  String  sourceFile  =  sourceFile.toLowerCase();  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toLowerCase();  String  sourceFile  =  sourceFile.toLowerCase();  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toLowerCase();    String  sourceFile  =  sourceFile.toLowerCase();	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	1	None	add
77	[BUG]  [BUGGY]  return  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toLowerCase();    return  sourceFile.toLowerCase();	  	non-compiled	[CE]  unreachable  statement	1	None	add
78	[BUG]  [BUGGY]  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toLowerCase();    String  originalName  =  sourceFile.toLowerCase();	  	non-compiled	[CE]  unreachable  statement	1	None	add
79	[BUG]  [BUGGY]  return  sourceFile.toLowerCase();  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toLowerCase();  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toLowerCase();    if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
80	[BUG]  [BUGGY]  return  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  mapping  [FE]            AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }	  	non-compiled	[CE]  cannot  find  symbol  mapping	1	None	add
81	[BUG]  [BUGGY]  return  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  mapping  [FE]              AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix)||  sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toLowerCase();  }	  	non-compiled	[CE]  cannot  find  symbol  mapping	1	None	add
82	[BUG]  [BUGGY]  return  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  mapping  [FE]                AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toLowerCase();  if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toLowerCase();    if(sourceFile.startsWith(mapping.prefix))  {  String  sourceFile  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  }	  	non-compiled	[CE]  cannot  find  symbol  mapping	1	None	add
83	[BUG]  [BUGGY]  return  sourceFile.toLowerCase();  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toLowerCase();  Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toLowerCase();    Collection  <  String>  sourceFile  =  prefixMappings.get(sourceFile);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
84	[BUG]  [BUGGY]  return  sourceFile.toString();  String  sourceFile  =  sourceFile.toString();  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toString();  String  sourceFile  =  sourceFile.toString();  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toString();    String  sourceFile  =  sourceFile.toString();	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	15	None	add
85	[BUG]  [BUGGY]  return  sourceFile.toString();  if(sourceFile!=  null)  {  return  sourceFile.toString();  }  [CE]  unreachable  statement  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toString();  if(sourceFile!=  null)  {  return  sourceFile.toString();  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toString();    if(sourceFile!=  null)  {  return  sourceFile.toString();  }	  	non-compiled	[CE]  unreachable  statement	15	None	add
86	[BUG]  [BUGGY]  return  sourceFile.toString();  junit.framework.ComparisonFailure:  null;  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toString();  junit.framework.ComparisonFailure:  null;  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toString();    junit.framework.ComparisonFailure:  null;	  	non-compiled	[CE]  not  a  statement	15	None	add
87	[BUG]  [BUGGY]  return  sourceFile.toString();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }  [CE]  cannot  find  symbol  mapping  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toString();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toString();    if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.toString();  }	  	non-compiled	[CE]  cannot  find  symbol  mapping	15	None	add
88	[BUG]  [BUGGY]  return  sourceFile.toString();  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }  [CE]  unreachable  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toString();  if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toString();    if(sourceFile.length()  ==  0)  {  return  sourceFile.toString();  }	  	non-compiled	[CE]  unreachable  statement	15	None	add
89	[BUG]  [BUGGY]  return  sourceFile.toString();  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toString();  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toString();    String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	15	None	add
90	[BUG]  [BUGGY]  return  sourceFile.toString();  if(sourceFile.isEmpty())  {  return  sourceFile.toString();  }  [CE]  unreachable  statement  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toString();  if(sourceFile.isEmpty())  {  return  sourceFile.toString();  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toString();    if(sourceFile.isEmpty())  {  return  sourceFile.toString();  }	  	non-compiled	[CE]  unreachable  statement	15	None	add
91	[BUG]  [BUGGY]  return  sourceFile.toString();  junit.framework.ComparisonFailure:  null  expected;  [CE]  not  a  statement  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toString();  junit.framework.ComparisonFailure:  null  expected;  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toString();    junit.framework.ComparisonFailure:  null  expected;	  	non-compiled	[CE]  not  a  statement	15	None	add
92	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  3);  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [CE]  unreachable  statement  [FE]    ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  3);  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    3);    sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  3);	  	non-compiled	[CE]  unreachable  statement	9	None	add
93	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  3);  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  3);  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  if(originalName!=  null)  {  return  originalName;  }	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
94	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  3);  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]        ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  3);  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    3);    SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	9	None	add
95	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  3);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  return  sourceFile.substring(0,  sourceFile.length()  -  3);  [CE]  unreachable  statement  [FE]          ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  3);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  return  sourceFile.substring(0,  sourceFile.length()  -  3);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    3);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  return  sourceFile.substring(0,  sourceFile.length()  -  3);	  	non-compiled	[CE]  unreachable  statement	9	None	add
96	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...unt ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile!=  null?  null  :  sourceFile.toString();  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile!=  null?  null  :  sourceFile.toString();	  return    sourceFile.toString();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...unt ":1  	16	16	replace
97	[BUG]  [BUGGY]  return  sourceFile!=  null?  null  :  sourceFile.toString();  [FE]  junit.framework.ComparisonFailure:  null  expected:<...unt ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile!=  null?  null  :  sourceFile.toString();  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile!=  null?  null  :  sourceFile.toString();	  return    sourceFile.toString();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...unt ":1  	16	16	replace
98	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  String  originalName  =  sourceFile.toString();  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	String  originalName  =  sourceFile.toString();	  return    sourceFile.toString();    	compilable	  [FE]  AssertionFailedError  	16	16	replace
99	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toString();  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  String  originalName  =  sourceFile.toString();  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	String  originalName  =  sourceFile.toString();	  return    sourceFile.toString();    	compilable	  [FE]  AssertionFailedError  	16	16	replace
100	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toString()  + "n ";  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.toString()  + "n ";	  return    sourceFile.toString();    	compilable	  [FE]  ComparisonFailure  	16	16	replace
101	[BUG]  [BUGGY]  return  sourceFile.toString()  + "n ";  [FE]  ComparisonFailure  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toString()  + "n ";  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toString()  + "n ";	  return    sourceFile.toString();    	compilable	  [FE]  ComparisonFailure  	16	16	replace
102	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(mapping.prefix);  [CE]  cannot  find  symbol  mapping  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toLowerCase(mapping.prefix);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(mapping.prefix);	  return    sourceFile.toLowerCase();    	non-compiled	[CE]  cannot  find  symbol  mapping	2	None	replace
103	[BUG]  [BUGGY]  return  sourceFile.toLowerCase(true);  [CE]  no  suitable  method  found  for  toLowerCase(boolean)  [FE]      AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toLowerCase(true);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.toLowerCase(true);	  return    sourceFile.toLowerCase();    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(boolean)	2	None	replace
104	[BUG]  [BUGGY]  return  sourceFile.toString();  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.toString();  if(sourceFile!=  null)  {  return  sourceFile.toString();  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toString();  if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.toString();  if(sourceFile!=  null)  {  return  sourceFile.toString();  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toString();    if(sourceFile!=  null)  {  String  sourceFile  =  sourceFile.toString();  if(sourceFile!=  null)  {  return  sourceFile.toString();  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
105	[BUG]  [BUGGY]  return  sourceFile.toString();  if(sourceFile!=  null)  {  junit.framework.ComparisonFailure:  null  expected;  }  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toString();  if(sourceFile!=  null)  {  junit.framework.ComparisonFailure:  null  expected;  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toString();    if(sourceFile!=  null)  {  junit.framework.ComparisonFailure:  null  expected;  }	  	non-compiled	[CE]  not  a  statement	15	None	add
106	[BUG]  [BUGGY]  return  sourceFile.toString();  junit.framework.ComparisonFailure:  sourceFile;  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toString();  junit.framework.ComparisonFailure:  sourceFile;  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toString();    junit.framework.ComparisonFailure:  sourceFile;	  	non-compiled	[CE]  not  a  statement	15	None	add
107	[BUG]  [BUGGY]  return  sourceFile.trim()  +  suffixMappings.size();  [CE]  cannot  find  symbol  suffixMappings  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.trim()  +  suffixMappings.size();  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.trim()  +  suffixMappings.size();	  return    sourceFile.trim();    	non-compiled	[CE]  cannot  find  symbol  suffixMappings	6	None	replace
108	[BUG]  [BUGGY]  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	sourceFile  =  prefixMappings.get(sourceFile);	      	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	14	None	replace
109	[BUG]  [BUGGY]  PrefixMapping  mapping  =  prefixMappings.get(sourceFile);  [CE]  cannot  find  symbol  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  PrefixMapping  mapping  =  prefixMappings.get(sourceFile);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	PrefixMapping  mapping  =  prefixMappings.get(sourceFile);	      	non-compiled	[CE]  cannot  find  symbol	14	None	replace
110	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  null  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  junit.framework.ComparisonFailure:  null  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	junit.framework.ComparisonFailure:  null	      	non-compiled	[CE]  not  a  statement	14	None	replace
111	[BUG]  [BUGGY]  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.trim();    if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName;  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
112	[BUG]  [BUGGY]  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.trim();    if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName;  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
113	[BUG]  [BUGGY]  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName  +  sourceFile.trim();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName  +  sourceFile.trim();  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.trim();    if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  if(originalName!=  null)  {  return  originalName  +  sourceFile.trim();  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
114	[BUG]  [BUGGY]  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.trim();    if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName;  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
115	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  junit.framework.ComparisonFailure:  null;  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  junit.framework.ComparisonFailure:  null;  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    1);    junit.framework.ComparisonFailure:  null;	  	non-compiled	[CE]  not  a  statement	3	None	add
116	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    1);    SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	3	None	add
117	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  junit.framework.ComparisonFailure:  null  expected;  }  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  junit.framework.ComparisonFailure:  null  expected;  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=  null)  {  junit.framework.ComparisonFailure:  null  expected;  }	  	non-compiled	[CE]  not  a  statement	3	None	add
118	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  sourceFile.substring(0,  sourceFile.length()  -  1);  [CE]  unreachable  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    1);    sourceFile.substring(0,  sourceFile.length()  -  1);	  	non-compiled	[CE]  unreachable  statement	3	None	add
119	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  junit.framework.ComparisonFailure:  sourceFile.substring(0,  sourceFile.length()  -  1);  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  junit.framework.ComparisonFailure:  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    1);    junit.framework.ComparisonFailure:  sourceFile.substring(0,  sourceFile.length()  -  1);	  	non-compiled	[CE]  not  a  statement	3	None	add
120	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  junit.framework.ComparisonFailure:  sourceFile;  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  junit.framework.ComparisonFailure:  sourceFile;  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    1);    junit.framework.ComparisonFailure:  sourceFile;	  	non-compiled	[CE]  not  a  statement	3	None	add
121	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()).trim();  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.substring(0,  sourceFile.length()).trim();	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	10	16	replace
122	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()).trim();  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()).trim();  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length()).trim();	  return    sourceFile.substring(0,    sourceFile.length()    -    3);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	10	16	replace
123	[BUG]  [BUGGY]  return  sourceFile.substring(1);  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);  [CE]  incompatible  types  [FE]    ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(1);  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(1);    SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);	  	non-compiled	[CE]  incompatible  types	11	None	add
124	[BUG]  [BUGGY]  return  sourceFile.substring(1);  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]      ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(1);  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(1);    SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	11	None	add
125	[BUG]  [BUGGY]  return  sourceFile.substring(1);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]        ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(1);  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(1);    String  sourceFile  =  sourceFile.substring(0,  sourceFile.length());	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	11	None	add
126	[BUG]  [BUGGY]  return  sourceFile.toLowerCase();  String  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toLowerCase();  String  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toLowerCase();    String  sourceFile  =  sourceFile.toLowerCase();  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	1	None	add
127	[BUG]  [BUGGY]  return  sourceFile.toLowerCase();  sourceFile.toLowerCase();  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toLowerCase();  sourceFile.toLowerCase();  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toLowerCase();    sourceFile.toLowerCase();	  	non-compiled	[CE]  unreachable  statement	1	None	add
128	[BUG]  [BUGGY]  return  sourceFile.toLowerCase();  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]        AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toLowerCase();  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toLowerCase();    SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.toLowerCase();  }	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	1	None	add
129	[BUG]  [BUGGY]  return  sourceFile.toLowerCase();  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]          AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toLowerCase();  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toLowerCase();    SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	1	None	add
130	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  junit.framework.ComparisonFailure:  null;  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  junit.framework.ComparisonFailure:  null;  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    2);    junit.framework.ComparisonFailure:  null;	  	non-compiled	[CE]  not  a  statement	7	None	add
131	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  if(sourceFile.length()  >  0)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  if(sourceFile.length()  >  0)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()  >  0)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
132	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    2);    SourceFile  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);	  	non-compiled	[CE]  variable  sourceFile  is  already  defined  in  method  fixupSourceLocation(String)	7	None	add
133	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  sourceFile.substring(0,  sourceFile.length()  -  2);  [CE]  unreachable  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  sourceFile.substring(0,  sourceFile.length()  -  2);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    2);    sourceFile.substring(0,  sourceFile.length()  -  2);	  	non-compiled	[CE]  unreachable  statement	7	None	add
134	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  if(sourceFile.length()  >  0)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  if(sourceFile.length()  >  0)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()  >  0)  {  SourceMapGenerator  sourceFile  =  prefixMappings.get(sourceFile);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
135	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  junit.framework.ComparisonFailure:  null;  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  junit.framework.ComparisonFailure:  null;  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    2);    junit.framework.ComparisonFailure:  null;  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);	  	non-compiled	[CE]  not  a  statement	7	None	add
136	[BUG]  [BUGGY]      junit.framework.ComparisonFailure:  new  ComparisonFailure(mapping.prefix,  sourceFile);  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]      junit.framework.ComparisonFailure:  new  ComparisonFailure(mapping.prefix,  sourceFile);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	        junit.framework.ComparisonFailure:  new  ComparisonFailure(mapping.prefix,  sourceFile);	  	non-compiled	[CE]  not  a  statement	13	None	add
137	[BUG]  [BUGGY]      junit.framework.ComparisonFailure:  new  ComparisonFailure(mapping.prefix);  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]      junit.framework.ComparisonFailure:  new  ComparisonFailure(mapping.prefix);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	        junit.framework.ComparisonFailure:  new  ComparisonFailure(mapping.prefix);	  	non-compiled	[CE]  not  a  statement	13	None	add
138	[BUG]  [BUGGY]      Preconditions.checkState(!prefixMappings.isEmpty());  [CE]  cannot  find  symbol  Preconditions  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]      Preconditions.checkState(!prefixMappings.isEmpty());  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	        Preconditions.checkState(!prefixMappings.isEmpty());	  	non-compiled	[CE]  cannot  find  symbol  Preconditions	13	None	add
139	[BUG]  [BUGGY]      junit.framework.ComparisonFailure:  new  ComparisonFailure();  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]      junit.framework.ComparisonFailure:  new  ComparisonFailure();  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	        junit.framework.ComparisonFailure:  new  ComparisonFailure();	  	non-compiled	[CE]  not  a  statement	13	None	add
140	[BUG]  [BUGGY]      junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile);  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]      junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	        junit.framework.ComparisonFailure:  new  ComparisonFailure(sourceFile);	  	non-compiled	[CE]  not  a  statement	13	None	add
141	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  1;  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.substring(0,  sourceFile.length())+  1;	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	4	16	replace
142	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  1;  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length())+  1;  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.substring(0,  sourceFile.length())+  1;	  return    sourceFile.substring(0,    sourceFile.length()    -    1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	4	16	replace
143	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  3);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [CE]  unreachable  statement  [FE]    ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  3);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    3);    if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  3);  }	  	non-compiled	[CE]  unreachable  statement	9	None	add
144	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  3);  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  type  SourceMap  does  not  take  parameters  [FE]      ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  3);  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    3);    SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);	  	non-compiled	[CE]  type  SourceMap  does  not  take  parameters	9	None	add
145	[BUG]  [BUGGY]  return  sourceFile.substring(1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [CE]  unreachable  statement  [FE]    ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(1);    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);	  	non-compiled	[CE]  unreachable  statement	11	None	add
146	[BUG]  [BUGGY]  return  sourceFile.substring(1);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(1);  }  [CE]  cannot  find  symbol  mapping  [FE]      ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(1);  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(1);  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(1);    if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.substring(1);  }	  	non-compiled	[CE]  cannot  find  symbol  mapping	11	None	add
147	[BUG]  [BUGGY]  return  sourceFile.substring(1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  [CE]  unreachable  statement  [FE]        ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(1);  String  originalName  =  sourceFile.substring(0,  sourceFile.length());  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(1);    String  originalName  =  sourceFile.substring(0,  sourceFile.length());	  	non-compiled	[CE]  unreachable  statement	11	None	add
148	[BUG]  [BUGGY]  return  sourceFile.substring(1);  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  type  SourceMap  does  not  take  parameters  [FE]          ComparisonFailure    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(1);  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(1);    SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);	  	non-compiled	[CE]  type  SourceMap  does  not  take  parameters	11	None	add
149	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;	  return    sourceFile.trim();    	compilable	  [FE]  ComparisonFailure  	6	16	replace
150	[BUG]  [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):  null;	  return    sourceFile.trim();    	compilable	  [FE]  ComparisonFailure  	6	16	replace
151	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):   " ";  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):   " ";	  return    sourceFile.trim();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	6	16	replace
152	[BUG]  [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):   " ";  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):   " ";  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile.length()  >  0?  sourceFile.substring(0,  sourceFile.length()  -  1):   " ";	  return    sourceFile.trim();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	6	16	replace
153	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [CE]  unreachable  statement  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  	non-compiled	[CE]  unreachable  statement	7	None	add
154	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  if(sourceFile.length()  >  0)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  if(sourceFile.length()  >  0)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()  >  0)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  if(originalName!=  null)  {  return  originalName;  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
155	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [CE]  unreachable  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.endsWith( ".java "))  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  	non-compiled	[CE]  unreachable  statement	7	None	add
156	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [CE]  unreachable  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  	non-compiled	[CE]  unreachable  statement	7	None	add
157	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [CE]  unreachable  statement  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  2);  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    2);    if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  2);  }	  	non-compiled	[CE]  unreachable  statement	7	None	add
158	[BUG]  [BUGGY]  return  sourceFile.toString();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toString();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toString();    if(sourceFile!=  null)  {  String  originalName  =  sourceFile.toString();  if(originalName!=  null)  {  return  originalName;  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
159	[BUG]  [BUGGY]  return  sourceFile.toString();  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [CE]  unreachable  statement  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toString();  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toString();    String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);	  	non-compiled	[CE]  unreachable  statement	15	None	add
160	[BUG]  [BUGGY]  return  sourceFile.toString();  String  originalName  =  sourceFile.toString();  [CE]  unreachable  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toString();  String  originalName  =  sourceFile.toString();  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toString();    String  originalName  =  sourceFile.toString();	  	non-compiled	[CE]  unreachable  statement	15	None	add
161	[BUG]  [BUGGY]  return  sourceFile.toString();  if(sourceFile!=  null)  {  return  sourceFile.toString();  }  else  {  return  sourceFile.toString();  }  [CE]  unreachable  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toString();  if(sourceFile!=  null)  {  return  sourceFile.toString();  }  else  {  return  sourceFile.toString();  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toString();    if(sourceFile!=  null)  {  return  sourceFile.toString();  }  else  {  return  sourceFile.toString();  }	  	non-compiled	[CE]  unreachable  statement	15	None	add
162	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile  ==  null?  null  :  sourceFile.toString();  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	return  sourceFile  ==  null?  null  :  sourceFile.toString();	  return    sourceFile.toString();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	16	16	replace
163	[BUG]  [BUGGY]  return  sourceFile  ==  null?  null  :  sourceFile.toString();  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile  ==  null?  null  :  sourceFile.toString();  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return  sourceFile  ==  null?  null  :  sourceFile.toString();	  return    sourceFile.toString();    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	16	16	replace
164	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  unreachable  statement  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  	non-compiled	[CE]  unreachable  statement	3	None	add
165	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName;  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=  null)  {  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  if(originalName!=  null)  {  return  originalName;  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
166	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  unreachable  statement  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile.length()  >  0)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  	non-compiled	[CE]  unreachable  statement	3	None	add
167	[BUG]  [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  unreachable  statement  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.substring(0,  sourceFile.length()  -  1);  if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.substring(0,    sourceFile.length()    -    1);    if(sourceFile!=  null)  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }  else  {  return  sourceFile.substring(0,  sourceFile.length()  -  1);  }	  	non-compiled	[CE]  unreachable  statement	3	None	add
168	[BUG]  [BUGGY]  return  sourceFile.toLowerCase();  if(sourceFile.isLowerCase())  {  return  sourceFile.toLowerCase();  }  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toLowerCase();  if(sourceFile.isLowerCase())  {  return  sourceFile.toLowerCase();  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toLowerCase();    if(sourceFile.isLowerCase())  {  return  sourceFile.toLowerCase();  }	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
169	[BUG]  [BUGGY]  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toLowerCase();    String  originalName  =  sourceFile.toLowerCase();  if(originalName!=  null)  {  return  originalName;  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
170	[BUG]  [BUGGY]  return  sourceFile.toLowerCase();  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);  [CE]  type  SourceMap  does  not  take  parameters  [FE]        AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toLowerCase();  SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toLowerCase();    SourceMap  <  String,  DetailLevel>  sourceFile  =  prefixMappings.get(sourceFile);	  	non-compiled	[CE]  type  SourceMap  does  not  take  parameters	1	None	add
171	[BUG]  [BUGGY]  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.toLowerCase();  String  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.toLowerCase();    String  originalName  =  sourceFile.toLowerCase();  return  sourceFile.toLowerCase();	  	non-compiled	[CE]  unreachable  statement	1	None	add
172	[BUG]  [BUGGY]  return  sourceFile.trim();  if(sourceFile!=  null)  {  return  sourceFile.trim();  }  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.trim();  if(sourceFile!=  null)  {  return  sourceFile.trim();  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.trim();    if(sourceFile!=  null)  {  return  sourceFile.trim();  }	  	non-compiled	[CE]  unreachable  statement	5	None	add
173	[BUG]  [BUGGY]  return  sourceFile.trim();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  [CE]  cannot  find  symbol  mapping  [FE]      AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.trim();  if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.trim();    if(sourceFile.startsWith(mapping.prefix))  {  return  sourceFile.trim();  }	  	non-compiled	[CE]  cannot  find  symbol  mapping	5	None	add
174	[BUG]  [BUGGY]  return  sourceFile.trim();  return  sourceFile.trim();  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.trim();  return  sourceFile.trim();  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.trim();    return  sourceFile.trim();	  	non-compiled	[CE]  unreachable  statement	5	None	add
175	[BUG]  [BUGGY]  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  return  originalName.trim();  }  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {  if  (prefixMappings.isEmpty())  {    [BUGGY]  return  sourceFile.trim();  if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  return  originalName.trim();  }  [BUGGY]    }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  if  (sourceFile.startsWith(mapping.prefix))  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	return    sourceFile.trim();    if(sourceFile!=  null)  {  String  originalName  =  sourceFile.trim();  return  originalName.trim();  }	  	non-compiled	[CE]  unreachable  statement	5	None	add
