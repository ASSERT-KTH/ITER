bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] private SourceMap(SourceMapGenerator generator) { [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] [BUGGY] private SourceMap(SourceMapGenerator generator) { [BUGGY] this.generator = generator; } [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] <init> [RETURN_TYPE] SourceMapGenerator)  SourceMapGenerator generator [VARIABLES] Format DEFAULT V1 V2 V3 boolean DetailLevel ALL SYMBOLS List prefixMappings String prefix replacement SourceMapGenerator generator Map sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	113	113	16	replace	
2	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] [BUGGY] [BUGGY] private SourceMap(SourceMapGenerator generator) { this.generator = generator; } [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] <init> [RETURN_TYPE] SourceMapGenerator)  SourceMapGenerator generator [VARIABLES] Format DEFAULT V1 V2 V3 boolean DetailLevel ALL SYMBOLS List prefixMappings String prefix replacement SourceMapGenerator generator Map sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	113	113	16	add	
3	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] private final SourceMapGenerator generator; [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping  [VARIABLES] 	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	109	109	16	replace	
4	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] private final SourceMapGenerator generator; [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping  [VARIABLES] 	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	109	109	16	add	
5	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] private final SourceMapGenerator generator; [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping  [VARIABLES] 	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	110	110	16	replace	
6	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] private final SourceMapGenerator generator; [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping  [VARIABLES] 	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	110	110	16	add	
7	[BUG] [BUGGY] this.generator = generator; [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] private SourceMap(SourceMapGenerator generator) { [BUGGY] this.generator = generator; [BUGGY] } [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] <init> [RETURN_TYPE] SourceMapGenerator)  SourceMapGenerator generator [VARIABLES] Format DEFAULT V1 V2 V3 boolean DetailLevel ALL SYMBOLS List prefixMappings String prefix replacement SourceMapGenerator generator Map sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	114	114	16	replace	
8	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] private SourceMap(SourceMapGenerator generator) { [BUGGY] [BUGGY] this.generator = generator; } [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] <init> [RETURN_TYPE] SourceMapGenerator)  SourceMapGenerator generator [VARIABLES] Format DEFAULT V1 V2 V3 boolean DetailLevel ALL SYMBOLS List prefixMappings String prefix replacement SourceMapGenerator generator Map sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	114	114	16	add	
9	[BUG] [BUGGY] } [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] private SourceMap(SourceMapGenerator generator) { this.generator = generator; [BUGGY] } [BUGGY]  [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] <init> [RETURN_TYPE] SourceMapGenerator)  SourceMapGenerator generator [VARIABLES] Format DEFAULT V1 V2 V3 boolean DetailLevel ALL SYMBOLS List prefixMappings String prefix replacement SourceMapGenerator generator Map sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	115	115	16	replace	
10	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] private SourceMap(SourceMapGenerator generator) { this.generator = generator; [BUGGY] [BUGGY] } [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] <init> [RETURN_TYPE] SourceMapGenerator)  SourceMapGenerator generator [VARIABLES] Format DEFAULT V1 V2 V3 boolean DetailLevel ALL SYMBOLS List prefixMappings String prefix replacement SourceMapGenerator generator Map sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	115	115	16	add	
11	[BUG] [BUGGY] String sourceFile = node.getSourceFileName(); [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] FilePosition outputEndPosition) { [BUGGY] String sourceFile = node.getSourceFileName(); [BUGGY]     if (sourceFile == null || node.getLineno() < 0) { return; } sourceFile = fixupSourceLocation(sourceFile);  [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] addMapping [RETURN_TYPE] void  Node node FilePosition outputStartPosition FilePosition outputEndPosition [VARIABLES] Format DEFAULT V1 V2 V3 boolean DetailLevel ALL SYMBOLS Node node List prefixMappings String originalName prefix replacement sourceFile SourceMapGenerator generator FilePosition outputEndPosition outputStartPosition Map sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	121	121	16	replace	
12	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] FilePosition outputEndPosition) { [BUGGY] [BUGGY] String sourceFile = node.getSourceFileName();    if (sourceFile == null || node.getLineno() < 0) { return; } sourceFile = fixupSourceLocation(sourceFile);  [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] addMapping [RETURN_TYPE] void  Node node FilePosition outputStartPosition FilePosition outputEndPosition [VARIABLES] Format DEFAULT V1 V2 V3 boolean DetailLevel ALL SYMBOLS Node node List prefixMappings String originalName prefix replacement sourceFile SourceMapGenerator generator FilePosition outputEndPosition outputStartPosition Map sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	121	121	16	add	
13	[BUG] [BUGGY] if (sourceFile == null || node.getLineno() < 0) { [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] FilePosition outputEndPosition) { String sourceFile = node.getSourceFileName();    [BUGGY] if (sourceFile == null || node.getLineno() < 0) { [BUGGY] return; } sourceFile = fixupSourceLocation(sourceFile); String originalName = (String) node.getProp(Node.ORIGINALNAME_PROP);     [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] addMapping [RETURN_TYPE] void  Node node FilePosition outputStartPosition FilePosition outputEndPosition [VARIABLES] Format DEFAULT V1 V2 V3 boolean DetailLevel ALL SYMBOLS Node node List prefixMappings String originalName prefix replacement sourceFile SourceMapGenerator generator FilePosition outputEndPosition outputStartPosition Map sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	126	126	16	replace	
14	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] FilePosition outputEndPosition) { String sourceFile = node.getSourceFileName();    [BUGGY] [BUGGY] if (sourceFile == null || node.getLineno() < 0) { return; } sourceFile = fixupSourceLocation(sourceFile); String originalName = (String) node.getProp(Node.ORIGINALNAME_PROP);     [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] addMapping [RETURN_TYPE] void  Node node FilePosition outputStartPosition FilePosition outputEndPosition [VARIABLES] Format DEFAULT V1 V2 V3 boolean DetailLevel ALL SYMBOLS Node node List prefixMappings String originalName prefix replacement sourceFile SourceMapGenerator generator FilePosition outputEndPosition outputStartPosition Map sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	126	126	16	add	
15	[BUG] [BUGGY] sourceFile = fixupSourceLocation(sourceFile); [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] FilePosition outputEndPosition) { String sourceFile = node.getSourceFileName();    if (sourceFile == null || node.getLineno() < 0) { return; } [BUGGY] sourceFile = fixupSourceLocation(sourceFile); [BUGGY]  String originalName = (String) node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping( sourceFile, originalName, [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] addMapping [RETURN_TYPE] void  Node node FilePosition outputStartPosition FilePosition outputEndPosition [VARIABLES] Format DEFAULT V1 V2 V3 boolean DetailLevel ALL SYMBOLS Node node List prefixMappings String originalName prefix replacement sourceFile SourceMapGenerator generator FilePosition outputEndPosition outputStartPosition Map sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	replace	
16	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] FilePosition outputEndPosition) { String sourceFile = node.getSourceFileName();    if (sourceFile == null || node.getLineno() < 0) { return; } [BUGGY] [BUGGY] sourceFile = fixupSourceLocation(sourceFile); String originalName = (String) node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping( sourceFile, originalName, [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] addMapping [RETURN_TYPE] void  Node node FilePosition outputStartPosition FilePosition outputEndPosition [VARIABLES] Format DEFAULT V1 V2 V3 boolean DetailLevel ALL SYMBOLS Node node List prefixMappings String originalName prefix replacement sourceFile SourceMapGenerator generator FilePosition outputEndPosition outputStartPosition Map sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	130	130	16	add	
17	[BUG] [BUGGY] String originalName = (String) node.getProp(Node.ORIGINALNAME_PROP); [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT]    if (sourceFile == null || node.getLineno() < 0) { return; } sourceFile = fixupSourceLocation(sourceFile); [BUGGY] String originalName = (String) node.getProp(Node.ORIGINALNAME_PROP); [BUGGY]      generator.addMapping( sourceFile, originalName, new FilePosition(node.getLineno(), node.getCharno()), outputStartPosition, outputEndPosition); [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] addMapping [RETURN_TYPE] void  Node node FilePosition outputStartPosition FilePosition outputEndPosition [VARIABLES] Format DEFAULT V1 V2 V3 boolean DetailLevel ALL SYMBOLS Node node List prefixMappings String originalName prefix replacement sourceFile SourceMapGenerator generator FilePosition outputEndPosition outputStartPosition Map sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	132	132	16	replace	
18	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT]    if (sourceFile == null || node.getLineno() < 0) { return; } sourceFile = fixupSourceLocation(sourceFile); [BUGGY] [BUGGY] String originalName = (String) node.getProp(Node.ORIGINALNAME_PROP);      generator.addMapping( sourceFile, originalName, new FilePosition(node.getLineno(), node.getCharno()), outputStartPosition, outputEndPosition); [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] addMapping [RETURN_TYPE] void  Node node FilePosition outputStartPosition FilePosition outputEndPosition [VARIABLES] Format DEFAULT V1 V2 V3 boolean DetailLevel ALL SYMBOLS Node node List prefixMappings String originalName prefix replacement sourceFile SourceMapGenerator generator FilePosition outputEndPosition outputStartPosition Map sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	132	132	16	add	
19	[BUG] [BUGGY] generator.addMapping( sourceFile, originalName, new FilePosition(node.getLineno(), node.getCharno()), [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] sourceFile = fixupSourceLocation(sourceFile); String originalName = (String) node.getProp(Node.ORIGINALNAME_PROP);      [BUGGY] generator.addMapping(  sourceFile, originalName,    new FilePosition(node.getLineno(), node.getCharno()), [BUGGY] sourceFile, originalName, new FilePosition(node.getLineno(), node.getCharno()), outputStartPosition, outputEndPosition); } [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] addMapping [RETURN_TYPE] void  Node node FilePosition outputStartPosition FilePosition outputEndPosition [VARIABLES] Format DEFAULT V1 V2 V3 boolean DetailLevel ALL SYMBOLS Node node List prefixMappings String originalName prefix replacement sourceFile SourceMapGenerator generator FilePosition outputEndPosition outputStartPosition Map sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	139	141	16	replace	
20	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] sourceFile = fixupSourceLocation(sourceFile); String originalName = (String) node.getProp(Node.ORIGINALNAME_PROP);      [BUGGY] [BUGGY] generator.addMapping(  sourceFile, originalName,    new FilePosition(node.getLineno(), node.getCharno()), sourceFile, originalName, new FilePosition(node.getLineno(), node.getCharno()), outputStartPosition, outputEndPosition); } [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] addMapping [RETURN_TYPE] void  Node node FilePosition outputStartPosition FilePosition outputEndPosition [VARIABLES] Format DEFAULT V1 V2 V3 boolean DetailLevel ALL SYMBOLS Node node List prefixMappings String originalName prefix replacement sourceFile SourceMapGenerator generator FilePosition outputEndPosition outputStartPosition Map sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	139	141	16	add	
21	[BUG] [BUGGY] } [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT]      generator.addMapping( sourceFile, originalName, new FilePosition(node.getLineno(), node.getCharno()), outputStartPosition, outputEndPosition); [BUGGY] } [BUGGY]  [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] addMapping [RETURN_TYPE] void  Node node FilePosition outputStartPosition FilePosition outputEndPosition [VARIABLES] Format DEFAULT V1 V2 V3 boolean DetailLevel ALL SYMBOLS Node node List prefixMappings String originalName prefix replacement sourceFile SourceMapGenerator generator FilePosition outputEndPosition outputStartPosition Map sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	143	143	16	replace	
22	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT]      generator.addMapping( sourceFile, originalName, new FilePosition(node.getLineno(), node.getCharno()), outputStartPosition, outputEndPosition); [BUGGY] [BUGGY] } [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] addMapping [RETURN_TYPE] void  Node node FilePosition outputStartPosition FilePosition outputEndPosition [VARIABLES] Format DEFAULT V1 V2 V3 boolean DetailLevel ALL SYMBOLS Node node List prefixMappings String originalName prefix replacement sourceFile SourceMapGenerator generator FilePosition outputEndPosition outputStartPosition Map sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	143	143	16	add	
23	[BUG] [BUGGY] if (prefixMappings.isEmpty()) { [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] private String fixupSourceLocation(String sourceFile) { [BUGGY] if (prefixMappings.isEmpty()) { [BUGGY] return sourceFile; } String fixed = sourceLocationFixupCache.get(sourceFile); if (fixed != null) { return fixed; }  for (LocationMapping mapping : prefixMappings) { [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] fixupSourceLocation [RETURN_TYPE] String  String sourceFile [VARIABLES] LocationMapping mapping Format DEFAULT V1 V2 V3 boolean DetailLevel ALL SYMBOLS List prefixMappings String fixed originalName prefix replacement sourceFile SourceMapGenerator generator Map sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	
24	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] private String fixupSourceLocation(String sourceFile) { [BUGGY] [BUGGY] if (prefixMappings.isEmpty()) { return sourceFile; } String fixed = sourceLocationFixupCache.get(sourceFile); if (fixed != null) { return fixed; }  for (LocationMapping mapping : prefixMappings) { [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] fixupSourceLocation [RETURN_TYPE] String  String sourceFile [VARIABLES] LocationMapping mapping Format DEFAULT V1 V2 V3 boolean DetailLevel ALL SYMBOLS List prefixMappings String fixed originalName prefix replacement sourceFile SourceMapGenerator generator Map sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	
25	[BUG] [BUGGY] return sourceFile; [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] private String fixupSourceLocation(String sourceFile) { if (prefixMappings.isEmpty()) { [BUGGY] return sourceFile; [BUGGY] } String fixed = sourceLocationFixupCache.get(sourceFile); if (fixed != null) { return fixed; }  for (LocationMapping mapping : prefixMappings) { if (sourceFile.startsWith(mapping.prefix)) { [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] fixupSourceLocation [RETURN_TYPE] String  String sourceFile [VARIABLES] LocationMapping mapping Format DEFAULT V1 V2 V3 boolean DetailLevel ALL SYMBOLS List prefixMappings String fixed originalName prefix replacement sourceFile SourceMapGenerator generator Map sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	replace	
26	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] private String fixupSourceLocation(String sourceFile) { if (prefixMappings.isEmpty()) { [BUGGY] [BUGGY] return sourceFile; } String fixed = sourceLocationFixupCache.get(sourceFile); if (fixed != null) { return fixed; }  for (LocationMapping mapping : prefixMappings) { if (sourceFile.startsWith(mapping.prefix)) { [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] fixupSourceLocation [RETURN_TYPE] String  String sourceFile [VARIABLES] LocationMapping mapping Format DEFAULT V1 V2 V3 boolean DetailLevel ALL SYMBOLS List prefixMappings String fixed originalName prefix replacement sourceFile SourceMapGenerator generator Map sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	151	151	16	add	
27	[BUG] [BUGGY] generator.appendTo(out, name); [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] public void appendTo(Appendable out, String name) throws IOException { [BUGGY] generator.appendTo(out, name); [BUGGY] } [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] appendTo [RETURN_TYPE] void  Appendable out String name [VARIABLES] Format DEFAULT V1 V2 V3 boolean DetailLevel ALL SYMBOLS Appendable out List prefixMappings String fixed name originalName prefix replacement sourceFile SourceMapGenerator generator Map sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	178	178	16	replace	
28	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] public void appendTo(Appendable out, String name) throws IOException { [BUGGY] [BUGGY] generator.appendTo(out, name); } [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] appendTo [RETURN_TYPE] void  Appendable out String name [VARIABLES] Format DEFAULT V1 V2 V3 boolean DetailLevel ALL SYMBOLS Appendable out List prefixMappings String fixed name originalName prefix replacement sourceFile SourceMapGenerator generator Map sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	178	178	16	add	
29	[BUG] [BUGGY] } [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] public void appendTo(Appendable out, String name) throws IOException { generator.appendTo(out, name); [BUGGY] } [BUGGY]  [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] appendTo [RETURN_TYPE] void  Appendable out String name [VARIABLES] Format DEFAULT V1 V2 V3 boolean DetailLevel ALL SYMBOLS Appendable out List prefixMappings String fixed name originalName prefix replacement sourceFile SourceMapGenerator generator Map sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	179	179	16	replace	
30	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] public void appendTo(Appendable out, String name) throws IOException { generator.appendTo(out, name); [BUGGY] [BUGGY] } [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] appendTo [RETURN_TYPE] void  Appendable out String name [VARIABLES] Format DEFAULT V1 V2 V3 boolean DetailLevel ALL SYMBOLS Appendable out List prefixMappings String fixed name originalName prefix replacement sourceFile SourceMapGenerator generator Map sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	179	179	16	add	
31	[BUG] [BUGGY] generator.setStartingPosition(offsetLine, offsetIndex); [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] public void setStartingPosition(int offsetLine, int offsetIndex) { [BUGGY] generator.setStartingPosition(offsetLine, offsetIndex); [BUGGY] } [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] setStartingPosition [RETURN_TYPE] void  int offsetLine int offsetIndex [VARIABLES] Format DEFAULT V1 V2 V3 boolean DetailLevel ALL SYMBOLS List prefixMappings String fixed name originalName prefix replacement sourceFile SourceMapGenerator generator Map sourceLocationFixupCache int offsetIndex offsetLine  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	187	187	16	replace	
32	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] public void setStartingPosition(int offsetLine, int offsetIndex) { [BUGGY] [BUGGY] generator.setStartingPosition(offsetLine, offsetIndex); } [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] setStartingPosition [RETURN_TYPE] void  int offsetLine int offsetIndex [VARIABLES] Format DEFAULT V1 V2 V3 boolean DetailLevel ALL SYMBOLS List prefixMappings String fixed name originalName prefix replacement sourceFile SourceMapGenerator generator Map sourceLocationFixupCache int offsetIndex offsetLine  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	187	187	16	add	
33	[BUG] [BUGGY] } [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] public void setStartingPosition(int offsetLine, int offsetIndex) { generator.setStartingPosition(offsetLine, offsetIndex); [BUGGY] } [BUGGY]  [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] setStartingPosition [RETURN_TYPE] void  int offsetLine int offsetIndex [VARIABLES] Format DEFAULT V1 V2 V3 boolean DetailLevel ALL SYMBOLS List prefixMappings String fixed name originalName prefix replacement sourceFile SourceMapGenerator generator Map sourceLocationFixupCache int offsetIndex offsetLine  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	188	188	16	replace	
34	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] public void setStartingPosition(int offsetLine, int offsetIndex) { generator.setStartingPosition(offsetLine, offsetIndex); [BUGGY] [BUGGY] } [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] setStartingPosition [RETURN_TYPE] void  int offsetLine int offsetIndex [VARIABLES] Format DEFAULT V1 V2 V3 boolean DetailLevel ALL SYMBOLS List prefixMappings String fixed name originalName prefix replacement sourceFile SourceMapGenerator generator Map sourceLocationFixupCache int offsetIndex offsetLine  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	188	188	16	add	
35	[BUG] [BUGGY] generator.validate(validate); [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] public void validate(boolean validate) { [BUGGY] generator.validate(validate); [BUGGY] } [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] validate [RETURN_TYPE] void  boolean validate [VARIABLES] Format DEFAULT V1 V2 V3 boolean validate DetailLevel ALL SYMBOLS List prefixMappings String fixed name originalName prefix replacement sourceFile SourceMapGenerator generator Map sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	195	195	16	replace	
36	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] public void validate(boolean validate) { [BUGGY] [BUGGY] generator.validate(validate); } [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] validate [RETURN_TYPE] void  boolean validate [VARIABLES] Format DEFAULT V1 V2 V3 boolean validate DetailLevel ALL SYMBOLS List prefixMappings String fixed name originalName prefix replacement sourceFile SourceMapGenerator generator Map sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	195	195	16	add	
37	[BUG] [BUGGY] } [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] public void validate(boolean validate) { generator.validate(validate); [BUGGY] } [BUGGY]  [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] validate [RETURN_TYPE] void  boolean validate [VARIABLES] Format DEFAULT V1 V2 V3 boolean validate DetailLevel ALL SYMBOLS List prefixMappings String fixed name originalName prefix replacement sourceFile SourceMapGenerator generator Map sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	196	196	16	replace	
38	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] public void validate(boolean validate) { generator.validate(validate); [BUGGY] [BUGGY] } [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] validate [RETURN_TYPE] void  boolean validate [VARIABLES] Format DEFAULT V1 V2 V3 boolean validate DetailLevel ALL SYMBOLS List prefixMappings String fixed name originalName prefix replacement sourceFile SourceMapGenerator generator Map sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	196	196	16	add	
39	[BUG] [BUGGY] this.prefixMappings = sourceMapLocationMappings; [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] public void setPrefixMappings(List<LocationMapping> sourceMapLocationMappings) { [BUGGY] this.prefixMappings = sourceMapLocationMappings; [BUGGY] } [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] setPrefixMappings [RETURN_TYPE] void  LocationMapping> sourceMapLocationMappings [VARIABLES] Format DEFAULT V1 V2 V3 boolean DetailLevel ALL SYMBOLS List prefixMappings sourceMapLocationMappings String fixed name originalName prefix replacement sourceFile SourceMapGenerator generator Map sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	202	202	16	replace	
40	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] public void setPrefixMappings(List<LocationMapping> sourceMapLocationMappings) { [BUGGY] [BUGGY] this.prefixMappings = sourceMapLocationMappings; } [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] setPrefixMappings [RETURN_TYPE] void  LocationMapping> sourceMapLocationMappings [VARIABLES] Format DEFAULT V1 V2 V3 boolean DetailLevel ALL SYMBOLS List prefixMappings sourceMapLocationMappings String fixed name originalName prefix replacement sourceFile SourceMapGenerator generator Map sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	202	202	16	add	
41	[BUG] [BUGGY] } [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] public void setPrefixMappings(List<LocationMapping> sourceMapLocationMappings) { this.prefixMappings = sourceMapLocationMappings; [BUGGY] } [BUGGY]  [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] setPrefixMappings [RETURN_TYPE] void  LocationMapping> sourceMapLocationMappings [VARIABLES] Format DEFAULT V1 V2 V3 boolean DetailLevel ALL SYMBOLS List prefixMappings sourceMapLocationMappings String fixed name originalName prefix replacement sourceFile SourceMapGenerator generator Map sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	203	203	16	replace	
42	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] public void setPrefixMappings(List<LocationMapping> sourceMapLocationMappings) { this.prefixMappings = sourceMapLocationMappings; [BUGGY] [BUGGY] } [CLASS] SourceMap Format 1 2 3 4 DetailLevel 1 2 LocationMapping [METHOD] setPrefixMappings [RETURN_TYPE] void  LocationMapping> sourceMapLocationMappings [VARIABLES] Format DEFAULT V1 V2 V3 boolean DetailLevel ALL SYMBOLS List prefixMappings sourceMapLocationMappings String fixed name originalName prefix replacement sourceFile SourceMapGenerator generator Map sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	203	203	16	add	
43	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] reverseSourceMapping; [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry  [VARIABLES] 	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	56	56	16	replace	
44	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] reverseSourceMapping; [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry  [VARIABLES] 	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	56	56	16	add	
45	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] private int lineCount; [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry  [VARIABLES] 	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	51	51	16	replace	
46	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] private int lineCount; [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry  [VARIABLES] 	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	51	51	16	add	
48	[BUG] [BUGGY] int version = sourceMapRoot.getInt("version"); [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] throws SourceMapParseException { try {  [BUGGY] int version = sourceMapRoot.getInt("version"); [BUGGY] if (version != 3) { throw new SourceMapParseException("Unknown version: " + version); } String file = sourceMapRoot.getString("file"); if (file.isEmpty()) { throw new SourceMapParseException("File entry is missing or empty"); } if (sourceMapRoot.has("sections")) { [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] parse [RETURN_TYPE] void  JSONObject sourceMapRoot SourceMapSupplier sectionSupplier [VARIABLES] StringCharIterator content boolean JSONObject sourceMapRoot ArrayList lines JSONException ex String[] names sources String content contents file lineMap url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column current length line lineCount name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version SourceMapSupplier sectionSupplier  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	102	102	16	replace	
49	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] throws SourceMapParseException { try {  [BUGGY] [BUGGY] int version = sourceMapRoot.getInt("version"); if (version != 3) { throw new SourceMapParseException("Unknown version: " + version); } String file = sourceMapRoot.getString("file"); if (file.isEmpty()) { throw new SourceMapParseException("File entry is missing or empty"); } if (sourceMapRoot.has("sections")) { [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] parse [RETURN_TYPE] void  JSONObject sourceMapRoot SourceMapSupplier sectionSupplier [VARIABLES] StringCharIterator content boolean JSONObject sourceMapRoot ArrayList lines JSONException ex String[] names sources String content contents file lineMap url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column current length line lineCount name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version SourceMapSupplier sectionSupplier  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	102	102	16	add	
50	[BUG] [BUGGY] if (version != 3) { [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] throws SourceMapParseException { try {  int version = sourceMapRoot.getInt("version"); [BUGGY] if (version != 3) { [BUGGY] throw new SourceMapParseException("Unknown version: " + version); } String file = sourceMapRoot.getString("file"); if (file.isEmpty()) { throw new SourceMapParseException("File entry is missing or empty"); } if (sourceMapRoot.has("sections")) {  [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] parse [RETURN_TYPE] void  JSONObject sourceMapRoot SourceMapSupplier sectionSupplier [VARIABLES] StringCharIterator content boolean JSONObject sourceMapRoot ArrayList lines JSONException ex String[] names sources String content contents file lineMap url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column current length line lineCount name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version SourceMapSupplier sectionSupplier  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	103	103	16	replace	
51	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] throws SourceMapParseException { try {  int version = sourceMapRoot.getInt("version"); [BUGGY] [BUGGY] if (version != 3) { throw new SourceMapParseException("Unknown version: " + version); } String file = sourceMapRoot.getString("file"); if (file.isEmpty()) { throw new SourceMapParseException("File entry is missing or empty"); } if (sourceMapRoot.has("sections")) {  [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] parse [RETURN_TYPE] void  JSONObject sourceMapRoot SourceMapSupplier sectionSupplier [VARIABLES] StringCharIterator content boolean JSONObject sourceMapRoot ArrayList lines JSONException ex String[] names sources String content contents file lineMap url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column current length line lineCount name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version SourceMapSupplier sectionSupplier  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	103	103	16	add	
52	[BUG] [BUGGY] String file = sourceMapRoot.getString("file"); [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] throws SourceMapParseException { try {  int version = sourceMapRoot.getInt("version"); if (version != 3) { throw new SourceMapParseException("Unknown version: " + version); } [BUGGY] String file = sourceMapRoot.getString("file"); [BUGGY] if (file.isEmpty()) { throw new SourceMapParseException("File entry is missing or empty"); } if (sourceMapRoot.has("sections")) {  parseMetaMap(sourceMapRoot, sectionSupplier); return; }  [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] parse [RETURN_TYPE] void  JSONObject sourceMapRoot SourceMapSupplier sectionSupplier [VARIABLES] StringCharIterator content boolean JSONObject sourceMapRoot ArrayList lines JSONException ex String[] names sources String content contents file lineMap url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column current length line lineCount name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version SourceMapSupplier sectionSupplier  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	107	107	16	replace	
53	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] throws SourceMapParseException { try {  int version = sourceMapRoot.getInt("version"); if (version != 3) { throw new SourceMapParseException("Unknown version: " + version); } [BUGGY] [BUGGY] String file = sourceMapRoot.getString("file"); if (file.isEmpty()) { throw new SourceMapParseException("File entry is missing or empty"); } if (sourceMapRoot.has("sections")) {  parseMetaMap(sourceMapRoot, sectionSupplier); return; }  [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] parse [RETURN_TYPE] void  JSONObject sourceMapRoot SourceMapSupplier sectionSupplier [VARIABLES] StringCharIterator content boolean JSONObject sourceMapRoot ArrayList lines JSONException ex String[] names sources String content contents file lineMap url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column current length line lineCount name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version SourceMapSupplier sectionSupplier  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	107	107	16	add	
54	[BUG] [BUGGY] if (file.isEmpty()) { [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] throws SourceMapParseException { try {  int version = sourceMapRoot.getInt("version"); if (version != 3) { throw new SourceMapParseException("Unknown version: " + version); } String file = sourceMapRoot.getString("file"); [BUGGY] if (file.isEmpty()) { [BUGGY] throw new SourceMapParseException("File entry is missing or empty"); } if (sourceMapRoot.has("sections")) {  parseMetaMap(sourceMapRoot, sectionSupplier); return; } lineCount = sourceMapRoot.getInt("lineCount"); [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] parse [RETURN_TYPE] void  JSONObject sourceMapRoot SourceMapSupplier sectionSupplier [VARIABLES] StringCharIterator content boolean JSONObject sourceMapRoot ArrayList lines JSONException ex String[] names sources String content contents file lineMap url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column current length line lineCount name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version SourceMapSupplier sectionSupplier  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	108	108	16	replace	
55	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] throws SourceMapParseException { try {  int version = sourceMapRoot.getInt("version"); if (version != 3) { throw new SourceMapParseException("Unknown version: " + version); } String file = sourceMapRoot.getString("file"); [BUGGY] [BUGGY] if (file.isEmpty()) { throw new SourceMapParseException("File entry is missing or empty"); } if (sourceMapRoot.has("sections")) {  parseMetaMap(sourceMapRoot, sectionSupplier); return; } lineCount = sourceMapRoot.getInt("lineCount"); [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] parse [RETURN_TYPE] void  JSONObject sourceMapRoot SourceMapSupplier sectionSupplier [VARIABLES] StringCharIterator content boolean JSONObject sourceMapRoot ArrayList lines JSONException ex String[] names sources String content contents file lineMap url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column current length line lineCount name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version SourceMapSupplier sectionSupplier  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	108	108	16	add	
56	[BUG] [BUGGY] if (sourceMapRoot.has("sections")) { [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] int version = sourceMapRoot.getInt("version"); if (version != 3) { throw new SourceMapParseException("Unknown version: " + version); } String file = sourceMapRoot.getString("file"); if (file.isEmpty()) { throw new SourceMapParseException("File entry is missing or empty"); } [BUGGY] if (sourceMapRoot.has("sections")) { [BUGGY]  parseMetaMap(sourceMapRoot, sectionSupplier); return; } lineCount = sourceMapRoot.getInt("lineCount"); String lineMap = sourceMapRoot.getString("mappings"); sources = getJavaStringArray(sourceMapRoot.getJSONArray("sources")); names = getJavaStringArray(sourceMapRoot.getJSONArray("names")); [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] parse [RETURN_TYPE] void  JSONObject sourceMapRoot SourceMapSupplier sectionSupplier [VARIABLES] StringCharIterator content boolean JSONObject sourceMapRoot ArrayList lines JSONException ex String[] names sources String content contents file lineMap url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column current length line lineCount name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version SourceMapSupplier sectionSupplier  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	112	112	16	replace	
57	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] int version = sourceMapRoot.getInt("version"); if (version != 3) { throw new SourceMapParseException("Unknown version: " + version); } String file = sourceMapRoot.getString("file"); if (file.isEmpty()) { throw new SourceMapParseException("File entry is missing or empty"); } [BUGGY] [BUGGY] if (sourceMapRoot.has("sections")) {  parseMetaMap(sourceMapRoot, sectionSupplier); return; } lineCount = sourceMapRoot.getInt("lineCount"); String lineMap = sourceMapRoot.getString("mappings"); sources = getJavaStringArray(sourceMapRoot.getJSONArray("sources")); names = getJavaStringArray(sourceMapRoot.getJSONArray("names")); [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] parse [RETURN_TYPE] void  JSONObject sourceMapRoot SourceMapSupplier sectionSupplier [VARIABLES] StringCharIterator content boolean JSONObject sourceMapRoot ArrayList lines JSONException ex String[] names sources String content contents file lineMap url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column current length line lineCount name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version SourceMapSupplier sectionSupplier  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	112	112	16	add	
58	[BUG] [BUGGY] lineCount = sourceMapRoot.getInt("lineCount"); [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] if (file.isEmpty()) { throw new SourceMapParseException("File entry is missing or empty"); } if (sourceMapRoot.has("sections")) {  parseMetaMap(sourceMapRoot, sectionSupplier); return; } [BUGGY] lineCount = sourceMapRoot.getInt("lineCount"); [BUGGY] String lineMap = sourceMapRoot.getString("mappings"); sources = getJavaStringArray(sourceMapRoot.getJSONArray("sources")); names = getJavaStringArray(sourceMapRoot.getJSONArray("names")); lines = Lists.newArrayListWithCapacity(lineCount); new MappingBuilder(lineMap).build(); } catch (JSONException ex) { throw new SourceMapParseException("JSON parse exception: " + ex); [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] parse [RETURN_TYPE] void  JSONObject sourceMapRoot SourceMapSupplier sectionSupplier [VARIABLES] StringCharIterator content boolean JSONObject sourceMapRoot ArrayList lines JSONException ex String[] names sources String content contents file lineMap url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column current length line lineCount name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version SourceMapSupplier sectionSupplier  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	118	118	16	replace	
59	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] if (file.isEmpty()) { throw new SourceMapParseException("File entry is missing or empty"); } if (sourceMapRoot.has("sections")) {  parseMetaMap(sourceMapRoot, sectionSupplier); return; } [BUGGY] [BUGGY] lineCount = sourceMapRoot.getInt("lineCount"); String lineMap = sourceMapRoot.getString("mappings"); sources = getJavaStringArray(sourceMapRoot.getJSONArray("sources")); names = getJavaStringArray(sourceMapRoot.getJSONArray("names")); lines = Lists.newArrayListWithCapacity(lineCount); new MappingBuilder(lineMap).build(); } catch (JSONException ex) { throw new SourceMapParseException("JSON parse exception: " + ex); [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] parse [RETURN_TYPE] void  JSONObject sourceMapRoot SourceMapSupplier sectionSupplier [VARIABLES] StringCharIterator content boolean JSONObject sourceMapRoot ArrayList lines JSONException ex String[] names sources String content contents file lineMap url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column current length line lineCount name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version SourceMapSupplier sectionSupplier  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	118	118	16	add	
60	[BUG] [BUGGY] String lineMap = sourceMapRoot.getString("mappings"); [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] throw new SourceMapParseException("File entry is missing or empty"); } if (sourceMapRoot.has("sections")) {  parseMetaMap(sourceMapRoot, sectionSupplier); return; } lineCount = sourceMapRoot.getInt("lineCount"); [BUGGY] String lineMap = sourceMapRoot.getString("mappings"); [BUGGY]  sources = getJavaStringArray(sourceMapRoot.getJSONArray("sources")); names = getJavaStringArray(sourceMapRoot.getJSONArray("names")); lines = Lists.newArrayListWithCapacity(lineCount); new MappingBuilder(lineMap).build(); } catch (JSONException ex) { throw new SourceMapParseException("JSON parse exception: " + ex); } [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] parse [RETURN_TYPE] void  JSONObject sourceMapRoot SourceMapSupplier sectionSupplier [VARIABLES] StringCharIterator content boolean JSONObject sourceMapRoot ArrayList lines JSONException ex String[] names sources String content contents file lineMap url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column current length line lineCount name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version SourceMapSupplier sectionSupplier  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	119	119	16	replace	
61	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] throw new SourceMapParseException("File entry is missing or empty"); } if (sourceMapRoot.has("sections")) {  parseMetaMap(sourceMapRoot, sectionSupplier); return; } lineCount = sourceMapRoot.getInt("lineCount"); [BUGGY] [BUGGY] String lineMap = sourceMapRoot.getString("mappings"); sources = getJavaStringArray(sourceMapRoot.getJSONArray("sources")); names = getJavaStringArray(sourceMapRoot.getJSONArray("names")); lines = Lists.newArrayListWithCapacity(lineCount); new MappingBuilder(lineMap).build(); } catch (JSONException ex) { throw new SourceMapParseException("JSON parse exception: " + ex); } [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] parse [RETURN_TYPE] void  JSONObject sourceMapRoot SourceMapSupplier sectionSupplier [VARIABLES] StringCharIterator content boolean JSONObject sourceMapRoot ArrayList lines JSONException ex String[] names sources String content contents file lineMap url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column current length line lineCount name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version SourceMapSupplier sectionSupplier  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	119	119	16	add	
62	[BUG] [BUGGY] sources = getJavaStringArray(sourceMapRoot.getJSONArray("sources")); [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] if (sourceMapRoot.has("sections")) {  parseMetaMap(sourceMapRoot, sectionSupplier); return; } lineCount = sourceMapRoot.getInt("lineCount"); String lineMap = sourceMapRoot.getString("mappings"); [BUGGY] sources = getJavaStringArray(sourceMapRoot.getJSONArray("sources")); [BUGGY] names = getJavaStringArray(sourceMapRoot.getJSONArray("names")); lines = Lists.newArrayListWithCapacity(lineCount); new MappingBuilder(lineMap).build(); } catch (JSONException ex) { throw new SourceMapParseException("JSON parse exception: " + ex); } } [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] parse [RETURN_TYPE] void  JSONObject sourceMapRoot SourceMapSupplier sectionSupplier [VARIABLES] StringCharIterator content boolean JSONObject sourceMapRoot ArrayList lines JSONException ex String[] names sources String content contents file lineMap url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column current length line lineCount name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version SourceMapSupplier sectionSupplier  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	121	121	16	replace	
63	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] if (sourceMapRoot.has("sections")) {  parseMetaMap(sourceMapRoot, sectionSupplier); return; } lineCount = sourceMapRoot.getInt("lineCount"); String lineMap = sourceMapRoot.getString("mappings"); [BUGGY] [BUGGY] sources = getJavaStringArray(sourceMapRoot.getJSONArray("sources")); names = getJavaStringArray(sourceMapRoot.getJSONArray("names")); lines = Lists.newArrayListWithCapacity(lineCount); new MappingBuilder(lineMap).build(); } catch (JSONException ex) { throw new SourceMapParseException("JSON parse exception: " + ex); } } [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] parse [RETURN_TYPE] void  JSONObject sourceMapRoot SourceMapSupplier sectionSupplier [VARIABLES] StringCharIterator content boolean JSONObject sourceMapRoot ArrayList lines JSONException ex String[] names sources String content contents file lineMap url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column current length line lineCount name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version SourceMapSupplier sectionSupplier  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	121	121	16	add	
64	[BUG] [BUGGY] names = getJavaStringArray(sourceMapRoot.getJSONArray("names")); [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] if (sourceMapRoot.has("sections")) {  parseMetaMap(sourceMapRoot, sectionSupplier); return; } lineCount = sourceMapRoot.getInt("lineCount"); String lineMap = sourceMapRoot.getString("mappings"); sources = getJavaStringArray(sourceMapRoot.getJSONArray("sources")); [BUGGY] names = getJavaStringArray(sourceMapRoot.getJSONArray("names")); [BUGGY]  lines = Lists.newArrayListWithCapacity(lineCount); new MappingBuilder(lineMap).build(); } catch (JSONException ex) { throw new SourceMapParseException("JSON parse exception: " + ex); } } [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] parse [RETURN_TYPE] void  JSONObject sourceMapRoot SourceMapSupplier sectionSupplier [VARIABLES] StringCharIterator content boolean JSONObject sourceMapRoot ArrayList lines JSONException ex String[] names sources String content contents file lineMap url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column current length line lineCount name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version SourceMapSupplier sectionSupplier  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	122	122	16	replace	
65	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] if (sourceMapRoot.has("sections")) {  parseMetaMap(sourceMapRoot, sectionSupplier); return; } lineCount = sourceMapRoot.getInt("lineCount"); String lineMap = sourceMapRoot.getString("mappings"); sources = getJavaStringArray(sourceMapRoot.getJSONArray("sources")); [BUGGY] [BUGGY] names = getJavaStringArray(sourceMapRoot.getJSONArray("names")); lines = Lists.newArrayListWithCapacity(lineCount); new MappingBuilder(lineMap).build(); } catch (JSONException ex) { throw new SourceMapParseException("JSON parse exception: " + ex); } } [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] parse [RETURN_TYPE] void  JSONObject sourceMapRoot SourceMapSupplier sectionSupplier [VARIABLES] StringCharIterator content boolean JSONObject sourceMapRoot ArrayList lines JSONException ex String[] names sources String content contents file lineMap url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column current length line lineCount name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version SourceMapSupplier sectionSupplier  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	122	122	16	add	
66	[BUG] [BUGGY] lines = Lists.newArrayListWithCapacity(lineCount); [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] parseMetaMap(sourceMapRoot, sectionSupplier); return; } lineCount = sourceMapRoot.getInt("lineCount"); String lineMap = sourceMapRoot.getString("mappings"); sources = getJavaStringArray(sourceMapRoot.getJSONArray("sources")); names = getJavaStringArray(sourceMapRoot.getJSONArray("names")); [BUGGY] lines = Lists.newArrayListWithCapacity(lineCount); [BUGGY]  new MappingBuilder(lineMap).build(); } catch (JSONException ex) { throw new SourceMapParseException("JSON parse exception: " + ex); } } [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] parse [RETURN_TYPE] void  JSONObject sourceMapRoot SourceMapSupplier sectionSupplier [VARIABLES] StringCharIterator content boolean JSONObject sourceMapRoot ArrayList lines JSONException ex String[] names sources String content contents file lineMap url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column current length line lineCount name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version SourceMapSupplier sectionSupplier  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	124	124	16	replace	
67	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] parseMetaMap(sourceMapRoot, sectionSupplier); return; } lineCount = sourceMapRoot.getInt("lineCount"); String lineMap = sourceMapRoot.getString("mappings"); sources = getJavaStringArray(sourceMapRoot.getJSONArray("sources")); names = getJavaStringArray(sourceMapRoot.getJSONArray("names")); [BUGGY] [BUGGY] lines = Lists.newArrayListWithCapacity(lineCount); new MappingBuilder(lineMap).build(); } catch (JSONException ex) { throw new SourceMapParseException("JSON parse exception: " + ex); } } [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] parse [RETURN_TYPE] void  JSONObject sourceMapRoot SourceMapSupplier sectionSupplier [VARIABLES] StringCharIterator content boolean JSONObject sourceMapRoot ArrayList lines JSONException ex String[] names sources String content contents file lineMap url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column current length line lineCount name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version SourceMapSupplier sectionSupplier  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	124	124	16	add	
68	[BUG] [BUGGY] new MappingBuilder(lineMap).build(); [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] } lineCount = sourceMapRoot.getInt("lineCount"); String lineMap = sourceMapRoot.getString("mappings"); sources = getJavaStringArray(sourceMapRoot.getJSONArray("sources")); names = getJavaStringArray(sourceMapRoot.getJSONArray("names")); lines = Lists.newArrayListWithCapacity(lineCount); [BUGGY] new MappingBuilder(lineMap).build(); [BUGGY] } catch (JSONException ex) { throw new SourceMapParseException("JSON parse exception: " + ex); } } [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] parse [RETURN_TYPE] void  JSONObject sourceMapRoot SourceMapSupplier sectionSupplier [VARIABLES] StringCharIterator content boolean JSONObject sourceMapRoot ArrayList lines JSONException ex String[] names sources String content contents file lineMap url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column current length line lineCount name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version SourceMapSupplier sectionSupplier  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	126	126	16	replace	
69	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] } lineCount = sourceMapRoot.getInt("lineCount"); String lineMap = sourceMapRoot.getString("mappings"); sources = getJavaStringArray(sourceMapRoot.getJSONArray("sources")); names = getJavaStringArray(sourceMapRoot.getJSONArray("names")); lines = Lists.newArrayListWithCapacity(lineCount); [BUGGY] [BUGGY] new MappingBuilder(lineMap).build(); } catch (JSONException ex) { throw new SourceMapParseException("JSON parse exception: " + ex); } } [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] parse [RETURN_TYPE] void  JSONObject sourceMapRoot SourceMapSupplier sectionSupplier [VARIABLES] StringCharIterator content boolean JSONObject sourceMapRoot ArrayList lines JSONException ex String[] names sources String content contents file lineMap url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column current length line lineCount name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version SourceMapSupplier sectionSupplier  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	126	126	16	add	
70	[BUG] [BUGGY] } [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] String lineMap = sourceMapRoot.getString("mappings"); sources = getJavaStringArray(sourceMapRoot.getJSONArray("sources")); names = getJavaStringArray(sourceMapRoot.getJSONArray("names")); lines = Lists.newArrayListWithCapacity(lineCount); new MappingBuilder(lineMap).build(); } catch (JSONException ex) { throw new SourceMapParseException("JSON parse exception: " + ex); [BUGGY] } [BUGGY] } [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] parse [RETURN_TYPE] void  JSONObject sourceMapRoot SourceMapSupplier sectionSupplier [VARIABLES] StringCharIterator content boolean JSONObject sourceMapRoot ArrayList lines JSONException ex String[] names sources String content contents file lineMap url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column current length line lineCount name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version SourceMapSupplier sectionSupplier  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	129	129	16	replace	
71	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] String lineMap = sourceMapRoot.getString("mappings"); sources = getJavaStringArray(sourceMapRoot.getJSONArray("sources")); names = getJavaStringArray(sourceMapRoot.getJSONArray("names")); lines = Lists.newArrayListWithCapacity(lineCount); new MappingBuilder(lineMap).build(); } catch (JSONException ex) { throw new SourceMapParseException("JSON parse exception: " + ex); [BUGGY] [BUGGY] } } [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] parse [RETURN_TYPE] void  JSONObject sourceMapRoot SourceMapSupplier sectionSupplier [VARIABLES] StringCharIterator content boolean JSONObject sourceMapRoot ArrayList lines JSONException ex String[] names sources String content contents file lineMap url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column current length line lineCount name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version SourceMapSupplier sectionSupplier  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	129	129	16	add	
72	[BUG] [BUGGY] } [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] sources = getJavaStringArray(sourceMapRoot.getJSONArray("sources")); names = getJavaStringArray(sourceMapRoot.getJSONArray("names")); lines = Lists.newArrayListWithCapacity(lineCount); new MappingBuilder(lineMap).build(); } catch (JSONException ex) { throw new SourceMapParseException("JSON parse exception: " + ex); } [BUGGY] } [BUGGY]  [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] parse [RETURN_TYPE] void  JSONObject sourceMapRoot SourceMapSupplier sectionSupplier [VARIABLES] StringCharIterator content boolean JSONObject sourceMapRoot ArrayList lines JSONException ex String[] names sources String content contents file lineMap url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column current length line lineCount name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version SourceMapSupplier sectionSupplier  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	130	130	16	replace	
73	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] sources = getJavaStringArray(sourceMapRoot.getJSONArray("sources")); names = getJavaStringArray(sourceMapRoot.getJSONArray("names")); lines = Lists.newArrayListWithCapacity(lineCount); new MappingBuilder(lineMap).build(); } catch (JSONException ex) { throw new SourceMapParseException("JSON parse exception: " + ex); } [BUGGY] [BUGGY] } [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] parse [RETURN_TYPE] void  JSONObject sourceMapRoot SourceMapSupplier sectionSupplier [VARIABLES] StringCharIterator content boolean JSONObject sourceMapRoot ArrayList lines JSONException ex String[] names sources String content contents file lineMap url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column current length line lineCount name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version SourceMapSupplier sectionSupplier  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	130	130	16	add	
75	[BUG] [BUGGY] column--; [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] public OriginalMapping getMappingForLine(int lineNumber, int column) {  lineNumber--; [BUGGY] column--; [BUGGY]  if (lineNumber < 0 || lineNumber >= lines.size()) { return null; } Preconditions.checkState(lineNumber >= 0); Preconditions.checkState(column >= 0);   [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] getMappingForLine [RETURN_TYPE] OriginalMapping  int lineNumber int column [VARIABLES] StringCharIterator content boolean ArrayList entries lines String[] names sources String content contents file lineMap mapSectionContents url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column count current i index length line lineCount lineNumber name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	209	209	16	replace	
76	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] public OriginalMapping getMappingForLine(int lineNumber, int column) {  lineNumber--; [BUGGY] [BUGGY] column--; if (lineNumber < 0 || lineNumber >= lines.size()) { return null; } Preconditions.checkState(lineNumber >= 0); Preconditions.checkState(column >= 0);   [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] getMappingForLine [RETURN_TYPE] OriginalMapping  int lineNumber int column [VARIABLES] StringCharIterator content boolean ArrayList entries lines String[] names sources String content contents file lineMap mapSectionContents url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column count current i index length line lineCount lineNumber name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	209	209	16	add	
77	[BUG] [BUGGY] if (lineNumber < 0 || lineNumber >= lines.size()) { [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] public OriginalMapping getMappingForLine(int lineNumber, int column) {  lineNumber--; column--; [BUGGY] if (lineNumber < 0 || lineNumber >= lines.size()) { [BUGGY] return null; } Preconditions.checkState(lineNumber >= 0); Preconditions.checkState(column >= 0);   if (lines.get(lineNumber) == null) { return getPreviousMapping(lineNumber); [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] getMappingForLine [RETURN_TYPE] OriginalMapping  int lineNumber int column [VARIABLES] StringCharIterator content boolean ArrayList entries lines String[] names sources String content contents file lineMap mapSectionContents url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column count current i index length line lineCount lineNumber name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	211	211	16	replace	
78	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] public OriginalMapping getMappingForLine(int lineNumber, int column) {  lineNumber--; column--; [BUGGY] [BUGGY] if (lineNumber < 0 || lineNumber >= lines.size()) { return null; } Preconditions.checkState(lineNumber >= 0); Preconditions.checkState(column >= 0);   if (lines.get(lineNumber) == null) { return getPreviousMapping(lineNumber); [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] getMappingForLine [RETURN_TYPE] OriginalMapping  int lineNumber int column [VARIABLES] StringCharIterator content boolean ArrayList entries lines String[] names sources String content contents file lineMap mapSectionContents url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column count current i index length line lineCount lineNumber name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	211	211	16	add	
79	[BUG] [BUGGY] Preconditions.checkState(lineNumber >= 0); [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] public OriginalMapping getMappingForLine(int lineNumber, int column) {  lineNumber--; column--; if (lineNumber < 0 || lineNumber >= lines.size()) { return null; } [BUGGY] Preconditions.checkState(lineNumber >= 0); [BUGGY] Preconditions.checkState(column >= 0);   if (lines.get(lineNumber) == null) { return getPreviousMapping(lineNumber); } ArrayList<Entry> entries = lines.get(lineNumber);  [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] getMappingForLine [RETURN_TYPE] OriginalMapping  int lineNumber int column [VARIABLES] StringCharIterator content boolean ArrayList entries lines String[] names sources String content contents file lineMap mapSectionContents url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column count current i index length line lineCount lineNumber name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	215	215	16	replace	
80	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] public OriginalMapping getMappingForLine(int lineNumber, int column) {  lineNumber--; column--; if (lineNumber < 0 || lineNumber >= lines.size()) { return null; } [BUGGY] [BUGGY] Preconditions.checkState(lineNumber >= 0); Preconditions.checkState(column >= 0);   if (lines.get(lineNumber) == null) { return getPreviousMapping(lineNumber); } ArrayList<Entry> entries = lines.get(lineNumber);  [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] getMappingForLine [RETURN_TYPE] OriginalMapping  int lineNumber int column [VARIABLES] StringCharIterator content boolean ArrayList entries lines String[] names sources String content contents file lineMap mapSectionContents url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column count current i index length line lineCount lineNumber name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	215	215	16	add	
81	[BUG] [BUGGY] Preconditions.checkState(column >= 0); [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] public OriginalMapping getMappingForLine(int lineNumber, int column) {  lineNumber--; column--; if (lineNumber < 0 || lineNumber >= lines.size()) { return null; } Preconditions.checkState(lineNumber >= 0); [BUGGY] Preconditions.checkState(column >= 0); [BUGGY]   if (lines.get(lineNumber) == null) { return getPreviousMapping(lineNumber); } ArrayList<Entry> entries = lines.get(lineNumber);  Preconditions.checkState(entries.size() > 0); [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] getMappingForLine [RETURN_TYPE] OriginalMapping  int lineNumber int column [VARIABLES] StringCharIterator content boolean ArrayList entries lines String[] names sources String content contents file lineMap mapSectionContents url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column count current i index length line lineCount lineNumber name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	216	216	16	replace	
82	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] public OriginalMapping getMappingForLine(int lineNumber, int column) {  lineNumber--; column--; if (lineNumber < 0 || lineNumber >= lines.size()) { return null; } Preconditions.checkState(lineNumber >= 0); [BUGGY] [BUGGY] Preconditions.checkState(column >= 0);   if (lines.get(lineNumber) == null) { return getPreviousMapping(lineNumber); } ArrayList<Entry> entries = lines.get(lineNumber);  Preconditions.checkState(entries.size() > 0); [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] getMappingForLine [RETURN_TYPE] OriginalMapping  int lineNumber int column [VARIABLES] StringCharIterator content boolean ArrayList entries lines String[] names sources String content contents file lineMap mapSectionContents url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column count current i index length line lineCount lineNumber name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	216	216	16	add	
83	[BUG] [BUGGY] if (lines.get(lineNumber) == null) { [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] if (lineNumber < 0 || lineNumber >= lines.size()) { return null; } Preconditions.checkState(lineNumber >= 0); Preconditions.checkState(column >= 0);   [BUGGY] if (lines.get(lineNumber) == null) { [BUGGY] return getPreviousMapping(lineNumber); } ArrayList<Entry> entries = lines.get(lineNumber);  Preconditions.checkState(entries.size() > 0); if (entries.get(0).getGeneratedColumn() > column) { return getPreviousMapping(lineNumber); }  [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] getMappingForLine [RETURN_TYPE] OriginalMapping  int lineNumber int column [VARIABLES] StringCharIterator content boolean ArrayList entries lines String[] names sources String content contents file lineMap mapSectionContents url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column count current i index length line lineCount lineNumber name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	220	220	16	replace	
84	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] if (lineNumber < 0 || lineNumber >= lines.size()) { return null; } Preconditions.checkState(lineNumber >= 0); Preconditions.checkState(column >= 0);   [BUGGY] [BUGGY] if (lines.get(lineNumber) == null) { return getPreviousMapping(lineNumber); } ArrayList<Entry> entries = lines.get(lineNumber);  Preconditions.checkState(entries.size() > 0); if (entries.get(0).getGeneratedColumn() > column) { return getPreviousMapping(lineNumber); }  [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] getMappingForLine [RETURN_TYPE] OriginalMapping  int lineNumber int column [VARIABLES] StringCharIterator content boolean ArrayList entries lines String[] names sources String content contents file lineMap mapSectionContents url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column count current i index length line lineCount lineNumber name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	220	220	16	add	
85	[BUG] [BUGGY] ArrayList<Entry> entries = lines.get(lineNumber); [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] Preconditions.checkState(lineNumber >= 0); Preconditions.checkState(column >= 0);   if (lines.get(lineNumber) == null) { return getPreviousMapping(lineNumber); } [BUGGY] ArrayList<Entry> entries = lines.get(lineNumber); [BUGGY]  Preconditions.checkState(entries.size() > 0); if (entries.get(0).getGeneratedColumn() > column) { return getPreviousMapping(lineNumber); } int index = search(entries, column, 0, entries.size() - 1); Preconditions.checkState(index >= 0, "unexpected:%s", index); return getOriginalMappingForEntry(entries.get(index)); } [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] getMappingForLine [RETURN_TYPE] OriginalMapping  int lineNumber int column [VARIABLES] StringCharIterator content boolean ArrayList entries lines String[] names sources String content contents file lineMap mapSectionContents url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column count current i index length line lineCount lineNumber name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	224	224	16	replace	
86	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] Preconditions.checkState(lineNumber >= 0); Preconditions.checkState(column >= 0);   if (lines.get(lineNumber) == null) { return getPreviousMapping(lineNumber); } [BUGGY] [BUGGY] ArrayList<Entry> entries = lines.get(lineNumber);  Preconditions.checkState(entries.size() > 0); if (entries.get(0).getGeneratedColumn() > column) { return getPreviousMapping(lineNumber); } int index = search(entries, column, 0, entries.size() - 1); Preconditions.checkState(index >= 0, "unexpected:%s", index); return getOriginalMappingForEntry(entries.get(index)); } [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] getMappingForLine [RETURN_TYPE] OriginalMapping  int lineNumber int column [VARIABLES] StringCharIterator content boolean ArrayList entries lines String[] names sources String content contents file lineMap mapSectionContents url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column count current i index length line lineCount lineNumber name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	224	224	16	add	
87	[BUG] [BUGGY] Preconditions.checkState(entries.size() > 0); [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] Preconditions.checkState(column >= 0);   if (lines.get(lineNumber) == null) { return getPreviousMapping(lineNumber); } ArrayList<Entry> entries = lines.get(lineNumber);  [BUGGY] Preconditions.checkState(entries.size() > 0); [BUGGY] if (entries.get(0).getGeneratedColumn() > column) { return getPreviousMapping(lineNumber); } int index = search(entries, column, 0, entries.size() - 1); Preconditions.checkState(index >= 0, "unexpected:%s", index); return getOriginalMappingForEntry(entries.get(index)); } [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] getMappingForLine [RETURN_TYPE] OriginalMapping  int lineNumber int column [VARIABLES] StringCharIterator content boolean ArrayList entries lines String[] names sources String content contents file lineMap mapSectionContents url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column count current i index length line lineCount lineNumber name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	226	226	16	replace	
88	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] Preconditions.checkState(column >= 0);   if (lines.get(lineNumber) == null) { return getPreviousMapping(lineNumber); } ArrayList<Entry> entries = lines.get(lineNumber);  [BUGGY] [BUGGY] Preconditions.checkState(entries.size() > 0); if (entries.get(0).getGeneratedColumn() > column) { return getPreviousMapping(lineNumber); } int index = search(entries, column, 0, entries.size() - 1); Preconditions.checkState(index >= 0, "unexpected:%s", index); return getOriginalMappingForEntry(entries.get(index)); } [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] getMappingForLine [RETURN_TYPE] OriginalMapping  int lineNumber int column [VARIABLES] StringCharIterator content boolean ArrayList entries lines String[] names sources String content contents file lineMap mapSectionContents url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column count current i index length line lineCount lineNumber name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	226	226	16	add	
89	[BUG] [BUGGY] if (entries.get(0).getGeneratedColumn() > column) { [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT]   if (lines.get(lineNumber) == null) { return getPreviousMapping(lineNumber); } ArrayList<Entry> entries = lines.get(lineNumber);  Preconditions.checkState(entries.size() > 0); [BUGGY] if (entries.get(0).getGeneratedColumn() > column) { [BUGGY] return getPreviousMapping(lineNumber); } int index = search(entries, column, 0, entries.size() - 1); Preconditions.checkState(index >= 0, "unexpected:%s", index); return getOriginalMappingForEntry(entries.get(index)); } [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] getMappingForLine [RETURN_TYPE] OriginalMapping  int lineNumber int column [VARIABLES] StringCharIterator content boolean ArrayList entries lines String[] names sources String content contents file lineMap mapSectionContents url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column count current i index length line lineCount lineNumber name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	227	227	16	replace	
90	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT]   if (lines.get(lineNumber) == null) { return getPreviousMapping(lineNumber); } ArrayList<Entry> entries = lines.get(lineNumber);  Preconditions.checkState(entries.size() > 0); [BUGGY] [BUGGY] if (entries.get(0).getGeneratedColumn() > column) { return getPreviousMapping(lineNumber); } int index = search(entries, column, 0, entries.size() - 1); Preconditions.checkState(index >= 0, "unexpected:%s", index); return getOriginalMappingForEntry(entries.get(index)); } [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] getMappingForLine [RETURN_TYPE] OriginalMapping  int lineNumber int column [VARIABLES] StringCharIterator content boolean ArrayList entries lines String[] names sources String content contents file lineMap mapSectionContents url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column count current i index length line lineCount lineNumber name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	227	227	16	add	
91	[BUG] [BUGGY] int index = search(entries, column, 0, entries.size() - 1); [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] return getPreviousMapping(lineNumber); } ArrayList<Entry> entries = lines.get(lineNumber);  Preconditions.checkState(entries.size() > 0); if (entries.get(0).getGeneratedColumn() > column) { return getPreviousMapping(lineNumber); } [BUGGY] int index = search(entries, column, 0, entries.size() - 1); [BUGGY] Preconditions.checkState(index >= 0, "unexpected:%s", index); return getOriginalMappingForEntry(entries.get(index)); } [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] getMappingForLine [RETURN_TYPE] OriginalMapping  int lineNumber int column [VARIABLES] StringCharIterator content boolean ArrayList entries lines String[] names sources String content contents file lineMap mapSectionContents url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column count current i index length line lineCount lineNumber name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	231	231	16	replace	
92	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] return getPreviousMapping(lineNumber); } ArrayList<Entry> entries = lines.get(lineNumber);  Preconditions.checkState(entries.size() > 0); if (entries.get(0).getGeneratedColumn() > column) { return getPreviousMapping(lineNumber); } [BUGGY] [BUGGY] int index = search(entries, column, 0, entries.size() - 1); Preconditions.checkState(index >= 0, "unexpected:%s", index); return getOriginalMappingForEntry(entries.get(index)); } [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] getMappingForLine [RETURN_TYPE] OriginalMapping  int lineNumber int column [VARIABLES] StringCharIterator content boolean ArrayList entries lines String[] names sources String content contents file lineMap mapSectionContents url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column count current i index length line lineCount lineNumber name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	231	231	16	add	
93	[BUG] [BUGGY] Preconditions.checkState(index >= 0, "unexpected:%s", index); [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] } ArrayList<Entry> entries = lines.get(lineNumber);  Preconditions.checkState(entries.size() > 0); if (entries.get(0).getGeneratedColumn() > column) { return getPreviousMapping(lineNumber); } int index = search(entries, column, 0, entries.size() - 1); [BUGGY] Preconditions.checkState(index >= 0, "unexpected:%s", index); [BUGGY] return getOriginalMappingForEntry(entries.get(index)); } [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] getMappingForLine [RETURN_TYPE] OriginalMapping  int lineNumber int column [VARIABLES] StringCharIterator content boolean ArrayList entries lines String[] names sources String content contents file lineMap mapSectionContents url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column count current i index length line lineCount lineNumber name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	232	232	16	replace	
94	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] } ArrayList<Entry> entries = lines.get(lineNumber);  Preconditions.checkState(entries.size() > 0); if (entries.get(0).getGeneratedColumn() > column) { return getPreviousMapping(lineNumber); } int index = search(entries, column, 0, entries.size() - 1); [BUGGY] [BUGGY] Preconditions.checkState(index >= 0, "unexpected:%s", index); return getOriginalMappingForEntry(entries.get(index)); } [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] getMappingForLine [RETURN_TYPE] OriginalMapping  int lineNumber int column [VARIABLES] StringCharIterator content boolean ArrayList entries lines String[] names sources String content contents file lineMap mapSectionContents url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column count current i index length line lineCount lineNumber name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	232	232	16	add	
95	[BUG] [BUGGY] return getOriginalMappingForEntry(entries.get(index)); [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] ArrayList<Entry> entries = lines.get(lineNumber);  Preconditions.checkState(entries.size() > 0); if (entries.get(0).getGeneratedColumn() > column) { return getPreviousMapping(lineNumber); } int index = search(entries, column, 0, entries.size() - 1); Preconditions.checkState(index >= 0, "unexpected:%s", index); [BUGGY] return getOriginalMappingForEntry(entries.get(index)); [BUGGY] } [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] getMappingForLine [RETURN_TYPE] OriginalMapping  int lineNumber int column [VARIABLES] StringCharIterator content boolean ArrayList entries lines String[] names sources String content contents file lineMap mapSectionContents url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column count current i index length line lineCount lineNumber name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	233	233	16	replace	
96	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] ArrayList<Entry> entries = lines.get(lineNumber);  Preconditions.checkState(entries.size() > 0); if (entries.get(0).getGeneratedColumn() > column) { return getPreviousMapping(lineNumber); } int index = search(entries, column, 0, entries.size() - 1); Preconditions.checkState(index >= 0, "unexpected:%s", index); [BUGGY] [BUGGY] return getOriginalMappingForEntry(entries.get(index)); } [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] getMappingForLine [RETURN_TYPE] OriginalMapping  int lineNumber int column [VARIABLES] StringCharIterator content boolean ArrayList entries lines String[] names sources String content contents file lineMap mapSectionContents url Map reverseSourceMapping int MAX_ENTRY_VALUES UNMAPPED column count current i index length line lineCount lineNumber name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	233	233	16	add	
97	[BUG] [BUGGY] int len = array.length(); [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] private String[] getJavaStringArray(JSONArray array) throws JSONException { [BUGGY] int len = array.length(); [BUGGY] String[] result = new String[len]; for(int i = 0; i < len; i++) { result[i] = array.getString(i); } return result; } [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] getJavaStringArray [RETURN_TYPE] String[]  JSONArray array [VARIABLES] StringCharIterator content boolean ArrayList entries lines JSONArray array String[] names result sources String content contents file lineMap mapSectionContents originalFile url Map reverseSourceMapping sourceLineToCollectionMap int MAX_ENTRY_VALUES UNMAPPED column count current i index len length line lineCount lineNumber name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	270	270	16	replace	
98	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] private String[] getJavaStringArray(JSONArray array) throws JSONException { [BUGGY] [BUGGY] int len = array.length(); String[] result = new String[len]; for(int i = 0; i < len; i++) { result[i] = array.getString(i); } return result; } [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] getJavaStringArray [RETURN_TYPE] String[]  JSONArray array [VARIABLES] StringCharIterator content boolean ArrayList entries lines JSONArray array String[] names result sources String content contents file lineMap mapSectionContents originalFile url Map reverseSourceMapping sourceLineToCollectionMap int MAX_ENTRY_VALUES UNMAPPED column count current i index len length line lineCount lineNumber name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	270	270	16	add	
99	[BUG] [BUGGY] String[] result = new String[len]; [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] private String[] getJavaStringArray(JSONArray array) throws JSONException { int len = array.length(); [BUGGY] String[] result = new String[len]; [BUGGY] for(int i = 0; i < len; i++) { result[i] = array.getString(i); } return result; } [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] getJavaStringArray [RETURN_TYPE] String[]  JSONArray array [VARIABLES] StringCharIterator content boolean ArrayList entries lines JSONArray array String[] names result sources String content contents file lineMap mapSectionContents originalFile url Map reverseSourceMapping sourceLineToCollectionMap int MAX_ENTRY_VALUES UNMAPPED column count current i index len length line lineCount lineNumber name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	271	271	16	replace	
100	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: null expected:<...t":1 [CONTEXT] private String[] getJavaStringArray(JSONArray array) throws JSONException { int len = array.length(); [BUGGY] [BUGGY] String[] result = new String[len]; for(int i = 0; i < len; i++) { result[i] = array.getString(i); } return result; } [CLASS] SourceMapConsumerV3 DefaultSourceMapSupplier MappingBuilder StringCharIterator UnmappedEntry UnnamedEntry NamedEntry [METHOD] getJavaStringArray [RETURN_TYPE] String[]  JSONArray array [VARIABLES] StringCharIterator content boolean ArrayList entries lines JSONArray array String[] names result sources String content contents file lineMap mapSectionContents originalFile url Map reverseSourceMapping sourceLineToCollectionMap int MAX_ENTRY_VALUES UNMAPPED column count current i index len length line lineCount lineNumber name previousCol previousNameId previousSrcColumn previousSrcId previousSrcLine srcColumn srcFile srcLine version  	projects/Closure47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java	0.7071067811865475	271	271	16	add	
