bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(escapeChar!=  null  ||  delimiter  ==  quoteCharacter.charValue())  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  ||  delimiter  ==  quoteCharacter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  ||  delimiter  ==  quoteCharacter.charValue())  {	  if(escapeChar!=    null    &&    delimiter    ==    quoteCharacter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
2	[BUG]  [BUGGY]  if(quoteChar!=  null)  {  if(delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  delimiter  cannot  be  the  same  ('   "  +  delimiter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(quoteChar!=  null)  {  if(delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  delimiter  cannot  be  the  same  ('   "  +  delimiter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(quoteChar!=  null)  {  if(delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  delimiter  cannot  be  the  same  ('   "  +  delimiter  +   "') ");  }	  if(escapeCharacter!=    null)    {    if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "The    delimiter    cannot    be    the    same    ('   "    +    delimiter    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
3	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escapeChar  ==  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escapeChar  ==  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(delimiter!=  null  &&  escapeChar  ==  quoteChar.charValue())  {	  if(escapeChar!=    null    &&    delimiter    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
4	[BUG]  [BUGGY]  if(escapeChar!=  null  ||  delimiter  ==  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  ||  delimiter  ==  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  ||  delimiter  ==  quoteChar.charValue())  {	  if(escapeChar!=    null    &&    delimiter    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
5	[BUG]  [BUGGY]  Character  character  =  delimiter.charValue();  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  Character  character  =  delimiter.charValue();  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	Character  character  =  delimiter.charValue();	  Character    character    =    quoteCharacter.charValue();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
6	[BUG]  [BUGGY]  Character  character  =  quoteCharacter.toCharArray();  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  Character  character  =  quoteCharacter.toCharArray();  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	Character  character  =  quoteCharacter.toCharArray();	  Character    character    =    quoteCharacter.charValue();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
7	[BUG]  [BUGGY]  Character  character  =  quoteCharacter.characterValue();  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  Character  character  =  quoteCharacter.characterValue();  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	Character  character  =  quoteCharacter.characterValue();	  Character    character    =    quoteCharacter.charValue();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
8	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  quoteCharacter.toCharArray())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  quoteCharacter.toCharArray())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  &&  delimiter  ==  quoteCharacter.toCharArray())  {	  if(escapeChar!=    null    &&    delimiter    ==    escapeCharacter.toCharArray())    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
9	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  quoteChar.toCharArray())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  quoteChar.toCharArray())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  &&  delimiter  ==  quoteChar.toCharArray())  {	  if(escapeChar!=    null    &&    delimiter    ==    escapeCharacter.toCharArray())    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
10	[BUG]  [BUGGY]  if(escapeChar!=  null  ||  delimiter  ==  escapeCharacter.toCharArray())  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  ||  delimiter  ==  escapeCharacter.toCharArray())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  ||  delimiter  ==  escapeCharacter.toCharArray())  {	  if(escapeChar!=    null    &&    delimiter    ==    escapeCharacter.toCharArray())    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
11	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escapeChar  ==  escapeCharacter.toCharArray())  {  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escapeChar  ==  escapeCharacter.toCharArray())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(delimiter!=  null  &&  escapeChar  ==  escapeCharacter.toCharArray())  {	  if(escapeChar!=    null    &&    delimiter    ==    escapeCharacter.toCharArray())    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
12	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  escapeChar  ==  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  escapeChar  ==  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  &&  escapeChar  ==  quoteChar.charValue())  {	  if(escapeChar!=    null    &&    escapeChar    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
13	[BUG]  [BUGGY]  if(escapeChar!=  null  ||  escapeChar  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  ||  escapeChar  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  ||  escapeChar  ==  delimiter.charValue())  {	  if(escapeChar!=    null    &&    escapeChar    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
14	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  escapeChar  ==  description.charValue())  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  escapeChar  ==  description.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  &&  escapeChar  ==  description.charValue())  {	  if(escapeChar!=    null    &&    escapeChar    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
15	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escapeCharacter  ==  delimiter.getChar())  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escapeCharacter  ==  delimiter.getChar())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(delimiter!=  null  &&  escapeCharacter  ==  delimiter.getChar())  {	  if(escapeCharacter!=    null    &&    escapeCharacter    ==    delimiter.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
16	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  escapeChar  ==  delimiter.getChar())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  escapeChar  ==  delimiter.getChar())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  &&  escapeChar  ==  delimiter.getChar())  {	  if(escapeCharacter!=    null    &&    escapeCharacter    ==    delimiter.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
17	[BUG]  [BUGGY]  if(escapeCharacter  ==  null  &&  escapeCharacter  ==  delimiter.getChar())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeCharacter  ==  null  &&  escapeCharacter  ==  delimiter.getChar())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeCharacter  ==  null  &&  escapeCharacter  ==  delimiter.getChar())  {	  if(escapeCharacter!=    null    &&    escapeCharacter    ==    delimiter.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
18	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escapeChar  ==  quoteChar.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escapeChar  ==  quoteChar.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(delimiter!=  null  &&  escapeChar  ==  quoteChar.charValue())  {  throw  new  IllegalArgumentException( " ");  }	  if(escapeChar!=    null    &&    delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
19	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escapeChar!=  quoteChar.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escapeChar!=  quoteChar.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(delimiter!=  null  &&  escapeChar!=  quoteChar.charValue())  {  throw  new  IllegalArgumentException( " ");  }	  if(escapeChar!=    null    &&    delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
20	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escapeCharacter  ==  quoteCharacter.getChar())  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escapeCharacter  ==  quoteCharacter.getChar())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(delimiter!=  null  &&  escapeCharacter  ==  quoteCharacter.getChar())  {	  if(escapeCharacter!=    null    &&    delimiter    ==    quoteCharacter.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
21	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escapeChar  ==  quoteCharacter.getChar())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escapeChar  ==  quoteCharacter.getChar())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(delimiter!=  null  &&  escapeChar  ==  quoteCharacter.getChar())  {	  if(escapeCharacter!=    null    &&    delimiter    ==    quoteCharacter.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
22	[BUG]  [BUGGY]  While(escapeChar!=  null  &&  escapeChar.equals(c))  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeChar  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  While(escapeChar!=  null  &&  escapeChar.equals(c))  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeChar  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	While(escapeChar!=  null  &&  escapeChar.equals(c))  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeChar  +   "') ");  }	  if(escapeChar!=    null)    {    throw    new    IllegalArgumentException(   "The    escape    character    and    the    delimiter    cannot    be    the    same    ('   "    +    escapeChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
23	[BUG]  [BUGGY]  While(escapeChar!=  null)  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeChar  + "') ");  }  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  While(escapeChar!=  null)  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeChar  + "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	While(escapeChar!=  null)  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeChar  + "') ");  }	  if(escapeChar!=    null)    {    throw    new    IllegalArgumentException(   "The    escape    character    and    the    delimiter    cannot    be    the    same    ('   "    +    escapeChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
24	[BUG]  [BUGGY]  safeEscapeChar(escapeCharacter)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  safeEscapeChar(escapeCharacter)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	safeEscapeChar(escapeCharacter)  {  throw  new  IllegalArgumentException( " ");  }	  if(escapeChar!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
25	[BUG]  [BUGGY]  if(escapeChar!=  null)  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  (' "  +  escapeCharacter  + "') ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null)  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  (' "  +  escapeCharacter  + "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null)  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  (' "  +  escapeCharacter  + "') ");  }	  if(escapeChar!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
26	[BUG]  [BUGGY]  Character  character  =  delimChar.charValue();  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  Character  character  =  delimChar.charValue();  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	Character  character  =  delimChar.charValue();	  Character    character    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
27	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  escapeCharacter  ==  quoteCharacter.getChar())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  escapeCharacter  ==  quoteCharacter.getChar())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeCharacter!=  null  &&  escapeCharacter  ==  quoteCharacter.getChar())  {	  if(delimiter!=    null    &&    escapeCharacter    ==    escapeCharacter.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
28	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  escapeCharacter  ==  quoteChar.getChar())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  escapeCharacter  ==  quoteChar.getChar())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeCharacter!=  null  &&  escapeCharacter  ==  quoteChar.getChar())  {	  if(delimiter!=    null    &&    escapeCharacter    ==    escapeCharacter.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
29	[BUG]  [BUGGY]  Character  character  =  getCharacter(c,  escapeChar);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  Character  character  =  getCharacter(c,  escapeChar);  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	Character  character  =  getCharacter(c,  escapeChar);	  Character    character    =    getCharacter(c);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
30	[BUG]  [BUGGY]  Character  character  =  getCharacter(c,  escapeCharacter);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  Character  character  =  getCharacter(c,  escapeCharacter);  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	Character  character  =  getCharacter(c,  escapeCharacter);	  Character    character    =    getCharacter(c);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
31	[BUG]  [BUGGY]  Character  character  =  getCharacter(quoteChar);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  Character  character  =  getCharacter(quoteChar);  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	Character  character  =  getCharacter(quoteChar);	  Character    character    =    getCharacter(c);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
32	[BUG]  [BUGGY]  if(delimiter  ==  null  &&  escapeCharacter  ==  quoteCharacter.getChar())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(delimiter  ==  null  &&  escapeCharacter  ==  quoteCharacter.getChar())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(delimiter  ==  null  &&  escapeCharacter  ==  quoteCharacter.getChar())  {	  if(escapeCharacter    ==    null    &&    delimiter    ==    quoteCharacter.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
33	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escapeChar  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escapeChar  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(delimiter!=  null  &&  escapeChar  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( " ");  }	  if(escapeChar!=    null    &&    delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
34	[BUG]  [BUGGY]  ||  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  ||  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	||  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( " ");  }	  if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
35	[BUG]  [BUGGY]  if(escapeCharacter!=  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeCharacter!=  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( " ");  }	  if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
36	[BUG]  [BUGGY]  if(escapeCharacter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeCharacter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeCharacter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( " ");  }	  if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
37	[BUG]  [BUGGY]  Character  delimiter  =  quoteCharacter.charValue();  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteCharacter.charValue();  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	Character  delimiter  =  quoteCharacter.charValue();	  Character    delimiter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
38	[BUG]  [BUGGY]  Character  delimiter  =  c.charValue();  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  Character  delimiter  =  c.charValue();  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	Character  delimiter  =  c.charValue();	  Character    delimiter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
39	[BUG]  [BUGGY]  Character  delimiter  =  delimiter.charValue();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  Character  delimiter  =  delimiter.charValue();  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	Character  delimiter  =  delimiter.charValue();	  Character    delimiter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
40	[BUG]  [BUGGY]  if(escapeChar  ==  null  ||  delimiter  ==  quoteCharacter.charValue())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar  ==  null  ||  delimiter  ==  quoteCharacter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar  ==  null  ||  delimiter  ==  quoteCharacter.charValue())  {	  if(escapeChar!=    null    ||    delimiter    ==    escapeCharacter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
41	[BUG]  [BUGGY]  if  (escapeChar!=  null  &&  escapeChar  ==  quoteCharacter.charValue())  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if  (escapeChar!=  null  &&  escapeChar  ==  quoteCharacter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if  (escapeChar!=  null  &&  escapeChar  ==  quoteCharacter.charValue())  {	  if    (delimiter!=    null    &&    escapeChar    ==    quoteCharacter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
42	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  quoteCharacter.getChar())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  quoteCharacter.getChar())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  &&  delimiter  ==  quoteCharacter.getChar())  {	  if(escapeChar!=    null    &&    delimiter    ==    escapeCharacter.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
43	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  quoteChar.getChar())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  quoteChar.getChar())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  &&  delimiter  ==  quoteChar.getChar())  {	  if(escapeChar!=    null    &&    delimiter    ==    escapeCharacter.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
44	[BUG]  [BUGGY]  if(escapeChar!=  null  ||  delimiter  ==  escapeCharacter.getChar())  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  ||  delimiter  ==  escapeCharacter.getChar())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  ||  delimiter  ==  escapeCharacter.getChar())  {	  if(escapeChar!=    null    &&    delimiter    ==    escapeCharacter.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
45	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escapeChar  ==  escapeCharacter.getChar())  {  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escapeChar  ==  escapeCharacter.getChar())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(delimiter!=  null  &&  escapeChar  ==  escapeCharacter.getChar())  {	  if(escapeChar!=    null    &&    delimiter    ==    escapeCharacter.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
46	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  escapeCharacter  ==  quoteCharacter.charValue())  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  escapeCharacter  ==  quoteCharacter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeCharacter!=  null  &&  escapeCharacter  ==  quoteCharacter.charValue())  {	  if(delimiter!=    null    &&    escapeCharacter    ==    quoteCharacter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
47	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }	  if(escapeCharacter!=    null)    {    if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
48	[BUG]  [BUGGY]  if(delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }	  if(escapeCharacter!=    null)    {    if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
49	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  quoteCharacter.getCharValue())  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  quoteCharacter.getCharValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  &&  delimiter  ==  quoteCharacter.getCharValue())  {	  if(escapeChar!=    null    &&    delimiter    ==    escapeCharacter.getCharValue())    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
50	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  quoteChar.getValue())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  quoteChar.getValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  &&  delimiter  ==  quoteChar.getValue())  {	  if(escapeChar!=    null    &&    delimiter    ==    escapeCharacter.getCharValue())    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
51	[BUG]  [BUGGY]  if(escapeChar!=  null  ||  delimiter  ==  escapeCharacter.getCharValue())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  ||  delimiter  ==  escapeCharacter.getCharValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  ||  delimiter  ==  escapeCharacter.getCharValue())  {	  if(escapeChar!=    null    &&    delimiter    ==    escapeCharacter.getCharValue())    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
52	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  quoteChar.getCharValue())  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  quoteChar.getCharValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  &&  delimiter  ==  quoteChar.getCharValue())  {	  if(escapeChar!=    null    &&    delimiter    ==    escapeCharacter.getCharValue())    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
53	[BUG]  [BUGGY]  if(quoteChar!=  null)  {  if(delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  escape  character  cannot  be  the  same  (' "  +  delimiter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(quoteChar!=  null)  {  if(delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  escape  character  cannot  be  the  same  (' "  +  delimiter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(quoteChar!=  null)  {  if(delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  escape  character  cannot  be  the  same  (' "  +  delimiter  +   "') ");  }	  if(escapeCharacter!=    null)    {    if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "The    escape    character    cannot    be    the    same    ('   "    +    delimiter    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
54	[BUG]  [BUGGY]  if(delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  delimiter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  delimiter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  delimiter  +   "') ");  }	  if(escapeCharacter!=    null)    {    if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "The    escape    character    cannot    be    the    same    ('   "    +    delimiter    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
55	[BUG]  [BUGGY]  if(escapeCharacter!=  delimiter)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  delimiter)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeCharacter!=  delimiter)  {  throw  new  IllegalArgumentException( " ");  }	  if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
56	[BUG]  [BUGGY]  (delimiter  ==  quoteCharacter.charValue()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  (delimiter  ==  quoteCharacter.charValue()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	(delimiter  ==  quoteCharacter.charValue()))  {  throw  new  IllegalArgumentException( " ");  }	  if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
57	[BUG]  [BUGGY]  if(escapeCharacter!=  quoteChar.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  quoteChar.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeCharacter!=  quoteChar.charValue())  {  throw  new  IllegalArgumentException( " ");  }	  if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
58	[BUG]  [BUGGY]  Character  character  =  escapeCharacter.charValue();  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  Character  character  =  escapeCharacter.charValue();  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	Character  character  =  escapeCharacter.charValue();	  Character    character    =    quoteCharacter.charValue();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
59	[BUG]  [BUGGY]  Character  character  =  c.charValue();  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  Character  character  =  c.charValue();  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	Character  character  =  c.charValue();	  Character    character    =    quoteCharacter.charValue();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
60	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  escapeChar!=  delimiter)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  escapeChar!=  delimiter)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  &&  escapeChar!=  delimiter)  {  throw  new  IllegalArgumentException( " ");  }	  if(escapeChar!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
61	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  escapeChar  ==  delimiter)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  escapeChar  ==  delimiter)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  &&  escapeChar  ==  delimiter)  {  throw  new  IllegalArgumentException( " ");  }	  if(escapeChar!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
62	[BUG]  [BUGGY]  parentMarker!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  parentMarker!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	parentMarker!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(escapeChar!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
63	[BUG]  [BUGGY]  Character  character  =  getCharacter(delimiter);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  Character  character  =  getCharacter(delimiter);  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	Character  character  =  getCharacter(delimiter);	  Character    character    =    getCharacter(c);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
64	[BUG]  [BUGGY]  Character  character  =  getCharacter(escapeChar);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  Character  character  =  getCharacter(escapeChar);  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	Character  character  =  getCharacter(escapeChar);	  Character    character    =    getCharacter(c);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
65	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  escapeChar.charValue())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  escapeChar.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  &&  delimiter  ==  escapeChar.charValue())  {	  if(escapeChar!=    null    &&    delimiter    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
66	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  quoteChar.length())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  quoteChar.length())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  &&  delimiter  ==  quoteChar.length())  {	  if(escapeChar!=    null    &&    delimiter    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
67	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escapeChar  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escapeChar  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(delimiter!=  null  &&  escapeChar  ==  delimiter.charValue())  {	  if(escapeChar!=    null    &&    delimiter    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
68	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  escapeChar.getChar())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  escapeChar.getChar())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  &&  delimiter  ==  escapeChar.getChar())  {	  if(escapeChar!=    null    &&    delimiter    ==    escapeCharacter.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
69	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  escapeCharacter  ==  delimiter.getChar())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  escapeCharacter  ==  delimiter.getChar())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  &&  escapeCharacter  ==  delimiter.getChar())  {	  if(delimiter!=    null    &&    escapeCharacter    ==    escapeCharacter.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
70	[BUG]  [BUGGY]  Character  character  =  delim.charValue();  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  Character  character  =  delim.charValue();  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	Character  character  =  delim.charValue();	  Character    character    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
71	[BUG]  [BUGGY]  if(delimiter  ==  null  &&  escapeChar!=  quoteCharacter.getChar())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(delimiter  ==  null  &&  escapeChar!=  quoteCharacter.getChar())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(delimiter  ==  null  &&  escapeChar!=  quoteCharacter.getChar())  {	  if(escapeCharacter    ==    null    &&    delimiter    ==    quoteCharacter.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
72	[BUG]  [BUGGY]  if(delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  escape  character  cannot  be  the  same  (' "  +  delimiter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  escape  character  cannot  be  the  same  (' "  +  delimiter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  escape  character  cannot  be  the  same  (' "  +  delimiter  +   "') ");  }	  if(escapeCharacter!=    null)    {    if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "The    escape    character    cannot    be    the    same    ('   "    +    delimiter    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
73	[BUG]  [BUGGY]  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  delimiter  +   "') ");  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  delimiter  +   "') ");  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  delimiter  +   "') ");	  if(escapeCharacter!=    null)    {    if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "The    escape    character    cannot    be    the    same    ('   "    +    delimiter    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
74	[BUG]  [BUGGY]  if(escapeChar!=  null)  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  delimiter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null)  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  delimiter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null)  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  delimiter  +   "') ");  }	  if(escapeChar!=    null)    {    throw    new    IllegalArgumentException(   "The    escape    character    and    the    delimiter    cannot    be    the    same    ('   "    +    escapeChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
75	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  escapeChar  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  escapeChar  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  &&  escapeChar  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( " ");  }	  if(escapeCharacter!=    null)    {    if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
76	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  escapeChar  ==  quoteChar.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  escapeChar  ==  quoteChar.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  &&  escapeChar  ==  quoteChar.charValue())  {  throw  new  IllegalArgumentException( " ");  }	  if(escapeCharacter!=    null)    {    if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
77	[BUG]  [BUGGY]  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +   "') ");  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +   "') ");  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +   "') ");	  if(escapeCharacter!=    null)    {    if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
78	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  escapeCharacter.getDelimiter())  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  escapeCharacter.getDelimiter())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  &&  delimiter  ==  escapeCharacter.getDelimiter())  {	  if(escapeChar!=    null    &&    delimiter    ==    escapeCharacter.getCharValue())    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
79	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  escapeChar  ==  delimiter.getCharValue())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  escapeChar  ==  delimiter.getCharValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  &&  escapeChar  ==  delimiter.getCharValue())  {	  if(escapeChar!=    null    &&    delimiter    ==    escapeCharacter.getCharValue())    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
80	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  escapeChar.getCharValue())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  escapeChar.getCharValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  &&  delimiter  ==  escapeChar.getCharValue())  {	  if(escapeChar!=    null    &&    delimiter    ==    escapeCharacter.getCharValue())    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
81	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  escapeChar.toCharArray())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  escapeChar.toCharArray())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  &&  delimiter  ==  escapeChar.toCharArray())  {	  if(escapeChar!=    null    &&    delimiter    ==    escapeCharacter.toCharArray())    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
82	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  escapeChar  ==  delimiter.toCharArray())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  escapeChar  ==  delimiter.toCharArray())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  &&  escapeChar  ==  delimiter.toCharArray())  {	  if(escapeChar!=    null    &&    delimiter    ==    escapeCharacter.toCharArray())    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
83	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escapeChar  ==  delimiter.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escapeChar  ==  delimiter.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(delimiter!=  null  &&  escapeChar  ==  delimiter.charValue())  {  throw  new  IllegalArgumentException( " ");  }	  if(escapeChar!=    null    &&    delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
84	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escapeChar!=  delimiter.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escapeChar!=  delimiter.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(delimiter!=  null  &&  escapeChar!=  delimiter.charValue())  {  throw  new  IllegalArgumentException( " ");  }	  if(escapeChar!=    null    &&    delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
85	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  escapeChar!=  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  escapeChar!=  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  &&  escapeChar!=  delimiter.charValue())  {	  if(escapeChar!=    null    &&    escapeChar    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
86	[BUG]  [BUGGY]  if(delimiter!=  null  ||  escapeCharacter  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  ||  escapeCharacter  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(delimiter!=  null  ||  escapeCharacter  ==  delimiter.charValue())  {	  if(escapeChar!=    null    ||    delimiter    ==    escapeCharacter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
87	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  escapeCharacter  ==  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  escapeCharacter  ==  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeCharacter!=  null  &&  escapeCharacter  ==  quoteChar.charValue())  {	  if(delimiter!=    null    &&    escapeCharacter    ==    quoteCharacter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
88	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  delimiter  cannot  be  the  same  (' "  +  delimiter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  delimiter  cannot  be  the  same  (' "  +  delimiter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  delimiter  cannot  be  the  same  (' "  +  delimiter  +   "') ");  }	  if(escapeCharacter!=    null)    {    if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "The    delimiter    cannot    be    the    same    ('   "    +    delimiter    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
89	[BUG]  [BUGGY]  if(delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  delimiter  cannot  be  the  same  (' "  +  delimiter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  delimiter  cannot  be  the  same  (' "  +  delimiter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  delimiter  cannot  be  the  same  (' "  +  delimiter  +   "') ");  }	  if(escapeCharacter!=    null)    {    if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "The    delimiter    cannot    be    the    same    ('   "    +    delimiter    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
90	[BUG]  [BUGGY]  if(escapeChar!=  null)  {  if(delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  delimiter  cannot  be  the  same  (' "  +  delimiter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null)  {  if(delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  delimiter  cannot  be  the  same  (' "  +  delimiter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null)  {  if(delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  delimiter  cannot  be  the  same  (' "  +  delimiter  +   "') ");  }	  if(escapeCharacter!=    null)    {    if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "The    delimiter    cannot    be    the    same    ('   "    +    delimiter    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
91	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  escapeChar  ==  delimiter.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  escapeChar  ==  delimiter.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  &&  escapeChar  ==  delimiter.charValue())  {  throw  new  IllegalArgumentException( " ");  }	  if(escapeChar!=    null    &&    delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
92	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  delimiter  ==  delimiter.getChar())  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  delimiter  ==  delimiter.getChar())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeCharacter!=  null  &&  delimiter  ==  delimiter.getChar())  {	  if(escapeCharacter!=    null    &&    escapeCharacter    ==    delimiter.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
93	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  (' "  +  escapeCharacter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  (' "  +  escapeCharacter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  (' "  +  escapeCharacter  +   "') ");  }	  if(escapeChar!=    null    &&    delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
94	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  delimiter  ==  quoteCharacter.getCharValue())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  delimiter  ==  quoteCharacter.getCharValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeCharacter!=  null  &&  delimiter  ==  quoteCharacter.getCharValue())  {	  if(escapeCharacter    ==    null    &&    delimiter    ==    quoteCharacter.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
95	[BUG]  [BUGGY]  if(delimiter  ==  null  &&  escapeCharacter  ==  escapeCharacter.charValue())  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(delimiter  ==  null  &&  escapeCharacter  ==  escapeCharacter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(delimiter  ==  null  &&  escapeCharacter  ==  escapeCharacter.charValue())  {	  if(escapeChar    ==    null    &&    delimiter    ==    escapeCharacter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
96	[BUG]  [BUGGY]  if  (escapeCharacter!=  null  &&  delimiter  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if  (escapeCharacter!=  null  &&  delimiter  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if  (escapeCharacter!=  null  &&  delimiter  ==  delimiter.charValue())  {	  if    (delimiter!=    null    &&    escapeCharacter    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
97	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escapeCharacter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escapeCharacter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(delimiter!=  null  &&  escapeCharacter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( " ");  }	  if(escapeChar!=    null    &&    delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
98	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  (' "  +  escapeCharacter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  (' "  +  escapeCharacter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  (' "  +  escapeCharacter  +   "') ");  }	  if(escapeChar!=    null    &&    delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
99	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(delimiter!=  null  &&  delimiter  ==  quoteCharacter.charValue())  {	  if(delimiter!=    null    &&    escapeCharacter    ==    quoteCharacter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
100	[BUG]  [BUGGY]  Character  character  =  getCharacter(escapeCharacter);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  Character  character  =  getCharacter(escapeCharacter);  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	Character  character  =  getCharacter(escapeCharacter);	  Character    character    =    getCharacter(c);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
101	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeCharacter!=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +   "') ");  }	  if(escapeCharacter!=    null)    {    if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
102	[BUG]  [BUGGY]  if(delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +   "') ");  }	  if(escapeCharacter!=    null)    {    if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
103	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  escapeCharacter  ==  delimiter)  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  escapeCharacter  ==  delimiter)  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  &&  escapeCharacter  ==  delimiter)  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +   "') ");  }	  if(escapeChar!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
104	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  escapeChar.equals(c))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  escapeChar.equals(c))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  &&  escapeChar.equals(c))  {  throw  new  IllegalArgumentException( " ");  }	  if(escapeChar!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
105	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  escapeChar.equals(delimiter))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  escapeChar.equals(delimiter))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  &&  escapeChar.equals(delimiter))  {  throw  new  IllegalArgumentException( " ");  }	  if(escapeChar!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
106	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  delimiter  ==  escapeCharacter.getValue())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  delimiter  ==  escapeCharacter.getValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeCharacter!=  null  &&  delimiter  ==  escapeCharacter.getValue())  {	  if(delimiter!=    null    &&    escapeCharacter    ==    escapeCharacter.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
107	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeCharacter!=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( " ");  }	  if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
108	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  escapeCharacter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  escapeCharacter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeCharacter!=  null  &&  escapeCharacter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( " ");  }	  if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
109	[BUG]  [BUGGY]  if(delimiter!=  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(delimiter!=  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( " ");  }	  if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
110	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  delimiter  ==  escapeCharacter.getCharValue())  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  delimiter  ==  escapeCharacter.getCharValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeCharacter!=  null  &&  delimiter  ==  escapeCharacter.getCharValue())  {	  if(escapeChar!=    null    &&    delimiter    ==    escapeCharacter.getCharValue())    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
111	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escapeCharacter  ==  delimiter.getCharValue())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escapeCharacter  ==  delimiter.getCharValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(delimiter!=  null  &&  escapeCharacter  ==  delimiter.getCharValue())  {	  if(escapeChar!=    null    &&    delimiter    ==    escapeCharacter.getCharValue())    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
112	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  delimiter  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  &&  delimiter  ==  delimiter.charValue())  {	  if(escapeChar!=    null    &&    escapeChar    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
113	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  delimiter  ==  escapeCharacter.toCharArray())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  delimiter  ==  escapeCharacter.toCharArray())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeCharacter!=  null  &&  delimiter  ==  escapeCharacter.toCharArray())  {	  if(escapeChar!=    null    &&    delimiter    ==    escapeCharacter.toCharArray())    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
114	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  escapeChar!=  delimiter)  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  escapeChar!=  delimiter)  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  &&  escapeChar!=  delimiter)  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +   "') ");  }	  if(escapeChar!=    null)    {    throw    new    IllegalArgumentException(   "The    escape    character    and    the    delimiter    cannot    be    the    same    ('   "    +    escapeChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
115	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  escapeChar!=  delimiter)  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeChar  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  escapeChar!=  delimiter)  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeChar  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar!=  null  &&  escapeChar!=  delimiter)  {  throw  new  IllegalArgumentException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeChar  +   "') ");  }	  if(escapeChar!=    null)    {    throw    new    IllegalArgumentException(   "The    escape    character    and    the    delimiter    cannot    be    the    same    ('   "    +    escapeChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
116	[BUG]  [BUGGY]  if(escapeChar  ==  null  ||  delimiter  ==  escapeCharacter.charValue())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(escapeChar  ==  null  ||  delimiter  ==  escapeCharacter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(escapeChar  ==  null  ||  delimiter  ==  escapeCharacter.charValue())  {	  if(escapeChar!=    null    ||    delimiter    ==    escapeCharacter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
117	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escapeCharacter  ==  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escapeCharacter  ==  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1389	1389	13	replace	if(delimiter!=  null  &&  escapeCharacter  ==  quoteChar.charValue())  {	  if(escapeChar!=    null    &&    delimiter    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
