projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter==null&&quoteMode==QuoteMode.NONE){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter==null&&quoteMode!=QuoteMode.NONE){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter!=null&&quoteModePolicy==QuoteMode.NONE){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter!=null&&quoteModePolicy.equals(quoteModePolicy)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter!=null&&quoteModePolicy.equals(commentStart)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter!=null&&quoteMode!=QuoteMode.NONE){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter!=null&&escapeCharacter.equals(commentMarker)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter!=null&&quoteMode==QuoteMode.NONE){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter!=null&&quoteModePolicy.equals(c)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter!=null||quoteMode!=QuoteMode.NONE){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter!=null&&quoteChar.equals(commentStart)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter!=null&&quoteChar.equals(commentMarker)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter!=null&&quoteMode.equals(c)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409Characterc=quoteCharacter.charAt(escapeCharacter);
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409Characterc=quoteChar.charAt(escapeCharacter);
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409QuoteModequoteModePolicy=quoteModePolicy.getInstance();
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409QuoteModequoteModePolicy=quoteModePolicy.getCSVFormat();
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter!=null&&quoteMode.equals(escapeCharacter)){thrownewIllegalArgumentException("Noquotesmodesetbutnoescapecharacterisset");}
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter!=null&&quoteMode.equals(escapeCharacter)){thrownewIllegalArgumentException("Thecommentstartandtheescapecharactercannotbethesame('"+quoteChar+"')");}
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter!=null&&quoteMode.equals(escapeCharacter)){thrownewIllegalArgumentException("");}
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter!=null&&quoteMode.equals(commentStart)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter!=null&&quoteModePolicy.equals(escapeCharacter)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter!=null&&escapeCharacter!=QuoteMode.NONE){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeChar!=null&&escapeChar.equals(c)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter!=null&&escapeCharacter.equals(c)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter!=null&&quoteMode.equals(commentMarker)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409Charactercharacter=quoteCharacter.charAt(quoteCharacter.length()-1);
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409Charactercharacter=quoteCharacter.charAt(escapeCharacter);
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409Characterc=quoteCharacter.charAt(escapeCharacter.length()-1);
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409Characterc=quoteCharacter.charAt(quoteCharacter.length()-1);
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter!=null&&quoteModePolicy.equals(commentMarker)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter!=null&&escapeCharacter.equals(commentStart)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409Characterc=quoteCharacter.charAt(escapeCharacter.length());
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409Characterc=escapeCharacter.charAt(escapeCharacter.length());
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409charc=quoteCharacter.charAt(escapeCharacter.length());
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409Characterc=quoteCharacter.charAt(quoteCharacter.length());
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeChar!=null&&quoteModePolicy.equals(c)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeChar!=null&&quoteModePolicy.equals(commentStart)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(c!=null&&quoteModePolicy.equals(escapeCharacter)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(c!=delimiter||quoteModePolicy.equals(c)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeChar!=null&&quoteMode.equals(c)){thrownewIllegalArgumentException("Noquotesmodesetbutnoescapecharacterisset");}
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeChar!=null&&quoteMode.equals(commentStart)){thrownewIllegalArgumentException("Noquotesmodesetbutnoescapecharacterisset");}
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409Charactercharacter=quoteCharacter.charAt(c);
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409Charactercharacter=c.charAt(escapeCharacter);
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409Charactercharacter=escapeCharacter.charAt(c);
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409Charactercharacter=quoteCharacter.charAt(0);
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter!=null&&quoteChar.equals(c)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeChar!=null&&quoteChar.equals(c)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter!=null&&quoteChar.equals(delimiter)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(c!=delim||escapeCharacter!=null&&quoteMode.equals(c)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(c!=null&&quoteMode.equals(escapeCharacter)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409QuoteModequoteModePolicy=quoteModePolicy.getFormat();
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409QuoteModequoteModePolicy=quoteModePolicy.getCommentFormat();
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409QuoteModequoteModePolicy=quoteModePolicy.getRawFormat();
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409Characterc=quoteModePolicy.charAt(escapeCharacter);
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409charc=quoteCharacter.charAt(escapeCharacter);
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409charc=quoteCharacter.charAt(escape);
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409charc=quoteCharacter.charAt(escapeChar);
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeChar!=null&&quoteMode.equals(c)){thrownewIllegalArgumentException("");}
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeChar!=null&&quoteMode.equals(commentStart)){thrownewIllegalArgumentException("");}
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeChar!=null&&quoteChar.equals(commentStart)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter!=null&&quoteChar.equals(escapeCharacter)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter==null||quoteMode!=QuoteMode.NONE){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409QuoteModequoteModePolicy=quoteModePolicy.getInstanceUTC();
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409QuoteModequoteModePolicy=quoteCharacter.getInstance();
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409QuoteModequoteModePolicy=quoteModePolicy.getInstance(c);
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(quoteMode!=null&&quoteMode.equals(c)){thrownewIllegalArgumentException("Thecommentstartandtheescapecharactercannotbethesame('"+quoteChar+"')");}
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(quoteChar!=null&&quoteMode.equals(c)){thrownewIllegalArgumentException("Thecommentstartandtheescapecharactercannotbethesame('"+quoteChar+"')");}
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(quoteMode!=null&&quoteMode.equals(commentStart)){thrownewIllegalArgumentException("Thecommentstartandtheescapecharactercannotbethesame('"+quoteChar+"')");}
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409Characterc=quoteChar.charAt(delimChar);
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409charc=quoteChar.charAt(escapeCharacter);
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409Characterc=escapeCharacter.charAt(escapeChar);
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409Characterc=quoteChar.charAt(escapeCharacter)+1;
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter!=null&&quoteModePolicy.equals(delimiter)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409Charactercharacter=quoteCharacter.charAt(quoteCharacter.length());
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409Charactercharacter=quoteCharacter.charAt(escapeCharacter.length()-1);
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409Charactercharacter=quoteCharacter.charAt(commentStart.length()-1);
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter!=null&&quoteMode.equals(delimiter)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409charc=quoteCharacter.charAt(quoteCharacter.length());
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409Characterc=quoteCharacter.charAt(commentStart.length()-1);
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(c!=escapeChar||escapeChar!=null&&escapeChar.equals(c)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(c!=delim||escapeChar!=null&&escapeChar.equals(c)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(c!=delimiter||escapeCharacter!=null&&quoteMode.equals(c)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(c!=delimiter){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409QuoteModequoteModePolicy=quoteMode.getInstance();
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409QuoteModequoteModePolicy=quoteModePolicy.getInstanceUTF();
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409Characterc=escapeCharacter.charAt(escapeCharacter);
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409Characterc=character.charAt(escapeCharacter);
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409charc=escapeCharacter.charAt(escapeCharacter);
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(c!=delimiter||escapeCharacter!=null&&quoteModePolicy.equals(c)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeChar!=null&&quoteChar.equals(commentMarker)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeChar!=null&&quoteChar.equals(delimiter)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeChar!=null&&quoteMode.equals(escapeChar)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter!=null&&quoteMode.equals(escapeCharacter)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter!=null&&quoteMode.equals(escapeChar)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409Characterc=escapeCharacter.charAt(quoteChar);
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409charc=escapeCharacter.charAt(quoteChar);
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409Charactercharacter=quoteCharacter.charAt(escapeCharacter.length());
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeChar!=null&&quoteMode.equals(escapeChar)){thrownewIllegalArgumentException("");}
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeChar!=null&&quoteMode.equals(delimiter)){thrownewIllegalArgumentException("");}
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeChar!=null&&quoteMode.equals(commentMarker)){thrownewIllegalArgumentException("");}
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(quoteMode!=null&&quoteMode.equals(commentMarker)){thrownewIllegalArgumentException("Thecommentstartandtheescapecharactercannotbethesame('"+quoteChar+"')");}
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeChar!=null&&quoteMode.equals(escapeChar)){thrownewIllegalArgumentException("Noquotesmodesetbutnoescapecharacterisset");}
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(quoteMode!=null&&quoteMode.equals(commentStart)){thrownewIllegalArgumentException("Noquotesmodesetbutnoescapecharacterisset");}
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(quoteMode!=null&&quoteMode.equals(c)){thrownewIllegalArgumentException("Noquotesmodesetbutnoescapecharacterisset");}
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeChar!=null&&escapeChar.equals(commentStart)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeChar!=null&&quoteMode.equals(c)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409QuoteModequoteModePolicy=quoteModePolicy.getRangeFormat();
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter!=null&&escapeCharacter.equals(delimiter)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409Charactercharacter=escapeCharacter.charAt(escapeCharacter);
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409Charactercharacter=escapeCharacter.charAt(escapeChar);
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409Charactercharacter=escapeCharacter.charAt(delimiter);
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409Charactercharacter=quoteCharacter.charAt(delimiter);
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409Charactercharacter=quoteCharacter.charAt(delimChar);
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter!=null&&quoteMode.equals(commentMarker)){thrownewIllegalArgumentException("Noquotesmodesetbutnoescapecharacterisset");}
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter!=null&&quoteMode.equals(commentStart)){thrownewIllegalArgumentException("Noquotesmodesetbutnoescapecharacterisset");}
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(c!=escapeCharacter){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(c!=null&&quoteMode.equals(c)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter!=null&&quoteMode.equals(commentMarker)){thrownewIllegalArgumentException("Thecommentstartandtheescapecharactercannotbethesame('"+quoteChar+"')");}
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(c!=escapeCharacter&&quoteMode.equals(c)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter!=null&&escapeCharacter==QuoteMode.NONE){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeChar!=null&&escapeCharacter.equals(commentMarker)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter!=null&&quoteMode.equals(ceilingDelimiter)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409Characterc=escapeCharacter.charAt(quoteCharacter);
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409Characterc=quoteCharacter.charAt(delimiter);
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409QuoteModequoteModePolicy=quoteModePolicy.getInstance(Character.DEPRECATED);
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409Characterc=quoteCharacter.charAt(commentStart.length());
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409QuoteModequoteModePolicy=quoteMode.getCSVFormat();
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(escapeCharacter!=null&&quoteCharacter.equals(commentMarker)){
projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java1409if(separator!=null&&quoteMode.equals(commentMarker)){
