bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.charValue()  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.charValue()  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeCharacter!=  null  &&  quoteChar.charValue()  ==  delimiter.charValue())  {	  if(delimiter!=    null    &&    escapeCharacter    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
2	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  escapeCharacter  ==  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  escapeCharacter  ==  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeCharacter!=  null  &&  escapeCharacter  ==  quoteChar.charValue())  {	  if(delimiter!=    null    &&    escapeCharacter    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
3	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar.charValue()  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar.charValue()  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  quoteChar.charValue()  ==  delimiter.charValue())  {	  if(delimiter!=    null    &&    escapeCharacter    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
4	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }	  if(quoteCharacter!=    null    &&    quoteCharacter.equals(commentMarker))    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    escape    character    cannot    be    the    same    ('   "    +    quoteCharacter    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
5	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentStart))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentStart))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentStart))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }	  if(quoteCharacter!=    null    &&    quoteCharacter.equals(commentMarker))    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    escape    character    cannot    be    the    same    ('   "    +    quoteCharacter    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
6	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.equals(commentMarker))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.equals(commentMarker))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeCharacter!=  null  &&  quoteChar.equals(commentMarker))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }	  if(quoteCharacter!=    null    &&    quoteCharacter.equals(commentMarker))    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    escape    character    cannot    be    the    same    ('   "    +    quoteCharacter    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
7	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(quoteChar))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(quoteChar))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeCharacter!=  null  &&  quoteCharacter.equals(quoteChar))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }	  if(quoteCharacter!=    null    &&    quoteCharacter.equals(commentMarker))    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    escape    character    cannot    be    the    same    ('   "    +    quoteCharacter    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
8	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(commentStart))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  quoteChar.equals(commentStart))  {	  if(escapeCharacter!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
9	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.equals(commentMarker))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.equals(commentMarker))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeCharacter!=  null  &&  quoteChar.equals(commentMarker))  {  throw  new  IllegalArgumentException( " ");  }	  if(quoteCharacter!=    null    &&    quoteCharacter.equals(commentMarker))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
10	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException( " ");  }	  if(quoteCharacter!=    null    &&    quoteCharacter.equals(commentMarker))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
11	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentStart))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentStart))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentStart))  {  throw  new  IllegalArgumentException( " ");  }	  if(quoteCharacter!=    null    &&    quoteCharacter.equals(commentMarker))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
12	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeCharacter!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalArgumentException( " ");  }	  if(quoteCharacter!=    null    &&    quoteCharacter.equals(commentMarker))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
13	[BUG]  [BUGGY]  Character  character  =  delimiter.charValue();  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  character  =  delimiter.charValue();  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	Character  character  =  delimiter.charValue();	  Character    character    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
14	[BUG]  [BUGGY]  Character  character  =  c.charValue();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  character  =  c.charValue();  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	Character  character  =  c.charValue();	  Character    character    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
15	[BUG]  [BUGGY]  if(delimiter  ==  quoteCharacter.charValue())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter  ==  quoteCharacter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter  ==  quoteCharacter.charValue())  {	  if(delimiter    ==    commentMarker.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
16	[BUG]  [BUGGY]  if(delimiter  ==  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter  ==  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter  ==  quoteChar.charValue())  {	  if(delimiter    ==    commentMarker.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
17	[BUG]  [BUGGY]  if(delimiter  ==  quoteStart.charValue())  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter  ==  quoteStart.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter  ==  quoteStart.charValue())  {	  if(delimiter    ==    commentMarker.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
18	[BUG]  [BUGGY]  if(escapeCharacter  ==  null  &&  escapeCharacter.charValue())  {  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter  ==  null  &&  escapeCharacter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeCharacter  ==  null  &&  escapeCharacter.charValue())  {	  if(delimiter    ==    commentMarker.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
19	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  escapeCharacter  ==  commentMarker.charValue())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  escapeCharacter  ==  commentMarker.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeCharacter!=  null  &&  escapeCharacter  ==  commentMarker.charValue())  {	  if(delimiter!=    null    &&    escapeCharacter    ==    commentMarker.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
20	[BUG]  [BUGGY]  if(commentMarker!=  null  &&  escapeCharacter  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(commentMarker!=  null  &&  escapeCharacter  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(commentMarker!=  null  &&  escapeCharacter  ==  delimiter.charValue())  {	  if(delimiter!=    null    &&    escapeCharacter    ==    commentMarker.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
21	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(c))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(c))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeCharacter!=  null  &&  quoteCharacter.equals(c))  {	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
22	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentStart))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentStart))  {	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
23	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  escapeCharacter  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  escapeCharacter  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeCharacter!=  null  &&  escapeCharacter  ==  delimiter.charValue())  {	  if(delimiter!=    null    &&    escapeCharacter    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
24	[BUG]  [BUGGY]  if(delimiter  ==  null  &&  escapeCharacter  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter  ==  null  &&  escapeCharacter  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter  ==  null  &&  escapeCharacter  ==  delimiter.charValue())  {	  if(delimiter!=    null    &&    escapeCharacter    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
25	[BUG]  [BUGGY]  Character  quoteCharacter  =  delimiter.charValue();  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  quoteCharacter  =  delimiter.charValue();  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	Character  quoteCharacter  =  delimiter.charValue();	  Character    quoteCharacter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
26	[BUG]  [BUGGY]  Character  quoteCharacter  =  c.charValue();  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  quoteCharacter  =  c.charValue();  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	Character  quoteCharacter  =  c.charValue();	  Character    quoteCharacter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
27	[BUG]  [BUGGY]  Character  quoteCharacter  =  quoteChar.toCharArray();  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  quoteCharacter  =  quoteChar.toCharArray();  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	Character  quoteCharacter  =  quoteChar.toCharArray();	  Character    quoteCharacter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
28	[BUG]  [BUGGY]  if(c!=  delimiter  ||  quoteChar!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  ||  quoteChar!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(c!=  delimiter  ||  quoteChar!=  null  &&  quoteChar.equals(c))  {	  if(escapeCharacter!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
29	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter.equals(c))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter.equals(c))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  delimiter.equals(c))  {	  if(delimiter!=    null    &&    delimiter.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
30	[BUG]  [BUGGY]  if(delimiter!=  null  &&  commentMarker.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  commentMarker.equals(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  commentMarker.equals(delimiter))  {	  if(delimiter!=    null    &&    delimiter.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
31	[BUG]  [BUGGY]  if(escapeCharacter!=  delimiter  ||  escapeCharacter!=  null  &&  escapeCharacter.equals(c))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  delimiter  ||  escapeCharacter!=  null  &&  escapeCharacter.equals(c))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeCharacter!=  delimiter  ||  escapeCharacter!=  null  &&  escapeCharacter.equals(c))  {	  if(c!=    delimiter    ||    escapeCharacter!=    null    &&    escapeCharacter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
32	[BUG]  [BUGGY]  if(c!=  delimiter  ||  quoteCharacter!=  null  &&  quoteCharacter.equals(c))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  ||  quoteCharacter!=  null  &&  quoteCharacter.equals(c))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(c!=  delimiter  ||  quoteCharacter!=  null  &&  quoteCharacter.equals(c))  {	  if(c!=    delimiter    ||    escapeCharacter!=    null    &&    escapeCharacter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
33	[BUG]  [BUGGY]  if(escapeCharacter!=  delimiter  ||  escapeCharacter!=  null  &&  quoteCharacter.equals(c))  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  delimiter  ||  escapeCharacter!=  null  &&  quoteCharacter.equals(c))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeCharacter!=  delimiter  ||  escapeCharacter!=  null  &&  quoteCharacter.equals(c))  {	  if(c!=    delimiter    ||    escapeCharacter!=    null    &&    escapeCharacter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
34	[BUG]  [BUGGY]  if(escapeCharacter  ==  null  &&  escapeCharacter  ==  commentMarker.charValue())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter  ==  null  &&  escapeCharacter  ==  commentMarker.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeCharacter  ==  null  &&  escapeCharacter  ==  commentMarker.charValue())  {	  if(delimiter    ==    null    &&    escapeCharacter    ==    commentMarker.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
35	[BUG]  [BUGGY]  if(escapeCharacter  ==  null  &&  escapeCharacter  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter  ==  null  &&  escapeCharacter  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeCharacter  ==  null  &&  escapeCharacter  ==  delimiter.charValue())  {	  if(delimiter    ==    null    &&    escapeCharacter    ==    commentMarker.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
36	[BUG]  [BUGGY]  if(escapeCharacter  ==  null  &&  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter  ==  null  &&  quoteChar.equals(commentStart))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeCharacter  ==  null  &&  quoteChar.equals(commentStart))  {	  if(escapeCharacter!=    null    &&    escapeCharacter.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
37	[BUG]  [BUGGY]  if(c  ==  null  &&  quoteChar.equals(escapeCharacter))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(c  ==  null  &&  quoteChar.equals(escapeCharacter))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(c  ==  null  &&  quoteChar.equals(escapeCharacter))  {	  if(escapeCharacter    ==    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
38	[BUG]  [BUGGY]  if(c!=  null  &&  quoteChar.equals(escapeCharacter))  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  quoteChar.equals(escapeCharacter))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(c!=  null  &&  quoteChar.equals(escapeCharacter))  {	  if(escapeCharacter    ==    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
39	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(quoteChar!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }	  if(quoteCharacter!=    null    &&    quoteCharacter.equals(commentMarker))    {    throw    new    IllegalArgumentException(   "The    comment    start    character    cannot    be    the    same    ('   "    +    quoteCharacter    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
40	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeChar!=  null  &&  quoteChar.equals(c))  {	  if(escapeChar!=    null    &&    quoteChar.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
41	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  quoteChar.equals(commentStart))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeChar!=  null  &&  quoteChar.equals(commentStart))  {	  if(escapeChar!=    null    &&    quoteChar.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
42	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(escapeChar))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(escapeChar))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  quoteChar.equals(escapeChar))  {	  if(escapeChar!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
43	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(quoteChar!=  null  &&  quoteChar.equals(c))  {	  if(escapeChar!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
44	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escapeCharacter.equals(c))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escapeCharacter.equals(c))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  escapeCharacter.equals(c))  {	  if(escapeCharacter!=    null    &&    delimiter.equals(escapeCharacter))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
45	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escapeCharacter.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escapeCharacter.equals(commentStart))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  escapeCharacter.equals(commentStart))  {	  if(escapeCharacter!=    null    &&    delimiter.equals(escapeCharacter))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
46	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.equals(escapeCharacter))  {  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.equals(escapeCharacter))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeCharacter!=  null  &&  quoteChar.equals(escapeCharacter))  {	  if(escapeCharacter!=    null    &&    delimiter.equals(escapeCharacter))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
47	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escape!=  commentMarker.charValue())  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escape!=  commentMarker.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  escape!=  commentMarker.charValue())  {	  if(delimiter!=    null    &&    escape    >=    commentMarker.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
48	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  escape!=  commentMarker.charValue())  {  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  escape!=  commentMarker.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeCharacter!=  null  &&  escape!=  commentMarker.charValue())  {	  if(delimiter!=    null    &&    escape    >=    commentMarker.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
49	[BUG]  [BUGGY]  if(escape!=  null  &&  escape!=  commentMarker.charValue())  {  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escape!=  commentMarker.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escape!=  null  &&  escape!=  commentMarker.charValue())  {	  if(delimiter!=    null    &&    escape    >=    commentMarker.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
50	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escape!=  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escape!=  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  escape!=  delimiter.charValue())  {	  if(delimiter!=    null    &&    escape    >=    commentMarker.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
51	[BUG]  [BUGGY]  Character  c  =  delimiter.charValue();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  c  =  delimiter.charValue();  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	Character  c  =  delimiter.charValue();	  Character    c    =    quoteCharacter.charValue();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
52	[BUG]  [BUGGY]  Character  c  =  quoteCharacter.toCharArray();  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  c  =  quoteCharacter.toCharArray();  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	Character  c  =  quoteCharacter.toCharArray();	  Character    c    =    quoteCharacter.charValue();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
53	[BUG]  [BUGGY]  Character  c  =  quoteCharacter.characterValue();  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  c  =  quoteCharacter.characterValue();  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	Character  c  =  quoteCharacter.characterValue();	  Character    c    =    quoteCharacter.charValue();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
54	[BUG]  [BUGGY]  Character  character  =  quoteCharacter.characterValue();  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  character  =  quoteCharacter.characterValue();  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	Character  character  =  quoteCharacter.characterValue();	  Character    character    =    quoteCharacter.charValue();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
55	[BUG]  [BUGGY]  Character  character  =  quoteCharacter.toCharArray();  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  character  =  quoteCharacter.toCharArray();  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	Character  character  =  quoteCharacter.toCharArray();	  Character    character    =    quoteCharacter.charValue();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
56	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(escapeCharacter))  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(escapeCharacter))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  quoteChar.equals(escapeCharacter))  {	  if(delimiter!=    null    &&    escapeCharacter.equals(escapeCharacter))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
57	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteCharacter.equals(escapeCharacter))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteCharacter.equals(escapeCharacter))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  quoteCharacter.equals(escapeCharacter))  {	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
58	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  quoteChar.equals(c))  {	  if(delimiter!=    null    &&    quoteChar.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
59	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(commentMarker))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(commentMarker))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(quoteChar!=  null  &&  quoteChar.equals(commentMarker))  {	  if(delimiter!=    null    &&    quoteChar.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
60	[BUG]  [BUGGY]  if(escapeCharacter!=  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeCharacter!=  delimiter.charValue())  {	  if(delimiter!=    escapeCharacter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
61	[BUG]  [BUGGY]  if(delimiter!=  quoteCharacter.charValue())  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  quoteCharacter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  quoteCharacter.charValue())  {	  if(delimiter!=    escapeCharacter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
62	[BUG]  [BUGGY]  if(delimiter!=  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  quoteChar.charValue())  {	  if(delimiter!=    escapeCharacter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
63	[BUG]  [BUGGY]  if(escapeCharacter!=  escapeCharacter.charValue())  {  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  escapeCharacter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeCharacter!=  escapeCharacter.charValue())  {	  if(delimiter!=    escapeCharacter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
64	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  escape  ==  commentMarker.charValue())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  escape  ==  commentMarker.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeCharacter!=  null  &&  escape  ==  commentMarker.charValue())  {	  if(delimiter!=    null    &&    escape    ==    commentMarker.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
65	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escape  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escape  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  escape  ==  delimiter.charValue())  {	  if(delimiter!=    null    &&    escape    ==    commentMarker.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
66	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escape  ==  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escape  ==  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  escape  ==  quoteChar.charValue())  {	  if(delimiter!=    null    &&    escape    ==    commentMarker.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
67	[BUG]  [BUGGY]  nisipeCharacter  ==  null)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteChar  + "') ");  }  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  nisipeCharacter  ==  null)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteChar  + "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	nisipeCharacter  ==  null)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteChar  + "') ");  }	  if(delimiter    ==    null)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    escape    character    cannot    be    the    same    ('   "    +    quoteChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
68	[BUG]  [BUGGY]  nisipeCharacter.equals(delimiter))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteChar  + "') ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  nisipeCharacter.equals(delimiter))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteChar  + "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	nisipeCharacter.equals(delimiter))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteChar  + "') ");  }	  if(delimiter    ==    null)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    escape    character    cannot    be    the    same    ('   "    +    quoteChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
69	[BUG]  [BUGGY]  if(delimiter!=  null  &&  commentMarker.equals(escapeCharacter))  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  commentMarker.equals(escapeCharacter))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  commentMarker.equals(escapeCharacter))  {	  if(escapeCharacter!=    null    &&    delimiter.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
70	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escapeChar  ==  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escapeChar  ==  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  escapeChar  ==  quoteChar.charValue())  {	  if(escapeCharacter!=    null    &&    delimiter    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
71	[BUG]  [BUGGY]  aughtExceptionHandler.throwInternal();  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  aughtExceptionHandler.throwInternal();  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	aughtExceptionHandler.throwInternal();	  if(delimiter    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
72	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUnexpectedCharacterException( " ");  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  aughtExceptionHandler.throwAsUnexpectedCharacterException( " ");  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	aughtExceptionHandler.throwAsUnexpectedCharacterException( " ");	  if(delimiter    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
73	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	aughtExceptionHandler.throwAsIOException( " ");	  if(delimiter    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
74	[BUG]  [BUGGY]  Deserializer  <  Character>  deserializer  =  getDelimiter(c);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Deserializer  <  Character>  deserializer  =  getDelimiter(c);  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	Deserializer  <  Character>  deserializer  =  getDelimiter(c);	  if(delimiter    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
75	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escapeCharacter.equals(escapeChar))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escapeCharacter.equals(escapeChar))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  escapeCharacter.equals(escapeChar))  {	  if(escapeCharacter!=    null    &&    delimiter.equals(escapeCharacter))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
76	[BUG]  [BUGGY]  if(delimiter!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(delimiter    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
77	[BUG]  [BUGGY]  safeMultilineCharacter(delimiter)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  safeMultilineCharacter(delimiter)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	safeMultilineCharacter(delimiter)  {  throw  new  IllegalArgumentException( " ");  }	  if(delimiter    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
78	[BUG]  [BUGGY]  safeMultilineChar(delimiter)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  safeMultilineChar(delimiter)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	safeMultilineChar(delimiter)  {  throw  new  IllegalArgumentException( " ");  }	  if(delimiter    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
79	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter.equals(escapeChar))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter.equals(escapeChar))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  delimiter.equals(escapeChar))  {	  if(escapeCharacter!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
80	[BUG]  [BUGGY]  if(escape!=  null  &&  escape  >=  commentMarker.charValue())  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escape  >=  commentMarker.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escape!=  null  &&  escape  >=  commentMarker.charValue())  {	  if(delimiter!=    null    &&    escape    >=    commentMarker.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
81	[BUG]  [BUGGY]  if(escape!=  null  &&  escape  ==  commentMarker.charValue())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escape  ==  commentMarker.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escape!=  null  &&  escape  ==  commentMarker.charValue())  {	  if(delimiter!=    null    &&    escape    ==    commentMarker.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
82	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escape  ==  commentMarker.getCharValue())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escape  ==  commentMarker.getCharValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  escape  ==  commentMarker.getCharValue())  {	  if(delimiter!=    null    &&    escape    ==    commentMarker.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
83	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escape  ==  commentMarker.length())  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escape  ==  commentMarker.length())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  escape  ==  commentMarker.length())  {	  if(delimiter!=    null    &&    escape    ==    commentMarker.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
84	[BUG]  [BUGGY]  if(delimiter  ==  null  ||  delimiter  ==  commentMarker.charValue())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter  ==  null  ||  delimiter  ==  commentMarker.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter  ==  null  ||  delimiter  ==  commentMarker.charValue())  {	  if(delimiter    ==    commentMarker.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
85	[BUG]  [BUGGY]  if(delimiter  ==  commentMarker.length())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter  ==  commentMarker.length())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter  ==  commentMarker.length())  {	  if(delimiter    ==    commentMarker.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
86	[BUG]  [BUGGY]  if(delimiter!=  null)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteChar  + "') ");  }  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteChar  + "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteChar  + "') ");  }	  if(delimiter    ==    null)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    escape    character    cannot    be    the    same    ('   "    +    quoteChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
87	[BUG]  [BUGGY]  Character  quoteCharacter  =  character.charValue();  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  quoteCharacter  =  character.charValue();  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	Character  quoteCharacter  =  character.charValue();	  Character    quoteCharacter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
88	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.charValue()  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.charValue()  ==  delimiter)  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeCharacter!=  null  &&  quoteChar.charValue()  ==  delimiter)  {	  if(delimiter!=    null    &&    escapeCharacter    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
89	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeCharacter!=  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( " ");  }	  if(quoteCharacter!=    null    &&    quoteCharacter.equals(commentMarker))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
90	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeCharacter!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalArgumentException( " ");  }	  if(quoteCharacter!=    null    &&    quoteCharacter.equals(commentMarker))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
91	[BUG]  [BUGGY]  if(escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( " ");  }	  if(quoteCharacter!=    null    &&    quoteCharacter.equals(commentMarker))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
92	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  quoteChar.equals(delimiter))  {	  if(delimiter!=    null    &&    quoteChar.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
93	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeCharacter!=  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }	  if(quoteCharacter!=    null    &&    quoteCharacter.equals(commentMarker))    {    throw    new    IllegalArgumentException(   "The    comment    start    character    cannot    be    the    same    ('   "    +    quoteCharacter    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
94	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeCharacter!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }	  if(quoteCharacter!=    null    &&    quoteCharacter.equals(commentMarker))    {    throw    new    IllegalArgumentException(   "The    comment    start    character    cannot    be    the    same    ('   "    +    quoteCharacter    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
95	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }	  if(quoteCharacter!=    null    &&    quoteCharacter.equals(commentMarker))    {    throw    new    IllegalArgumentException(   "The    comment    start    character    cannot    be    the    same    ('   "    +    quoteCharacter    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
96	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  (' "  +  quoteChar  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  (' "  +  quoteChar  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  (' "  +  quoteChar  +   "') ");  }	  if(quoteCharacter!=    null    &&    quoteCharacter.equals(commentMarker))    {    throw    new    IllegalArgumentException(   "The    comment    start    character    cannot    be    the    same    ('   "    +    quoteCharacter    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
97	[BUG]  [BUGGY]  char  c  =  quoteCharacter.charValue();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  char  c  =  quoteCharacter.charValue();  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	char  c  =  quoteCharacter.charValue();	  Character    c    =    quoteCharacter.charValue();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
98	[BUG]  [BUGGY]  Character  c  =  escapeCharacter.charValue();  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  c  =  escapeCharacter.charValue();  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	Character  c  =  escapeCharacter.charValue();	  Character    c    =    quoteCharacter.charValue();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
99	[BUG]  [BUGGY]  if(c!=  delimiter  &&  escapeCharacter!=  null  &&  escapeCharacter.equals(c))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  &&  escapeCharacter!=  null  &&  escapeCharacter.equals(c))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(c!=  delimiter  &&  escapeCharacter!=  null  &&  escapeCharacter.equals(c))  {	  if(c!=    delimiter    ||    escapeCharacter!=    null    &&    escapeCharacter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
100	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  escapeCharacter!=  delimiter  &&  escapeCharacter.equals(c))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  escapeCharacter!=  delimiter  &&  escapeCharacter.equals(c))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeCharacter!=  null  &&  escapeCharacter!=  delimiter  &&  escapeCharacter.equals(c))  {	  if(c!=    delimiter    ||    escapeCharacter!=    null    &&    escapeCharacter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
101	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escapeCharacter!=  null  &&  escapeCharacter.equals(c))  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escapeCharacter!=  null  &&  escapeCharacter.equals(c))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  escapeCharacter!=  null  &&  escapeCharacter.equals(c))  {	  if(c!=    delimiter    ||    escapeCharacter!=    null    &&    escapeCharacter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
102	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter.equals(escapeCharacter))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter.equals(escapeCharacter))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  delimiter.equals(escapeCharacter))  {	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
103	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  escapeCharacter.charValue())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  escapeCharacter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeCharacter!=  null  &&  escapeCharacter.charValue())  {	  if(delimiter!=    escapeCharacter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
104	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter.escapeChar()  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter.escapeChar()  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  delimiter.escapeChar()  ==  delimiter.charValue())  {	  if(delimiter!=    null    &&    escapeCharacter    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
105	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  commentMarker.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  delimiter  ==  commentMarker.charValue())  {	  if(delimiter!=    null    &&    escapeCharacter    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
106	[BUG]  [BUGGY]  Character  character  =  escapeCharacter.charValue();  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  character  =  escapeCharacter.charValue();  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	Character  character  =  escapeCharacter.charValue();	  Character    character    =    quoteCharacter.charValue();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
107	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escapeCharacter.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escapeCharacter.equals(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  escapeCharacter.equals(delimiter))  {	  if(delimiter!=    null    &&    escapeCharacter.equals(escapeCharacter))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
108	[BUG]  [BUGGY]  if(delimiter!=  escapeChar.charValue())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  escapeChar.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  escapeChar.charValue())  {	  if(escapeCharacter!=    null    &&    delimiter    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
109	[BUG]  [BUGGY]  if(c!=  delimiter  ||  c!=  null  &&  c.equals(escapeCharacter))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  ||  c!=  null  &&  c.equals(escapeCharacter))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(c!=  delimiter  ||  c!=  null  &&  c.equals(escapeCharacter))  {	  if(c!=    delimiter    ||    escapeCharacter!=    null    &&    escapeCharacter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
110	[BUG]  [BUGGY]  if(escapeCharacter!=  delimiter  &&  escapeCharacter!=  null  &&  escapeCharacter.equals(c))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  delimiter  &&  escapeCharacter!=  null  &&  escapeCharacter.equals(c))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeCharacter!=  delimiter  &&  escapeCharacter!=  null  &&  escapeCharacter.equals(c))  {	  if(c!=    delimiter    ||    escapeCharacter!=    null    &&    escapeCharacter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
111	[BUG]  [BUGGY]  if(delimiter!=  commentMarker.charValue())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  commentMarker.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  commentMarker.charValue())  {	  if(delimiter    ==    commentMarker.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
112	[BUG]  [BUGGY]  if(c!=  delimiter  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(c!=  delimiter  &&  quoteChar.equals(c))  {	  if(escapeCharacter!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
113	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  delimiter  ==  quoteChar.charValue())  {	  if(delimiter!=    null    &&    escapeCharacter    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
114	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  delimiter  ==  quoteCharacter.charValue())  {	  if(delimiter!=    null    &&    escapeCharacter    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
115	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteCharacter.equals(commentMarker))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteCharacter.equals(commentMarker))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  quoteCharacter.equals(commentMarker))  {	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
116	[BUG]  [BUGGY]  parent  ==  null)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteChar  + "') ");  }  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  parent  ==  null)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteChar  + "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	parent  ==  null)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteChar  + "') ");  }	  if(delimiter    ==    null)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    escape    character    cannot    be    the    same    ('   "    +    quoteChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
117	[BUG]  [BUGGY]  if(delimiter  ==  null  &&  escapeCharacter  ==  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter  ==  null  &&  escapeCharacter  ==  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter  ==  null  &&  escapeCharacter  ==  quoteChar.charValue())  {	  if(escapeCharacter!=    null    &&    delimiter    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
118	[BUG]  [BUGGY]  if(delimiter  ==  escapeChar.charValue())  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter  ==  escapeChar.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter  ==  escapeChar.charValue())  {	  if(escapeCharacter!=    null    &&    delimiter    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
119	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }	  if(quoteCharacter!=    null    &&    quoteCharacter.equals(commentMarker))    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    escape    character    cannot    be    the    same    ('   "    +    quoteCharacter    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
120	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(commentMarker))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(commentMarker))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  quoteChar.equals(commentMarker))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }	  if(quoteCharacter!=    null    &&    quoteCharacter.equals(commentMarker))    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    escape    character    cannot    be    the    same    ('   "    +    quoteCharacter    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
121	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escape  ==  quoteCharacter.charValue())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escape  ==  quoteCharacter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  escape  ==  quoteCharacter.charValue())  {	  if(delimiter!=    null    &&    escape    ==    commentMarker.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
122	[BUG]  [BUGGY]  Character  character  =  this.quoteCharacter.charValue();  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  character  =  this.quoteCharacter.charValue();  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	Character  character  =  this.quoteCharacter.charValue();	  Character    character    =    quoteCharacter.charValue();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
123	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteCharacter.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteCharacter.equals(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  quoteCharacter.equals(delimiter))  {	  if(delimiter!=    null    &&    escapeCharacter.equals(escapeCharacter))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
124	[BUG]  [BUGGY]  if(delimiter  ==  null  &&  quoteChar.equals(commentMarker))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter  ==  null  &&  quoteChar.equals(commentMarker))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter  ==  null  &&  quoteChar.equals(commentMarker))  {  throw  new  IllegalArgumentException( " ");  }	  if(quoteCharacter!=    null    &&    quoteCharacter.equals(commentMarker))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
125	[BUG]  [BUGGY]  if(delimiter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteChar  + "') ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteChar  + "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  quoteChar  + "') ");  }	  if(quoteCharacter!=    null    &&    quoteCharacter.equals(commentMarker))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
126	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  delimiter.charValue())  {	  if(delimiter!=    null    &&    delimiter.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
127	[BUG]  [BUGGY]  if(delimiter  ==  null  &&  quoteChar!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter  ==  null  &&  quoteChar!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter  ==  null  &&  quoteChar!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(delimiter    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
128	[BUG]  [BUGGY]  parentMarker  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  parentMarker  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	parentMarker  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(delimiter    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
129	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escape  <  commentMarker.length())  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escape  <  commentMarker.length())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  escape  <  commentMarker.length())  {	  if(delimiter!=    null    &&    escape    >=    commentMarker.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
130	[BUG]  [BUGGY]  char  c  =  delimiter.charValue();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  char  c  =  delimiter.charValue();  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	char  c  =  delimiter.charValue();	  Character    c    =    quoteCharacter.charValue();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
131	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException( "The  comment  start  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException( "The  comment  start  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException( "The  comment  start  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }	  if(quoteCharacter!=    null    &&    quoteCharacter.equals(commentMarker))    {    throw    new    IllegalArgumentException(   "The    comment    start    character    cannot    be    the    same    ('   "    +    quoteCharacter    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
132	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException( "The  comment  start  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException( "The  comment  start  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException( "The  comment  start  character  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }	  if(quoteCharacter!=    null    &&    quoteCharacter.equals(commentMarker))    {    throw    new    IllegalArgumentException(   "The    comment    start    character    cannot    be    the    same    ('   "    +    quoteCharacter    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
133	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(commentMarker.charValue()))  {  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(commentMarker.charValue()))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1404	1404	13	replace	if(delimiter!=  null  &&  quoteChar.equals(commentMarker.charValue()))  {	  if(delimiter!=    null    &&    escapeCharacter    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
