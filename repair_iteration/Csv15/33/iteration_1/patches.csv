bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(values  ==  null  ||  values.length  >=  0)  {  [CE]  illegal  start  of  type  [FE]          NoClassDefFoundError    [CONTEXT]    private  String[]  toStringArray(final  Object[]  values)  {    [BUGGY]  if(values  ==  null  ||  values.length  >=  0)  {  [BUGGY]    return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  Object  value  String[]  header  headerComments  strings  String  format  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1346	1346	13	replace	if(values  ==  null  ||  values.length  >=  0)  {	  if(values    ==    null    ||    values.length!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
2	[BUG]  [BUGGY]  if(values!=  null  ||  values.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError    [CONTEXT]    private  String[]  toStringArray(final  Object[]  values)  {    [BUGGY]  if(values!=  null  ||  values.length  ==  0)  {  [BUGGY]    return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  Object  value  String[]  header  headerComments  strings  String  format  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1346	1346	13	replace	if(values!=  null  ||  values.length  ==  0)  {	  if(values    ==    null    ||    values.length!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
3	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError    [CONTEXT]    private  String[]  toStringArray(final  Object[]  values)  {    [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[  [BUGGY]    return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  Object  value  String[]  header  headerComments  strings  String  format  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1346	1346	13	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  final  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError    [CONTEXT]    private  String[]  toStringArray(final  Object[]  values)  {    [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  final  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[  [BUGGY]    return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  Object  value  String[]  header  headerComments  strings  String  format  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1346	1346	13	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  final  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  final  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError    [CONTEXT]    private  String[]  toStringArray(final  Object[]  values)  {    [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  final  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  [BUGGY]    return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  Object  value  String[]  header  headerComments  strings  String  format  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1346	1346	13	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  final  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
6	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  headerComments  =  new  String[values.length];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError    [CONTEXT]    private  String[]  toStringArray(final  Object[]  values)  {    [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  headerComments  =  new  String[values.length];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  [BUGGY]    return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  Object  value  String[]  header  headerComments  strings  String  format  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1346	1346	13	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  headerComments  =  new  String[values.length];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
7	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  final  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError    [CONTEXT]    private  String[]  toStringArray(final  Object[]  values)  {    [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  final  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  [BUGGY]    return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  Object  value  String[]  header  headerComments  strings  String  format  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1346	1346	13	replace	if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  final  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
8	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[i]  =  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError    [CONTEXT]    private  String[]  toStringArray(final  Object[]  values)  {    [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[i]  =  [BUGGY]    return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  Object  value  String[]  header  headerComments  strings  String  format  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1346	1346	13	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[i]  =	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
9	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  return  strings[i];  }  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError    [CONTEXT]    private  String[]  toStringArray(final  Object[]  values)  {    [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  return  strings[i];  }  [BUGGY]    return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  Object  value  String[]  header  headerComments  strings  String  format  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1346	1346	13	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  return  strings[i];  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
10	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  return  toStringArray(values[i]);  }  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError    [CONTEXT]    private  String[]  toStringArray(final  Object[]  values)  {    [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  return  toStringArray(values[i]);  }  [BUGGY]    return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  Object  value  String[]  header  headerComments  strings  String  format  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1346	1346	13	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  return  toStringArray(values[i]);  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
11	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  headerComments  =  new  String[size()  -  1];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError    [CONTEXT]    private  String[]  toStringArray(final  Object[]  values)  {    [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  headerComments  =  new  String[size()  -  1];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return  [BUGGY]    return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  Object  value  String[]  header  headerComments  strings  String  format  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1346	1346	13	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  headerComments  =  new  String[size()  -  1];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
12	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError    [CONTEXT]    private  String[]  toStringArray(final  Object[]  values)  {    [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return  [BUGGY]    return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  Object  value  String[]  header  headerComments  strings  String  format  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1346	1346	13	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
13	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  strings[i]  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError    [CONTEXT]    private  String[]  toStringArray(final  Object[]  values)  {    [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  strings[i]  [BUGGY]    return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  Object  value  String[]  header  headerComments  strings  String  format  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1346	1346	13	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  strings[i]	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
