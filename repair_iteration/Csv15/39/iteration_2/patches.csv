bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(escapeChar))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(escapeChar))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(delimiter!=  null  &&  quoteChar.equals(escapeChar))  {	  if(escapeChar!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
2	[BUG]  [BUGGY]  if(commentStart!=  null  &&  quoteChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(commentStart!=  null  &&  quoteChar.equals(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(commentStart!=  null  &&  quoteChar.equals(delimiter))  {	  if(escapeChar!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
3	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(escapeCharacter))  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(escapeCharacter))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(delimiter!=  null  &&  quoteChar.equals(escapeCharacter))  {	  if(escapeChar!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
4	[BUG]  [BUGGY]  nisipeChar  <  null)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  + "') ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  nisipeChar  <  null)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  + "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	nisipeChar  <  null)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  + "') ");  }	  if(quoteChar!=    null)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    quoteChar    cannot    be    the    same    ('   "    +    quoteChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
5	[BUG]  [BUGGY]  aughtException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  (' "  +  quoteChar  +   "') ");  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  aughtException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  (' "  +  quoteChar  +   "') ");  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	aughtException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  (' "  +  quoteChar  +   "') ");	  if(quoteChar!=    null)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    quoteChar    cannot    be    the    same    ('   "    +    quoteChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
6	[BUG]  [BUGGY]  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +	  if(quoteMode    ==    QuoteMode.NONE)    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charValue())    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    quoteChar    cannot    be    the    same    ('    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
7	[BUG]  [BUGGY]  if(quoteMode!=  QuoteMode.NONE)  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(quoteMode!=  QuoteMode.NONE)  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(quoteMode!=  QuoteMode.NONE)  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('	  if(quoteMode    ==    QuoteMode.NONE)    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charValue())    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    quoteChar    cannot    be    the    same    ('    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
8	[BUG]  [BUGGY]  if(quoteMode!=  QuoteMode.NONE)  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  (  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(quoteMode!=  QuoteMode.NONE)  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  (  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(quoteMode!=  QuoteMode.NONE)  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  (	  if(quoteMode    ==    QuoteMode.NONE)    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charValue())    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    quoteChar    cannot    be    the    same    ('    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
9	[BUG]  [BUGGY]  if(c!=  escapeCharacter  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(c!=  escapeCharacter  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(c!=  escapeCharacter  &&  quoteChar.equals(c))  {	  if(escapeChar!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
10	[BUG]  [BUGGY]  if(c!=  escapeCharacter  ||  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(c!=  escapeCharacter  ||  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(c!=  escapeCharacter  ||  quoteChar.equals(c))  {	  if(escapeChar!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
11	[BUG]  [BUGGY]  aughtException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  (' "  +  quoteCharacter  +   "') ");  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  aughtException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  (' "  +  quoteCharacter  +   "') ");  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	aughtException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  (' "  +  quoteCharacter  +   "') ");	  if(quoteChar!=    null)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    quoteChar    cannot    be    the    same    ('   "    +    quoteCharacter    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
12	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  quoteMode!=  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  quoteMode!=  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(escapeChar!=  null  &&  quoteMode!=  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( " ");  }	  if(escapeChar!=    null    &&    quoteMode    ==    QuoteMode.NONE)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
13	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteMode  cannot  be  the  same  (' "  +  quoteMode  + "') ");  }  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteMode  cannot  be  the  same  (' "  +  quoteMode  + "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(escapeChar!=  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteMode  cannot  be  the  same  (' "  +  quoteMode  + "') ");  }	  if(escapeChar!=    null    &&    quoteMode    ==    QuoteMode.NONE)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
14	[BUG]  [BUGGY]  QuoteMode  quoteModePolicy  =  QuoteMode.NONE;  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  QuoteMode  quoteModePolicy  =  QuoteMode.NONE;  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	QuoteMode  quoteModePolicy  =  QuoteMode.NONE;	  if(quoteMode!=    QuoteMode.NONE)    {    for(Character    c    :    quotes)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    quoteChar    cannot    be    the    same    ('   "    +    quoteChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
15	[BUG]  [BUGGY]  QuoteMode  quoteModePolicy  =  QuoteMode.NONE;  for(Character  c  :  quoteModePolicy)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  QuoteMode  quoteModePolicy  =  QuoteMode.NONE;  for(Character  c  :  quoteModePolicy)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	QuoteMode  quoteModePolicy  =  QuoteMode.NONE;  for(Character  c  :  quoteModePolicy)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }	  if(quoteMode!=    QuoteMode.NONE)    {    for(Character    c    :    quotes)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    quoteChar    cannot    be    the    same    ('   "    +    quoteChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
16	[BUG]  [BUGGY]  QuoteMode  quoteModePolicy  =  QuoteMode.NONE;  for(Character  c  :  quotes)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  QuoteMode  quoteModePolicy  =  QuoteMode.NONE;  for(Character  c  :  quotes)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	QuoteMode  quoteModePolicy  =  QuoteMode.NONE;  for(Character  c  :  quotes)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }	  if(quoteMode!=    QuoteMode.NONE)    {    for(Character    c    :    quotes)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    quoteChar    cannot    be    the    same    ('   "    +    quoteChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
17	[BUG]  [BUGGY]  if(c!=  escapeCharacter)  {  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(c!=  escapeCharacter)  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(c!=  escapeCharacter)  {	  if(escapeCharacter!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
18	[BUG]  [BUGGY]  if(c!=  null  &&  quoteModePolicy.equals(c))  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  quoteModePolicy.equals(c))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(c!=  null  &&  quoteModePolicy.equals(c))  {	  if(c!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
19	[BUG]  [BUGGY]  Character  c  =  description.charAt(c);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  c  =  description.charAt(c);  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	Character  c  =  description.charAt(c);	  if(quoteMode!=    QuoteMode.NONE)    {    for(Character    c    :    description.charAt(c))    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    quoteChar    cannot    be    the    same    ('   "    +    quoteChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
20	[BUG]  [BUGGY]  Pattern  quoteMode  =  QuoteMode.NONE;  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Pattern  quoteMode  =  QuoteMode.NONE;  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	Pattern  quoteMode  =  QuoteMode.NONE;	  if(quoteMode!=    QuoteMode.NONE)    {    for(Character    c    :    description.charAt(c))    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    quoteChar    cannot    be    the    same    ('   "    +    quoteChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
21	[BUG]  [BUGGY]  Character  c  =  description.charAt(0);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  c  =  description.charAt(0);  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	Character  c  =  description.charAt(0);	  if(quoteMode!=    QuoteMode.NONE)    {    for(Character    c    :    description.charAt(c))    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    quoteChar    cannot    be    the    same    ('   "    +    quoteChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
22	[BUG]  [BUGGY]  QuoteMode.NONE  =  description.charAt(0);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  QuoteMode.NONE  =  description.charAt(0);  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	QuoteMode.NONE  =  description.charAt(0);	  if(quoteMode!=    QuoteMode.NONE)    {    for(Character    c    :    description.charAt(c))    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    quoteChar    cannot    be    the    same    ('   "    +    quoteChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
23	[BUG]  [BUGGY]  if(commentStart!=  null  &&  quoteChar.equals(escapeChar))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(commentStart!=  null  &&  quoteChar.equals(escapeChar))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(commentStart!=  null  &&  quoteChar.equals(escapeChar))  {	  if(escapeChar!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
24	[BUG]  [BUGGY]  if(commentStart!=  null  &&  quoteChar.equals(escapeCharacter))  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(commentStart!=  null  &&  quoteChar.equals(escapeCharacter))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(commentStart!=  null  &&  quoteChar.equals(escapeCharacter))  {	  if(escapeChar!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
25	[BUG]  [BUGGY]  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charValue())  {  throw  new  IllegalArgumentException( " ");  }	  if(quoteMode    ==    QuoteMode.NONE)    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
26	[BUG]  [BUGGY]  QuoteMode  quoteModePolicy  =  QuoteMode.NONE;  for(Character  c  =  quoteModePolicy;  c!=  null;  c  =  c.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  QuoteMode  quoteModePolicy  =  QuoteMode.NONE;  for(Character  c  =  quoteModePolicy;  c!=  null;  c  =  c.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	QuoteMode  quoteModePolicy  =  QuoteMode.NONE;  for(Character  c  =  quoteModePolicy;  c!=  null;  c  =  c.charValue())  {  throw  new  IllegalArgumentException( " ");  }	  if(quoteMode    ==    QuoteMode.NONE)    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
27	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(delimiter!=  null  &&  quoteChar.equals(c))  {	  if(delimiter!=    null    &&    quoteChar.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
28	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(commentStart))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(delimiter!=  null  &&  quoteChar.equals(commentStart))  {	  if(delimiter!=    null    &&    quoteChar.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
29	[BUG]  [BUGGY]  if(commentMarker!=  null  &&  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(commentMarker!=  null  &&  quoteChar.equals(commentStart))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(commentMarker!=  null  &&  quoteChar.equals(commentStart))  {	  if(commentStart!=    null    &&    quoteChar.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
30	[BUG]  [BUGGY]  QuoteMode  quoteMode  =  QuoteMode.NONE;  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  QuoteMode  quoteMode  =  QuoteMode.NONE;  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	QuoteMode  quoteMode  =  QuoteMode.NONE;	  if(quoteMode!=    QuoteMode.NONE)    {    for(Character    c    :    quotes)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    quoteChar    cannot    be    the    same    ('   "    +    quoteChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
31	[BUG]  [BUGGY]  if(c!=  delimiter)  {  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(c!=  delimiter)  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(c!=  delimiter)  {	  if(escapeCharacter!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
32	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  't')  {	  if(escapeCharacter!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
33	[BUG]  [BUGGY]  if(c!=  delimiter  ||  quoteChar!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  ||  quoteChar!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(c!=  delimiter  ||  quoteChar!=  null  &&  quoteChar.equals(c))  {	  if(escapeChar!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
34	[BUG]  [BUGGY]  QuoteMode  quoteModePolicy  =  QuoteMode.NONE;  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  QuoteMode  quoteModePolicy  =  QuoteMode.NONE;  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	QuoteMode  quoteModePolicy  =  QuoteMode.NONE;  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charValue())  {  throw  new  IllegalArgumentException( " ");  }	  if(quoteMode    ==    QuoteMode.NONE)    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
35	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(delimiter!=  null  &&  quoteChar.equals(delimiter))  {	  if(delimiter!=    null    &&    quoteCharacter.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
36	[BUG]  [BUGGY]  if(quoteMode!=  QuoteMode.NONE)  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(quoteMode!=  QuoteMode.NONE)  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(quoteMode!=  QuoteMode.NONE)  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same	  if(quoteMode    ==    QuoteMode.NONE)    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charValue())    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    quoteChar    cannot    be    the    same    ('    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
37	[BUG]  [BUGGY]  if(quoteMode!=  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(quoteMode!=  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(quoteMode!=  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( " ");  }	  if(escapeChar!=    null    &&    quoteMode    ==    QuoteMode.NONE)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
38	[BUG]  [BUGGY]  if(quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( " ");  }	  if(escapeChar!=    null    &&    quoteMode    ==    QuoteMode.NONE)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
39	[BUG]  [BUGGY]  if(c!=  null  &&  quoteChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  quoteChar.equals(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(c!=  null  &&  quoteChar.equals(delimiter))  {	  if(c!=    null    &&    quoteChar.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
40	[BUG]  [BUGGY]  if(c!=  null  &&  quoteMode.equals(c))  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  quoteMode.equals(c))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(c!=  null  &&  quoteMode.equals(c))  {	  if(c!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
41	[BUG]  [BUGGY]  for(Character  c  :  description.charAt(c))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  (' "  +  quoteChar  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  for(Character  c  :  description.charAt(c))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  (' "  +  quoteChar  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	for(Character  c  :  description.charAt(c))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  (' "  +  quoteChar  +   "') ");  }	  if(quoteMode!=    QuoteMode.NONE)    {    for(Character    c    :    description.charAt(c))    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    quoteChar    cannot    be    the    same    ('   "    +    quoteChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
42	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(commentMarker))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(commentMarker))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(quoteChar!=  null  &&  quoteChar.equals(commentMarker))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }	  if(quoteChar!=    null)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    quoteChar    cannot    be    the    same    ('   "    +    quoteChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
43	[BUG]  [BUGGY]  if(quoteMode!=  QuoteMode.NONE)  {  for(Character  c  :  c.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(quoteMode!=  QuoteMode.NONE)  {  for(Character  c  :  c.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(quoteMode!=  QuoteMode.NONE)  {  for(Character  c  :  c.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }	  if(quoteMode!=    QuoteMode.NONE)    {    for(Character    c    :    quotes)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    quoteChar    cannot    be    the    same    ('   "    +    quoteChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
44	[BUG]  [BUGGY]  QuoteMode  quoteMode  =  QuoteMode.NONE;  for(Character  c  :  quoteMode)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  QuoteMode  quoteMode  =  QuoteMode.NONE;  for(Character  c  :  quoteMode)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	QuoteMode  quoteMode  =  QuoteMode.NONE;  for(Character  c  :  quoteMode)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }	  if(quoteMode!=    QuoteMode.NONE)    {    for(Character    c    :    quotes)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    quoteChar    cannot    be    the    same    ('   "    +    quoteChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
45	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  quoteMode!=  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  quoteMode!=  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(escapeChar!=  null  &&  quoteMode!=  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }	  if(escapeChar!=    null    &&    quoteMode    ==    QuoteMode.NONE)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    quoteChar    cannot    be    the    same    ('   "    +    quoteChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
46	[BUG]  [BUGGY]  if(commentStart!=  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(commentStart!=  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(commentStart!=  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }	  if(escapeChar!=    null    &&    quoteMode    ==    QuoteMode.NONE)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    quoteChar    cannot    be    the    same    ('   "    +    quoteChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
47	[BUG]  [BUGGY]  if(quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }	  if(quoteMode!=    QuoteMode.NONE)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    quoteChar    cannot    be    the    same    ('   "    +    quoteChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
48	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");	  if(quoteMode!=    QuoteMode.NONE)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    quoteChar    cannot    be    the    same    ('   "    +    quoteChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
49	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  commentMarker.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(delimiter!=  null  &&  delimiter  ==  commentMarker.charValue())  {	  if(delimiter!=    null    &&    quoteCharacter.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
50	[BUG]  [BUGGY]  if(c!=  QuoteMode.NONE)  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(c!=  QuoteMode.NONE)  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(c!=  QuoteMode.NONE)  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +	  if(quoteMode    ==    QuoteMode.NONE)    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charValue())    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    quoteChar    cannot    be    the    same    ('    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
51	[BUG]  [BUGGY]  if(c  ==  QuoteMode.NONE)  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(c  ==  QuoteMode.NONE)  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(c  ==  QuoteMode.NONE)  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +	  if(quoteMode    ==    QuoteMode.NONE)    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charValue())    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    quoteChar    cannot    be    the    same    ('    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
52	[BUG]  [BUGGY]  if(commentStart!=  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(commentStart!=  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(commentStart!=  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( " ");  }	  if(escapeChar!=    null    &&    quoteMode    ==    QuoteMode.NONE)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
53	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(commentMarker))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(commentMarker))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(quoteChar!=  null  &&  quoteChar.equals(commentMarker))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }	  if(quoteChar!=    null)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    quoteChar    cannot    be    the    same    ('   "    +    quoteCharacter    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
54	[BUG]  [BUGGY]  if(c!=  QuoteMode.NONE)  {  for(Character  c  :  description.charAt(c))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(c!=  QuoteMode.NONE)  {  for(Character  c  :  description.charAt(c))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(c!=  QuoteMode.NONE)  {  for(Character  c  :  description.charAt(c))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }	  if(quoteMode!=    QuoteMode.NONE)    {    for(Character    c    :    description.charAt(c))    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    quoteChar    cannot    be    the    same    ('   "    +    quoteChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
55	[BUG]  [BUGGY]  if(c!=  QuoteMode.NONE)  {  for(Character  c  :  description.charAt(0))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(c!=  QuoteMode.NONE)  {  for(Character  c  :  description.charAt(0))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(c!=  QuoteMode.NONE)  {  for(Character  c  :  description.charAt(0))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }	  if(quoteMode!=    QuoteMode.NONE)    {    for(Character    c    :    description.charAt(c))    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    quoteChar    cannot    be    the    same    ('   "    +    quoteChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
56	[BUG]  [BUGGY]  if(c!=  null  &&  quoteChar.equals(escapeChar))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  quoteChar.equals(escapeChar))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(c!=  null  &&  quoteChar.equals(escapeChar))  {	  if(escapeChar!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
57	[BUG]  [BUGGY]  if(quoteMode!=  QuoteMode.NONE)  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(quoteMode!=  QuoteMode.NONE)  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(quoteMode!=  QuoteMode.NONE)  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charValue())  {  throw  new  IllegalArgumentException( " ");  }	  if(quoteMode    ==    QuoteMode.NONE)    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
58	[BUG]  [BUGGY]  if(quoteMode!=  QuoteMode.NONE)  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(quoteMode!=  QuoteMode.NONE)  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(quoteMode!=  QuoteMode.NONE)  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +	  if(quoteMode    ==    QuoteMode.NONE)    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
59	[BUG]  [BUGGY]  if(c!=  delimiter  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalArgumentException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1399	1399	13	replace	if(c!=  delimiter  &&  quoteChar.equals(c))  {	  if(escapeCharacter!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
