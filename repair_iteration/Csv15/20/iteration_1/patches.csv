bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  CharTypes.appendCharacter(commentStart);  [CE]  [FE]          NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  CharTypes.appendCharacter(commentStart);  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	CharTypes.appendCharacter(commentStart);	  if(!allowMissingColumnNames)    {    for(int    i    =    0;    i    <    headerComments.size();    ++i)    {    CharTypes.appendCharacter(commentStart);    }    	non-compiled	[CE]  	11	None	replace
2	[BUG]  [BUGGY]  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(commentEnd);  }  [CE]  [FE]            NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(commentEnd);  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(commentEnd);  }	  if(!allowMissingColumnNames)    {    for(int    i    =    0;    i    <    headerComments.size();    ++i)    {    CharTypes.appendCharacter(commentStart);    }    	non-compiled	[CE]  	11	None	replace
3	[BUG]  [BUGGY]  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(commentStart,  skipHeaderRecord);  }  [CE]  [FE]              NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(commentStart,  skipHeaderRecord);  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(commentStart,  skipHeaderRecord);  }	  if(!allowMissingColumnNames)    {    for(int    i    =    0;    i    <    headerComments.size();    ++i)    {    CharTypes.appendCharacter(commentStart);    }    	non-compiled	[CE]  	11	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[headerComments.size()  ];  System.arraycopy(headerComments,  0,  headerComments,  0,  headerComments.length);  }  [CE]  [FE]          NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[headerComments.size()  ];  System.arraycopy(headerComments,  0,  headerComments,  0,  headerComments.length);  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[headerComments.size()  ];  System.arraycopy(headerComments,  0,  headerComments,  0,  headerComments.length);  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    String[]    headerComments    =    new    String[headerComments.size()    ];    System.arraycopy(headerComments,    0,    headerComments,    0,    headerComments.length);    }    	non-compiled	[CE]  	2	None	replace
5	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[headerComments.size()  ];  System.arraycopy(headerComments,  0,  [CE]  [FE]            NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[headerComments.size()  ];  System.arraycopy(headerComments,  0,  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[headerComments.size()  ];  System.arraycopy(headerComments,  0,	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    String[]    headerComments    =    new    String[headerComments.size()    ];    System.arraycopy(headerComments,    0,    headerComments,    0,    headerComments.length);    }    	non-compiled	[CE]  	2	None	replace
6	[BUG]  [BUGGY]  String[]  headerComments  =  new  String[headerComments.size()  ];  System.arraycopy(headerComments,  0,  headerComments,  0,  headerComments.length);  [CE]  [FE]              NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  String[]  headerComments  =  new  String[headerComments.size()  ];  System.arraycopy(headerComments,  0,  headerComments,  0,  headerComments.length);  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	String[]  headerComments  =  new  String[headerComments.size()  ];  System.arraycopy(headerComments,  0,  headerComments,  0,  headerComments.length);	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    String[]    headerComments    =    new    String[headerComments.size()    ];    System.arraycopy(headerComments,    0,    headerComments,    0,    headerComments.length);    }    	non-compiled	[CE]  	2	None	replace
7	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[headerComments.size()  ];  System.arraycopy(headerComments,  0,  [CE]  [FE]                NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[headerComments.size()  ];  System.arraycopy(headerComments,  0,  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[headerComments.size()  ];  System.arraycopy(headerComments,  0,	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    String[]    headerComments    =    new    String[headerComments.size()    ];    System.arraycopy(headerComments,    0,    headerComments,    0,    headerComments.length);    }    	non-compiled	[CE]  	2	None	replace
8	[BUG]  [BUGGY]  allowMissingColumnNames)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]        NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  allowMissingColumnNames)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	allowMissingColumnNames)  {  throw  new  IllegalArgumentException( " ");  }	  if(!allowMissingColumnNames)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	6	None	replace
9	[BUG]  [BUGGY]  allowMissingColumnNames(true)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]          NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  allowMissingColumnNames(true)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	allowMissingColumnNames(true)  {  throw  new  IllegalArgumentException( " ");  }	  if(!allowMissingColumnNames)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	6	None	replace
10	[BUG]  [BUGGY]  allowMissingColumnNames(true);  [CE]  [FE]            NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  allowMissingColumnNames(true);  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	allowMissingColumnNames(true);	  if(!allowMissingColumnNames)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	6	None	replace
11	[BUG]  [BUGGY]  if(headerComments!=  null)  {  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(quoteCharacter);  }  [CE]  [FE]            NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(headerComments!=  null)  {  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(quoteCharacter);  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(headerComments!=  null)  {  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(quoteCharacter);  }	  if(!allowMissingColumnNames)    {    for(int    i    =    0;    i    <    headerComments.size();    ++i)    {    CharTypes.appendCharacter(quoteCharacter);    }    	non-compiled	[CE]  	12	None	replace
12	[BUG]  [BUGGY]  Character[]  headerComments  =  toStringArray(headerComments);  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(quoteCharacter);  }  [CE]  [FE]              NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  Character[]  headerComments  =  toStringArray(headerComments);  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(quoteCharacter);  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	Character[]  headerComments  =  toStringArray(headerComments);  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(quoteCharacter);  }	  if(!allowMissingColumnNames)    {    for(int    i    =    0;    i    <    headerComments.size();    ++i)    {    CharTypes.appendCharacter(quoteCharacter);    }    	non-compiled	[CE]  	12	None	replace
13	[BUG]  [BUGGY]  CharTypes.appendCharacter(quoteCharacter);  [CE]  [FE]                NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  CharTypes.appendCharacter(quoteCharacter);  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	CharTypes.appendCharacter(quoteCharacter);	  if(!allowMissingColumnNames)    {    for(int    i    =    0;    i    <    headerComments.size();    ++i)    {    CharTypes.appendCharacter(quoteCharacter);    }    	non-compiled	[CE]  	12	None	replace
14	[BUG]  [BUGGY]  Object[]  headerComments  =  new  Object[headerComments.size()  ];  System.arraycopy(headerComments,  0,  headerComments,  0,  [CE]  [FE]            NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  Object[]  headerComments  =  new  Object[headerComments.size()  ];  System.arraycopy(headerComments,  0,  headerComments,  0,  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	Object[]  headerComments  =  new  Object[headerComments.size()  ];  System.arraycopy(headerComments,  0,  headerComments,  0,	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    String[]    headerComments    =    new    String[headerComments.size()    ];    System.arraycopy(headerComments,    0,    headerComments,    0,    	non-compiled	[CE]  	3	None	replace
15	[BUG]  [BUGGY]  String[]  headerComments  =  new  String[headerComments.size()  ];  System.arraycopy(headerComments,  0,  headerComments,  0,  [CE]  [FE]              NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  String[]  headerComments  =  new  String[headerComments.size()  ];  System.arraycopy(headerComments,  0,  headerComments,  0,  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	String[]  headerComments  =  new  String[headerComments.size()  ];  System.arraycopy(headerComments,  0,  headerComments,  0,	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    String[]    headerComments    =    new    String[headerComments.size()    ];    System.arraycopy(headerComments,    0,    headerComments,    0,    	non-compiled	[CE]  	3	None	replace
16	[BUG]  [BUGGY]  System.arraycopy(headerComments,  0,  headerComments,  0,  [CE]  [FE]                NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  System.arraycopy(headerComments,  0,  headerComments,  0,  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	System.arraycopy(headerComments,  0,  headerComments,  0,	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    String[]    headerComments    =    new    String[headerComments.size()    ];    System.arraycopy(headerComments,    0,    headerComments,    0,    	non-compiled	[CE]  	3	None	replace
17	[BUG]  [BUGGY]  this.recordSeparator  =  nullString;  [CE]  [FE]          NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  this.recordSeparator  =  nullString;  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	this.recordSeparator  =  nullString;	  if(!allowMissingColumnNames)    {    this.recordSeparator    =    nullString;    }    	non-compiled	[CE]  	7	None	replace
18	[BUG]  [BUGGY]  this.recordSeparator  =  recordSeparator;  [CE]  [FE]            NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  this.recordSeparator  =  recordSeparator;  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	this.recordSeparator  =  recordSeparator;	  if(!allowMissingColumnNames)    {    this.recordSeparator    =    nullString;    }    	non-compiled	[CE]  	7	None	replace
19	[BUG]  [BUGGY]  This.recordSeparator  =  nullString;  [CE]  [FE]              NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  This.recordSeparator  =  nullString;  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	This.recordSeparator  =  nullString;	  if(!allowMissingColumnNames)    {    this.recordSeparator    =    nullString;    }    	non-compiled	[CE]  	7	None	replace
20	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[headerComments.size()  ];  System.arraycopy(bodyComments,  0,  headerComments,  0,  headerComments.length);  }  [CE]  [FE]                NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[headerComments.size()  ];  System.arraycopy(bodyComments,  0,  headerComments,  0,  headerComments.length);  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[headerComments.size()  ];  System.arraycopy(bodyComments,  0,  headerComments,  0,  headerComments.length);  }	      	non-compiled	[CE]  	5	None	replace
21	[BUG]  [BUGGY]  if(nullString.equals( " "))  {  validate();  }  [CE]  [FE]        NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(nullString.equals( " "))  {  validate();  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(nullString.equals( " "))  {  validate();  }	  validate();    	non-compiled	[CE]  	1	None	replace
22	[BUG]  [BUGGY]  if(nullString  ==  null)  {  validate();  }  [CE]  [FE]          NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(nullString  ==  null)  {  validate();  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(nullString  ==  null)  {  validate();  }	  validate();    	non-compiled	[CE]  	1	None	replace
23	[BUG]  [BUGGY]  if(nullString!=  null)  {  validate();  }  [CE]  [FE]            NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(nullString!=  null)  {  validate();  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(nullString!=  null)  {  validate();  }	  validate();    	non-compiled	[CE]  	1	None	replace
24	[BUG]  [BUGGY]  Object[]  headerComments  =  new  Object[headerComments.size()  ];  System.arraycopy(headerComments,  0,  headerComments,  [CE]  [FE]              NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  Object[]  headerComments  =  new  Object[headerComments.size()  ];  System.arraycopy(headerComments,  0,  headerComments,  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	Object[]  headerComments  =  new  Object[headerComments.size()  ];  System.arraycopy(headerComments,  0,  headerComments,	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    String[]    headerComments    =    new    String[headerComments.size()    ];    System.arraycopy(headerComments,    0,    headerComments,    	non-compiled	[CE]  	4	None	replace
25	[BUG]  [BUGGY]  System.arraycopy(headerComments,  0,  headerComments,  [CE]  [FE]                NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  System.arraycopy(headerComments,  0,  headerComments,  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	System.arraycopy(headerComments,  0,  headerComments,	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    String[]    headerComments    =    new    String[headerComments.size()    ];    System.arraycopy(headerComments,    0,    headerComments,    	non-compiled	[CE]  	4	None	replace
26	[BUG]  [BUGGY]  Object[]  headerComments  =  new  Object[headerComments.size()  ];  System.arraycopy(headerComments,  0,  recordSeparator,  [CE]  [FE]                  NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  Object[]  headerComments  =  new  Object[headerComments.size()  ];  System.arraycopy(headerComments,  0,  recordSeparator,  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	Object[]  headerComments  =  new  Object[headerComments.size()  ];  System.arraycopy(headerComments,  0,  recordSeparator,	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    String[]    headerComments    =    new    String[headerComments.size()    ];    System.arraycopy(headerComments,    0,    headerComments,    	non-compiled	[CE]  	4	None	replace
27	[BUG]  [BUGGY]  Object[]  headerComments  =  toStringArray(headerComments);  [CE]  [FE]                    NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  Object[]  headerComments  =  toStringArray(headerComments);  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	Object[]  headerComments  =  toStringArray(headerComments);	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    String[]    headerComments    =    new    String[headerComments.size()    ];    System.arraycopy(headerComments,    0,    headerComments,    	non-compiled	[CE]  	4	None	replace
28	[BUG]  [BUGGY]  CharTypes.appendCharacter(commentStart,  delimiter);  [CE]  [FE]        NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  CharTypes.appendCharacter(commentStart,  delimiter);  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	CharTypes.appendCharacter(commentStart,  delimiter);	  if(!allowMissingColumnNames)    {    for(int    i    =    0;    i    <    headerComments.size();    ++i)    {    CharTypes.appendCharacter(commentStart,    delimiter);    }    	non-compiled	[CE]  	10	None	replace
29	[BUG]  [BUGGY]  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(commentEnd,  delimiter);  }  [CE]  [FE]          NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(commentEnd,  delimiter);  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(commentEnd,  delimiter);  }	  if(!allowMissingColumnNames)    {    for(int    i    =    0;    i    <    headerComments.size();    ++i)    {    CharTypes.appendCharacter(commentStart,    delimiter);    }    	non-compiled	[CE]  	10	None	replace
30	[BUG]  [BUGGY]  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(commentStart,  commentMarker);  }  [CE]  [FE]            NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(commentStart,  commentMarker);  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(commentStart,  commentMarker);  }	  if(!allowMissingColumnNames)    {    for(int    i    =    0;    i    <    headerComments.size();    ++i)    {    CharTypes.appendCharacter(commentStart,    delimiter);    }    	non-compiled	[CE]  	10	None	replace
31	[BUG]  [BUGGY]  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  final  char  delimiter  =  headerComments[i];  }  [CE]  [FE]            NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  final  char  delimiter  =  headerComments[i];  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  final  char  delimiter  =  headerComments[i];  }	  if(!allowMissingColumnNames)    {    for(int    i    =    0;    i    <    headerComments.length;    ++i)    {    char    delimiter    =    headerComments[i];    }    	non-compiled	[CE]  	8	None	replace
32	[BUG]  [BUGGY]  if(headerComments!=  null)  {  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  final  char  delimiter  =  headerComments[i];  }  [CE]  [FE]              NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(headerComments!=  null)  {  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  final  char  delimiter  =  headerComments[i];  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(headerComments!=  null)  {  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  final  char  delimiter  =  headerComments[i];  }	  if(!allowMissingColumnNames)    {    for(int    i    =    0;    i    <    headerComments.length;    ++i)    {    char    delimiter    =    headerComments[i];    }    	non-compiled	[CE]  	8	None	replace
33	[BUG]  [BUGGY]  if(headerComments!=  null)  {  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  delimiter  =  headerComments[i];  }  [CE]  [FE]                NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(headerComments!=  null)  {  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  delimiter  =  headerComments[i];  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(headerComments!=  null)  {  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  delimiter  =  headerComments[i];  }	  if(!allowMissingColumnNames)    {    for(int    i    =    0;    i    <    headerComments.length;    ++i)    {    char    delimiter    =    headerComments[i];    }    	non-compiled	[CE]  	8	None	replace
34	[BUG]  [BUGGY]  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  final  char  delimiter  =  headerComments[i].charAt(i);  }  [CE]  [FE]              NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  final  char  delimiter  =  headerComments[i].charAt(i);  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  final  char  delimiter  =  headerComments[i].charAt(i);  }	  if(!allowMissingColumnNames)    {    for(int    i    =    0;    i    <    headerComments.length;    ++i)    {    char    delimiter    =    headerComments[i].charAt(i);    }    	non-compiled	[CE]  	9	None	replace
35	[BUG]  [BUGGY]  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  delimiter  =  headerComments[i].charAt(i);  }  [CE]  [FE]                NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  delimiter  =  headerComments[i].charAt(i);  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  delimiter  =  headerComments[i].charAt(i);  }	  if(!allowMissingColumnNames)    {    for(int    i    =    0;    i    <    headerComments.length;    ++i)    {    char    delimiter    =    headerComments[i].charAt(i);    }    	non-compiled	[CE]  	9	None	replace
36	[BUG]  [BUGGY]  if(headerComments!=  null)  {  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  final  char  delimiter  =  headerComments[i].charAt  [CE]  [FE]                  NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(headerComments!=  null)  {  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  final  char  delimiter  =  headerComments[i].charAt  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(headerComments!=  null)  {  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  final  char  delimiter  =  headerComments[i].charAt	  if(!allowMissingColumnNames)    {    for(int    i    =    0;    i    <    headerComments.length;    ++i)    {    char    delimiter    =    headerComments[i].charAt(i);    }    	non-compiled	[CE]  	9	None	replace
37	[BUG]  [BUGGY]  if(!allowMissingColumnNames)  {  this.recordSeparator  =  recordSeparator;  }  [CE]  [FE]                NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(!allowMissingColumnNames)  {  this.recordSeparator  =  recordSeparator;  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(!allowMissingColumnNames)  {  this.recordSeparator  =  recordSeparator;  }	      	non-compiled	[CE]  	5	None	replace
38	[BUG]  [BUGGY]  if(headerComments!=  null)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(commentStart,  delimiter);  }  [CE]  [FE]        NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(headerComments!=  null)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(commentStart,  delimiter);  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(headerComments!=  null)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(commentStart,  delimiter);  }	  if(!allowMissingColumnNames)    {    for(int    i    =    0;    i    <    headerComments.size();    ++i)    {    CharTypes.appendCharacter(commentStart,    delimiter);    }    	non-compiled	[CE]  	10	None	replace
39	[BUG]  [BUGGY]  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(commentStart,  comment);  }  [CE]  [FE]          NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(commentStart,  comment);  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(commentStart,  comment);  }	  if(!allowMissingColumnNames)    {    for(int    i    =    0;    i    <    headerComments.size();    ++i)    {    CharTypes.appendCharacter(commentStart,    delimiter);    }    	non-compiled	[CE]  	10	None	replace
40	[BUG]  [BUGGY]  if(headerComments!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  char  delimiter  =  headerComments[i];  }  [CE]  [FE]            NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(headerComments!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  char  delimiter  =  headerComments[i];  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(headerComments!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  char  delimiter  =  headerComments[i];  }	  if(!allowMissingColumnNames)    {    for(int    i    =    0;    i    <    headerComments.length;    ++i)    {    char    delimiter    =    headerComments[i];    }    	non-compiled	[CE]  	8	None	replace
41	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  char  delimiter  =  headerComments[i];  }  [CE]  [FE]              NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  char  delimiter  =  headerComments[i];  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  char  delimiter  =  headerComments[i];  }	  if(!allowMissingColumnNames)    {    for(int    i    =    0;    i    <    headerComments.length;    ++i)    {    char    delimiter    =    headerComments[i];    }    	non-compiled	[CE]  	8	None	replace
42	[BUG]  [BUGGY]  if(!allowMissingColumnNames)  {  validate();  }  [CE]  [FE]        NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(!allowMissingColumnNames)  {  validate();  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(!allowMissingColumnNames)  {  validate();  }	  validate();    	non-compiled	[CE]  	1	None	replace
43	[BUG]  [BUGGY]  if(allowMissingColumnNames)  {  validate();  }  [CE]  [FE]          NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(allowMissingColumnNames)  {  validate();  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(allowMissingColumnNames)  {  validate();  }	  validate();    	non-compiled	[CE]  	1	None	replace
44	[BUG]  [BUGGY]  if(this.allowMissingColumnNames)  {  validate();  }  [CE]  [FE]            NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(this.allowMissingColumnNames)  {  validate();  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(this.allowMissingColumnNames)  {  validate();  }	  validate();    	non-compiled	[CE]  	1	None	replace
45	[BUG]  [BUGGY]  if(allowMissingColumnNames)  {  validate();  }  else  {  System.arraycopy(header,  0,  headerComments,  0,  headerComments.length);  }  [CE]  [FE]              NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(allowMissingColumnNames)  {  validate();  }  else  {  System.arraycopy(header,  0,  headerComments,  0,  headerComments.length);  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(allowMissingColumnNames)  {  validate();  }  else  {  System.arraycopy(header,  0,  headerComments,  0,  headerComments.length);  }	  validate();    	non-compiled	[CE]  	1	None	replace
46	[BUG]  [BUGGY]  if(headerComments!=  null)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(quoteCharacter);  }  [CE]  [FE]            NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(headerComments!=  null)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(quoteCharacter);  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(headerComments!=  null)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(quoteCharacter);  }	  if(!allowMissingColumnNames)    {    for(int    i    =    0;    i    <    headerComments.size();    ++i)    {    CharTypes.appendCharacter(quoteCharacter);    }    	non-compiled	[CE]  	12	None	replace
47	[BUG]  [BUGGY]  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(quoteChar);  }  [CE]  [FE]              NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(quoteChar);  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(quoteChar);  }	  if(!allowMissingColumnNames)    {    for(int    i    =    0;    i    <    headerComments.size();    ++i)    {    CharTypes.appendCharacter(quoteCharacter);    }    	non-compiled	[CE]  	12	None	replace
48	[BUG]  [BUGGY]  if(headerComments!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  char  delimiter  =  headerComments[i].charAt(i);  }  [CE]  [FE]              NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(headerComments!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  char  delimiter  =  headerComments[i].charAt(i);  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(headerComments!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  char  delimiter  =  headerComments[i].charAt(i);  }	  if(!allowMissingColumnNames)    {    for(int    i    =    0;    i    <    headerComments.length;    ++i)    {    char    delimiter    =    headerComments[i].charAt(i);    }    	non-compiled	[CE]  	9	None	replace
49	[BUG]  [BUGGY]  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  char  delimiter  =  headerComments[i].charAt(0);  }  [CE]  [FE]                NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  char  delimiter  =  headerComments[i].charAt(0);  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  char  delimiter  =  headerComments[i].charAt(0);  }	  if(!allowMissingColumnNames)    {    for(int    i    =    0;    i    <    headerComments.length;    ++i)    {    char    delimiter    =    headerComments[i].charAt(i);    }    	non-compiled	[CE]  	9	None	replace
50	[BUG]  [BUGGY]  Object[]  headerComments  =  new  Object[headerComments.size()  ];  System.arraycopy(headerComments,  0,  headerComments,  0,  headerComments.length);  [CE]  [FE]          NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  Object[]  headerComments  =  new  Object[headerComments.size()  ];  System.arraycopy(headerComments,  0,  headerComments,  0,  headerComments.length);  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	Object[]  headerComments  =  new  Object[headerComments.size()  ];  System.arraycopy(headerComments,  0,  headerComments,  0,  headerComments.length);	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    String[]    headerComments    =    new    String[headerComments.size()    ];    System.arraycopy(headerComments,    0,    headerComments,    0,    headerComments.length);    }    	non-compiled	[CE]  	2	None	replace
51	[BUG]  [BUGGY]  if(headerComments!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[headerComments.size()  ];  System.arraycopy(headerComments,  0,  [CE]  [FE]            NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(headerComments!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[headerComments.size()  ];  System.arraycopy(headerComments,  0,  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(headerComments!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[headerComments.size()  ];  System.arraycopy(headerComments,  0,	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    String[]    headerComments    =    new    String[headerComments.size()    ];    System.arraycopy(headerComments,    0,    headerComments,    0,    headerComments.length);    }    	non-compiled	[CE]  	2	None	replace
52	[BUG]  [BUGGY]  if(headerComments!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[headerComments.size()  ];  System.arraycopy(headerComments,  0,  headerCom  [CE]  [FE]              NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(headerComments!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[headerComments.size()  ];  System.arraycopy(headerComments,  0,  headerCom  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(headerComments!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[headerComments.size()  ];  System.arraycopy(headerComments,  0,  headerCom	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    String[]    headerComments    =    new    String[headerComments.size()    ];    System.arraycopy(headerComments,    0,    headerComments,    0,    headerComments.length);    }    	non-compiled	[CE]  	2	None	replace
53	[BUG]  [BUGGY]  if(!allowMissingColumnNames)  {  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[headerComments.size()  ];  System.arra  [CE]  [FE]                NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(!allowMissingColumnNames)  {  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[headerComments.size()  ];  System.arra  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(!allowMissingColumnNames)  {  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[headerComments.size()  ];  System.arra	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    String[]    headerComments    =    new    String[headerComments.size()    ];    System.arraycopy(headerComments,    0,    headerComments,    0,    headerComments.length);    }    	non-compiled	[CE]  	2	None	replace
54	[BUG]  [BUGGY]  Object[]  headerComments  =  toStringArray(headerComments);  System.arraycopy(headerComments,  0,  headerComments,  0,  [CE]  [FE]            NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  Object[]  headerComments  =  toStringArray(headerComments);  System.arraycopy(headerComments,  0,  headerComments,  0,  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	Object[]  headerComments  =  toStringArray(headerComments);  System.arraycopy(headerComments,  0,  headerComments,  0,	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    String[]    headerComments    =    new    String[headerComments.size()    ];    System.arraycopy(headerComments,    0,    headerComments,    0,    	non-compiled	[CE]  	3	None	replace
55	[BUG]  [BUGGY]  if(!allowMissingColumnNames  &&!ignoreEmptyLines)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]        NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(!allowMissingColumnNames  &&!ignoreEmptyLines)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(!allowMissingColumnNames  &&!ignoreEmptyLines)  {  throw  new  IllegalArgumentException( " ");  }	  if(!allowMissingColumnNames)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	6	None	replace
56	[BUG]  [BUGGY]  if(!allowMissingColumnNames  &&  ignoreEmptyLines)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]          NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(!allowMissingColumnNames  &&  ignoreEmptyLines)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(!allowMissingColumnNames  &&  ignoreEmptyLines)  {  throw  new  IllegalArgumentException( " ");  }	  if(!allowMissingColumnNames)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	6	None	replace
57	[BUG]  [BUGGY]  if(!allowMissingColumnNames  &&!ignoredEmptyLines)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]            NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(!allowMissingColumnNames  &&!ignoredEmptyLines)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(!allowMissingColumnNames  &&!ignoredEmptyLines)  {  throw  new  IllegalArgumentException( " ");  }	  if(!allowMissingColumnNames)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	6	None	replace
58	[BUG]  [BUGGY]  if(headerComments!=  null)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(commentStart);  }  [CE]  [FE]          NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(headerComments!=  null)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(commentStart);  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(headerComments!=  null)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(commentStart);  }	  if(!allowMissingColumnNames)    {    for(int    i    =    0;    i    <    headerComments.size();    ++i)    {    CharTypes.appendCharacter(commentStart);    }    	non-compiled	[CE]  	11	None	replace
59	[BUG]  [BUGGY]  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  this.headerComments.size();  ++i)  {  CharTypes.appendCharacter(commentStart);  }  [CE]  [FE]            NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  this.headerComments.size();  ++i)  {  CharTypes.appendCharacter(commentStart);  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  this.headerComments.size();  ++i)  {  CharTypes.appendCharacter(commentStart);  }	  if(!allowMissingColumnNames)    {    for(int    i    =    0;    i    <    headerComments.size();    ++i)    {    CharTypes.appendCharacter(commentStart);    }    	non-compiled	[CE]  	11	None	replace
60	[BUG]  [BUGGY]  Object[]  headerComments  =  toStringArray(headerComments);  System.arraycopy(headerComments,  0,  headerComments,  [CE]  [FE]              NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  Object[]  headerComments  =  toStringArray(headerComments);  System.arraycopy(headerComments,  0,  headerComments,  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	Object[]  headerComments  =  toStringArray(headerComments);  System.arraycopy(headerComments,  0,  headerComments,	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    String[]    headerComments    =    new    String[headerComments.size()    ];    System.arraycopy(headerComments,    0,    headerComments,    	non-compiled	[CE]  	4	None	replace
61	[BUG]  [BUGGY]  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  delimiter  =  headerComments[i].charAt(0);  }  [CE]  [FE]              NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  delimiter  =  headerComments[i].charAt(0);  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  delimiter  =  headerComments[i].charAt(0);  }	  if(!allowMissingColumnNames)    {    for(int    i    =    0;    i    <    headerComments.length;    ++i)    {    char    delimiter    =    headerComments[i].charAt(i);    }    	non-compiled	[CE]  	9	None	replace
62	[BUG]  [BUGGY]  Character  escapeCharacter  =  toStringArray(headerComments);  [CE]  [FE]          NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  Character  escapeCharacter  =  toStringArray(headerComments);  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	Character  escapeCharacter  =  toStringArray(headerComments);	  if(!allowMissingColumnNames)    {    for(int    i    =    0;    i    <    headerComments.size();    ++i)    {    CharTypes.appendCharacter(commentStart);    }    	non-compiled	[CE]  	11	None	replace
63	[BUG]  [BUGGY]  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  commentStart.size();  ++i)  {  CharTypes.appendCharacter(commentStart);  }  [CE]  [FE]            NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  commentStart.size();  ++i)  {  CharTypes.appendCharacter(commentStart);  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  commentStart.size();  ++i)  {  CharTypes.appendCharacter(commentStart);  }	  if(!allowMissingColumnNames)    {    for(int    i    =    0;    i    <    headerComments.size();    ++i)    {    CharTypes.appendCharacter(commentStart);    }    	non-compiled	[CE]  	11	None	replace
64	[BUG]  [BUGGY]  if(headerComments!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[headerComments.size()  ];  System.arraycopy(headerComments,  0,  headerComments  [CE]  [FE]          NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(headerComments!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[headerComments.size()  ];  System.arraycopy(headerComments,  0,  headerComments  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(headerComments!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[headerComments.size()  ];  System.arraycopy(headerComments,  0,  headerComments	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    String[]    headerComments    =    new    String[headerComments.size()    ];    System.arraycopy(headerComments,    0,    headerComments,    0,    headerComments.length);    }    	non-compiled	[CE]  	2	None	replace
65	[BUG]  [BUGGY]  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  commentStart.size();  ++i)  {  CharTypes.appendCharacter(commentStart,  delimiter);  }  [CE]  [FE]        NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  commentStart.size();  ++i)  {  CharTypes.appendCharacter(commentStart,  delimiter);  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  commentStart.size();  ++i)  {  CharTypes.appendCharacter(commentStart,  delimiter);  }	  if(!allowMissingColumnNames)    {    for(int    i    =    0;    i    <    headerComments.size();    ++i)    {    CharTypes.appendCharacter(commentStart,    delimiter);    }    	non-compiled	[CE]  	10	None	replace
66	[BUG]  [BUGGY]  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  delimiter  =  headerComments[i];  }  [CE]  [FE]            NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  delimiter  =  headerComments[i];  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.length;  ++i)  {  delimiter  =  headerComments[i];  }	  if(!allowMissingColumnNames)    {    for(int    i    =    0;    i    <    headerComments.length;    ++i)    {    char    delimiter    =    headerComments[i];    }    	non-compiled	[CE]  	8	None	replace
67	[BUG]  [BUGGY]  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(quotedCharacter);  }  [CE]  [FE]            NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(quotedCharacter);  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(!allowMissingColumnNames)  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  CharTypes.appendCharacter(quotedCharacter);  }	  if(!allowMissingColumnNames)    {    for(int    i    =    0;    i    <    headerComments.size();    ++i)    {    CharTypes.appendCharacter(quoteCharacter);    }    	non-compiled	[CE]  	12	None	replace
68	[BUG]  [BUGGY]  Character[]  headerComments  =  toStringArray(headerComments);  [CE]  [FE]              NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  Character[]  headerComments  =  toStringArray(headerComments);  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	Character[]  headerComments  =  toStringArray(headerComments);	  if(!allowMissingColumnNames)    {    for(int    i    =    0;    i    <    headerComments.size();    ++i)    {    CharTypes.appendCharacter(quoteCharacter);    }    	non-compiled	[CE]  	12	None	replace
69	[BUG]  [BUGGY]  allowMissingColumnNames();  [CE]  [FE]        NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  allowMissingColumnNames();  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	allowMissingColumnNames();	  if(!allowMissingColumnNames)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	6	None	replace
70	[BUG]  [BUGGY]  allowMissingColumnNames( " ")  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]          NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  allowMissingColumnNames( " ")  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	allowMissingColumnNames( " ")  {  throw  new  IllegalArgumentException( " ");  }	  if(!allowMissingColumnNames)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	6	None	replace
71	[BUG]  [BUGGY]  allowMissingColumnNames(recordSeparator)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]            NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  allowMissingColumnNames(recordSeparator)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	allowMissingColumnNames(recordSeparator)  {  throw  new  IllegalArgumentException( " ");  }	  if(!allowMissingColumnNames)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	6	None	replace
72	[BUG]  [BUGGY]  if(this.allowMissingColumnNames)  {  validate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]        NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(this.allowMissingColumnNames)  {  validate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(this.allowMissingColumnNames)  {  validate();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  validate();    	non-compiled	[CE]  	1	None	replace
73	[BUG]  [BUGGY]  if(this.allowMissingColumnNames)  {  validate();  }  else  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  recordSeparator  +=  headerComments[i];  }  [CE]  [FE]          NoClassDefFoundError    [CONTEXT]    this.recordSeparator  =  recordSeparator;  this.nullString  =  nullString;  this.headerComments  =  toStringArray(headerComments);  this.header  =  header  ==  null  ?  null  :  header.clone();  this.skipHeaderRecord  =  skipHeaderRecord;  this.ignoreHeaderCase  =  ignoreHeaderCase;  this.trailingDelimiter  =  trailingDelimiter;  this.trim  =  trim;  this.autoFlush  =  autoFlush;  validate();    [BUGGY]  if(this.allowMissingColumnNames)  {  validate();  }  else  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  recordSeparator  +=  headerComments[i];  }  [BUGGY]      [CLASS]  CSVFormat  Predefined  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean,boolean,boolean,boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  Object[]  headerComments  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  final  boolean  ignoreHeaderCase  final  boolean  trim  final  boolean  trailingDelimiter  final  boolean  autoFlush  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  trailingDelimiter  trim  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  String[]  header  headerComments  String  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  Object[]  headerComments  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	652	652	13	replace	if(this.allowMissingColumnNames)  {  validate();  }  else  {  for(int  i  =  0;  i  <  headerComments.size();  ++i)  {  recordSeparator  +=  headerComments[i];  }	  validate();    	non-compiled	[CE]  	1	None	replace
