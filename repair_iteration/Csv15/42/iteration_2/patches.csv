bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Character  c  =  getCharacter(c,  quoteMode);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  c  =  getCharacter(c,  quoteMode);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  c  =  getCharacter(c,  quoteMode);	  Character    c    =    getCharacter(c);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
2	[BUG]  [BUGGY]  Character  c  =  getCharacter(commentStart);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  c  =  getCharacter(commentStart);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  c  =  getCharacter(commentStart);	  Character    c    =    getCharacter(c);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
3	[BUG]  [BUGGY]  Character  c  =  getCharacter(escape);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  c  =  getCharacter(escape);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  c  =  getCharacter(escape);	  Character    c    =    getCharacter(c);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
4	[BUG]  [BUGGY]  Character  c  =  getCharacter(quote);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  c  =  getCharacter(quote);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  c  =  getCharacter(quote);	  Character    c    =    getCharacter(c);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
5	[BUG]  [BUGGY]  Character  commentStart  =  getCommentStart(c,  quoteChar);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  commentStart  =  getCommentStart(c,  quoteChar);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  commentStart  =  getCommentStart(c,  quoteChar);	  Character    commentStart    =    getCommentStart(c);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
6	[BUG]  [BUGGY]  Character  commentStart  =  getCommentStart(c,  quoteMode);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  commentStart  =  getCommentStart(c,  quoteMode);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  commentStart  =  getCommentStart(c,  quoteMode);	  Character    commentStart    =    getCommentStart(c);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
7	[BUG]  [BUGGY]  Character  commentStart  =  getCommentStart(escapeCharacter);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  commentStart  =  getCommentStart(escapeCharacter);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  commentStart  =  getCommentStart(escapeCharacter);	  Character    commentStart    =    getCommentStart(c);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
8	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(escapeCharacter!=  null  &&  quoteChar.equals(c))  {	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(header))    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
9	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.equals(commentStart))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(escapeCharacter!=  null  &&  quoteChar.equals(commentStart))  {	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(header))    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
10	[BUG]  [BUGGY]  Character  c  =  Character.toUpperCase(c);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  c  =  Character.toUpperCase(c);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  c  =  Character.toUpperCase(c);	  Character    c    =    Character.toLowerCase(c);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
11	[BUG]  [BUGGY]  Character  c  =  Character.toLowerCase(label);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  c  =  Character.toLowerCase(label);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  c  =  Character.toLowerCase(label);	  Character    c    =    Character.toLowerCase(c);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
12	[BUG]  [BUGGY]  Character  c  =  Character.toLowerCase(c,  quoteChar);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  c  =  Character.toLowerCase(c,  quoteChar);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  c  =  Character.toLowerCase(c,  quoteChar);	  Character    c    =    Character.toLowerCase(c);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
13	[BUG]  [BUGGY]  Character  c  =  Character.toLowerCase(labelChar);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  c  =  Character.toLowerCase(labelChar);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  c  =  Character.toLowerCase(labelChar);	  Character    c    =    Character.toLowerCase(c);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
14	[BUG]  [BUGGY]  Character  commentStart  =  quoteModePolicy.escape(c);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  commentStart  =  quoteModePolicy.escape(c);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  commentStart  =  quoteModePolicy.escape(c);	  Character    commentStart    =    quoteChar.escape(c);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
15	[BUG]  [BUGGY]  Character  commentStart  =  quoteChar.escape(c,  delim);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  commentStart  =  quoteChar.escape(c,  delim);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  commentStart  =  quoteChar.escape(c,  delim);	  Character    commentStart    =    quoteChar.escape(c);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
16	[BUG]  [BUGGY]  Character  commentStart  =  quoteChar.escape(c,  escapeChar);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  commentStart  =  quoteChar.escape(c,  escapeChar);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  commentStart  =  quoteChar.escape(c,  escapeChar);	  Character    commentStart    =    quoteChar.escape(c);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
17	[BUG]  [BUGGY]  Character  commentStart  =  escapeCharacter.escape(c);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  commentStart  =  escapeCharacter.escape(c);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  commentStart  =  escapeCharacter.escape(c);	  Character    commentStart    =    quoteChar.escape(c);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
18	[BUG]  [BUGGY]  Character  c  =  escapeCharacter.charAt(escapeCharacter.length());  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  c  =  escapeCharacter.charAt(escapeCharacter.length());  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  c  =  escapeCharacter.charAt(escapeCharacter.length());	  Character    c    =    character.charAt(escapeCharacter.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
19	[BUG]  [BUGGY]  Character  c  =  character.charAt(commentStart.length()  -  1);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  c  =  character.charAt(commentStart.length()  -  1);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  c  =  character.charAt(commentStart.length()  -  1);	  Character    c    =    character.charAt(escapeCharacter.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
20	[BUG]  [BUGGY]  Character  c  =  character.charAt(escapeCharacter.length());  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  c  =  character.charAt(escapeCharacter.length());  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  c  =  character.charAt(escapeCharacter.length());	  Character    c    =    character.charAt(escapeCharacter.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
21	[BUG]  [BUGGY]  char  c  =  escapeCharacter.charAt(escapeCharacter.length());  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  char  c  =  escapeCharacter.charAt(escapeCharacter.length());  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	char  c  =  escapeCharacter.charAt(escapeCharacter.length());	  Character    c    =    character.charAt(escapeCharacter.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
22	[BUG]  [BUGGY]  if(c  ==  null  ||!header.equals(c))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(c  ==  null  ||!header.equals(c))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(c  ==  null  ||!header.equals(c))  {	  if(header    ==    null    ||!header.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
23	[BUG]  [BUGGY]  Character  character  =  getCharacter().charAt(escapeCharacter);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  character  =  getCharacter().charAt(escapeCharacter);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  character  =  getCharacter().charAt(escapeCharacter);	  Character    character    =    getCharacter();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
24	[BUG]  [BUGGY]  Character  character  =  getCharacter().charAt(0);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  character  =  getCharacter().charAt(0);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  character  =  getCharacter().charAt(0);	  Character    character    =    getCharacter();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
25	[BUG]  [BUGGY]  Character  character  =  getCharacter().charAt(i);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  character  =  getCharacter().charAt(i);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  character  =  getCharacter().charAt(i);	  Character    character    =    getCharacter();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
26	[BUG]  [BUGGY]  if(escapeCharacter  ==  null  &&  quoteMode!=  QuoteMode.NONE)  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(escapeCharacter  ==  null  &&  quoteMode!=  QuoteMode.NONE)  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(escapeCharacter  ==  null  &&  quoteMode!=  QuoteMode.NONE)  {	  if(header    ==    null    &&    quoteMode    ==    QuoteMode.NONE)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
27	[BUG]  [BUGGY]  if(escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {	  if(header    ==    null    &&    quoteMode    ==    QuoteMode.NONE)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
28	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(delimiter!=  null  &&  quoteChar.equals(c))  {	  if(delimiter!=    null    &&    quoteChar.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
29	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.equals(commentMarker))  {  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.equals(commentMarker))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(escapeCharacter!=  null  &&  quoteChar.equals(commentMarker))  {	  if(delimiter!=    null    &&    quoteChar.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
30	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.equals(delimiter))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(escapeCharacter!=  null  &&  quoteChar.equals(delimiter))  {	  if(delimiter!=    null    &&    quoteChar.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
31	[BUG]  [BUGGY]  if(escapeCharacter  ==  null)  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(escapeCharacter  ==  null)  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(escapeCharacter  ==  null)  {	  if(delimiter    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
32	[BUG]  [BUGGY]  if(header!=  null  ||  header.length()  <  =  0)  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(header!=  null  ||  header.length()  <  =  0)  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(header!=  null  ||  header.length()  <  =  0)  {	  if(header!=    null    ||    header.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
33	[BUG]  [BUGGY]  Character  c  =  getCharacter().charAt(0);  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  c  =  getCharacter().charAt(0);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  c  =  getCharacter().charAt(0);	  Character    c    =    getCharacter();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
34	[BUG]  [BUGGY]  Character  c  =  getCharacter().charAt(escapeCharacter);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  c  =  getCharacter().charAt(escapeCharacter);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  c  =  getCharacter().charAt(escapeCharacter);	  Character    c    =    getCharacter();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
35	[BUG]  [BUGGY]  Character  c  =  getCharacter().charAt(i);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  c  =  getCharacter().charAt(i);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  c  =  getCharacter().charAt(i);	  Character    c    =    getCharacter();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
36	[BUG]  [BUGGY]  if(c!=  delimiter  ||  quoteCharacter.equals(c))  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(c!=  delimiter  ||  quoteCharacter.equals(c))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(c!=  delimiter  ||  quoteCharacter.equals(c))  {	  if(header!=    null    &&    quoteCharacter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
37	[BUG]  [BUGGY]  if(c!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(c!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(c!=  null  &&  quoteChar.equals(c))  {	  if(header!=    null    &&    quoteCharacter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
38	[BUG]  [BUGGY]  if(c!=  null  &&  quoteCharacter.equals(c))  {  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(c!=  null  &&  quoteCharacter.equals(c))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(c!=  null  &&  quoteCharacter.equals(c))  {	  if(header!=    null    &&    quoteCharacter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
39	[BUG]  [BUGGY]  if(c!=  delimiter  ||  quoteChar!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(c!=  delimiter  ||  quoteChar!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(c!=  delimiter  ||  quoteChar!=  null  &&  quoteChar.equals(c))  {	  if(header!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
40	[BUG]  [BUGGY]  if(c!=  delimiter  ||  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(c!=  delimiter  ||  quoteChar.equals(c))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(c!=  delimiter  ||  quoteChar.equals(c))  {	  if(header!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
41	[BUG]  [BUGGY]  if(commentStart!=  null  &&  quoteMode!=  QuoteMode.NONE)  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(commentStart!=  null  &&  quoteMode!=  QuoteMode.NONE)  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(commentStart!=  null  &&  quoteMode!=  QuoteMode.NONE)  {	  if(escapeCharacter!=    null    &&    quoteMode!=    QuoteMode.NONE)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
42	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.equals(header))  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.equals(header))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(escapeCharacter!=  null  &&  quoteChar.equals(header))  {	  if(header!=    null    &&    quoteChar.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
43	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteCharacter.equals(c))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(delimiter!=  null  &&  quoteCharacter.equals(c))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(delimiter!=  null  &&  quoteCharacter.equals(c))  {	  if(delimiter!=    null    &&    quoteCharacter.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
44	[BUG]  [BUGGY]  if(header!=  null  &&!header.equals(escapeCharacter))  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(header!=  null  &&!header.equals(escapeCharacter))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(header!=  null  &&!header.equals(escapeCharacter))  {	  if(header!=    null    ||!header.equals(escapeCharacter))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
45	[BUG]  [BUGGY]  if(escapeCharacter!=  null  ||!header.equals(escapeCharacter))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(escapeCharacter!=  null  ||!header.equals(escapeCharacter))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(escapeCharacter!=  null  ||!header.equals(escapeCharacter))  {	  if(header!=    null    ||!header.equals(escapeCharacter))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
46	[BUG]  [BUGGY]  Predefined.checkState(header!=  null);  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Predefined.checkState(header!=  null);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Predefined.checkState(header!=  null);	  Predefined.checkNotNull(header);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
47	[BUG]  [BUGGY]  Predefined.checkNotNull(commentStart);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Predefined.checkNotNull(commentStart);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Predefined.checkNotNull(commentStart);	  Predefined.checkNotNull(header);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
48	[BUG]  [BUGGY]  Predefined.checkState(escapeCharacter!=  null);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Predefined.checkState(escapeCharacter!=  null);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Predefined.checkState(escapeCharacter!=  null);	  Predefined.checkNotNull(header);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
49	[BUG]  [BUGGY]  Predefined.checkState(escapeCharacter  ==  null);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Predefined.checkState(escapeCharacter  ==  null);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Predefined.checkState(escapeCharacter  ==  null);	  Predefined.checkNotNull(header);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
50	[BUG]  [BUGGY]  if(commentStart!=  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(commentStart!=  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(commentStart!=  null  &&  quoteMode  ==  QuoteMode.NONE)  {	  if(escapeCharacter!=    null    &&    quoteMode    ==    QuoteMode.NONE)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
51	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteMode.equals(commentMarker))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(escapeCharacter!=  null  &&  quoteMode.equals(commentMarker))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(escapeCharacter!=  null  &&  quoteMode.equals(commentMarker))  {	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
52	[BUG]  [BUGGY]  Character  character  =  getCharacter(c,  quoteMode);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  character  =  getCharacter(c,  quoteMode);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  character  =  getCharacter(c,  quoteMode);	  Character    character    =    getCharacter(c);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
53	[BUG]  [BUGGY]  Character  character  =  getCharacter(commentStart);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  character  =  getCharacter(commentStart);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  character  =  getCharacter(commentStart);	  Character    character    =    getCharacter(c);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
54	[BUG]  [BUGGY]  Character  character  =  getCharacter(c,  description);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  character  =  getCharacter(c,  description);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  character  =  getCharacter(c,  description);	  Character    character    =    getCharacter(c);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
55	[BUG]  [BUGGY]  Character  c  =  escapeCharacter.charAt(commentStart.length()  -  1);  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  c  =  escapeCharacter.charAt(commentStart.length()  -  1);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  c  =  escapeCharacter.charAt(commentStart.length()  -  1);	  Character    c    =    escapeCharacter.charAt(escapeCharacter.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
56	[BUG]  [BUGGY]  Character  c  =  escapeCharacter.charAt(delimChar.length()  -  1);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  c  =  escapeCharacter.charAt(delimChar.length()  -  1);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  c  =  escapeCharacter.charAt(delimChar.length()  -  1);	  Character    c    =    escapeCharacter.charAt(escapeCharacter.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
57	[BUG]  [BUGGY]  if(c!=  delimiter  ||  quoteCharacter!=  null  &&  quoteCharacter.equals(c))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(c!=  delimiter  ||  quoteCharacter!=  null  &&  quoteCharacter.equals(c))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(c!=  delimiter  ||  quoteCharacter!=  null  &&  quoteCharacter.equals(c))  {	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
58	[BUG]  [BUGGY]  if(c!=  delim  ||  escapeCharacter!=  null  &&  quoteCharacter.equals(c))  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(c!=  delim  ||  escapeCharacter!=  null  &&  quoteCharacter.equals(c))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(c!=  delim  ||  escapeCharacter!=  null  &&  quoteCharacter.equals(c))  {	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
59	[BUG]  [BUGGY]  if(header!=  null  &&!header.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(header!=  null  &&!header.equals(commentStart))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(header!=  null  &&!header.equals(commentStart))  {	  if(header!=    null    ||!header.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
60	[BUG]  [BUGGY]  if(headers!=  null  ||  header.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(headers!=  null  ||  header.length()  ==  0)  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(headers!=  null  ||  header.length()  ==  0)  {	  if(headers!=    null    &&    header.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
61	[BUG]  [BUGGY]  if(headers!=  null  &&  header.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(headers!=  null  &&  header.length()  >  0)  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(headers!=  null  &&  header.length()  >  0)  {	  if(headers!=    null    &&    header.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
62	[BUG]  [BUGGY]  if(headers  ==  null  ||  header.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(headers  ==  null  ||  header.length()  ==  0)  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(headers  ==  null  ||  header.length()  ==  0)  {	  if(headers!=    null    &&    header.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
63	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteMode!=  QuoteMode.NONE)  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(delimiter!=  null  &&  quoteMode!=  QuoteMode.NONE)  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(delimiter!=  null  &&  quoteMode!=  QuoteMode.NONE)  {	  if(header!=    null    &&    quoteMode!=    QuoteMode.NONE)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
64	[BUG]  [BUGGY]  if(c!=  null  &&!header.equals(c))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(c!=  null  &&!header.equals(c))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(c!=  null  &&!header.equals(c))  {	  if(header!=    null    &&!header.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
65	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&!header.equals(c))  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(escapeCharacter!=  null  &&!header.equals(c))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(escapeCharacter!=  null  &&!header.equals(c))  {	  if(header!=    null    &&!header.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
66	[BUG]  [BUGGY]  if(header  ==  null  ||  header.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(header  ==  null  ||  header.length()  >  0)  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(header  ==  null  ||  header.length()  >  0)  {	  if(header    ==    null    &&    header.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
67	[BUG]  [BUGGY]  if(header  ==  null  ||  header.length()  >=  0)  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(header  ==  null  ||  header.length()  >=  0)  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(header  ==  null  ||  header.length()  >=  0)  {	  if(header    ==    null    ||    header.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
68	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteCharacter.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(delimiter!=  null  &&  quoteCharacter.equals(commentStart))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(delimiter!=  null  &&  quoteCharacter.equals(commentStart))  {	  if(header!=    null    &&    quoteCharacter.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
69	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(commentStart))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(delimiter!=  null  &&  quoteChar.equals(commentStart))  {	  if(header!=    null    &&    quoteCharacter.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
70	[BUG]  [BUGGY]  if(header!=  null  ||  header.length()  >  0  ||  header.charAt(header.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(header!=  null  ||  header.length()  >  0  ||  header.charAt(header.length()  -  1)!=  '/')  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(header!=  null  ||  header.length()  >  0  ||  header.charAt(header.length()  -  1)!=  '/')  {	  if(header!=    null    &&    header.length()    >    0    ||    header.charAt(header.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
71	[BUG]  [BUGGY]  if(header  ==  null  &&  header.length()  >  0  ||  header.charAt(header.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(header  ==  null  &&  header.length()  >  0  ||  header.charAt(header.length()  -  1)!=  '/')  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(header  ==  null  &&  header.length()  >  0  ||  header.charAt(header.length()  -  1)!=  '/')  {	  if(header!=    null    &&    header.length()    >    0    ||    header.charAt(header.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
72	[BUG]  [BUGGY]  if(header  ==  null  ||  header.length()  >  0  ||  header.charAt(header.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(header  ==  null  ||  header.length()  >  0  ||  header.charAt(header.length()  -  1)!=  '/')  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(header  ==  null  ||  header.length()  >  0  ||  header.charAt(header.length()  -  1)!=  '/')  {	  if(header!=    null    &&    header.length()    >    0    ||    header.charAt(header.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
73	[BUG]  [BUGGY]  if(header!=  null  ||  header.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(header!=  null  ||  header.length()!=  0)  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(header!=  null  ||  header.length()!=  0)  {	  if(header    ==    null    ||    header.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
74	[BUG]  [BUGGY]  if(c!=  null  ||!header.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(c!=  null  ||!header.equals(commentStart))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(c!=  null  ||!header.equals(commentStart))  {	  if(c!=    null    ||!header.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
75	[BUG]  [BUGGY]  if(c!=  delimiter)  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(c!=  delimiter)  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(c!=  delimiter)  {	  if(header!=    null    &&    quoteCharacter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
76	[BUG]  [BUGGY]  Predefined.checkNotNull(escapeCharacter);  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Predefined.checkNotNull(escapeCharacter);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Predefined.checkNotNull(escapeCharacter);	  Predefined.checkNotNull(header);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
77	[BUG]  [BUGGY]  Predefined.checkNotNull(delimiter);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Predefined.checkNotNull(delimiter);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Predefined.checkNotNull(delimiter);	  Predefined.checkNotNull(header);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
78	[BUG]  [BUGGY]  if(header  ==  null  ||!header.equals(commentMarker))  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(header  ==  null  ||!header.equals(commentMarker))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(header  ==  null  ||!header.equals(commentMarker))  {	  if(header!=    null    ||!header.equals(escapeCharacter))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
79	[BUG]  [BUGGY]  if(header!=  null  ||!header.equals(commentMarker))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(header!=  null  ||!header.equals(commentMarker))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(header!=  null  ||!header.equals(commentMarker))  {	  if(header!=    null    ||!header.equals(escapeCharacter))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
80	[BUG]  [BUGGY]  Character  c  =  Character.toLowerCase(escapeCharacter);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  c  =  Character.toLowerCase(escapeCharacter);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  c  =  Character.toLowerCase(escapeCharacter);	  Character    c    =    Character.toLowerCase(c);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
81	[BUG]  [BUGGY]  Character  c  =  Character.toLowerCase(delimiter);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  c  =  Character.toLowerCase(delimiter);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  c  =  Character.toLowerCase(delimiter);	  Character    c    =    Character.toLowerCase(c);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
82	[BUG]  [BUGGY]  Character  c  =  Character.toLowerCase(escapeChar);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  c  =  Character.toLowerCase(escapeChar);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  c  =  Character.toLowerCase(escapeChar);	  Character    c    =    Character.toLowerCase(c);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
83	[BUG]  [BUGGY]  if(header!=  null  &&  header.length()  >  0  ||  header.charAt(header.length()  -  1)  ==  '/')  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(header!=  null  &&  header.length()  >  0  ||  header.charAt(header.length()  -  1)  ==  '/')  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(header!=  null  &&  header.length()  >  0  ||  header.charAt(header.length()  -  1)  ==  '/')  {	  if(header!=    null    &&    header.length()    >    0    ||    header.charAt(header.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
84	[BUG]  [BUGGY]  Character  c  =  escapeCharacter.charAt(delimiter.length());  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  c  =  escapeCharacter.charAt(delimiter.length());  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  c  =  escapeCharacter.charAt(delimiter.length());	  Character    c    =    escapeCharacter.charAt(escapeCharacter.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
85	[BUG]  [BUGGY]  if(header!=  null  &&  quoteChar.equals(escapeCharacter))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(header!=  null  &&  quoteChar.equals(escapeCharacter))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(header!=  null  &&  quoteChar.equals(escapeCharacter))  {	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(header))    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
86	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(delimiter))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(escapeCharacter!=  null  &&  quoteCharacter.equals(delimiter))  {	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(header))    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
87	[BUG]  [BUGGY]  if(delimiter!=  null)  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(delimiter!=  null)  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(delimiter!=  null)  {	  if(delimiter    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
88	[BUG]  [BUGGY]  if(header!=  null  ||  quoteMode  ==  QuoteMode.NONE)  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(header!=  null  ||  quoteMode  ==  QuoteMode.NONE)  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(header!=  null  ||  quoteMode  ==  QuoteMode.NONE)  {	  if(header    ==    null    &&    quoteMode    ==    QuoteMode.NONE)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
89	[BUG]  [BUGGY]  if(c!=  null  &&  quoteChar.equals(header))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(c!=  null  &&  quoteChar.equals(header))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(c!=  null  &&  quoteChar.equals(header))  {	  if(header!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
90	[BUG]  [BUGGY]  if(header  ==  null  ||!header.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(header  ==  null  ||!header.equals(commentStart))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(header  ==  null  ||!header.equals(commentStart))  {	  if(header!=    null    ||!header.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
91	[BUG]  [BUGGY]  if(header  ==  null  ||!header.equals(escapeCharacter))  {  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(header  ==  null  ||!header.equals(escapeCharacter))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(header  ==  null  ||!header.equals(escapeCharacter))  {	  if(header!=    null    ||!header.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
92	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  quoteChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(escapeChar!=  null  &&  quoteChar.equals(delimiter))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(escapeChar!=  null  &&  quoteChar.equals(delimiter))  {	  if(delimiter!=    null    &&    quoteChar.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
93	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteMode.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(delimiter!=  null  &&  quoteMode.equals(delimiter))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(delimiter!=  null  &&  quoteMode.equals(delimiter))  {	  if(delimiter!=    null    &&    quoteChar.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
94	[BUG]  [BUGGY]  Character  c  =  escapeCharacter.charAt(character.length());  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  c  =  escapeCharacter.charAt(character.length());  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  c  =  escapeCharacter.charAt(character.length());	  Character    c    =    character.charAt(escapeCharacter.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
95	[BUG]  [BUGGY]  Character  character  =  getCharacter(c,  escapeChar);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  character  =  getCharacter(c,  escapeChar);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  character  =  getCharacter(c,  escapeChar);	  Character    character    =    getCharacter(c);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
96	[BUG]  [BUGGY]  Character  character  =  getCharacter(escapeCharacter);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  character  =  getCharacter(escapeCharacter);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  character  =  getCharacter(escapeCharacter);	  Character    character    =    getCharacter(c);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
97	[BUG]  [BUGGY]  if(header  ==  null  &&  header.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(header  ==  null  &&  header.length()  ==  0)  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(header  ==  null  &&  header.length()  ==  0)  {	  if(header!=    null    &&    header.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
98	[BUG]  [BUGGY]  if(header!=  null  &&  header.length()  >=  0)  {  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(header!=  null  &&  header.length()  >=  0)  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(header!=  null  &&  header.length()  >=  0)  {	  if(header!=    null    &&    header.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
99	[BUG]  [BUGGY]  if(headers  ==  null  &&  header.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(headers  ==  null  &&  header.length()  ==  0)  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(headers  ==  null  &&  header.length()  ==  0)  {	  if(headers!=    null    &&    header.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
100	[BUG]  [BUGGY]  Character  commentStart  =  getCommentStart(c,  escapeCharacter);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  commentStart  =  getCommentStart(c,  escapeCharacter);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  commentStart  =  getCommentStart(c,  escapeCharacter);	  Character    commentStart    =    getCommentStart(c);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
101	[BUG]  [BUGGY]  if(escapeCharacter  ==  null  &&  quoteChar.equals(commentMarker))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(escapeCharacter  ==  null  &&  quoteChar.equals(commentMarker))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(escapeCharacter  ==  null  &&  quoteChar.equals(commentMarker))  {	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
102	[BUG]  [BUGGY]  if(header  ==  null  &&!header.equals(c))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(header  ==  null  &&!header.equals(c))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(header  ==  null  &&!header.equals(c))  {	  if(header!=    null    &&!header.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
103	[BUG]  [BUGGY]  if(header!=  null  &&!header.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(header!=  null  &&!header.equals(delimiter))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(header!=  null  &&!header.equals(delimiter))  {	  if(header!=    null    &&!header.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
104	[BUG]  [BUGGY]  Character  c  =  getCharacter(quoteChar);  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  c  =  getCharacter(quoteChar);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  c  =  getCharacter(quoteChar);	  Character    c    =    getCharacter();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
105	[BUG]  [BUGGY]  char  c  =  getCharacter();  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  char  c  =  getCharacter();  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	char  c  =  getCharacter();	  Character    c    =    getCharacter();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
106	[BUG]  [BUGGY]  Character  c  =  getCharacter(escapeCharacter);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  c  =  getCharacter(escapeCharacter);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  c  =  getCharacter(escapeCharacter);	  Character    c    =    getCharacter(c);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
107	[BUG]  [BUGGY]  if(c!=  delimiter  ||  escapeCharacter!=  null  &&  quoteCharacter.equals(c))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(c!=  delimiter  ||  escapeCharacter!=  null  &&  quoteCharacter.equals(c))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(c!=  delimiter  ||  escapeCharacter!=  null  &&  quoteCharacter.equals(c))  {	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
108	[BUG]  [BUGGY]  if(header!=  null  ||  quoteMode!=  QuoteMode.NONE)  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(header!=  null  ||  quoteMode!=  QuoteMode.NONE)  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(header!=  null  ||  quoteMode!=  QuoteMode.NONE)  {	  if(header    ==    null    &&    quoteMode!=    QuoteMode.NONE)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
109	[BUG]  [BUGGY]  if(header  ==  null  ||  quoteMode!=  QuoteMode.NONE)  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(header  ==  null  ||  quoteMode!=  QuoteMode.NONE)  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(header  ==  null  ||  quoteMode!=  QuoteMode.NONE)  {	  if(header    ==    null    &&    quoteMode!=    QuoteMode.NONE)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
110	[BUG]  [BUGGY]  Character  commentStart  =  c.escape(quoteChar);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  commentStart  =  c.escape(quoteChar);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  commentStart  =  c.escape(quoteChar);	  Character    commentStart    =    quoteChar.escape(c);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
111	[BUG]  [BUGGY]  Character  commentStart  =  quoteChar.escape(escapeChar);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  commentStart  =  quoteChar.escape(escapeChar);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  commentStart  =  quoteChar.escape(escapeChar);	  Character    commentStart    =    quoteChar.escape(c);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
112	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(delimiter))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(delimiter!=  null  &&  quoteChar.equals(delimiter))  {	  if(delimiter!=    null    &&    quoteCharacter.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
113	[BUG]  [BUGGY]  if(c!=  delimiter  ||  escapeCharacter!=  null  &&  quoteCharacter.equals(commentMarker))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(c!=  delimiter  ||  escapeCharacter!=  null  &&  quoteCharacter.equals(commentMarker))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(c!=  delimiter  ||  escapeCharacter!=  null  &&  quoteCharacter.equals(commentMarker))  {	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
114	[BUG]  [BUGGY]  Character  c  =  getCharacter(char);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  c  =  getCharacter(char);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  c  =  getCharacter(char);	  Character    c    =    getCharacter(c);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
115	[BUG]  [BUGGY]  Character  character  =  getCharacter(c,  escapeCharacter);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  character  =  getCharacter(c,  escapeCharacter);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  character  =  getCharacter(c,  escapeCharacter);	  Character    character    =    getCharacter(c);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
116	[BUG]  [BUGGY]  Character  character  =  getCharacter(c,  commentStart);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  character  =  getCharacter(c,  commentStart);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  character  =  getCharacter(c,  commentStart);	  Character    character    =    getCharacter(c);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
117	[BUG]  [BUGGY]  Character  c  =  getCharacter().escapeCharacter;  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  c  =  getCharacter().escapeCharacter;  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  c  =  getCharacter().escapeCharacter;	  Character    c    =    getCharacter();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
118	[BUG]  [BUGGY]  Character  character  =  getCharacter().escapeCharacter;  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  character  =  getCharacter().escapeCharacter;  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  character  =  getCharacter().escapeCharacter;	  Character    character    =    getCharacter();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
119	[BUG]  [BUGGY]  Character  character  =  getCharacter().escapeCharacter(delimiter);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  character  =  getCharacter().escapeCharacter(delimiter);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  character  =  getCharacter().escapeCharacter(delimiter);	  Character    character    =    getCharacter();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
120	[BUG]  [BUGGY]  if(delimiter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(delimiter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(delimiter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {	  if(delimiter    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
121	[BUG]  [BUGGY]  if(delimiter  ==  null  &&  delimiter.equals(commentMarker))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(delimiter  ==  null  &&  delimiter.equals(commentMarker))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(delimiter  ==  null  &&  delimiter.equals(commentMarker))  {	  if(delimiter    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
122	[BUG]  [BUGGY]  Character  commentStart  =  quoteChar.escape(c,  delimChar);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  commentStart  =  quoteChar.escape(c,  delimChar);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  commentStart  =  quoteChar.escape(c,  delimChar);	  Character    commentStart    =    quoteChar.escape(c);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
123	[BUG]  [BUGGY]  Character  commentStart  =  quoteChar.escape(c,  escapeCharacter);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  commentStart  =  quoteChar.escape(c,  escapeCharacter);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  commentStart  =  quoteChar.escape(c,  escapeCharacter);	  Character    commentStart    =    quoteChar.escape(c);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
124	[BUG]  [BUGGY]  if(c.equals(commentMarker))  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(c.equals(commentMarker))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(c.equals(commentMarker))  {	  if(header!=    null    &&    quoteChar.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
125	[BUG]  [BUGGY]  Character  c  =  character.charAt(commentMarker.length());  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  c  =  character.charAt(commentMarker.length());  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  c  =  character.charAt(commentMarker.length());	  Character    c    =    character.charAt(escapeCharacter.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
126	[BUG]  [BUGGY]  Character  c  =  escapeCharacter.charAt(commentMarker.length());  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  c  =  escapeCharacter.charAt(commentMarker.length());  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  c  =  escapeCharacter.charAt(commentMarker.length());	  Character    c    =    character.charAt(escapeCharacter.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
127	[BUG]  [BUGGY]  if(escapeCharacter  ==  null  &&  quoteCharacter.equals(commentMarker))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(escapeCharacter  ==  null  &&  quoteCharacter.equals(commentMarker))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(escapeCharacter  ==  null  &&  quoteCharacter.equals(commentMarker))  {	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
128	[BUG]  [BUGGY]  if(escapeCharacter  ==  null  &&  quoteCharacter.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(escapeCharacter  ==  null  &&  quoteCharacter.equals(commentStart))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(escapeCharacter  ==  null  &&  quoteCharacter.equals(commentStart))  {	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
129	[BUG]  [BUGGY]  if(c!=  null  &&  quoteCharacter.equals(header))  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(c!=  null  &&  quoteCharacter.equals(header))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(c!=  null  &&  quoteCharacter.equals(header))  {	  if(header!=    null    &&    quoteCharacter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
130	[BUG]  [BUGGY]  if(c!=  delimiter  &&  quoteCharacter.equals(c))  {  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(c!=  delimiter  &&  quoteCharacter.equals(c))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(c!=  delimiter  &&  quoteCharacter.equals(c))  {	  if(header!=    null    &&    quoteCharacter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
131	[BUG]  [BUGGY]  if(c!=  null  &&  quoteCharacter.equals(commentMarker))  {  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(c!=  null  &&  quoteCharacter.equals(commentMarker))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(c!=  null  &&  quoteCharacter.equals(commentMarker))  {	  if(header!=    null    &&    quoteCharacter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
132	[BUG]  [BUGGY]  if(header!=  null  &&  header.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(header!=  null  &&  header.length()!=  0)  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(header!=  null  &&  header.length()!=  0)  {	  if(header    ==    null    ||    header.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
133	[BUG]  [BUGGY]  if(c!=  delimiter  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(c!=  delimiter  &&  quoteChar.equals(c))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(c!=  delimiter  &&  quoteChar.equals(c))  {	  if(header!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
134	[BUG]  [BUGGY]  if(c!=  escapeCharacter  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(c!=  escapeCharacter  &&  quoteChar.equals(c))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(c!=  escapeCharacter  &&  quoteChar.equals(c))  {	  if(header!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
135	[BUG]  [BUGGY]  Character  c  =  Character.toLowerCase(ceil);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  c  =  Character.toLowerCase(ceil);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  c  =  Character.toLowerCase(ceil);	  Character    c    =    Character.toLowerCase(c);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
136	[BUG]  [BUGGY]  Character  commentStart  =  getCommentStart(c,  quoteCharacter);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  commentStart  =  getCommentStart(c,  quoteCharacter);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  commentStart  =  getCommentStart(c,  quoteCharacter);	  Character    commentStart    =    getCommentStart(c);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
137	[BUG]  [BUGGY]  Character  commentStart  =  getCommentStart(c,  delimChar);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  commentStart  =  getCommentStart(c,  delimChar);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  commentStart  =  getCommentStart(c,  delimChar);	  Character    commentStart    =    getCommentStart(c);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
138	[BUG]  [BUGGY]  Predefined.checkNotNull(dupCheck);  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Predefined.checkNotNull(dupCheck);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Predefined.checkNotNull(dupCheck);	  Predefined.checkNotNull(header);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
139	[BUG]  [BUGGY]  Character  c  =  escapeCharacter.charAt(commentMarker.length()  -  1);  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  Character  c  =  escapeCharacter.charAt(commentMarker.length()  -  1);  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	Character  c  =  escapeCharacter.charAt(commentMarker.length()  -  1);	  Character    c    =    escapeCharacter.charAt(escapeCharacter.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
140	[BUG]  [BUGGY]  if(c!=  null  &&!c.equals(header))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(c!=  null  &&!c.equals(header))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(c!=  null  &&!c.equals(header))  {	  if(header!=    null    &&!header.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
141	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteCharacter.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }        [BUGGY]  if(delimiter!=  null  &&  quoteCharacter.equals(delimiter))  {  [BUGGY]      final  Set<String>  dupCheck  =  new  HashSet<>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(       "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }  }  }  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  autoFlush  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  newRecord  quote  skipHeaderRecord  trailingDelimiter  trim  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  quoteModePolicy  char  c  delim  delimChar  delimiter  escape  quoteChar  CSVFormat  DEFAULT  EXCEL  INFORMIX_UNLOAD  INFORMIX_UNLOAD_CSV  MYSQL  POSTGRESQL_CSV  POSTGRESQL_TEXT  RFC4180  TDF  format  other  String[]  header  headerComments  strings  String  format  hdr  nullString  recordSeparator  Predefined  Default  Excel  InformixUnload  InformixUnloadCsv  MySQL  PostgreSQLCsv  PostgreSQLText  RFC4180  TDF  long  serialVersionUID  	projects/Csv15/src/main/java/org/apache/commons/csv/CSVFormat.java	0.39816652969059774	1414	1414	13	replace	if(delimiter!=  null  &&  quoteCharacter.equals(delimiter))  {	  if(delimiter!=    null    &&    quoteCharacter.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
