bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Node  beforeParent  =  next.getNext();  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  [BUGGY]    Node  beforeParent  =  next.getNext();  [BUGGY]  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	    Node  beforeParent  =  next.getNext();		non-compiled	[CE]  reached  end  of  file  while  parsing	81	None	add
2	[BUG]  [BUGGY]    Node  beforeParent  =  n.getFirstChild();  [CE]  reached  end  of  file  while  parsing  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  [BUGGY]    Node  beforeParent  =  n.getFirstChild();  [BUGGY]  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	    Node  beforeParent  =  n.getFirstChild();		non-compiled	[CE]  reached  end  of  file  while  parsing	81	None	add
3	[BUG]  [BUGGY]    Node  beforeParent  =  c.getFirstChild();  [CE]  reached  end  of  file  while  parsing  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  [BUGGY]    Node  beforeParent  =  c.getFirstChild();  [BUGGY]  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	    Node  beforeParent  =  c.getFirstChild();		non-compiled	[CE]  reached  end  of  file  while  parsing	81	None	add
4	[BUG]  [BUGGY]    Node  beforeParent  =  c.getNext();  [CE]  reached  end  of  file  while  parsing  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  [BUGGY]    Node  beforeParent  =  c.getNext();  [BUGGY]  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	    Node  beforeParent  =  c.getNext();		non-compiled	[CE]  reached  end  of  file  while  parsing	81	None	add
5	[BUG]  [BUGGY]    Node  before  =  n.getFirstChild();  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  [BUGGY]    Node  before  =  n.getFirstChild();  [BUGGY]  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	    Node  before  =  n.getFirstChild();		non-compiled	[CE]  reached  end  of  file  while  parsing	81	None	add
6	[BUG]  [BUGGY]    Node  before  =  c.getNext();  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  [BUGGY]    Node  before  =  c.getNext();  [BUGGY]  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	    Node  before  =  c.getNext();		non-compiled	[CE]  reached  end  of  file  while  parsing	81	None	add
7	[BUG]  [BUGGY]  Node  insertBeforeParent  =  (before  ==  null)?  before  :  before;  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  [BUGGY]  Node  insertBeforeParent  =  (before  ==  null)?  before  :  before;  [BUGGY]  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  insertBeforeParent  =  (before  ==  null)?  before  :  before;	Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  	non-compiled	[CE]  reached  end  of  file  while  parsing	80	None	replace
8	[BUG]  [BUGGY]  Node  insertBeforeParent  =  (before  ==  null)?  c  :  before;  [CE]  reached  end  of  file  while  parsing  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  [BUGGY]  Node  insertBeforeParent  =  (before  ==  null)?  c  :  before;  [BUGGY]  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  insertBeforeParent  =  (before  ==  null)?  c  :  before;	Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  	non-compiled	[CE]  reached  end  of  file  while  parsing	80	None	replace
9	[BUG]  [BUGGY]  Node  insertBeforeParent  =  (n  ==  null)?  before  :  before;  [CE]  reached  end  of  file  while  parsing  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  [BUGGY]  Node  insertBeforeParent  =  (n  ==  null)?  before  :  before;  [BUGGY]  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  insertBeforeParent  =  (n  ==  null)?  before  :  before;	Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  	non-compiled	[CE]  reached  end  of  file  while  parsing	80	None	replace
10	[BUG]  [BUGGY]  Node  insertBeforeParent  =  (before!=  null)?  before  :  before;  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  [BUGGY]  Node  insertBeforeParent  =  (before!=  null)?  before  :  before;  [BUGGY]  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  insertBeforeParent  =  (before!=  null)?  before  :  before;	Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  	non-compiled	[CE]  reached  end  of  file  while  parsing	80	None	replace
11	[BUG]  [BUGGY]  Node  insertBeforeParent  =  (before  ==  null)?  beforeParent  :  before;  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  [BUGGY]  Node  insertBeforeParent  =  (before  ==  null)?  beforeParent  :  before;  [BUGGY]  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  insertBeforeParent  =  (before  ==  null)?  beforeParent  :  before;	Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  	non-compiled	[CE]  reached  end  of  file  while  parsing	80	None	replace
12	[BUG]  [BUGGY]    Node  beforeParent  =  next.getFirstChild();  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  [BUGGY]    Node  beforeParent  =  next.getFirstChild();  [BUGGY]  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	    Node  beforeParent  =  next.getFirstChild();		non-compiled	[CE]  reached  end  of  file  while  parsing	81	None	add
13	[BUG]  [BUGGY]    n.removeChild(c);  [CE]  reached  end  of  file  while  parsing  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  [BUGGY]    n.removeChild(c);  [BUGGY]  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	    n.removeChild(c);		non-compiled	[CE]  reached  end  of  file  while  parsing	81	None	add
