bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Node  before  =  next.getLastChild();  [CE]  reached  end  of  file  while  parsing  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  Node  before  =  next.getLastChild();  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  before  =  next.getLastChild();	  Node    before    =    n.getLastChild();    	non-compiled	[CE]  reached  end  of  file  while  parsing	12	None	replace
2	[BUG]  [BUGGY]  n.removeChild(insertBefore,  insertBefore);  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  n.removeChild(insertBefore,  insertBefore);  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	n.removeChild(insertBefore,  insertBefore);	  n.removeChild(insertBefore);    	non-compiled	[CE]  reached  end  of  file  while  parsing	15	None	replace
3	[BUG]  [BUGGY]  n.removeChild(c,  before);  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  n.removeChild(c,  before);  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	n.removeChild(c,  before);	  n.removeChild(c,    insertBefore);    	non-compiled	[CE]  reached  end  of  file  while  parsing	17	None	replace
4	[BUG]  [BUGGY]  Node  before  =  next.getPrevious();  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  Node  before  =  next.getPrevious();  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  before  =  next.getPrevious();	  Node    before    =    c.getPrevious();    	non-compiled	[CE]  reached  end  of  file  while  parsing	23	None	replace
5	[BUG]  [BUGGY]  n.addChildToFront(insertBefore);  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  n.addChildToFront(insertBefore);  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	n.addChildToFront(insertBefore);	  n.addChildToFront(c);    	non-compiled	[CE]  reached  end  of  file  while  parsing	16	None	replace
6	[BUG]  [BUGGY]  n.addChildToFront(c,  insertBefore);  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  n.addChildToFront(c,  insertBefore);  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	n.addChildToFront(c,  insertBefore);	  n.addChildToFront(c);    	non-compiled	[CE]  reached  end  of  file  while  parsing	16	None	replace
7	[BUG]  [BUGGY]  n.addChildToFront(c,  before);  [CE]  reached  end  of  file  while  parsing  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  n.addChildToFront(c,  before);  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	n.addChildToFront(c,  before);	  n.addChildToFront(c);    	non-compiled	[CE]  reached  end  of  file  while  parsing	16	None	replace
8	[BUG]  [BUGGY]  Node  first  =  n.getFirstChild();  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  Node  first  =  n.getFirstChild();  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  first  =  n.getFirstChild();	  n.removeChild(first);    	non-compiled	[CE]  reached  end  of  file  while  parsing	22	None	replace
9	[BUG]  [BUGGY]  n.replaceChild(c,  before);  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  n.replaceChild(c,  before);  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	n.replaceChild(c,  before);	  n.replaceChild(c,    insertBefore);    	non-compiled	[CE]  reached  end  of  file  while  parsing	25	None	replace
10	[BUG]  [BUGGY]  n.replaceChild(n,  before);  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  n.replaceChild(n,  before);  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	n.replaceChild(n,  before);	  n.replaceChild(c,    insertBefore);    	non-compiled	[CE]  reached  end  of  file  while  parsing	25	None	replace
11	[BUG]  [BUGGY]  n.replaceChild(c,  next);  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  n.replaceChild(c,  next);  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	n.replaceChild(c,  next);	  n.replaceChild(c,    insertBefore);    	non-compiled	[CE]  reached  end  of  file  while  parsing	25	None	replace
12	[BUG]  [BUGGY]  Node  insertBeforeParent  =  before  ==  null?  before  :  before.next;  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  Node  insertBeforeParent  =  before  ==  null?  before  :  before.next;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  insertBeforeParent  =  before  ==  null?  before  :  before.next;	  Node    insertBeforeParent    =    (before    ==    null)?    before    :    before.next;    	non-compiled	[CE]  reached  end  of  file  while  parsing	27	None	replace
13	[BUG]  [BUGGY]  Node  insertBeforeParent  =  (after  ==  null)?  before  :  before.next;  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  Node  insertBeforeParent  =  (after  ==  null)?  before  :  before.next;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  insertBeforeParent  =  (after  ==  null)?  before  :  before.next;	  Node    insertBeforeParent    =    (before    ==    null)?    before    :    before.next;    	non-compiled	[CE]  reached  end  of  file  while  parsing	27	None	replace
14	[BUG]  [BUGGY]  Node  before  =  insertBefore.getNext();  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  Node  before  =  insertBefore.getNext();  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  before  =  insertBefore.getNext();	  Node    before    =    next.getNext();    	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	replace
15	[BUG]  [BUGGY]  Node  before  =  next.getNext(),  beforeParent);  [CE]  reached  end  of  file  while  parsing  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  Node  before  =  next.getNext(),  beforeParent);  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  before  =  next.getNext(),  beforeParent);	  Node    before    =    next.getNext();    	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	replace
16	[BUG]  [BUGGY]  Node  insertBeforeParent  =  before!=  null?  before  :  before;  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  Node  insertBeforeParent  =  before!=  null?  before  :  before;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  insertBeforeParent  =  before!=  null?  before  :  before;	  Node    insertBeforeParent    =    before    ==    null?    before    :    before;    	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	replace
17	[BUG]  [BUGGY]  Node  insertBeforeParent  =  next  ==  null?  before  :  before;  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  Node  insertBeforeParent  =  next  ==  null?  before  :  before;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  insertBeforeParent  =  next  ==  null?  before  :  before;	  Node    insertBeforeParent    =    before    ==    null?    before    :    before;    	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	replace
18	[BUG]  [BUGGY]  Node  insertBeforeParent  =  before  ==  null?  before  :  before);  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  Node  insertBeforeParent  =  before  ==  null?  before  :  before);  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  insertBeforeParent  =  before  ==  null?  before  :  before);	  Node    insertBeforeParent    =    before    ==    null?    before    :    before;    	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	replace
19	[BUG]  [BUGGY]  Node  insertBeforeParent  =  before!=  null?  beforeParent  :  before;  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  Node  insertBeforeParent  =  before!=  null?  beforeParent  :  before;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  insertBeforeParent  =  before!=  null?  beforeParent  :  before;	  Node    insertBeforeParent    =    before    ==    null?    beforeParent    :    before;    	non-compiled	[CE]  reached  end  of  file  while  parsing	8	None	replace
20	[BUG]  [BUGGY]  Node  insertBeforeParent  =  next  ==  null?  beforeParent  :  before;  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  Node  insertBeforeParent  =  next  ==  null?  beforeParent  :  before;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  insertBeforeParent  =  next  ==  null?  beforeParent  :  before;	  Node    insertBeforeParent    =    before    ==    null?    beforeParent    :    before;    	non-compiled	[CE]  reached  end  of  file  while  parsing	8	None	replace
21	[BUG]  [BUGGY]  Node  insertBeforeParent  =  before  ==  null?  beforeParent  :  next;  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  Node  insertBeforeParent  =  before  ==  null?  beforeParent  :  next;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  insertBeforeParent  =  before  ==  null?  beforeParent  :  next;	  Node    insertBeforeParent    =    before    ==    null?    beforeParent    :    before;    	non-compiled	[CE]  reached  end  of  file  while  parsing	8	None	replace
22	[BUG]  [BUGGY]  Node  insertBeforeParent  =  before  ==  null?  beforeParent  :  before.parent;  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  Node  insertBeforeParent  =  before  ==  null?  beforeParent  :  before.parent;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  insertBeforeParent  =  before  ==  null?  beforeParent  :  before.parent;	  Node    insertBeforeParent    =    before    ==    null?    beforeParent    :    before;    	non-compiled	[CE]  reached  end  of  file  while  parsing	8	None	replace
23	[BUG]  [BUGGY]  Node  beforeParent  =  n.getParent();  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  Node  beforeParent  =  n.getParent();  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  beforeParent  =  n.getParent();	  Node    beforeParent    =    next.getParent();    	non-compiled	[CE]  reached  end  of  file  while  parsing	29	None	replace
24	[BUG]  [BUGGY]  Node  beforeParent  =  insertBefore.getLastChild();  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  Node  beforeParent  =  insertBefore.getLastChild();  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  beforeParent  =  insertBefore.getLastChild();	  Node    beforeParent    =    insertBefore.getFirstChild();    	non-compiled	[CE]  reached  end  of  file  while  parsing	19	None	replace
25	[BUG]  [BUGGY]  Node  beforeParent  =  first.getLastChild();  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  Node  beforeParent  =  first.getLastChild();  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  beforeParent  =  first.getLastChild();	  Node    beforeParent    =    first.getFirstChild();    	non-compiled	[CE]  reached  end  of  file  while  parsing	26	None	replace
26	[BUG]  [BUGGY]  Node  beforeParent  =  n.getPrevious();  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  Node  beforeParent  =  n.getPrevious();  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  beforeParent  =  n.getPrevious();	  Node    beforeParent    =    c.getPrevious();    	non-compiled	[CE]  reached  end  of  file  while  parsing	18	None	replace
27	[BUG]  [BUGGY]  n.removeChild(expandBefore);  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  n.removeChild(expandBefore);  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	n.removeChild(expandBefore);	  n.removeChild(first);    	non-compiled	[CE]  reached  end  of  file  while  parsing	22	None	replace
28	[BUG]  [BUGGY]  n.addChildToFront(before);  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  n.addChildToFront(before);  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	n.addChildToFront(before);	  n.addChildToFront(c);    	non-compiled	[CE]  reached  end  of  file  while  parsing	16	None	replace
29	[BUG]  [BUGGY]  n.addChildToBack(c);  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  n.addChildToBack(c);  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	n.addChildToBack(c);	  n.addChildToFront(c);    	non-compiled	[CE]  reached  end  of  file  while  parsing	16	None	replace
30	[BUG]  [BUGGY]  n.removeChild(previous);  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  n.removeChild(previous);  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	n.removeChild(previous);	  n.replaceChild(c,    insertBefore);    	non-compiled	[CE]  reached  end  of  file  while  parsing	25	None	replace
31	[BUG]  [BUGGY]  Node  insertBeforeParent  =  before  ==  null?  beforeParent  :  before.next;  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  Node  insertBeforeParent  =  before  ==  null?  beforeParent  :  before.next;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  insertBeforeParent  =  before  ==  null?  beforeParent  :  before.next;	  Node    insertBeforeParent    =    before    ==    null?    beforeParent    :    before;    	non-compiled	[CE]  reached  end  of  file  while  parsing	8	None	replace
32	[BUG]  [BUGGY]  Node  before  =  insertBefore.getFirstChild();  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  Node  before  =  insertBefore.getFirstChild();  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  before  =  insertBefore.getFirstChild();	  Node    before    =    next.getFirstChild();    	non-compiled	[CE]  reached  end  of  file  while  parsing	13	None	replace
33	[BUG]  [BUGGY]  Node  beforeParent  =  insertBefore.getParent();  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  Node  beforeParent  =  insertBefore.getParent();  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  beforeParent  =  insertBefore.getParent();	  Node    beforeParent    =    insertBefore.getNext();    	non-compiled	[CE]  reached  end  of  file  while  parsing	9	None	replace
34	[BUG]  [BUGGY]  Node  before  =  first.getNext();  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  Node  before  =  first.getNext();  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  before  =  first.getNext();	  Node    before    =    next.getNext();    	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	replace
35	[BUG]  [BUGGY]  Node  before  =  c.getPreviousChild();  [CE]  reached  end  of  file  while  parsing  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  Node  before  =  c.getPreviousChild();  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  before  =  c.getPreviousChild();	  Node    before    =    c.getFirstChild();    	non-compiled	[CE]  reached  end  of  file  while  parsing	4	None	replace
36	[BUG]  [BUGGY]  Node  insertBeforeParent  =  before  ==  null?  before  :  before.cloneTree();  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  Node  insertBeforeParent  =  before  ==  null?  before  :  before.cloneTree();  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  insertBeforeParent  =  before  ==  null?  before  :  before.cloneTree();	  Node    insertBeforeParent    =    before    ==    null?    before    :    before;    	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	replace
37	[BUG]  [BUGGY]  Node  before  =  n.getPrevious();  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  Node  before  =  n.getPrevious();  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  before  =  n.getPrevious();	  Node    before    =    c.getPrevious();    	non-compiled	[CE]  reached  end  of  file  while  parsing	23	None	replace
38	[BUG]  [BUGGY]  n.removeChild(before,  insertBefore);  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  n.removeChild(before,  insertBefore);  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	n.removeChild(before,  insertBefore);	  n.removeChild(before);    	non-compiled	[CE]  reached  end  of  file  while  parsing	21	None	replace
39	[BUG]  [BUGGY]  n.removeChild(after);  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  n.removeChild(after);  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	n.removeChild(after);	  n.removeChild(before);    	non-compiled	[CE]  reached  end  of  file  while  parsing	21	None	replace
40	[BUG]  [BUGGY]  n.removeChild(insertBefore,  before);  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  n.removeChild(insertBefore,  before);  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	n.removeChild(insertBefore,  before);	  n.removeChild(insertBefore);    	non-compiled	[CE]  reached  end  of  file  while  parsing	15	None	replace
41	[BUG]  [BUGGY]  Node  before  =  c.removeFirstChild();  [CE]  reached  end  of  file  while  parsing  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  Node  before  =  c.removeFirstChild();  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  before  =  c.removeFirstChild();	  Node    before    =    c.getLastChild();    	non-compiled	[CE]  reached  end  of  file  while  parsing	2	None	replace
42	[BUG]  [BUGGY]  n.replaceChild(c,  insertBefore,  before);  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  n.replaceChild(c,  insertBefore,  before);  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	n.replaceChild(c,  insertBefore,  before);	  n.replaceChild(c,    insertBefore);    	non-compiled	[CE]  reached  end  of  file  while  parsing	25	None	replace
43	[BUG]  [BUGGY]  n.replaceChild(c,  insertBefore,  beforeParent);  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  n.replaceChild(c,  insertBefore,  beforeParent);  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	n.replaceChild(c,  insertBefore,  beforeParent);	  n.replaceChild(c,    insertBefore);    	non-compiled	[CE]  reached  end  of  file  while  parsing	25	None	replace
44	[BUG]  [BUGGY]  Node  beforeParent  =  first.getParent();  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  Node  beforeParent  =  first.getParent();  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  beforeParent  =  first.getParent();	  Node    beforeParent    =    first.getNext();    	non-compiled	[CE]  reached  end  of  file  while  parsing	20	None	replace
45	[BUG]  [BUGGY]  Node  insertBeforeParent  =  before  >=  null?  beforeParent  :  before;  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  Node  insertBeforeParent  =  before  >=  null?  beforeParent  :  before;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  insertBeforeParent  =  before  >=  null?  beforeParent  :  before;	  Node    insertBeforeParent    =    before    ==    null?    beforeParent    :    before;    	non-compiled	[CE]  reached  end  of  file  while  parsing	8	None	replace
46	[BUG]  [BUGGY]  Node  insertBeforeParent  =  before  ==  null?  beforeParent  :  init;  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  Node  insertBeforeParent  =  before  ==  null?  beforeParent  :  init;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  insertBeforeParent  =  before  ==  null?  beforeParent  :  init;	  Node    insertBeforeParent    =    before    ==    null?    beforeParent    :    before;    	non-compiled	[CE]  reached  end  of  file  while  parsing	8	None	replace
47	[BUG]  [BUGGY]  Node  insertBeforeParent  =  before  ==  null?  before  :  before,  beforeParent;  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  Node  insertBeforeParent  =  before  ==  null?  before  :  before,  beforeParent;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  insertBeforeParent  =  before  ==  null?  before  :  before,  beforeParent;	  Node    insertBeforeParent    =    before    ==    null?    before    :    before;    	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	replace
48	[BUG]  [BUGGY]  Node  insertBeforeParent  =  before  ==  null?  before  :  before.getFirstChild();  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  Node  insertBeforeParent  =  before  ==  null?  before  :  before.getFirstChild();  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  insertBeforeParent  =  before  ==  null?  before  :  before.getFirstChild();	  Node    insertBeforeParent    =    before    ==    null?    before    :    before;    	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	replace
49	[BUG]  [BUGGY]  Node  beforeParent  =  init.getFirstChild();  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  Node  beforeParent  =  init.getFirstChild();  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  beforeParent  =  init.getFirstChild();	  Node    beforeParent    =    insertBefore.getFirstChild();    	non-compiled	[CE]  reached  end  of  file  while  parsing	19	None	replace
50	[BUG]  [BUGGY]  Node  insertBeforeParent  =  (before!=  null)?  before  :  before.next;  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  Node  insertBeforeParent  =  (before!=  null)?  before  :  before.next;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  insertBeforeParent  =  (before!=  null)?  before  :  before.next;	  Node    insertBeforeParent    =    (before    ==    null)?    before    :    before.next;    	non-compiled	[CE]  reached  end  of  file  while  parsing	27	None	replace
51	[BUG]  [BUGGY]  Node  before  =  first.getFirstChild();  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  Node  before  =  first.getFirstChild();  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  before  =  first.getFirstChild();	  Node    before    =    next.getFirstChild();    	non-compiled	[CE]  reached  end  of  file  while  parsing	13	None	replace
52	[BUG]  [BUGGY]  Node  before  =  init.getNext();  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;      [BUGGY]  Node  before  =  init.getNext();  [BUGGY]      Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	317	317	1	replace	Node  before  =  init.getNext();	  Node    before    =    next.getNext();    	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	replace
