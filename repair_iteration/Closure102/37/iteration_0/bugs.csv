bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
74	[BUG] [BUGGY] for (Node next, c = n.getFirstChild(); c != null; c = next) { [FE] junit.framework.AssertionFailedError: Expected: function f(){arguments=Array.prototype.slice.call(arguments [CONTEXT] Node n, Node before, Node beforeParent) { [BUGGY] for (Node next, c = n.getFirstChild(); c != null; c = next) { [BUGGY] next = c.getNext(); Node insertBefore = (before == null) ? c : before; Node insertBeforeParent = (before == null) ? n : beforeParent; switch (c.getType()) { case Token.LABEL: extractForInitializer(c, insertBefore, insertBeforeParent); break; case Token.FOR: if (!NodeUtil.isForIn(c) && c.getFirstChild().getType() != Token.EMPTY) { [CLASS] Normalize PropogateConstantAnnotations VerifyConstants DuplicateDeclarationHandler ScopeTicklingCallback [METHOD] extractForInitializer [RETURN_TYPE] void  Node n Node before Node beforeParent [VARIABLES] AbstractCompiler compiler boolean CONVERT_WHILE_TO_FOR MAKE_LOCAL_NAMES_UNIQUE assertOnChange checkUserDeclarations expectedConst forbidChanges isConst Map constantMap Node before beforeParent c init insertBefore insertBeforeParent n newStatement next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	314	314	1	replace	
75	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: Expected: function f(){arguments=Array.prototype.slice.call(arguments [CONTEXT] Node n, Node before, Node beforeParent) { [BUGGY] [BUGGY] for (Node next, c = n.getFirstChild(); c != null; c = next) { next = c.getNext(); Node insertBefore = (before == null) ? c : before; Node insertBeforeParent = (before == null) ? n : beforeParent; switch (c.getType()) { case Token.LABEL: extractForInitializer(c, insertBefore, insertBeforeParent); break; case Token.FOR: if (!NodeUtil.isForIn(c) && c.getFirstChild().getType() != Token.EMPTY) { [CLASS] Normalize PropogateConstantAnnotations VerifyConstants DuplicateDeclarationHandler ScopeTicklingCallback [METHOD] extractForInitializer [RETURN_TYPE] void  Node n Node before Node beforeParent [VARIABLES] AbstractCompiler compiler boolean CONVERT_WHILE_TO_FOR MAKE_LOCAL_NAMES_UNIQUE assertOnChange checkUserDeclarations expectedConst forbidChanges isConst Map constantMap Node before beforeParent c init insertBefore insertBeforeParent n newStatement next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	314	314	1	add	
