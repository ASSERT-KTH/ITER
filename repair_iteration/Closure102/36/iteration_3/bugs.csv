bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Preconditions.checkState(parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  Preconditions.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
2	[BUG]  [BUGGY]  Preconditions.checkState(n!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(n!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(n!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  Preconditions.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
3	[BUG]  [BUGGY]  Preconditions.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  Preconditions.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
4	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.get  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.get  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.get	  parent!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n.getLastChil    	non-compiled	[CE]  <identifier>  expected	22	None	replace
5	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n	  parent!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n.getLastChil    	non-compiled	[CE]  <identifier>  expected	22	None	replace
6	[BUG]  [BUGGY]  Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
7	[BUG]  [BUGGY]  Context.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
8	[BUG]  [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  breakVarDeclarations(n);  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  breakVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  breakVarDeclarations(n);  }	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
9	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compil  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compil  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compil	  Preconditions.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
10	[BUG]  [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.remove  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.remove  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.remove	  parent!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.remov    	non-compiled	[CE]  <identifier>  expected	46	None	replace
11	[BUG]  [BUGGY]  Preconditions.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  Preconditions.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
12	[BUG]  [BUGGY]  Node  parent  =  n.getParent();  Preconditions.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Node  parent  =  n.getParent();  Preconditions.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Node  parent  =  n.getParent();  Preconditions.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  Preconditions.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
13	[BUG]  [BUGGY]  Pentru(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  break;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Pentru(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  break;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Pentru(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  break;  }	  Pentru(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    break;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
14	[BUG]  [BUGGY]  Pentru(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Pentru(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Pentru(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  break;  }	  Pentru(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    break;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
15	[BUG]  [BUGGY]  Pentru(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  continue;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Pentru(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  continue;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Pentru(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  continue;  }	  Pentru(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    break;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
16	[BUG]  [BUGGY]  parent!=  null  &&  parent.getFirstChild().getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null  &&  parent.getFirstChild().getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  parent.getFirstChild().getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n	  parent!=    null    &&    parent.getFirstChild().getType()    ==    Token.FUNCTION)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n.getLas    	non-compiled	[CE]  <identifier>  expected	39	None	replace
17	[BUG]  [BUGGY]  parent!=  null  &&  parent.getFirstChild().getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.get  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null  &&  parent.getFirstChild().getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.get  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  parent.getFirstChild().getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.get	  parent!=    null    &&    parent.getFirstChild().getType()    ==    Token.FUNCTION)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n.getLas    	non-compiled	[CE]  <identifier>  expected	39	None	replace
18	[BUG]  [BUGGY]  parent!=  null  &&  parent.getFirstChild().getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null  &&  parent.getFirstChild().getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  parent.getFirstChild().getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(	  parent!=    null    &&    parent.getFirstChild().getType()    ==    Token.FUNCTION)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n.    	non-compiled	[CE]  <identifier>  expected	41	None	replace
19	[BUG]  [BUGGY]  NodeUtil.removeChild(parent,  arguments);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NodeUtil.removeChild(parent,  arguments);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NodeUtil.removeChild(parent,  arguments);	  NodeUtil.removeChild(parent);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
20	[BUG]  [BUGGY]  NodeUtil.removeChild(parent,  argument);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NodeUtil.removeChild(parent,  argument);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NodeUtil.removeChild(parent,  argument);	  NodeUtil.removeChild(parent);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
21	[BUG]  [BUGGY]  NodeUtil.removeChild(n);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NodeUtil.removeChild(n);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NodeUtil.removeChild(n);	  NodeUtil.removeChild(parent);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
22	[BUG]  [BUGGY]  Preconditions.checkState(arguments  ==  null);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(arguments  ==  null);  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments  ==  null);	  Preconditions.checkState(arguments!=    null);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
23	[BUG]  [BUGGY]  Preconditions.checkArgument(arguments!=  null);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkArgument(arguments!=  null);  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkArgument(arguments!=  null);	  Preconditions.checkState(arguments!=    null);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
24	[BUG]  [BUGGY]  Preconditions.checkState(arguments  >=  null);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(arguments  >=  null);  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments  >=  null);	  Preconditions.checkState(arguments!=    null);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
25	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNIQUE,  arguments));  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNIQUE,  arguments));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNIQUE,  arguments));	  parser.report(JSError.make(t,    n,    NON_GLOBAL_NAMES_UNIQUE));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
26	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNIQUE,  argument));  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNIQUE,  argument));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNIQUE,  argument));	  parser.report(JSError.make(t,    n,    NON_GLOBAL_NAMES_UNIQUE));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
27	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  STRICT_MODULE_NAMES_UNIQUE,  arguments));  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parser.report(JSError.make(t,  n,  STRICT_MODULE_NAMES_UNIQUE,  arguments));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  STRICT_MODULE_NAMES_UNIQUE,  arguments));	  parser.report(JSError.make(t,    n,    NON_GLOBAL_NAMES_UNIQUE));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
28	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(	  parent!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compil    	non-compiled	[CE]  <identifier>  expected	91	None	replace
29	[BUG]  [BUGGY]  parent.replaceChild(n,  NodeUtil.newExpr(arguments));  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent.replaceChild(n,  NodeUtil.newExpr(arguments));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent.replaceChild(n,  NodeUtil.newExpr(arguments));	  parent.replaceChild(n,    NodeUtil.newExpr(n));    	non-compiled	[CE]  <identifier>  expected	82	None	replace
30	[BUG]  [BUGGY]  parent.replaceChild(n,  NodeUtil.newExpr(n,  arguments));  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent.replaceChild(n,  NodeUtil.newExpr(n,  arguments));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent.replaceChild(n,  NodeUtil.newExpr(n,  arguments));	  parent.replaceChild(n,    NodeUtil.newExpr(n));    	non-compiled	[CE]  <identifier>  expected	82	None	replace
31	[BUG]  [BUGGY]  parent.replaceChild(n,  NodeUtil.newExpr(params));  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent.replaceChild(n,  NodeUtil.newExpr(params));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent.replaceChild(n,  NodeUtil.newExpr(params));	  parent.replaceChild(n,    NodeUtil.newExpr(n));    	non-compiled	[CE]  <identifier>  expected	82	None	replace
32	[BUG]  [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }	  parent!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
33	[BUG]  [BUGGY]  parent  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }	  parent!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
34	[BUG]  [BUGGY]  Pentru(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Pentru(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Pentru(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }	  For(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n);    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
35	[BUG]  [BUGGY]  For(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  For(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	For(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }	  For(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n);    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
36	[BUG]  [BUGGY]  Pentru(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }  [CE]  illegal  start  of  type  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Pentru(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Pentru(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }	  For(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n.getLastChild());    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
37	[BUG]  [BUGGY]  For(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  For(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	For(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }	  For(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n.getLastChild());    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
38	[BUG]  [BUGGY]  Preconditions.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }	  Preconditions.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
39	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compil  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compil  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compil	  Preconditions.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
40	[BUG]  [BUGGY]  For(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  break;  }  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  For(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  break;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	For(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  break;  }	  For(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
41	[BUG]  [BUGGY]  For(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [CE]  illegal  start  of  type  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  For(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	For(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  break;  }	  For(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
42	[BUG]  [BUGGY]  For(Node  n  =  n.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [CE]  illegal  start  of  type  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  For(Node  n  =  n.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	For(Node  n  =  n.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }	  For(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
43	[BUG]  [BUGGY]  Context.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }	  Preconditions.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
44	[BUG]  [BUGGY]  Pentru(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Pentru(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Pentru(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }	  For(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getLastChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
45	[BUG]  [BUGGY]  For(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  For(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	For(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }	  For(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getLastChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
46	[BUG]  [BUGGY]  parent!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  parent!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
47	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);	  parent!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
48	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,	  Preconditions.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
49	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n	  Preconditions.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
50	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n  }  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n  }	  Preconditions.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
51	[BUG]  [BUGGY]  For(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  For(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	For(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  For(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
52	[BUG]  [BUGGY]  Pentru(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Pentru(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Pentru(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  For(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
53	[BUG]  [BUGGY]  For(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  For(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	For(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  For(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
54	[BUG]  [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.get  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.get  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.get	  parent!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n.getLastChil    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
55	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null  &&  arguments.length  >  0)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild  [CE]  illegal  start  of  type  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(arguments!=  null  &&  arguments.length  >  0)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null  &&  arguments.length  >  0)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild	  Preconditions.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n);    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
56	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }	  Preconditions.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n);    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
57	[BUG]  [BUGGY]  NeighborUtil.isStatementBlock(n))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NeighborUtil.isStatementBlock(n))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NeighborUtil.isStatementBlock(n))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }	  NeighborUtil.isStatementBlock(parent))    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
58	[BUG]  [BUGGY]  NeighborUtil.isStatementBlock(n))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NeighborUtil.isStatementBlock(n))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NeighborUtil.isStatementBlock(n))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }	  NeighborUtil.isStatementBlock(parent))    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
59	[BUG]  [BUGGY]  NeighborUtil.isVarDeclaration(n))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NeighborUtil.isVarDeclaration(n))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NeighborUtil.isVarDeclaration(n))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }	  NeighborUtil.isStatementBlock(parent))    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
60	[BUG]  [BUGGY]  NeighborUtil.isStatementBlock(n))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NeighborUtil.isStatementBlock(n))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NeighborUtil.isStatementBlock(n))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  NeighborUtil.isStatementBlock(parent))    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
61	[BUG]  [BUGGY]  Context.checkState(n!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(n!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(n!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  Context.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
62	[BUG]  [BUGGY]  Context.checkState(arguments  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  Context.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
63	[BUG]  [BUGGY]  Context.checkState(parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  Context.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
64	[BUG]  [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }	  Preconditions.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n);    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
65	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }	  Preconditions.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n);    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
66	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }	  Preconditions.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n);    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
67	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  arguments);  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  arguments);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NodeTraversal.traverse(compiler,  n,  this,  arguments);	  NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
68	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent);  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NodeTraversal.traverse(compiler,  n,  parent);	  NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
69	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  argument);  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  argument);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NodeTraversal.traverse(compiler,  n,  this,  argument);	  NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
70	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this);  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this);	  NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
71	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  STRICT_MODULE_NAMES_UNIQUE,  argument));  [CE]  illegal  start  of  type  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parser.report(JSError.make(t,  n,  STRICT_MODULE_NAMES_UNIQUE,  argument));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  STRICT_MODULE_NAMES_UNIQUE,  argument));	  parser.report(JSError.make(t,    n,    STRICT_MODULE_NAMES_UNIQUE));    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
72	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  STRING_MODULE_NAMES_UNIQUE,  arguments));  [CE]  illegal  start  of  type  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parser.report(JSError.make(t,  n,  STRING_MODULE_NAMES_UNIQUE,  arguments));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  STRING_MODULE_NAMES_UNIQUE,  arguments));	  parser.report(JSError.make(t,    n,    STRICT_MODULE_NAMES_UNIQUE));    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
73	[BUG]  [BUGGY]  parent.replaceChild(n,  this);  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent.replaceChild(n,  this);  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent.replaceChild(n,  this);	  parent.removeChild(n);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
74	[BUG]  [BUGGY]  parent.replaceChild(n,  t);  [CE]  illegal  start  of  type  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent.replaceChild(n,  t);  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent.replaceChild(n,  t);	  parent.removeChild(n);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
75	[BUG]  [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.get  [CE]  illegal  start  of  type  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.get  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.get	  parent!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n,    n.getLastChild    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
76	[BUG]  [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,	  parent!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
77	[BUG]  [BUGGY]  Node  n  =  n.getFirstChild();  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Node  n  =  n.getFirstChild();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Node  n  =  n.getFirstChild();	  Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
78	[BUG]  [BUGGY]  Node  n  =  n.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [CE]  illegal  start  of  type  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Node  n  =  n.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Node  n  =  n.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }	  Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
79	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent.getLastChild  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent.getLastChild  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent.getLastChild	  Preconditions.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
80	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  arguments);  }  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  arguments);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  arguments);  }	  Preconditions.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
81	[BUG]  [BUGGY]  Preconditions.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent.getLastChild  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent.getLastChild  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent.getLastChild	  Preconditions.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
82	[BUG]  [BUGGY]  For(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [CE]  illegal  start  of  type  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  For(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	For(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }	  For(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
83	[BUG]  [BUGGY]  Pentru(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Pentru(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Pentru(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }	  For(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
84	[BUG]  [BUGGY]  For(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  For(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	For(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }	  For(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
85	[BUG]  [BUGGY]  Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
86	[BUG]  [BUGGY]  Context.checkState(arguments  ==  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments  ==  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments  ==  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
87	[BUG]  [BUGGY]  Context.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
88	[BUG]  [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null);  for(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  break;  }	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
89	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  arguments,  NON_GLOBAL_NAMES_NAME));  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parser.report(JSError.make(t,  n,  arguments,  NON_GLOBAL_NAMES_NAME));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  arguments,  NON_GLOBAL_NAMES_NAME));	  parser.report(JSError.make(t,    n,    NON_GLOBAL_NAMES_NAME,    arguments));    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
90	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_NAME,  arguments),  MAKE_LOCAL_NAMES_UNIQUE);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_NAME,  arguments),  MAKE_LOCAL_NAMES_UNIQUE);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_NAME,  arguments),  MAKE_LOCAL_NAMES_UNIQUE);	  parser.report(JSError.make(t,    n,    NON_GLOBAL_NAMES_NAME,    arguments));    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
91	[BUG]  [BUGGY]  Context.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }	  Context.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
92	[BUG]  [BUGGY]  Context.checkState(arguments  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }	  Context.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
93	[BUG]  [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null);  for(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  Context.checkState(arguments    ==    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
94	[BUG]  [BUGGY]  parent  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  parent!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
95	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }	  parent!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
96	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.get  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.get  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.get	  parent!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n,    n.getLastCh    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
97	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n	  parent!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n,    n.getLastCh    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
98	[BUG]  [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent.getLastChild  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent.getLastChild  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent.getLastChild	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
99	[BUG]  [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
100	[BUG]  [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
101	[BUG]  [BUGGY]  Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent.getLastChild  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent.getLastChild  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent.getLastChild	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
102	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this.arguments);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this.arguments);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NodeTraversal.traverse(compiler,  n,  this.arguments);	  NodeTraversal.traverse(compiler,    n,    arguments);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
103	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  arguments,  parent);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NodeTraversal.traverse(compiler,  n,  arguments,  parent);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NodeTraversal.traverse(compiler,  n,  arguments,  parent);	  NodeTraversal.traverse(compiler,    n,    arguments);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
104	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this.parameters);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this.parameters);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NodeTraversal.traverse(compiler,  n,  this.parameters);	  NodeTraversal.traverse(compiler,    n,    arguments);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
105	[BUG]  [BUGGY]  Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
106	[BUG]  [BUGGY]  Context.checkState(arguments  ==  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments  ==  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments  ==  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
107	[BUG]  [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChil  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChil  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChil	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
108	[BUG]  [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
109	[BUG]  [BUGGY]  Context.checkState(arguments  ==  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments  ==  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments  ==  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
110	[BUG]  [BUGGY]  Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
111	[BUG]  [BUGGY]  for(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  for(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  break;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	for(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  break;  }	  for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
112	[BUG]  [BUGGY]  NeighborUtil.isVarDeclaration(n)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NeighborUtil.isVarDeclaration(n)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NeighborUtil.isVarDeclaration(n)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  NeighborUtil.isStatementBlock(n)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
113	[BUG]  [BUGGY]  NeighborUtil.isStatementBlock(n)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  breakVarDeclarations(n);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NeighborUtil.isStatementBlock(n)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  breakVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NeighborUtil.isStatementBlock(n)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  breakVarDeclarations(n);  }	  NeighborUtil.isStatementBlock(n)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
114	[BUG]  [BUGGY]  NeighborUtil.isStatementBlock(n)  {  for(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NeighborUtil.isStatementBlock(n)  {  for(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NeighborUtil.isStatementBlock(n)  {  for(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  NeighborUtil.isStatementBlock(n)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
115	[BUG]  [BUGGY]  Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compil  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compil  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compil	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compil    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
116	[BUG]  [BUGGY]  Context.checkState(arguments  ==  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compil  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments  ==  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compil  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments  ==  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compil	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compil    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
117	[BUG]  [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compil  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compil  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null);  for(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compil	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compil    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
118	[BUG]  [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compil    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
119	[BUG]  [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(n);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(n);  }	  parent!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
120	[BUG]  [BUGGY]  For(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  For(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	For(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);	  For(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
121	[BUG]  [BUGGY]  For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  arguments);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  arguments);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  arguments);	  For(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
122	[BUG]  [BUGGY]  For(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  For(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	For(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);	  For(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
123	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }	  Preconditions.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
124	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }	  Preconditions.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
125	[BUG]  [BUGGY]  Preconditions.checkState(parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }	  Preconditions.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
126	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  argument,  arguments));  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  argument,  arguments));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  argument,  arguments));	  parser.report(JSError.make(t,    n,    MAKE_LOCAL_NAMES_UNIQUE,    argument));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
127	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  name));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  name));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  name));	  parser.report(JSError.make(t,    n,    MAKE_LOCAL_NAMES_UNIQUE,    argument));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
128	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  argument),  arguments);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  argument),  arguments);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  argument),  arguments);	  parser.report(JSError.make(t,    n,    MAKE_LOCAL_NAMES_UNIQUE,    argument));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
129	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,	  parent!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n,    n.getLas    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
130	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }	  parent!=    null    &&    parent.getType()    ==    Token.VAR)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
131	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  arguments,  expectedConst));  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  arguments,  expectedConst));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  arguments,  expectedConst));	  parser.report(JSError.make(t,    n,    MAKE_LOCAL_NAMES_UNIQUE,    arguments));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
132	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  arguments),  e);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  arguments),  e);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  arguments),  e);	  parser.report(JSError.make(t,    n,    MAKE_LOCAL_NAMES_UNIQUE,    arguments));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
133	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  arguments);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  arguments);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  arguments);	  parser.report(JSError.make(t,    n,    MAKE_LOCAL_NAMES_UNIQUE),    arguments);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
134	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNIQUE,  arguments);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNIQUE,  arguments);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNIQUE,  arguments);	  parser.report(JSError.make(t,    n,    MAKE_LOCAL_NAMES_UNIQUE),    arguments);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
135	[BUG]  [BUGGY]  Node  parent  =  n.getLastChild();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Node  parent  =  n.getLastChild();  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Node  parent  =  n.getLastChild();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
136	[BUG]  [BUGGY]  Node  parent  =  n.getNext();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Node  parent  =  n.getNext();  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Node  parent  =  n.getNext();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
137	[BUG]  [BUGGY]  Node  parent  =  n.getPreviousParent();  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Node  parent  =  n.getPreviousParent();  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Node  parent  =  n.getPreviousParent();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
138	[BUG]  [BUGGY]  Context.checkState(arguments  ==  null);  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments  ==  null);  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments  ==  null);	  Context.checkState(arguments!=    null);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
139	[BUG]  [BUGGY]  Context.checkState(arguments!=  null  &&  arguments.size()  >  0);  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments!=  null  &&  arguments.size()  >  0);  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null  &&  arguments.size()  >  0);	  Context.checkState(arguments!=    null);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
140	[BUG]  [BUGGY]  Context.checkState(arguments!=  null  &&  arguments.length  >  0);  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments!=  null  &&  arguments.length  >  0);  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null  &&  arguments.length  >  0);	  Context.checkState(arguments!=    null);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
141	[BUG]  [BUGGY]  Context.checkState(arguments  >=  null);  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments  >=  null);  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments  >=  null);	  Context.checkState(arguments!=    null);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
142	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n	  parent!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
143	[BUG]  [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
144	[BUG]  [BUGGY]  Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
145	[BUG]  [BUGGY]  Context.checkState(arguments  ==  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments  ==  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments  ==  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
146	[BUG]  [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n.getLastChild());    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
147	[BUG]  [BUGGY]  Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n.getLastChild());    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
148	[BUG]  [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChil  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChil  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChil	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n.getLastChild());    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
149	[BUG]  [BUGGY]  Context.checkState(arguments  ==  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments  ==  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments  ==  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n.getLastChild());    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
150	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNKNOWN,  arguments));  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNKNOWN,  arguments));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNKNOWN,  arguments));	  parser.report(JSError.make(t,    n,    MAKE_LOCAL_NAMES_UNKNOWN));    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
151	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNKNOWN,  argument));  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNKNOWN,  argument));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNKNOWN,  argument));	  parser.report(JSError.make(t,    n,    MAKE_LOCAL_NAMES_UNKNOWN));    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
152	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNKNOWN));  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNKNOWN));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNKNOWN));	  parser.report(JSError.make(t,    n,    MAKE_LOCAL_NAMES_UNKNOWN));    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
153	[BUG]  [BUGGY]  Pentru(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastChild());  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Pentru(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastChild());  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Pentru(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastChild());  }	  For(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n,    n.getLastChild());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
154	[BUG]  [BUGGY]  For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(t,  n.getLastChild());  }  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(t,  n.getLastChild());  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(t,  n.getLastChild());  }	  For(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n,    n.getLastChild());    }    	non-compiled	[CE]  not  a  statement	15	None	replace
155	[BUG]  [BUGGY]  NeighborUtil.isStatementBlock(n)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NeighborUtil.isStatementBlock(n)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NeighborUtil.isStatementBlock(n)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }	  NeighborUtil.isStatementBlock(parent)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  not  a  statement	75	None	replace
156	[BUG]  [BUGGY]  NeighborUtil.isStatementBlock(n)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NeighborUtil.isStatementBlock(n)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NeighborUtil.isStatementBlock(n)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }	  NeighborUtil.isStatementBlock(parent)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  not  a  statement	75	None	replace
157	[BUG]  [BUGGY]  NeighborUtil.isStatementBlock(parent)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NeighborUtil.isStatementBlock(parent)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NeighborUtil.isStatementBlock(parent)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }	  NeighborUtil.isStatementBlock(parent)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  not  a  statement	75	None	replace
158	[BUG]  [BUGGY]  NodeUtil.replaceChild(parent,  arguments);  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NodeUtil.replaceChild(parent,  arguments);  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NodeUtil.replaceChild(parent,  arguments);	  parent.replaceChild(n,    arguments);    	non-compiled	[CE]  not  a  statement	9	None	replace
159	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  INVALID_NAMES_UNIQUE,  arguments));  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parser.report(JSError.make(t,  n,  INVALID_NAMES_UNIQUE,  arguments));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  INVALID_NAMES_UNIQUE,  arguments));	  parser.report(JSError.make(t,    n,    INVALID_NAMES_UNIQUE));    	non-compiled	[CE]  not  a  statement	87	None	replace
160	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  INVALID_NAMES_UNIQUE,  argument));  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parser.report(JSError.make(t,  n,  INVALID_NAMES_UNIQUE,  argument));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  INVALID_NAMES_UNIQUE,  argument));	  parser.report(JSError.make(t,    n,    INVALID_NAMES_UNIQUE));    	non-compiled	[CE]  not  a  statement	87	None	replace
161	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent.getLastChild  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent.getLastChild  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent.getLastChild	  Preconditions.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild    	non-compiled	[CE]  not  a  statement	51	None	replace
162	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }	  Preconditions.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild    	non-compiled	[CE]  not  a  statement	51	None	replace
163	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  arguments);  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  arguments);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  arguments);  }	  Preconditions.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild    	non-compiled	[CE]  not  a  statement	51	None	replace
164	[BUG]  [BUGGY]  Context.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compil  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compil  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compil	  Context.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    }    	non-compiled	[CE]  not  a  statement	14	None	replace
165	[BUG]  [BUGGY]  Context.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,	  Context.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    }    	non-compiled	[CE]  not  a  statement	14	None	replace
166	[BUG]  [BUGGY]  Context.checkState(arguments  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }	  Context.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    }    	non-compiled	[CE]  not  a  statement	14	None	replace
167	[BUG]  [BUGGY]  parent.replaceChild(n,  NodeUtil.newExpr(parent,  arguments));  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent.replaceChild(n,  NodeUtil.newExpr(parent,  arguments));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent.replaceChild(n,  NodeUtil.newExpr(parent,  arguments));	  parent.replaceChild(n,    NodeUtil.newExpr(parent));    	non-compiled	[CE]  not  a  statement	55	None	replace
168	[BUG]  [BUGGY]  parent.replaceChild(n,  NodeUtil.newExpr(argument));  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent.replaceChild(n,  NodeUtil.newExpr(argument));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent.replaceChild(n,  NodeUtil.newExpr(argument));	  parent.replaceChild(n,    NodeUtil.newExpr(parent));    	non-compiled	[CE]  not  a  statement	55	None	replace
169	[BUG]  [BUGGY]  parent.replaceChild(n,  NodeUtil.newExpr(parser));  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent.replaceChild(n,  NodeUtil.newExpr(parser));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent.replaceChild(n,  NodeUtil.newExpr(parser));	  parent.replaceChild(n,    NodeUtil.newExpr(parent));    	non-compiled	[CE]  not  a  statement	55	None	replace
170	[BUG]  [BUGGY]  parent!=  null  ||  parent.getType()  ==  Token.VAR)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null  ||  parent.getType()  ==  Token.VAR)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  ||  parent.getType()  ==  Token.VAR)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  parent!=    null    &&    parent.getType()    ==    Token.VAR)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  not  a  statement	85	None	replace
171	[BUG]  [BUGGY]  NodeUtil.removeChild(parent,  n.getFirstChild());  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NodeUtil.removeChild(parent,  n.getFirstChild());  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NodeUtil.removeChild(parent,  n.getFirstChild());	  NodeUtil.removeChild(parent,    n);    	non-compiled	[CE]  not  a  statement	86	None	replace
172	[BUG]  [BUGGY]  NodeUtil.removeChild(parent,  n.getLastChild());  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NodeUtil.removeChild(parent,  n.getLastChild());  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NodeUtil.removeChild(parent,  n.getLastChild());	  NodeUtil.removeChild(parent,    n);    	non-compiled	[CE]  not  a  statement	86	None	replace
173	[BUG]  [BUGGY]  NodeUtil.removeChild(parent,  n.cloneTree());  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NodeUtil.removeChild(parent,  n.cloneTree());  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NodeUtil.removeChild(parent,  n.cloneTree());	  NodeUtil.removeChild(parent,    n);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
174	[BUG]  [BUGGY]  NodeUtil.removeChild(parent,  n.getString());  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NodeUtil.removeChild(parent,  n.getString());  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NodeUtil.removeChild(parent,  n.getString());	  NodeUtil.removeChild(parent,    n);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
175	[BUG]  [BUGGY]  Node  parent  =  n.getParentNode();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Node  parent  =  n.getParentNode();  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Node  parent  =  n.getParentNode();	  Node    parent    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
176	[BUG]  [BUGGY]  Node  n  =  parent.getLastChild();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Node  n  =  parent.getLastChild();  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Node  n  =  parent.getLastChild();	  Node    n    =    parent.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
177	[BUG]  [BUGGY]  Node  n  =  t.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Node  n  =  t.getFirstChild();  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Node  n  =  t.getFirstChild();	  Node    n    =    parent.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
178	[BUG]  [BUGGY]  Node  n  =  n.getLastChild();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Node  n  =  n.getLastChild();  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Node  n  =  n.getLastChild();	  Node    n    =    parent.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
179	[BUG]  [BUGGY]  Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  parent!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
180	[BUG]  [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null)  {  for(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  parent!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
181	[BUG]  [BUGGY]  Node  n  =  node.getFirstChild();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Node  n  =  node.getFirstChild();  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Node  n  =  node.getFirstChild();	  Node    n    =    parent.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
182	[BUG]  [BUGGY]  Node  n  =  parent.getParent();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Node  n  =  parent.getParent();  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Node  n  =  parent.getParent();	  Node    n    =    parent.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
183	[BUG]  [BUGGY]  parent  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.remove  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.remove  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.remove	  parent!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.remov    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
184	[BUG]  [BUGGY]  parent.replaceChild(n,  NodeUtil.newExpr(parent),  arguments);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent.replaceChild(n,  NodeUtil.newExpr(parent),  arguments);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent.replaceChild(n,  NodeUtil.newExpr(parent),  arguments);	  parent.replaceChild(n,    NodeUtil.newExpr(parent));    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
185	[BUG]  [BUGGY]  parent.replaceChild(n,  NodeUtil.newExpr(parent),  n);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent.replaceChild(n,  NodeUtil.newExpr(parent),  n);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent.replaceChild(n,  NodeUtil.newExpr(parent),  n);	  parent.replaceChild(n,    NodeUtil.newExpr(parent));    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
186	[BUG]  [BUGGY]  Preconditions.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }	  Preconditions.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    }    	non-compiled	[CE]  not  a  statement	78	None	replace
187	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  arguments,  MAKE_LOCAL_NAMES_UNIQUE));  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parser.report(JSError.make(t,  n,  arguments,  MAKE_LOCAL_NAMES_UNIQUE));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  arguments,  MAKE_LOCAL_NAMES_UNIQUE));	  parser.report(JSError.make(t,    n,    MAKE_LOCAL_NAMES_UNIQUE,    argument));    	non-compiled	[CE]  not  a  statement	2	None	replace
188	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  argument,  MAKE_LOCAL_NAMES_UNIQUE));  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parser.report(JSError.make(t,  n,  argument,  MAKE_LOCAL_NAMES_UNIQUE));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  argument,  MAKE_LOCAL_NAMES_UNIQUE));	  parser.report(JSError.make(t,    n,    MAKE_LOCAL_NAMES_UNIQUE,    argument));    	non-compiled	[CE]  not  a  statement	2	None	replace
189	[BUG]  [BUGGY]  Node  parent  =  n.getPreviousChild();  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Node  parent  =  n.getPreviousChild();  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Node  parent  =  n.getPreviousChild();	  Node    parent    =    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	8	None	replace
190	[BUG]  [BUGGY]  Pour(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Pour(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Pour(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }	  Pentru(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    break;    }    	non-compiled	[CE]  not  a  statement	88	None	replace
191	[BUG]  [BUGGY]  for(Node  n  =  n.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  for(Node  n  =  n.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	for(Node  n  =  n.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }	  for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    break;    }    	non-compiled	[CE]  not  a  statement	26	None	replace
192	[BUG]  [BUGGY]  Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }	  For(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n.getLastChild());    }    	non-compiled	[CE]  not  a  statement	20	None	replace
193	[BUG]  [BUGGY]  Context.checkState(arguments!=  null);  Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments!=  null);  Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null);  Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  not  a  statement	30	None	replace
194	[BUG]  [BUGGY]  Context.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
195	[BUG]  [BUGGY]  parent  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild	  parent!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
196	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null);  Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(arguments!=  null);  Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null);  Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  Preconditions.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
197	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  breakVarDeclarations(n);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  breakVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  breakVarDeclarations(n);  }	  Preconditions.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
198	[BUG]  [BUGGY]  Preconditions.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }	  Preconditions.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
199	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);	  Preconditions.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
200	[BUG]  [BUGGY]  NeighborUtil.isStatement(parent)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NeighborUtil.isStatement(parent)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NeighborUtil.isStatement(parent)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  NeighborUtil.isStatementBlock(parent)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
201	[BUG]  [BUGGY]  NeighborUtil.isStatementBlock(parent)  {  Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NeighborUtil.isStatementBlock(parent)  {  Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NeighborUtil.isStatementBlock(parent)  {  Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  NeighborUtil.isStatementBlock(parent)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
202	[BUG]  [BUGGY]  NeighborUtil.isStatementBlock(parent)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  breakVarDeclarations(n);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NeighborUtil.isStatementBlock(parent)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  breakVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NeighborUtil.isStatementBlock(parent)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  breakVarDeclarations(n);  }	  NeighborUtil.isStatementBlock(parent)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
203	[BUG]  [BUGGY]  parent!=  null  &&  parent.getFirstChild().getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null  &&  parent.getFirstChild().getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  parent.getFirstChild().getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations	  parent!=    null    &&    parent.getFirstChild().getType()    ==    Token.FUNCTION)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n.    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
204	[BUG]  [BUGGY]  for(Node  n  =  node.getLastChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [CE]  ';'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  for(Node  n  =  node.getLastChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	for(Node  n  =  node.getLastChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }	  for(Node    n    =    parent.getLastChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    }    	non-compiled	[CE]  ';'  expected	56	None	replace
205	[BUG]  [BUGGY]  for(Node  n  =  parent.getFirstChild();  n  >=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  for(Node  n  =  parent.getFirstChild();  n  >=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	for(Node  n  =  parent.getFirstChild();  n  >=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }	  for(Node    n    =    parent.getLastChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    }    	non-compiled	[CE]  ';'  expected	56	None	replace
206	[BUG]  [BUGGY]  Context.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  ';'  expected	36	None	replace
207	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parents);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parents);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NodeTraversal.traverse(compiler,  n,  parents);	  NodeTraversal.traverse(compiler,    n,    arguments);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
208	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  arguments,  expectedConst);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NodeTraversal.traverse(compiler,  n,  arguments,  expectedConst);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NodeTraversal.traverse(compiler,  n,  arguments,  expectedConst);	  NodeTraversal.traverse(compiler,    n,    arguments);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
209	[BUG]  [BUGGY]  Context.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n.getLastChild());    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
210	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  STRING_MODULE_NAMES_UNIQUE));  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parser.report(JSError.make(t,  n,  STRING_MODULE_NAMES_UNIQUE));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  STRING_MODULE_NAMES_UNIQUE));	  parser.report(JSError.make(t,    n,    STRICT_MODULE_NAMES_UNIQUE));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
211	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null  &&  arguments.length  >  0)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(arguments!=  null  &&  arguments.length  >  0)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null  &&  arguments.length  >  0)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  Preconditions.checkState(arguments    ==    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
212	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations	  parent!=    null    &&    parent.getType()    ==    Token.VAR)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
213	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n	  parent!=    null    &&    parent.getType()    ==    Token.VAR)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
214	[BUG]  [BUGGY]  For(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  For(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	For(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }	  For(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
215	[BUG]  [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n	  parent!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n,    n.getLastChild    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
216	[BUG]  [BUGGY]  Context.checkState(arguments!=  null);  Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments!=  null);  Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null);  Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
217	[BUG]  [BUGGY]  Context.checkState(parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }	  Context.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
218	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null  &&  arguments.length  >  0);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(arguments!=  null  &&  arguments.length  >  0);  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null  &&  arguments.length  >  0);	  Preconditions.checkState(arguments!=    null);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
219	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null  &&  arguments.size()  >  0);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(arguments!=  null  &&  arguments.size()  >  0);  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null  &&  arguments.size()  >  0);	  Preconditions.checkState(arguments!=    null);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
220	[BUG]  [BUGGY]  Preconditions.checkState(parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }	  Preconditions.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
221	[BUG]  [BUGGY]  Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }	  For(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getLastChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
222	[BUG]  [BUGGY]  Preconditions.checkState(n!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(n!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(n!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }	  Preconditions.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
223	[BUG]  [BUGGY]  Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastChild());  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastChild());  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastChild());  }	  For(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n,    n.getLastChild());    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
224	[BUG]  [BUGGY]  parent  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChil  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChil  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChil	  parent!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChil    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
225	[BUG]  [BUGGY]  parent!=  null  &&  NodeUtil.isStatementBlock(parent))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChil  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null  &&  NodeUtil.isStatementBlock(parent))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChil  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  NodeUtil.isStatementBlock(parent))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChil	  parent!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChil    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
226	[BUG]  [BUGGY]  NeighborUtil.isStatementBlock(parent))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NeighborUtil.isStatementBlock(parent))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NeighborUtil.isStatementBlock(parent))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }	  NeighborUtil.isStatementBlock(parent))    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
227	[BUG]  [BUGGY]  NeighborUtil.isStatementBlock(parent)&&  NodeUtil.isVarDeclaration(parent))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDe  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NeighborUtil.isStatementBlock(parent)&&  NodeUtil.isVarDeclaration(parent))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDe  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NeighborUtil.isStatementBlock(parent)&&  NodeUtil.isVarDeclaration(parent))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDe	  NeighborUtil.isStatementBlock(parent))    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
228	[BUG]  [BUGGY]  Preconditions.checkState(n!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(n!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(n!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }	  Preconditions.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
229	[BUG]  [BUGGY]  NodeUtil.replaceChild(parent,  n);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NodeUtil.replaceChild(parent,  n);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NodeUtil.replaceChild(parent,  n);	  NodeUtil.removeChild(parent);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
230	[BUG]  [BUGGY]  Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
231	[BUG]  [BUGGY]  Context.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
232	[BUG]  [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.remov  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.remov  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.remov	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
233	[BUG]  [BUGGY]  For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getParent())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getParent())  {  break;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getParent())  {  break;  }	  For(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
234	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_INIT_ERROR));  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_INIT_ERROR));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_INIT_ERROR));	  parser.report(JSError.make(t,    n,    INVALID_NAMES_UNIQUE));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
235	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  null);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NodeTraversal.traverse(compiler,  n,  null);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NodeTraversal.traverse(compiler,  n,  null);	  NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
236	[BUG]  [BUGGY]  Preconditions.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n	  Preconditions.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
237	[BUG]  [BUGGY]  NeighborUtil.isStatement(parent)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NeighborUtil.isStatement(parent)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NeighborUtil.isStatement(parent)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }	  NeighborUtil.isStatementBlock(parent)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
238	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
239	[BUG]  [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null);  for(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
240	[BUG]  [BUGGY]  Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getParent())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getParent())  {  break;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getParent())  {  break;  }	  Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
241	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_NAME,  arguments),  JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE));  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_NAME,  arguments),  JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_NAME,  arguments),  JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE));	  parser.report(JSError.make(t,    n,    NON_GLOBAL_NAMES_NAME,    arguments));    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
242	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION));  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION));  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION));	  parent.removeChild(n);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
243	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY));  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY));  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY));	  parent.removeChild(n);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
244	[BUG]  [BUGGY]  parent.replaceChild(n,  Node.newString(Token.NAME));  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent.replaceChild(n,  Node.newString(Token.NAME));  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent.replaceChild(n,  Node.newString(Token.NAME));	  parent.removeChild(n);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
245	[BUG]  [BUGGY]  for(Node  n  =  parent.getFirstChild();  n  >=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  for(Node  n  =  parent.getFirstChild();  n  >=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	for(Node  n  =  parent.getFirstChild();  n  >=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }	  for(Node    n    =    parent.getFirstChild();    n    ==    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
246	[BUG]  [BUGGY]  Preconditions.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild	  Preconditions.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
247	[BUG]  [BUGGY]  Preconditions.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild	  Preconditions.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
248	[BUG]  [BUGGY]  Preconditions.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }	  Preconditions.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
249	[BUG]  [BUGGY]  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);	  for(Node    n    =    parent.getLastChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
250	[BUG]  [BUGGY]  parent.replaceChild(n,  NodeUtil.newExpr(n),  arguments);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent.replaceChild(n,  NodeUtil.newExpr(n),  arguments);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent.replaceChild(n,  NodeUtil.newExpr(n),  arguments);	  parent.replaceChild(n,    NodeUtil.newExpr(n));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
251	[BUG]  [BUGGY]  parent.replaceChild(n,  NodeUtil.newString(Token.NAME,  arguments));  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent.replaceChild(n,  NodeUtil.newString(Token.NAME,  arguments));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent.replaceChild(n,  NodeUtil.newString(Token.NAME,  arguments));	  parent.replaceChild(n,    NodeUtil.newExpr(n));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
252	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.NAME,  arguments));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent.replaceChild(n,  new  Node(Token.NAME,  arguments));  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent.replaceChild(n,  new  Node(Token.NAME,  arguments));	  parent.replaceChild(n,    arguments);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
253	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMESPACE_ERROR),  arguments);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMESPACE_ERROR),  arguments);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMESPACE_ERROR),  arguments);	  parser.report(JSError.make(t,    n,    MAKE_LOCAL_NAMES_UNIQUE),    arguments);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
254	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  argumentNames));  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  argumentNames));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  argumentNames));	  parser.report(JSError.make(t,    n,    MAKE_LOCAL_NAMES_UNIQUE),    arguments);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
255	[BUG]  [BUGGY]  Context.checkState(arguments!=  null);  Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compil  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments!=  null);  Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compil  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null);  Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compil	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compil    	non-compiled	[CE]  not  a  statement	90	None	replace
256	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations	  parent!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  not  a  statement	93	None	replace
257	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  arguments),  n);  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  arguments),  n);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  arguments),  n);	  parser.report(JSError.make(t,    n,    MAKE_LOCAL_NAMES_UNIQUE,    arguments));    	non-compiled	[CE]  not  a  statement	1	None	replace
258	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  arguments),  n.getLineno());  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  arguments),  n.getLineno());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  arguments),  n.getLineno());	  parser.report(JSError.make(t,    n,    MAKE_LOCAL_NAMES_UNIQUE,    arguments));    	non-compiled	[CE]  not  a  statement	1	None	replace
259	[BUG]  [BUGGY]  Context.checkState(parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }	  Context.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  not  a  statement	37	None	replace
260	[BUG]  [BUGGY]  Context.checkState(n!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(n!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(n!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }	  Context.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  not  a  statement	37	None	replace
261	[BUG]  [BUGGY]  Preconditions.checkState(parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }	  Preconditions.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    }    	non-compiled	[CE]  not  a  statement	79	None	replace
262	[BUG]  [BUGGY]  Preconditions.checkState(n!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(n!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(n!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }	  Preconditions.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    }    	non-compiled	[CE]  not  a  statement	79	None	replace
263	[BUG]  [BUGGY]  Preconditions.checkState(parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild	  Preconditions.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild    	non-compiled	[CE]  not  a  statement	51	None	replace
264	[BUG]  [BUGGY]  Preconditions.checkState(n!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(n!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(n!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild	  Preconditions.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild    	non-compiled	[CE]  not  a  statement	51	None	replace
265	[BUG]  [BUGGY]  Preconditions.checkState(parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }  [CE]  as  of  release  5,  'enum'  is  a  keyword,  and  may  not  be  used  as  an  identifier  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }	  Preconditions.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild    	non-compiled	[CE]  as  of  release  5,  'enum'  is  a  keyword,  and  may  not  be  used  as  an  identifier	51	None	replace
266	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null  &&  NodeUtil.isStatementBlock(n))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  as  of  release  5,  'enum'  is  a  keyword,  and  may  not  be  used  as  an  identifier  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(arguments!=  null  &&  NodeUtil.isStatementBlock(n))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null  &&  NodeUtil.isStatementBlock(n))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  Preconditions.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  as  of  release  5,  'enum'  is  a  keyword,  and  may  not  be  used  as  an  identifier	61	None	replace
267	[BUG]  [BUGGY]  Node  parent  =  n.getParentOperator();  [CE]  as  of  release  5,  'enum'  is  a  keyword,  and  may  not  be  used  as  an  identifier  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Node  parent  =  n.getParentOperator();  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Node  parent  =  n.getParentOperator();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  as  of  release  5,  'enum'  is  a  keyword,  and  may  not  be  used  as  an  identifier	7	None	replace
268	[BUG]  [BUGGY]  NodeUtil.removeChild(parent,  n.getParent());  [CE]  as  of  release  5,  'enum'  is  a  keyword,  and  may  not  be  used  as  an  identifier  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NodeUtil.removeChild(parent,  n.getParent());  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NodeUtil.removeChild(parent,  n.getParent());	  NodeUtil.removeChild(parent,    n);    	non-compiled	[CE]  as  of  release  5,  'enum'  is  a  keyword,  and  may  not  be  used  as  an  identifier	86	None	replace
269	[BUG]  [BUGGY]  parent!=  null  &&  NodeUtil.isStatementBlock(parent))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.remove  [CE]  as  of  release  5,  'enum'  is  a  keyword,  and  may  not  be  used  as  an  identifier  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null  &&  NodeUtil.isStatementBlock(parent))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.remove  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  NodeUtil.isStatementBlock(parent))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.remove	  parent!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.remov    	non-compiled	[CE]  as  of  release  5,  'enum'  is  a  keyword,  and  may  not  be  used  as  an  identifier	46	None	replace
270	[BUG]  [BUGGY]  parent!=  null  &&  NodeUtil.isStatementBlock(parent))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLas  [CE]  as  of  release  5,  'enum'  is  a  keyword,  and  may  not  be  used  as  an  identifier  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null  &&  NodeUtil.isStatementBlock(parent))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLas  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  NodeUtil.isStatementBlock(parent))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLas	  parent!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n,    n.getLastChild());    }    	non-compiled	[CE]  as  of  release  5,  'enum'  is  a  keyword,  and  may  not  be  used  as  an  identifier	18	None	replace
271	[BUG]  [BUGGY]  NeighborUtil.isStatementBlock(n)  ==  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  as  of  release  5,  'enum'  is  a  keyword,  and  may  not  be  used  as  an  identifier  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NeighborUtil.isStatementBlock(n)  ==  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NeighborUtil.isStatementBlock(n)  ==  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  NeighborUtil.isStatementBlock(parent)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  as  of  release  5,  'enum'  is  a  keyword,  and  may  not  be  used  as  an  identifier	62	None	replace
272	[BUG]  [BUGGY]  NeighborUtil.isStatementBlock(n)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [CE]  as  of  release  5,  'enum'  is  a  keyword,  and  may  not  be  used  as  an  identifier  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NeighborUtil.isStatementBlock(n)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NeighborUtil.isStatementBlock(n)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }	  NeighborUtil.isStatementBlock(parent)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  as  of  release  5,  'enum'  is  a  keyword,  and  may  not  be  used  as  an  identifier	62	None	replace
273	[BUG]  [BUGGY]  Context.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }  [CE]  as  of  release  5,  'enum'  is  a  keyword,  and  may  not  be  used  as  an  identifier  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent);    }    	non-compiled	[CE]  as  of  release  5,  'enum'  is  a  keyword,  and  may  not  be  used  as  an  identifier	80	None	replace
274	[BUG]  [BUGGY]  for(Node  n  =  this.parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [CE]  as  of  release  5,  'enum'  is  a  keyword,  and  may  not  be  used  as  an  identifier  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  for(Node  n  =  this.parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	for(Node  n  =  this.parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }	  for(Node    n    =    parent.getLastChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    }    	non-compiled	[CE]  as  of  release  5,  'enum'  is  a  keyword,  and  may  not  be  used  as  an  identifier	56	None	replace
275	[BUG]  [BUGGY]  NodeUtil.removeChild(parent,  n  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NodeUtil.removeChild(parent,  n  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NodeUtil.removeChild(parent,  n	  Preconditions.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
276	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(n.getType()  ==  Token.VAR);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n	  Preconditions.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
277	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n	  Preconditions.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
278	[BUG]  [BUGGY]  For(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  type  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  For(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	For(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }	  For(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
279	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.  [CE]  illegal  start  of  type  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.	  parent!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n,    n.getLas    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
280	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(n.getType()  ==  Token.VAR);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }	  Preconditions.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n);    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
281	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }	  Preconditions.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n);    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
282	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }	  Preconditions.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n);    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
283	[BUG]  [BUGGY]  Preconditions.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  type  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }	  Preconditions.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
284	[BUG]  [BUGGY]  Preconditions.checkArgument(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkArgument(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkArgument(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }	  Preconditions.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
285	[BUG]  [BUGGY]  parent.replaceChild(n,  NodeUtil.newNumber(0));  [CE]  illegal  start  of  type  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent.replaceChild(n,  NodeUtil.newNumber(0));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent.replaceChild(n,  NodeUtil.newNumber(0));	  parent.replaceChild(n,    NodeUtil.newExpr(n));    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
286	[BUG]  [BUGGY]  NeighborFor(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [CE]  illegal  start  of  type  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NeighborFor(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NeighborFor(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }	  For(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
287	[BUG]  [BUGGY]  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }	  For(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getLastChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
288	[BUG]  [BUGGY]  NeighborUtil.isStatementBlock(n))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  breakVarDeclarations(n);  }  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NeighborUtil.isStatementBlock(n))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  breakVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NeighborUtil.isStatementBlock(n))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  breakVarDeclarations(n);  }	  NeighborUtil.isStatementBlock(parent))    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
289	[BUG]  [BUGGY]  parser.addError(JSError.make(t,  n,  INVALID_NAMES_UNIQUE,  arguments));  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parser.addError(JSError.make(t,  n,  INVALID_NAMES_UNIQUE,  arguments));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.addError(JSError.make(t,  n,  INVALID_NAMES_UNIQUE,  arguments));	  parser.report(JSError.make(t,    n,    INVALID_NAMES_UNIQUE));    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
290	[BUG]  [BUGGY]  parent!=  null  &&  NodeUtil.isStatementBlock(parent))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null  &&  NodeUtil.isStatementBlock(parent))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  NodeUtil.isStatementBlock(parent))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  parent!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
291	[BUG]  [BUGGY]  Context.checkState(n!=  parent.getFirstChild());  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(n!=  parent.getFirstChild());  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(n!=  parent.getFirstChild());  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  Context.checkState(arguments    ==    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
292	[BUG]  [BUGGY]  Node  parent  =  n.getOwnerChild();  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Node  parent  =  n.getOwnerChild();  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Node  parent  =  n.getOwnerChild();	  Node    parent    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
293	[BUG]  [BUGGY]  n!=  null  &&  parent.getType()  ==  Token.VAR)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  n!=  null  &&  parent.getType()  ==  Token.VAR)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	n!=  null  &&  parent.getType()  ==  Token.VAR)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  parent!=    null    &&    parent.getType()    ==    Token.VAR)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
294	[BUG]  [BUGGY]  Context.checkState(arguments!=  null,  arguments.length);  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments!=  null,  arguments.length);  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null,  arguments.length);	  Context.checkState(arguments!=    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
295	[BUG]  [BUGGY]  Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(n,  parent);  }  [CE]  as  of  release  5,  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(n,  parent);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(n,  parent);  }	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild    	non-compiled	[CE]  as  of  release  5,  	81	None	replace
296	[BUG]  [BUGGY]  Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(n);  }  [CE]  as  of  release  5,  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(n);  }	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild    	non-compiled	[CE]  as  of  release  5,  	81	None	replace
297	[BUG]  [BUGGY]  n!=  null  &&  n.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compil  [CE]  as  of  release  5,  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  n!=  null  &&  n.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compil  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	n!=  null  &&  n.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compil	  parent!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compil    	non-compiled	[CE]  as  of  release  5,  	91	None	replace
298	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  arguments));  [CE]  as  of  release  5,  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  arguments));  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  arguments));	  parent.replaceChild(n,    arguments);    	non-compiled	[CE]  as  of  release  5,  	9	None	replace
299	[BUG]  [BUGGY]  parent.replaceChild(n,  Node.newString(Token.NAME,  arguments));  [CE]  as  of  release  5,  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent.replaceChild(n,  Node.newString(Token.NAME,  arguments));  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent.replaceChild(n,  Node.newString(Token.NAME,  arguments));	  parent.replaceChild(n,    arguments);    	non-compiled	[CE]  as  of  release  5,  	9	None	replace
300	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parser,  arguments);  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parser,  arguments);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NodeTraversal.traverse(compiler,  n,  parser,  arguments);	  NodeTraversal.traverse(compiler,    n,    arguments);    	non-compiled	[CE]  not  a  statement	53	None	replace
301	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(n.getType()  ==  Token.VAR);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);	  Preconditions.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n);    	non-compiled	[CE]  not  a  statement	52	None	replace
302	[BUG]  [BUGGY]  Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n.getLastChild());    }    	non-compiled	[CE]  not  a  statement	40	None	replace
303	[BUG]  [BUGGY]  For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getParent())  {  NodeUtil.removeChild(parent,  n);  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getParent())  {  NodeUtil.removeChild(parent,  n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getParent())  {  NodeUtil.removeChild(parent,  n);  }	  For(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n);    }    	non-compiled	[CE]  not  a  statement	33	None	replace
304	[BUG]  [BUGGY]  parent!=  null  &&  NodeUtil.isStatementBlock(parent))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null  &&  NodeUtil.isStatementBlock(parent))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  NodeUtil.isStatementBlock(parent))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }	  parent!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  not  a  statement	92	None	replace
305	[BUG]  [BUGGY]  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }	  For(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n.getLastChild());    }    	non-compiled	[CE]  not  a  statement	20	None	replace
306	[BUG]  [BUGGY]  NeighborUtil.isStatementBlock(n)  {  Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NeighborUtil.isStatementBlock(n)  {  Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NeighborUtil.isStatementBlock(n)  {  Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  NeighborUtil.isStatementBlock(n)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  not  a  statement	89	None	replace
307	[BUG]  [BUGGY]  n!=  null  &&  parent.getType()  ==  Token.VAR)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  n!=  null  &&  parent.getType()  ==  Token.VAR)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	n!=  null  &&  parent.getType()  ==  Token.VAR)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }	  parent!=    null    &&    parent.getType()    ==    Token.VAR)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  not  a  statement	94	None	replace
308	[BUG]  [BUGGY]  Context.checkState(n  ==  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [CE]  not  a  statement  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(n  ==  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(n  ==  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    break;    }    	non-compiled	[CE]  not  a  statement	27	None	replace
309	[BUG]  [BUGGY]  Context.checkState(n!=  parent.getFirstChild());  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [CE]  not  a  statement  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(n!=  parent.getFirstChild());  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(n!=  parent.getFirstChild());  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    break;    }    	non-compiled	[CE]  not  a  statement	27	None	replace
310	[BUG]  [BUGGY]  parent.replaceChild(n,  Node.newString(Token.NAME,  t.getModule()));  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent.replaceChild(n,  Node.newString(Token.NAME,  t.getModule()));  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent.replaceChild(n,  Node.newString(Token.NAME,  t.getModule()));	  parent.removeChild(n);    	non-compiled	[CE]  ')'  expected	10	None	replace
311	[BUG]  [BUGGY]  parent.replaceChild(n,  Node.newString(Token.NAME,  n.getFirstChild()));  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent.replaceChild(n,  Node.newString(Token.NAME,  n.getFirstChild()));  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent.replaceChild(n,  Node.newString(Token.NAME,  n.getFirstChild()));	  parent.removeChild(n);    	non-compiled	[CE]  not  a  statement	10	None	replace
312	[BUG]  [BUGGY]  n!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  n!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	n!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  parent!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  not  a  statement	84	None	replace
313	[BUG]  [BUGGY]  parent!=  null;  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null;  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null;  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  parent!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  not  a  statement	84	None	replace
314	[BUG]  [BUGGY]  parent.replaceChild(n,  NodeUtil.newExpr(parent,  argument));  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent.replaceChild(n,  NodeUtil.newExpr(parent,  argument));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent.replaceChild(n,  NodeUtil.newExpr(parent,  argument));	  parent.replaceChild(n,    NodeUtil.newExpr(parent));    	non-compiled	[CE]  not  a  statement	55	None	replace
315	[BUG]  [BUGGY]  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  For(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  not  a  statement	29	None	replace
316	[BUG]  [BUGGY]  For(Node  n  =  this.parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  For(Node  n  =  this.parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	For(Node  n  =  this.parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);	  For(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  not  a  statement	38	None	replace
317	[BUG]  [BUGGY]  Context.checkState(n!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(n!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(n!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }	  Context.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    }    	non-compiled	[CE]  not  a  statement	14	None	replace
318	[BUG]  [BUGGY]  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastChild());  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastChild());  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastChild());  }	  For(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n,    n.getLastChild());    }    	non-compiled	[CE]  not  a  statement	15	None	replace
319	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(n.getType()  ==  Token.VAR);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild	  Preconditions.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild    	non-compiled	[CE]  not  a  statement	48	None	replace
320	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild	  Preconditions.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild    	non-compiled	[CE]  not  a  statement	48	None	replace
321	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild	  Preconditions.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild    	non-compiled	[CE]  not  a  statement	48	None	replace
322	[BUG]  [BUGGY]  Preconditions.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(n);  }  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(n!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(n);  }	  Preconditions.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild    	non-compiled	[CE]  not  a  statement	48	None	replace
323	[BUG]  [BUGGY]  Node  n  =  this.parent.getFirstChild();  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Node  n  =  this.parent.getFirstChild();  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Node  n  =  this.parent.getFirstChild();	  Node    n    =    parent.getFirstChild();    	non-compiled	[CE]  not  a  statement	6	None	replace
324	[BUG]  [BUGGY]  Node  n  =  arguments.getFirstChild();  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Node  n  =  arguments.getFirstChild();  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Node  n  =  arguments.getFirstChild();	  Node    n    =    parent.getFirstChild();    	non-compiled	[CE]  not  a  statement	6	None	replace
325	[BUG]  [BUGGY]  Preconditions.checkState(parent!=  null);  Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(parent!=  null);  Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(parent!=  null);  Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	  Preconditions.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  not  a  statement	63	None	replace
326	[BUG]  [BUGGY]  parent!=  null  &&  NodeUtil.isStatementBlock(parent))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChil  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null  &&  NodeUtil.isStatementBlock(parent))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChil  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  NodeUtil.isStatementBlock(parent))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChil	  parent!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n.getLastChil    	non-compiled	[CE]  not  a  statement	23	None	replace
327	[BUG]  [BUGGY]  NeighborUtil.isVarDeclaration(n)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NeighborUtil.isVarDeclaration(n)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NeighborUtil.isVarDeclaration(n)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }	  NeighborUtil.isStatementBlock(parent)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  not  a  statement	75	None	replace
328	[BUG]  [BUGGY]  parent!=  null  &&  NodeUtil.isStatementBlock(parent))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parent!=  null  &&  NodeUtil.isStatementBlock(parent))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  NodeUtil.isStatementBlock(parent))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild	  parent!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent);    }    	non-compiled	[CE]  not  a  statement	43	None	replace
329	[BUG]  [BUGGY]  NodeUtil.redeclareVarsInsideBranch(n);  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NodeUtil.redeclareVarsInsideBranch(n);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NodeUtil.redeclareVarsInsideBranch(n);	  NodeUtil.removeChild(parent);    	non-compiled	[CE]  not  a  statement	54	None	replace
330	[BUG]  [BUGGY]  NodeUtil.redeclareVarDeclarations(n);  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NodeUtil.redeclareVarDeclarations(n);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NodeUtil.redeclareVarDeclarations(n);	  NodeUtil.removeChild(parent);    	non-compiled	[CE]  not  a  statement	54	None	replace
331	[BUG]  [BUGGY]  NodeUtil.redeclareVarDeclarations(n,  parent);  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NodeUtil.redeclareVarDeclarations(n,  parent);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NodeUtil.redeclareVarDeclarations(n,  parent);	  NodeUtil.removeChild(parent);    	non-compiled	[CE]  not  a  statement	54	None	replace
332	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_NAME,  arguments),  n);  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_NAME,  arguments),  n);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_NAME,  arguments),  n);	  parser.report(JSError.make(t,    n,    NON_GLOBAL_NAMES_NAME,    arguments));    	non-compiled	[CE]  not  a  statement	72	None	replace
333	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNKNOWN,  arguments));  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNKNOWN,  arguments));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNKNOWN,  arguments));	  parser.report(JSError.make(t,    n,    NON_GLOBAL_NAMES_NAME,    arguments));    	non-compiled	[CE]  not  a  statement	72	None	replace
334	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  expectedConst);  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  expectedConst);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NodeTraversal.traverse(compiler,  n,  this,  expectedConst);	  NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  not  a  statement	77	None	replace
335	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.VAR);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.VAR);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(parent.getType()  ==  Token.VAR);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild	  Preconditions.checkState(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild    	non-compiled	[CE]  not  a  statement	51	None	replace
336	[BUG]  [BUGGY]  Pentru(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getParent())  {  break;  }  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Pentru(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getParent())  {  break;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Pentru(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getParent())  {  break;  }	  Pentru(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    break;    }    	non-compiled	[CE]  not  a  statement	88	None	replace
337	[BUG]  [BUGGY]  Node  parent  =  n.removeFirstChild();  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Node  parent  =  n.removeFirstChild();  [BUGGY]        [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Node  parent  =  n.removeFirstChild();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  not  a  statement	7	None	replace
338	[BUG]  [BUGGY]  Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  break;  }  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  break;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  break;  }	  Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    break;    }    	non-compiled	[CE]  not  a  statement	66	None	replace
339	[BUG]  [BUGGY]  Context.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compil  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compil  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(parent!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compil	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compil    	non-compiled	[CE]  not  a  statement	90	None	replace
340	[BUG]  [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  nodeTraversal.traverse(compil  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]        if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }      [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  nodeTraversal.traverse(compil  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  nodeTraversal.traverse(compil	  Context.checkState(arguments!=    null);    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compil    	non-compiled	[CE]  not  a  statement	90	None	replace
