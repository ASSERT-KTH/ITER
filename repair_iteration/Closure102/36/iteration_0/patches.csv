bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    if(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }  [CE]  not  a  statement  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  [BUGGY]    if(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }  [BUGGY]  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	    if(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }		non-compiled	[CE]  not  a  statement	73	None	add
2	[BUG]  [BUGGY]    if(arguments  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }  [CE]  not  a  statement  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  [BUGGY]    if(arguments  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }  [BUGGY]  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	    if(arguments  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }		non-compiled	[CE]  not  a  statement	73	None	add
3	[BUG]  [BUGGY]    if(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  [BUGGY]    if(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	    if(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }		non-compiled	[CE]  not  a  statement	73	None	add
4	[BUG]  [BUGGY]    if(arguments  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  [BUGGY]    if(arguments  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	    if(arguments  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }		non-compiled	[CE]  not  a  statement	73	None	add
5	[BUG]  [BUGGY]    if(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastChild());  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  [BUGGY]    if(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastChild());  }  [BUGGY]  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	    if(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastChild());  }		non-compiled	[CE]  not  a  statement	73	None	add
6	[BUG]  [BUGGY]    if(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  [BUGGY]    if(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [BUGGY]  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	    if(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }		non-compiled	[CE]  not  a  statement	73	None	add
7	[BUG]  [BUGGY]  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [CE]  not  a  statement  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  [BUGGY]  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [BUGGY]    [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }	}  	non-compiled	[CE]  not  a  statement	72	None	replace
8	[BUG]  [BUGGY]  if(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [CE]  not  a  statement  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  [BUGGY]  if(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [BUGGY]    [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	if(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }	}  	non-compiled	[CE]  not  a  statement	72	None	replace
9	[BUG]  [BUGGY]    if(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }  [CE]  not  a  statement  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  [BUGGY]    if(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }  [BUGGY]  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	    if(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }		non-compiled	[CE]  not  a  statement	73	None	add
10	[BUG]  [BUGGY]    if(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [CE]  not  a  statement  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  [BUGGY]    if(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [BUGGY]  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	    if(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }		non-compiled	[CE]  not  a  statement	73	None	add
11	[BUG]  [BUGGY]    parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE));  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  [BUGGY]    parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE));  [BUGGY]  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	    parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE));		non-compiled	[CE]  not  a  statement	73	None	add
12	[BUG]  [BUGGY]  if(arguments  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [CE]  not  a  statement  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  [BUGGY]  if(arguments  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [BUGGY]    [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	if(arguments  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }	}  	non-compiled	[CE]  not  a  statement	72	None	replace
13	[BUG]  [BUGGY]  if(arguments  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }  [CE]  not  a  statement  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  [BUGGY]  if(arguments  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }  [BUGGY]    [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	if(arguments  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }	}  	non-compiled	[CE]  not  a  statement	72	None	replace
14	[BUG]  [BUGGY]  if(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [CE]  not  a  statement  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  [BUGGY]  if(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [BUGGY]    [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	if(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }	}  	non-compiled	[CE]  not  a  statement	72	None	replace
15	[BUG]  [BUGGY]    for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [CE]  class,  interface,  or  enum  expected  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  [BUGGY]    for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [BUGGY]  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	    for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }		non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	add
16	[BUG]  [BUGGY]    for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  [CE]  class,  interface,  or  enum  expected  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  [BUGGY]    for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	    for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);		non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	add
