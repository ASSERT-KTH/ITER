bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  arguments));  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  arguments));  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  arguments));	      parser.report(JSError.make(t,    n,    MAKE_LOCAL_NAMES_UNIQUE));    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
2	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  argument));  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  argument));  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  argument));	      parser.report(JSError.make(t,    n,    MAKE_LOCAL_NAMES_UNIQUE));    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
3	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNIQUE));  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNIQUE));  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNIQUE));	      parser.report(JSError.make(t,    n,    MAKE_LOCAL_NAMES_UNIQUE));    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
4	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE),  arguments);  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE),  arguments);  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE),  arguments);	      parser.report(JSError.make(t,    n,    MAKE_LOCAL_NAMES_UNIQUE));    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
5	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  STRICT_MODULE_NAMES_UNIQUE));  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parser.report(JSError.make(t,  n,  STRICT_MODULE_NAMES_UNIQUE));  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  STRICT_MODULE_NAMES_UNIQUE));	      parser.report(JSError.make(t,    n,    MAKE_LOCAL_NAMES_UNIQUE));    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
6	[BUG]  [BUGGY]  Node  n  =  parent.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  Node  n  =  parent.getFirstChild();  [BUGGY]      [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Node  n  =  parent.getFirstChild();	  if(arguments    ==    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
7	[BUG]  [BUGGY]  Node  parent  =  n.getParent();  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  Node  parent  =  n.getParent();  [BUGGY]      [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Node  parent  =  n.getParent();	  if(arguments    ==    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
8	[BUG]  [BUGGY]  Node  parent  =  n.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  Node  parent  =  n.getFirstChild();  [BUGGY]      [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Node  parent  =  n.getFirstChild();	  if(arguments    ==    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
9	[BUG]  [BUGGY]  parent.replaceChild(n,  arguments);  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parent.replaceChild(n,  arguments);  [BUGGY]      [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent.replaceChild(n,  arguments);	  if(arguments    ==    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
10	[BUG]  [BUGGY]  parent.removeChild(n);  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parent.removeChild(n);  [BUGGY]      [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent.removeChild(n);	  if(arguments    ==    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
11	[BUG]  [BUGGY]  For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }	      for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
12	[BUG]  [BUGGY]  for(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  for(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	for(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }	      for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
13	[BUG]  [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
14	[BUG]  [BUGGY]  Context.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  Context.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
15	[BUG]  [BUGGY]  For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastChild());  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastChild());  }  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastChild());  }	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n,    n.getLastChild());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
16	[BUG]  [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastChil  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastChil  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastChil	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n,    n.getLastChild());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
17	[BUG]  [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastChild  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastChild  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastChild	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n,    n.getLastChild());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
18	[BUG]  [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastChild());  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastChild());  }  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastChild());  }	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n,    n.getLastChild());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
19	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLas  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLas  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLas	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n,    n.getLastChild());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
20	[BUG]  [BUGGY]  For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n.getLastChild());    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
21	[BUG]  [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n.getLastChild());    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
22	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChil  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChil  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChil	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n.getLastChild());    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
23	[BUG]  [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChil  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChil  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChil	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n.getLastChild());    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
24	[BUG]  [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n.getLastChild());    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
25	[BUG]  [BUGGY]  For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
26	[BUG]  [BUGGY]  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
27	[BUG]  [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
28	[BUG]  [BUGGY]  Context.checkState(arguments!=  null);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  Context.checkState(arguments!=  null);  [BUGGY]      [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null);	  if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
29	[BUG]  [BUGGY]  For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	      if(arguments    ==    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
30	[BUG]  [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	      if(arguments    ==    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
31	[BUG]  [BUGGY]  Context.checkState(arguments  ==  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  Context.checkState(arguments  ==  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments  ==  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	      if(arguments    ==    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
32	[BUG]  [BUGGY]  Context.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  Context.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
33	[BUG]  [BUGGY]  For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [BUGGY]      [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }	  for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
34	[BUG]  [BUGGY]  For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [BUGGY]      [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }	  if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  not  a  statement	14	None	replace
35	[BUG]  [BUGGY]  For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }  [BUGGY]      [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  splitVarDeclarations(n);  }	  if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  not  a  statement	14	None	replace
36	[BUG]  [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [BUGGY]      [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }	  if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  not  a  statement	14	None	replace
37	[BUG]  [BUGGY]  Context.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  Context.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [BUGGY]      [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }	  if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  not  a  statement	14	None	replace
38	[BUG]  [BUGGY]  For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	For(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);	      for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  not  a  statement	16	None	replace
39	[BUG]  [BUGGY]  parent!=  null  &&  parent.getFirstChild().getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLas  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parent!=  null  &&  parent.getFirstChild().getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLas  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  parent.getFirstChild().getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLas	      if(arguments    ==    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n.getLastChild());    }    	non-compiled	[CE]  not  a  statement	2	None	replace
40	[BUG]  [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }	      if(arguments    ==    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n.getLastChild());    }    	non-compiled	[CE]  not  a  statement	2	None	replace
41	[BUG]  [BUGGY]  parent!=  null  &&  parent.getFirstChild().getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parent!=  null  &&  parent.getFirstChild().getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  parent.getFirstChild().getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.	      if(arguments    ==    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n.getLastChild());    }    	non-compiled	[CE]  not  a  statement	2	None	replace
42	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastCh  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastCh  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastCh	      if(arguments    ==    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n.getLastChild());    }    	non-compiled	[CE]  not  a  statement	2	None	replace
43	[BUG]  [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent);    }    	non-compiled	[CE]  not  a  statement	9	None	replace
44	[BUG]  [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent);    }    	non-compiled	[CE]  not  a  statement	9	None	replace
45	[BUG]  [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChil  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChil  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChil	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent);    }    	non-compiled	[CE]  not  a  statement	9	None	replace
46	[BUG]  [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.remov  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.remov  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.remov	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent);    }    	non-compiled	[CE]  not  a  statement	9	None	replace
47	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [BUGGY]      [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }	  if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n);    }    	non-compiled	[CE]  not  a  statement	8	None	replace
48	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild  [BUGGY]      [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild	  if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n);    }    	non-compiled	[CE]  not  a  statement	8	None	replace
49	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n  [BUGGY]      [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n	  if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n);    }    	non-compiled	[CE]  not  a  statement	8	None	replace
50	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [BUGGY]      [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }	  if(arguments    ==    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n);    }    	non-compiled	[CE]  not  a  statement	12	None	replace
51	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild  [BUGGY]      [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild	  if(arguments    ==    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n);    }    	non-compiled	[CE]  not  a  statement	12	None	replace
52	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  [BUGGY]      [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);	  if(arguments    ==    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n);    }    	non-compiled	[CE]  not  a  statement	12	None	replace
53	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  arguments);  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  arguments);  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NodeTraversal.traverse(compiler,  n,  arguments);	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent);    }    	non-compiled	[CE]  not  a  statement	9	None	replace
54	[BUG]  [BUGGY]  NodeUtil.removeChild(parent);  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  NodeUtil.removeChild(parent);  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NodeUtil.removeChild(parent);	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent);    }    	non-compiled	[CE]  not  a  statement	9	None	replace
55	[BUG]  [BUGGY]  parent.replaceChild(n,  NodeUtil.newExpr(parent));  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parent.replaceChild(n,  NodeUtil.newExpr(parent));  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent.replaceChild(n,  NodeUtil.newExpr(parent));	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent);    }    	non-compiled	[CE]  not  a  statement	9	None	replace
56	[BUG]  [BUGGY]  for(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  for(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	for(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }	      for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    }    	non-compiled	[CE]  not  a  statement	15	None	replace
57	[BUG]  [BUGGY]  parent  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastChil  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parent  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastChil  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastChil	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n,    n.getLastChild());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
58	[BUG]  [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastCh  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastCh  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastCh	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n,    n.getLastChild());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
59	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastCh  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastCh  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastCh	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n,    n.getLastChild());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
60	[BUG]  [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
61	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
62	[BUG]  [BUGGY]  NeighborUtil.isStatementBlock(parent)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  NeighborUtil.isStatementBlock(parent)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NeighborUtil.isStatementBlock(parent)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
63	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
64	[BUG]  [BUGGY]  for(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  for(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [BUGGY]      [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	for(Node  n  =  parent.getFirstChild();  n  ==  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }	  for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
65	[BUG]  [BUGGY]  for(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  for(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }  [BUGGY]      [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	for(Node  n  =  parent.getLastChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent,  n);  }	  for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
66	[BUG]  [BUGGY]  Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    break;    }    	non-compiled	[CE]  ';'  expected	6	None	replace
67	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null);  [CE]  ';'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  Preconditions.checkState(arguments!=  null);  [BUGGY]      [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null);	  if(arguments    ==    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
68	[BUG]  [BUGGY]  Preconditions.checkState(arguments  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  Preconditions.checkState(arguments  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	      if(arguments    ==    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  ';'  expected	4	None	replace
69	[BUG]  [BUGGY]  parent  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }  [CE]  ';'  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parent  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild());  }	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n.getLastChild());    }    	non-compiled	[CE]  ';'  expected	1	None	replace
70	[BUG]  [BUGGY]  parent  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild  [CE]  ';'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parent  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChild	      if(arguments    ==    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n.getLastChild());    }    	non-compiled	[CE]  ';'  expected	2	None	replace
71	[BUG]  [BUGGY]  parent  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChil  [CE]  ';'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parent  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChil  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n.getLastChil	      if(arguments    ==    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n.getLastChild());    }    	non-compiled	[CE]  ';'  expected	2	None	replace
72	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_NAME,  arguments));  [CE]  ';'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_NAME,  arguments));  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_NAME,  arguments));	      parser.report(JSError.make(t,    n,    MAKE_LOCAL_NAMES_UNIQUE));    	non-compiled	[CE]  ';'  expected	11	None	replace
73	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNKNOWN));  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNKNOWN));  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNKNOWN));	      parser.report(JSError.make(t,    n,    MAKE_LOCAL_NAMES_UNIQUE));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
74	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  type  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [BUGGY]      [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }	  if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
75	[BUG]  [BUGGY]  NeighborUtil.isStatementBlock(parent)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  type  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  NeighborUtil.isStatementBlock(parent)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [BUGGY]      [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NeighborUtil.isStatementBlock(parent)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }	  if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
76	[BUG]  [BUGGY]  NeighborUtil.isStatementBlock(parent))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  type  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  NeighborUtil.isStatementBlock(parent))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [BUGGY]      [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NeighborUtil.isStatementBlock(parent))  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }	  if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
77	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this);  [CE]  illegal  start  of  type  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NodeTraversal.traverse(compiler,  n,  this);	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
78	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [CE]  illegal  start  of  type  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
79	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Preconditions.checkState(arguments!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compiler,  n,  this);  }	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
80	[BUG]  [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }  [CE]  illegal  start  of  type  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }  [BUGGY]      [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild(parent);  }	  if(arguments    ==    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
81	[BUG]  [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild  [CE]  illegal  start  of  type  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild  [BUGGY]      [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeUtil.removeChild	  if(arguments    ==    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
82	[BUG]  [BUGGY]  parent.replaceChild(n,  NodeUtil.newExpr(n));  [CE]  illegal  start  of  type  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parent.replaceChild(n,  NodeUtil.newExpr(n));  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent.replaceChild(n,  NodeUtil.newExpr(n));	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
83	[BUG]  [BUGGY]  parent  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastChild  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parent  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastChild  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent  ==  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n,  n.getLastChild	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n,    n.getLastChild());    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
84	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  illegal  start  of  type  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
85	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
86	[BUG]  [BUGGY]  NodeUtil.removeChild(parent,  n);  [CE]  <identifier>  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  NodeUtil.removeChild(parent,  n);  [BUGGY]      [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NodeUtil.removeChild(parent,  n);	  if(arguments    ==    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeUtil.removeChild(parent,    n);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
87	[BUG]  [BUGGY]  parser.report(JSError.make(t,  n,  INVALID_NAMES_UNIQUE));  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parser.report(JSError.make(t,  n,  INVALID_NAMES_UNIQUE));  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parser.report(JSError.make(t,  n,  INVALID_NAMES_UNIQUE));	      parser.report(JSError.make(t,    n,    MAKE_LOCAL_NAMES_UNIQUE));    	non-compiled	[CE]  <identifier>  expected	11	None	replace
88	[BUG]  [BUGGY]  Pentru(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  Pentru(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Pentru(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  break;  }	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    break;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
89	[BUG]  [BUGGY]  NeighborUtil.isStatementBlock(n)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  NeighborUtil.isStatementBlock(n)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	NeighborUtil.isStatementBlock(n)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  splitVarDeclarations(n);  }	      if(arguments    ==    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
90	[BUG]  [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compil  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compil  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	Context.checkState(arguments!=  null);  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compil	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
91	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compil  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compil  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getNext())  {  NodeTraversal.traverse(compil	      if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getNext())    {    NodeTraversal.traverse(compiler,    n,    this);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
92	[BUG]  [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [CE]  <identifier>  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [BUGGY]      [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }	  if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
93	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [BUGGY]      [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }	  if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
94	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }  [BUGGY]      [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n);  }	  if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
95	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }    [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n  [BUGGY]      [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	271	271	1	replace	parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  for(Node  n  =  parent.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  splitVarDeclarations(n	  if(arguments!=    null)    {    for(Node    n    =    parent.getFirstChild();    n!=    null;    n    =    n.getFirstChild())    {    splitVarDeclarations(n);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
