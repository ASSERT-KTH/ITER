bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Node  beforeParent  =  c.getLastChild();  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();    [BUGGY]  Node  beforeParent  =  c.getLastChild();  [BUGGY]    Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	316	316	1	replace	Node  beforeParent  =  c.getLastChild();	      Node    beforeParent    =    c.getNext();    	non-compiled	[CE]  reached  end  of  file  while  parsing	4	None	replace
2	[BUG]  [BUGGY]  Node  beforeParent  =  c.getPrevious();  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();    [BUGGY]  Node  beforeParent  =  c.getPrevious();  [BUGGY]    Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	316	316	1	replace	Node  beforeParent  =  c.getPrevious();	      Node    beforeParent    =    c.getNext();    	non-compiled	[CE]  reached  end  of  file  while  parsing	4	None	replace
3	[BUG]  [BUGGY]  Node  before  =  n.getLastChild();  [CE]  reached  end  of  file  while  parsing  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();    [BUGGY]  Node  before  =  n.getLastChild();  [BUGGY]    Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	316	316	1	replace	Node  before  =  n.getLastChild();	      Node    before    =    c.getLastChild();    	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	replace
4	[BUG]  [BUGGY]  Node  before  =  next.getLastChild();  [CE]  reached  end  of  file  while  parsing  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();    [BUGGY]  Node  before  =  next.getLastChild();  [BUGGY]    Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	316	316	1	replace	Node  before  =  next.getLastChild();	      Node    before    =    c.getLastChild();    	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	replace
5	[BUG]  [BUGGY]  Node  before  =  next.getNext();  [CE]  reached  end  of  file  while  parsing  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();    [BUGGY]  Node  before  =  next.getNext();  [BUGGY]    Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	316	316	1	replace	Node  before  =  next.getNext();	      Node    before    =    c.getNext();    	non-compiled	[CE]  reached  end  of  file  while  parsing	2	None	replace
6	[BUG]  [BUGGY]  Node  before  =  n.getNext();  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();    [BUGGY]  Node  before  =  n.getNext();  [BUGGY]    Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	316	316	1	replace	Node  before  =  n.getNext();	      Node    before    =    c.getNext();    	non-compiled	[CE]  reached  end  of  file  while  parsing	2	None	replace
7	[BUG]  [BUGGY]  Node  beforeParent  =  n.getNext();  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();    [BUGGY]  Node  beforeParent  =  n.getNext();  [BUGGY]    Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	316	316	1	replace	Node  beforeParent  =  n.getNext();	      Node    beforeParent    =    next.getNext();    	non-compiled	[CE]  reached  end  of  file  while  parsing	6	None	replace
8	[BUG]  [BUGGY]  Node  beforeParent  =  next.getFirstChild();  [CE]  reached  end  of  file  while  parsing  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();    [BUGGY]  Node  beforeParent  =  next.getFirstChild();  [BUGGY]    Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	316	316	1	replace	Node  beforeParent  =  next.getFirstChild();	      Node    beforeParent    =    next.getNext();    	non-compiled	[CE]  reached  end  of  file  while  parsing	6	None	replace
9	[BUG]  [BUGGY]  Node  beforeParent  =  first.getNext();  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();    [BUGGY]  Node  beforeParent  =  first.getNext();  [BUGGY]    Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	316	316	1	replace	Node  beforeParent  =  first.getNext();	      Node    beforeParent    =    next.getNext();    	non-compiled	[CE]  reached  end  of  file  while  parsing	6	None	replace
10	[BUG]  [BUGGY]  Node  insertBefore  =  (after  ==  null)?  before  :  before;  [CE]  reached  end  of  file  while  parsing  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();    [BUGGY]  Node  insertBefore  =  (after  ==  null)?  before  :  before;  [BUGGY]    Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	316	316	1	replace	Node  insertBefore  =  (after  ==  null)?  before  :  before;	  Node    insertBefore    =    (c    ==    null)?    before    :    before;    	non-compiled	[CE]  reached  end  of  file  while  parsing	7	None	replace
11	[BUG]  [BUGGY]  Node  insertBefore  =(c  ==  null)?  before  :  beforeParent;  [CE]  reached  end  of  file  while  parsing  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();    [BUGGY]  Node  insertBefore  =(c  ==  null)?  before  :  beforeParent;  [BUGGY]    Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	316	316	1	replace	Node  insertBefore  =(c  ==  null)?  before  :  beforeParent;	  Node    insertBefore    =    (c    ==    null)?    before    :    before;    	non-compiled	[CE]  reached  end  of  file  while  parsing	7	None	replace
12	[BUG]  [BUGGY]  Node  beforeParent  =  n.getLastChild();  [CE]  reached  end  of  file  while  parsing  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();    [BUGGY]  Node  beforeParent  =  n.getLastChild();  [BUGGY]    Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	316	316	1	replace	Node  beforeParent  =  n.getLastChild();	      Node    beforeParent    =    n.getFirstChild();    	non-compiled	[CE]  reached  end  of  file  while  parsing	12	None	replace
13	[BUG]  [BUGGY]  Node  insertBefore  =  (before  ==  null)?  before  :  beforeParent;  [CE]  reached  end  of  file  while  parsing  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();    [BUGGY]  Node  insertBefore  =  (before  ==  null)?  before  :  beforeParent;  [BUGGY]    Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	316	316	1	replace	Node  insertBefore  =  (before  ==  null)?  before  :  beforeParent;	  Node    insertBefore    =    (before!=    null)?    before    :    before;    	non-compiled	[CE]  reached  end  of  file  while  parsing	11	None	replace
14	[BUG]  [BUGGY]  Node  insertBefore  =  (before  ==  null)?  n  :  beforeParent;  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();    [BUGGY]  Node  insertBefore  =  (before  ==  null)?  n  :  beforeParent;  [BUGGY]    Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	316	316	1	replace	Node  insertBefore  =  (before  ==  null)?  n  :  beforeParent;	  Node    insertBefore    =    (before    ==    null)?    beforeParent    :    before;    	non-compiled	[CE]  reached  end  of  file  while  parsing	9	None	replace
15	[BUG]  [BUGGY]  Node  before  =  next.getFirstChild();  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();    [BUGGY]  Node  before  =  next.getFirstChild();  [BUGGY]    Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	316	316	1	replace	Node  before  =  next.getFirstChild();	      Node    before    =    n.getFirstChild();    	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	replace
16	[BUG]  [BUGGY]  Node  before  =  c.getPreviousChild();  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();    [BUGGY]  Node  before  =  c.getPreviousChild();  [BUGGY]    Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	316	316	1	replace	Node  before  =  c.getPreviousChild();	      Node    before    =    c.getFirstChild();    	non-compiled	[CE]  reached  end  of  file  while  parsing	5	None	replace
17	[BUG]  [BUGGY]  Node  insertBefore  =  (before  ==  null)?  n  :  before;  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();    [BUGGY]  Node  insertBefore  =  (before  ==  null)?  n  :  before;  [BUGGY]    Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	316	316	1	replace	Node  insertBefore  =  (before  ==  null)?  n  :  before;	  Node    insertBefore    =    (before    ==    null)?    beforeParent    :    before;    	non-compiled	[CE]  reached  end  of  file  while  parsing	9	None	replace
18	[BUG]  [BUGGY]  Node  before  =  c.getPrevious();  [CE]  reached  end  of  file  while  parsing  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();    [BUGGY]  Node  before  =  c.getPrevious();  [BUGGY]    Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	316	316	1	replace	Node  before  =  c.getPrevious();	      Node    before    =    c.getNext();    	non-compiled	[CE]  reached  end  of  file  while  parsing	2	None	replace
19	[BUG]  [BUGGY]  Node  beforeParent  =  c.getParent();  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();    [BUGGY]  Node  beforeParent  =  c.getParent();  [BUGGY]    Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	316	316	1	replace	Node  beforeParent  =  c.getParent();	      Node    beforeParent    =    c.getNext();    	non-compiled	[CE]  reached  end  of  file  while  parsing	4	None	replace
20	[BUG]  [BUGGY]  Node  insertBefore  =  (before  ==  null)?  before  :  before,  beforeParent;  [CE]  reached  end  of  file  while  parsing  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();    [BUGGY]  Node  insertBefore  =  (before  ==  null)?  before  :  before,  beforeParent;  [BUGGY]    Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	316	316	1	replace	Node  insertBefore  =  (before  ==  null)?  before  :  before,  beforeParent;	  Node    insertBefore    =    (before    ==    null)?    before    :    before;    	non-compiled	[CE]  reached  end  of  file  while  parsing	8	None	replace
21	[BUG]  [BUGGY]  Node  beforeParent  =  next.getParent();  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();    [BUGGY]  Node  beforeParent  =  next.getParent();  [BUGGY]    Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	316	316	1	replace	Node  beforeParent  =  next.getParent();	      Node    beforeParent    =    next.getNext();    	non-compiled	[CE]  reached  end  of  file  while  parsing	6	None	replace
