bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Node  n  =  parent.getFirstChild();  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  [BUGGY]    Node  n  =  parent.getFirstChild();  [BUGGY]  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	    Node  n  =  parent.getFirstChild();		non-compiled	[CE]  illegal  start  of  expression	71	None	add
2	[BUG]  [BUGGY]    Node  n  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  [BUGGY]    Node  n  =  n.getFirstChild();  [BUGGY]  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	    Node  n  =  n.getFirstChild();		non-compiled	[CE]  illegal  start  of  expression	71	None	add
3	[BUG]  [BUGGY]    Node  n  =  parent.getParent();  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  [BUGGY]    Node  n  =  parent.getParent();  [BUGGY]  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	    Node  n  =  parent.getParent();		non-compiled	[CE]  illegal  start  of  expression	71	None	add
4	[BUG]  [BUGGY]    Node  parent  =  n.getParent();  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  [BUGGY]    Node  parent  =  n.getParent();  [BUGGY]  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	    Node  parent  =  n.getParent();		non-compiled	[CE]  illegal  start  of  expression	71	None	add
5	[BUG]  [BUGGY]    Preconditions.checkState(arguments!=  null);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  [BUGGY]    Preconditions.checkState(arguments!=  null);  [BUGGY]  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	    Preconditions.checkState(arguments!=  null);		non-compiled	[CE]  illegal  start  of  expression	71	None	add
6	[BUG]  [BUGGY]    Context.reportCodeChange();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  [BUGGY]    Context.reportCodeChange();  [BUGGY]  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	    Context.reportCodeChange();		non-compiled	[CE]  illegal  start  of  expression	71	None	add
7	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME)  {  [BUGGY]  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME)  {	if  (n.getType()  ==  Token.FUNCTION)  {  	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
8	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.VAR)  {  [BUGGY]  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.VAR)  {	if  (n.getType()  ==  Token.FUNCTION)  {  	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
9	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild().getType()  ==  Token.FUNCTION)  {	if  (n.getType()  ==  Token.FUNCTION)  {  	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
10	[BUG]  [BUGGY]  if  (n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  [BUGGY]  if  (n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if  (n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild().getType()  ==  Token.NAME)  {	if  (n.getType()  ==  Token.FUNCTION)  {  	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
11	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.GETPROP)  {  [BUGGY]  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.GETPROP)  {	if  (n.getType()  ==  Token.FUNCTION)  {  	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
12	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.SCRIPT)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.SCRIPT)  {  [BUGGY]  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.SCRIPT)  {	if  (n.getType()  ==  Token.FUNCTION)  {  	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
13	[BUG]  [BUGGY]    Node  n  =  parent.getLastChild();  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  [BUGGY]    Node  n  =  parent.getLastChild();  [BUGGY]  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	    Node  n  =  parent.getLastChild();		non-compiled	[CE]  illegal  start  of  expression	71	None	add
14	[BUG]  [BUGGY]    Node  n  =  n.getLastChild();  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  [BUGGY]    Node  n  =  n.getLastChild();  [BUGGY]  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	    Node  n  =  n.getLastChild();		non-compiled	[CE]  illegal  start  of  expression	71	None	add
15	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.LABEL)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.LABEL)  {  [BUGGY]  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.LABEL)  {	if  (n.getType()  ==  Token.FUNCTION)  {  	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
16	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.CALL)  {  [BUGGY]  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.CALL)  {	if  (n.getType()  ==  Token.FUNCTION)  {  	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
17	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.BLOCK)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.BLOCK)  {  [BUGGY]  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.BLOCK)  {	if  (n.getType()  ==  Token.FUNCTION)  {  	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
18	[BUG]  [BUGGY]    n.setType(Token.VAR);  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  [BUGGY]    n.setType(Token.VAR);  [BUGGY]  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	    n.setType(Token.VAR);		non-compiled	[CE]  illegal  start  of  expression	71	None	add
19	[BUG]  [BUGGY]    Context.checkState(arguments!=  null);  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }  [BUGGY]    Context.checkState(arguments!=  null);  [BUGGY]  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	    Context.checkState(arguments!=  null);		non-compiled	[CE]  illegal  start  of  expression	71	None	add
