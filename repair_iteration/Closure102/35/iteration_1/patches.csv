bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  n.setType(Token.VAR,  arguments);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  n.setType(Token.VAR,  arguments);  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	n.setType(Token.VAR,  arguments);	      n.setType(Token.VAR);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
2	[BUG]  [BUGGY]  n.setType(Token.FUNCTION);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  n.setType(Token.FUNCTION);  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	n.setType(Token.FUNCTION);	      n.setType(Token.VAR);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
3	[BUG]  [BUGGY]  n.setType(Token.NAME);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  n.setType(Token.NAME);  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	n.setType(Token.NAME);	      n.setType(Token.VAR);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
4	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.CALL)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.CALL)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
5	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.CALL)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.CALL)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
6	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.CALL)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.CALL)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
7	[BUG]  [BUGGY]  if(n.getType()!=  Token.FUNCTION  &&  n.getType()  ==  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(n.getType()!=  Token.FUNCTION  &&  n.getType()  ==  Token.CALL)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()!=  Token.FUNCTION  &&  n.getType()  ==  Token.CALL)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
8	[BUG]  [BUGGY]  Node  parent  =  n.getLastChild();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Node  parent  =  n.getLastChild();  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Node  parent  =  n.getLastChild();	      Node    parent    =    n.getParent();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
9	[BUG]  [BUGGY]  Node  parent  =  n.getNext();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Node  parent  =  n.getNext();  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Node  parent  =  n.getNext();	      Node    parent    =    n.getParent();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
10	[BUG]  [BUGGY]  Node  parent  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Node  parent  =  n.getFirstChild();  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Node  parent  =  n.getFirstChild();	      Node    parent    =    n.getParent();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
11	[BUG]  [BUGGY]  Node  parent  =  t.getParent();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Node  parent  =  t.getParent();  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Node  parent  =  t.getParent();	      Node    parent    =    n.getParent();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
12	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(n.getType()  ==  Token.FUNCTION  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()  ==  Token.FUNCTION  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
13	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  parent.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  parent.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(parent.getType()  ==  Token.FUNCTION  ||  parent.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
14	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  &&  parent.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(n.getType()  ==  Token.FUNCTION  &&  parent.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()  ==  Token.FUNCTION  &&  parent.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
15	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  n.getLastChild().getType()  ==  Token.FUNCTION)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
16	[BUG]  [BUGGY]  Node  n  =  parent.getNext();  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Node  n  =  parent.getNext();  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Node  n  =  parent.getNext();	      Node    n    =    parent.getParent();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
17	[BUG]  [BUGGY]  Node  n  =  n.getParent();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Node  n  =  n.getParent();  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Node  n  =  n.getParent();	      Node    n    =    parent.getParent();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
18	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.SCRIPT)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.SCRIPT)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.SCRIPT)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.SCRIPT)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
19	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.SCRIPT)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.SCRIPT)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.SCRIPT)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.SCRIPT)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
20	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.SCRIPT)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.SCRIPT)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.SCRIPT)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.SCRIPT)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
21	[BUG]  [BUGGY]  if(n.getType()!=  Token.FUNCTION  &&  n.getType()  ==  Token.SCRIPT)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(n.getType()!=  Token.FUNCTION  &&  n.getType()  ==  Token.SCRIPT)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()!=  Token.FUNCTION  &&  n.getType()  ==  Token.SCRIPT)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.SCRIPT)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
22	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.BLOCK)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.BLOCK)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.BLOCK)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.BLOCK)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
23	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.BLOCK)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.BLOCK)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.BLOCK)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.BLOCK)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
24	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.BLOCK)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.BLOCK)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.BLOCK)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.BLOCK)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
25	[BUG]  [BUGGY]  if(n.getType()!=  Token.FUNCTION  &&  n.getType()  ==  Token.BLOCK)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(n.getType()!=  Token.FUNCTION  &&  n.getType()  ==  Token.BLOCK)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()!=  Token.FUNCTION  &&  n.getType()  ==  Token.BLOCK)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.BLOCK)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
26	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.NAME)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.NAME)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
27	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.NAME)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.NAME)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
28	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.NAME)  {  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.NAME)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.NAME)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
29	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.FUNCTION)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.FUNCTION)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
30	[BUG]  [BUGGY]  Context.checkState(arguments  ==  null);  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Context.checkState(arguments  ==  null);  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Context.checkState(arguments  ==  null);	      Context.checkState(arguments!=    null);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
31	[BUG]  [BUGGY]  Context.checkState(arguments  >=  null);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Context.checkState(arguments  >=  null);  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Context.checkState(arguments  >=  null);	      Context.checkState(arguments!=    null);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
32	[BUG]  [BUGGY]  Context.checkState(arguments!=  null,  arguments.length);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Context.checkState(arguments!=  null,  arguments.length);  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Context.checkState(arguments!=  null,  arguments.length);	      Context.checkState(arguments!=    null);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
33	[BUG]  [BUGGY]  Context.checkState(arguments!=  null,  arguments.length  >  0);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Context.checkState(arguments!=  null,  arguments.length  >  0);  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Context.checkState(arguments!=  null,  arguments.length  >  0);	      Context.checkState(arguments!=    null);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
34	[BUG]  [BUGGY]  Node  n  =  node.getLastChild();  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Node  n  =  node.getLastChild();  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Node  n  =  node.getLastChild();	      Node    n    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
35	[BUG]  [BUGGY]  Node  n  =  t.getFirstChild();  [CE]  orphaned  case  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Node  n  =  t.getFirstChild();  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Node  n  =  t.getFirstChild();	      Node    n    =    parent.getFirstChild();    	non-compiled	[CE]  orphaned  case	1	None	replace
36	[BUG]  [BUGGY]  Node  n  =  t.getLastChild();  [CE]  orphaned  case  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Node  n  =  t.getLastChild();  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Node  n  =  t.getLastChild();	      Node    n    =    parent.getLastChild();    	non-compiled	[CE]  orphaned  case	13	None	replace
37	[BUG]  [BUGGY]  Preconditions.checkState(arguments  ==  null);  [CE]  orphaned  case  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Preconditions.checkState(arguments  ==  null);  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Preconditions.checkState(arguments  ==  null);	      Preconditions.checkState(arguments!=    null);    	non-compiled	[CE]  orphaned  case	5	None	replace
38	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null  &&  arguments.length  >  0);  [CE]  orphaned  case  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Preconditions.checkState(arguments!=  null  &&  arguments.length  >  0);  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Preconditions.checkState(arguments!=  null  &&  arguments.length  >  0);	      Preconditions.checkState(arguments!=    null);    	non-compiled	[CE]  orphaned  case	5	None	replace
39	[BUG]  [BUGGY]  Preconditions.checkArgument(arguments!=  null);  [CE]  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Preconditions.checkArgument(arguments!=  null);  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Preconditions.checkArgument(arguments!=  null);	      Preconditions.checkState(arguments!=    null);    	non-compiled	[CE]  	5	None	replace
40	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  [CE]  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION);	      Preconditions.checkState(arguments!=    null);    	non-compiled	[CE]  	5	None	replace
41	[BUG]  [BUGGY]  if  (n.getType()  ==  Token.FUNCTION  &&  n.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if  (n.getType()  ==  Token.FUNCTION  &&  n.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if  (n.getType()  ==  Token.FUNCTION  &&  n.getFirstChild().getType()  ==  Token.NAME)  {	  if    (n.getType()    ==    Token.FUNCTION    ||    n.getFirstChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	10	None	replace
42	[BUG]  [BUGGY]  if  (parent.getType()  ==  Token.FUNCTION  ||  parent.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if  (parent.getType()  ==  Token.FUNCTION  ||  parent.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if  (parent.getType()  ==  Token.FUNCTION  ||  parent.getFirstChild().getType()  ==  Token.NAME)  {	  if    (n.getType()    ==    Token.FUNCTION    ||    n.getFirstChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	10	None	replace
43	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.LABEL)  {  [CE]  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.LABEL)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.LABEL)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.LABEL)    {    	non-compiled	[CE]  	15	None	replace
44	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.LABEL)  {  [CE]  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.LABEL)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.LABEL)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.LABEL)    {    	non-compiled	[CE]  	15	None	replace
45	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.LABEL)  {  [CE]  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.LABEL)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.LABEL)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.LABEL)    {    	non-compiled	[CE]  	15	None	replace
46	[BUG]  [BUGGY]  if(n.getType()!=  Token.FUNCTION  &&  n.getType()  ==  Token.LABEL)  {  [CE]  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(n.getType()!=  Token.FUNCTION  &&  n.getType()  ==  Token.LABEL)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()!=  Token.FUNCTION  &&  n.getType()  ==  Token.LABEL)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.LABEL)    {    	non-compiled	[CE]  	15	None	replace
47	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.GETPROP)  {  [CE]  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.GETPROP)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.GETPROP)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  	11	None	replace
48	[BUG]  [BUGGY]  if(n.getType()  ==  Token.GETPROP  ||  n.getType()  ==  Token.FUNCTION)  {  [CE]  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(n.getType()  ==  Token.GETPROP  ||  n.getType()  ==  Token.FUNCTION)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()  ==  Token.GETPROP  ||  n.getType()  ==  Token.FUNCTION)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  	11	None	replace
49	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.GETPROP)  {  [CE]  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.GETPROP)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.GETPROP)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  	11	None	replace
50	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.GETPROP)  {  [CE]  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.GETPROP)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.GETPROP)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  	11	None	replace
51	[BUG]  [BUGGY]  Node  n  =  node.getFirstChild();  [CE]  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Node  n  =  node.getFirstChild();  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Node  n  =  node.getFirstChild();	      Node    n    =    n.getFirstChild();    	non-compiled	[CE]  	2	None	replace
52	[BUG]  [BUGGY]  Node  n  =  this.parent.getFirstChild();  [CE]  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Node  n  =  this.parent.getFirstChild();  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Node  n  =  this.parent.getFirstChild();	      Node    n    =    n.getFirstChild();    	non-compiled	[CE]  	2	None	replace
53	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNIQUE,  arguments));  [CE]  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Context.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNIQUE,  arguments));  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Context.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNIQUE,  arguments));	      Context.reportCodeChange();    	non-compiled	[CE]  	6	None	replace
54	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  arguments));  [CE]  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Context.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  arguments));  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Context.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  arguments));	      Context.reportCodeChange();    	non-compiled	[CE]  	6	None	replace
55	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE));  [CE]  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Context.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE));  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Context.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE));	      Context.reportCodeChange();    	non-compiled	[CE]  	6	None	replace
56	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  CONVERT_WHILE_TO_FOR));  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Context.report(JSError.make(t,  n,  CONVERT_WHILE_TO_FOR));  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Context.report(JSError.make(t,  n,  CONVERT_WHILE_TO_FOR));	      Context.reportCodeChange();    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
57	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.VAR)  {  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.VAR)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.VAR)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
58	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.VAR)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.VAR)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
59	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.VAR)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.VAR)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.VAR)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
60	[BUG]  [BUGGY]  if(n.getType()  ==  Token.VAR  ||  n.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(n.getType()  ==  Token.VAR  ||  n.getType()  ==  Token.FUNCTION)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()  ==  Token.VAR  ||  n.getType()  ==  Token.FUNCTION)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
61	[BUG]  [BUGGY]  if  (n.getType()  ==  Token.FUNCTION  ||  n.getLastChild().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if  (n.getType()  ==  Token.FUNCTION  ||  n.getLastChild().getType()  ==  Token.NAME)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if  (n.getType()  ==  Token.FUNCTION  ||  n.getLastChild().getType()  ==  Token.NAME)  {	  if    (n.getType()    ==    Token.FUNCTION    ||    n.getFirstChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
62	[BUG]  [BUGGY]  Node  parent  =  n.getParentNode();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Node  parent  =  n.getParentNode();  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Node  parent  =  n.getParentNode();	      Node    parent    =    n.getParent();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
63	[BUG]  [BUGGY]  Node  n  =  parent.getfirstChild();  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Node  n  =  parent.getfirstChild();  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Node  n  =  parent.getfirstChild();	      Node    n    =    n.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
64	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNIQUE));  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Context.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNIQUE));  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Context.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNIQUE));	      Context.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
65	[BUG]  [BUGGY]  if(n.getType()!=  Token.FUNCTION  ||  n.getType()  ==  Token.SCRIPT)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(n.getType()!=  Token.FUNCTION  ||  n.getType()  ==  Token.SCRIPT)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()!=  Token.FUNCTION  ||  n.getType()  ==  Token.SCRIPT)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.SCRIPT)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
66	[BUG]  [BUGGY]  Node  n  =  node.getParent();  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Node  n  =  node.getParent();  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Node  n  =  node.getParent();	      Node    n    =    parent.getParent();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
67	[BUG]  [BUGGY]  n.setType(Token.VAR  |  Token.NAME);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  n.setType(Token.VAR  |  Token.NAME);  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	n.setType(Token.VAR  |  Token.NAME);	      n.setType(Token.VAR);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
68	[BUG]  [BUGGY]  if(n.getType()!=  Token.FUNCTION  ||  n.getType()  ==  Token.BLOCK)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(n.getType()!=  Token.FUNCTION  ||  n.getType()  ==  Token.BLOCK)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()!=  Token.FUNCTION  ||  n.getType()  ==  Token.BLOCK)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.BLOCK)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
69	[BUG]  [BUGGY]  if(n.getType()!=  Token.FUNCTION  ||  n.getType()  ==  Token.LABEL)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(n.getType()!=  Token.FUNCTION  ||  n.getType()  ==  Token.LABEL)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()!=  Token.FUNCTION  ||  n.getType()  ==  Token.LABEL)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.LABEL)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
70	[BUG]  [BUGGY]  Context.checkState(arguments!=  null,  arguments);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Context.checkState(arguments!=  null,  arguments);  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Context.checkState(arguments!=  null,  arguments);	      Context.checkState(arguments!=    null);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
71	[BUG]  [BUGGY]  Context.checkState(arguments  >>  null);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Context.checkState(arguments  >>  null);  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Context.checkState(arguments  >>  null);	      Context.checkState(arguments!=    null);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
72	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null,  arguments);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Preconditions.checkState(arguments!=  null,  arguments);  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Preconditions.checkState(arguments!=  null,  arguments);	      Preconditions.checkState(arguments!=    null);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
73	[BUG]  [BUGGY]  Preconditions.checkState(argumentations!=  null);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Preconditions.checkState(argumentations!=  null);  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Preconditions.checkState(argumentations!=  null);	      Preconditions.checkState(arguments!=    null);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
74	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild().getType()!=  Token.FUNCTION)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
75	[BUG]  [BUGGY]  Node  n  =  this.parent.getLastChild();  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Node  n  =  this.parent.getLastChild();  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Node  n  =  this.parent.getLastChild();	      Node    n    =    parent.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
76	[BUG]  [BUGGY]  Node  n  =  parent.removeFirstChild();  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Node  n  =  parent.removeFirstChild();  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Node  n  =  parent.removeFirstChild();	      Node    n    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
77	[BUG]  [BUGGY]  Node  n  =  parents.getFirstChild();  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Node  n  =  parents.getFirstChild();  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Node  n  =  parents.getFirstChild();	      Node    n    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
78	[BUG]  [BUGGY]  Node  n  =  parent.replaceChild(n,  Node.newString(Token.NAME));  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Node  n  =  parent.replaceChild(n,  Node.newString(Token.NAME));  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Node  n  =  parent.replaceChild(n,  Node.newString(Token.NAME));	      Node    n    =    parent.getParent();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
79	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null,  arguments.length);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Preconditions.checkState(arguments!=  null,  arguments.length);  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Preconditions.checkState(arguments!=  null,  arguments.length);	      Preconditions.checkState(arguments!=    null);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
80	[BUG]  [BUGGY]  Preconditions.checkState(parent!=  null);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Preconditions.checkState(parent!=  null);  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Preconditions.checkState(parent!=  null);	      Preconditions.checkState(arguments!=    null);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
81	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild().getType()!=  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild().getType()!=  Token.NAME)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild().getType()!=  Token.NAME)  {	  if    (n.getType()    ==    Token.FUNCTION    ||    n.getFirstChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
82	[BUG]  [BUGGY]  if(n.getType()!=  Token.FUNCTION  ||  n.getType()  ==  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(n.getType()!=  Token.FUNCTION  ||  n.getType()  ==  Token.CALL)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()!=  Token.FUNCTION  ||  n.getType()  ==  Token.CALL)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
83	[BUG]  [BUGGY]  Node  parent  =  n.removeFirstChild();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Node  parent  =  n.removeFirstChild();  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Node  parent  =  n.removeFirstChild();	      Node    parent    =    n.getParent();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
84	[BUG]  [BUGGY]  Context.checkState(arguments!=  null  &&  arguments.length  >  0);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  Context.checkState(arguments!=  null  &&  arguments.length  >  0);  [BUGGY]    if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	Context.checkState(arguments!=  null  &&  arguments.length  >  0);	      Context.checkState(arguments!=    null);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
85	[BUG]  [BUGGY]  if(n.getType()!=  Token.FUNCTION  ||  n.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(n.getType()!=  Token.FUNCTION  ||  n.getType()  ==  Token.GETPROP)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()!=  Token.FUNCTION  ||  n.getType()  ==  Token.GETPROP)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
86	[BUG]  [BUGGY]  if(n.getType()!=  Token.FUNCTION  ||  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {  splitVarDeclarations(n);  }    [BUGGY]  if(n.getType()!=  Token.FUNCTION  ||  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	268	268	1	replace	if(n.getType()!=  Token.FUNCTION  ||  n.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(n.getType()    ==    Token.FUNCTION    ||    n.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
