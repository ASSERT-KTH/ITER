bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]      n.removeChild(parent);  n.removeChild(parent);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	add	        n.removeChild(parent);    n.removeChild(parent);	  	compilable	  [FE]  RuntimeException  	4	13	add
2	[BUG]  [BUGGY]      n.removeChild(parent);  n.removeChild(parent);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]      n.removeChild(parent);  n.removeChild(parent);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	        n.removeChild(parent);    n.removeChild(parent);	  	compilable	  [FE]  RuntimeException  	4	13	add
3	[BUG]  [BUGGY]      n.removeChild(parent);  NodeUtil.removeChild(parent);  [CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]      RuntimeException    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]      n.removeChild(parent);  NodeUtil.removeChild(parent);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	        n.removeChild(parent);    NodeUtil.removeChild(parent);	  	non-compiled	[CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;	4	None	add
4	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]      n.removeChild(parent);  NodeUtil.removeChild(n,  parent);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	add	        n.removeChild(parent);    NodeUtil.removeChild(n,  parent);	  	compilable	  [FE]  RuntimeException  	4	13	add
5	[BUG]  [BUGGY]      n.removeChild(parent);  NodeUtil.removeChild(n,  parent);  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]      n.removeChild(parent);  NodeUtil.removeChild(n,  parent);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	        n.removeChild(parent);    NodeUtil.removeChild(n,  parent);	  	compilable	  [FE]  RuntimeException  	4	13	add
6	[BUG]  [BUGGY]      n.removeChild(parent);  NodeUtil.removeChild(parent,  arguments);  [CE]  cannot  find  symbol  arguments  [FE]          RuntimeException    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]      n.removeChild(parent);  NodeUtil.removeChild(parent,  arguments);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	        n.removeChild(parent);    NodeUtil.removeChild(parent,  arguments);	  	non-compiled	[CE]  cannot  find  symbol  arguments	4	None	add
7	[BUG]  [BUGGY]      n.removeChild(parent);  Node  parent  =  n.getParent();  [CE]  variable  parent  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)  [FE]            RuntimeException    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]      n.removeChild(parent);  Node  parent  =  n.getParent();  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	        n.removeChild(parent);    Node  parent  =  n.getParent();	  	non-compiled	[CE]  variable  parent  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)	4	None	add
8	[BUG]  [BUGGY]  return  arguments!=  null  &&  argument.isEmpty();  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  arguments!=  null  &&  argument.isEmpty();  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  argument.isEmpty();	  return    arguments!=    null    &&    arguments.isEmpty();    	non-compiled	[CE]  cannot  find  symbol  arguments	21	None	replace
9	[BUG]  [BUGGY]  return  arguments  ==  null  &&  arguments.isEmpty();  [CE]  cannot  find  symbol  arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  arguments  ==  null  &&  arguments.isEmpty();  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  ==  null  &&  arguments.isEmpty();	  return    arguments!=    null    &&    arguments.isEmpty();    	non-compiled	[CE]  cannot  find  symbol  arguments	21	None	replace
10	[BUG]  [BUGGY]  return  arguments!=  null  &&  argumentMap.isEmpty();  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  arguments!=  null  &&  argumentMap.isEmpty();  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  argumentMap.isEmpty();	  return    arguments!=    null    &&    arguments.isEmpty();    	non-compiled	[CE]  cannot  find  symbol  arguments	21	None	replace
11	[BUG]  [BUGGY]  return  arguments!=  null  ||  arguments.isEmpty();  [CE]  cannot  find  symbol  arguments  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  arguments!=  null  ||  arguments.isEmpty();  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  ||  arguments.isEmpty();	  return    arguments!=    null    &&    arguments.isEmpty();    	non-compiled	[CE]  cannot  find  symbol  arguments	21	None	replace
12	[BUG]  [BUGGY]  return  arguments  ==  null  &&  arguments.size()  >  0;  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  arguments  ==  null  &&  arguments.size()  >  0;  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  ==  null  &&  arguments.size()  >  0;	  return    arguments!=    null    &&    arguments.size()    >    0;    	non-compiled	[CE]  cannot  find  symbol  arguments	12	None	replace
13	[BUG]  [BUGGY]  Return  arguments!=  null  &&  arguments.size()  >  0;  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  Return  arguments!=  null  &&  arguments.size()  >  0;  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Return  arguments!=  null  &&  arguments.size()  >  0;	  return    arguments!=    null    &&    arguments.size()    >    0;    	non-compiled	[CE]  ';'  expected	12	None	replace
14	[BUG]  [BUGGY]  return  arguments!=  null  ||  arguments.size()  >  0;  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  arguments!=  null  ||  arguments.size()  >  0;  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  ||  arguments.size()  >  0;	  return    arguments!=    null    &&    arguments.size()    >    0;    	non-compiled	[CE]  cannot  find  symbol  arguments	12	None	replace
15	[BUG]  [BUGGY]  return  argumentNames!=  null  &&  arguments.size()  >  0;  [CE]  cannot  find  symbol  argumentNames  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  argumentNames!=  null  &&  arguments.size()  >  0;  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  argumentNames!=  null  &&  arguments.size()  >  0;	  return    arguments!=    null    &&    arguments.size()    >    0;    	non-compiled	[CE]  cannot  find  symbol  argumentNames	12	None	replace
16	[BUG]  [BUGGY]  return  arguments  ==  null  &&  arguments.length  >  0;  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  arguments  ==  null  &&  arguments.length  >  0;  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  ==  null  &&  arguments.length  >  0;	  return    arguments!=    null    &&    arguments.length    >    0;    	non-compiled	[CE]  cannot  find  symbol  arguments	14	None	replace
17	[BUG]  [BUGGY]  return  arguments!=  null  ||  arguments.length  >  0;  [CE]  cannot  find  symbol  arguments  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  arguments!=  null  ||  arguments.length  >  0;  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  ||  arguments.length  >  0;	  return    arguments!=    null    &&    arguments.length    >    0;    	non-compiled	[CE]  cannot  find  symbol  arguments	14	None	replace
18	[BUG]  [BUGGY]  Return  arguments!=  null  &&  arguments.length  >  0;  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  Return  arguments!=  null  &&  arguments.length  >  0;  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Return  arguments!=  null  &&  arguments.length  >  0;	  return    arguments!=    null    &&    arguments.length    >    0;    	non-compiled	[CE]  ';'  expected	14	None	replace
19	[BUG]  [BUGGY]  return  arguments  >=  null  &&  arguments.length  >  0;  [CE]  cannot  find  symbol  arguments  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  arguments  >=  null  &&  arguments.length  >  0;  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  >=  null  &&  arguments.length  >  0;	  return    arguments!=    null    &&    arguments.length    >    0;    	non-compiled	[CE]  cannot  find  symbol  arguments	14	None	replace
20	[BUG]  [BUGGY]  if(arguments!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  arguments  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  if(arguments!=  null)  {  return  false;  }  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null)  {  return  false;  }	  return    false;    	non-compiled	[CE]  cannot  find  symbol  arguments	10	None	replace
21	[BUG]  [BUGGY]  if(arguments  ==  null)  {  return  false;  }  [CE]  cannot  find  symbol  arguments  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  if(arguments  ==  null)  {  return  false;  }  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments  ==  null)  {  return  false;  }	  return    false;    	non-compiled	[CE]  cannot  find  symbol  arguments	10	None	replace
22	[BUG]  [BUGGY]  return!params.isEmpty();  [CE]  cannot  find  symbol  params  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return!params.isEmpty();  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return!params.isEmpty();	  return!arguments.isEmpty();    	non-compiled	[CE]  cannot  find  symbol  params	19	None	replace
23	[BUG]  [BUGGY]  return  n.isEmpty();  [CE]  cannot  find  symbol  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  n.isEmpty();  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  n.isEmpty();	  return!arguments.isEmpty();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
24	[BUG]  [BUGGY]  return!arguments.isEmpty()  &&  n.hasChildren();  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return!arguments.isEmpty()  &&  n.hasChildren();  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return!arguments.isEmpty()  &&  n.hasChildren();	  return!arguments.isEmpty();    	non-compiled	[CE]  cannot  find  symbol  arguments	19	None	replace
25	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  constantMap.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  constantMap.contains(n.getString());  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  constantMap.contains(n.getString());	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	25	None	replace
26	[BUG]  [BUGGY]  Return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains(n.getString());  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  Return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains(n.getString());  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains(n.getString());	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(n.getString());    	non-compiled	[CE]  not  a  statement	25	None	replace
27	[BUG]  [BUGGY]  return(arguments  ==  null  &&  arguments.size()  >  0)||  arguments.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return(arguments  ==  null  &&  arguments.size()  >  0)||  arguments.contains(n.getString());  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments  ==  null  &&  arguments.size()  >  0)||  arguments.contains(n.getString());	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	25	None	replace
28	[BUG]  [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains(n.getString());  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains(n.getString());	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	25	None	replace
29	[BUG]  [BUGGY]  n.removeChild(arguments);  [CE]  cannot  find  symbol  arguments  [FE]    RuntimeException    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  n.removeChild(arguments);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.removeChild(arguments);	      n.removeChild(parent);    	non-compiled	[CE]  cannot  find  symbol  arguments	5	None	replace
30	[BUG]  [BUGGY]  n.removeChild(argument);  [CE]  cannot  find  symbol  argument  [FE]      RuntimeException    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  n.removeChild(argument);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.removeChild(argument);	      n.removeChild(parent);    	non-compiled	[CE]  cannot  find  symbol  argument	5	None	replace
31	[BUG]  [BUGGY]  n.addChildToFront(parent);  [CE]  missing  return  statement  [FE]        RuntimeException    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  n.addChildToFront(parent);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.addChildToFront(parent);	      n.removeChild(parent);    	non-compiled	[CE]  missing  return  statement	5	None	replace
32	[BUG]  [BUGGY]  Preconditions.checkArgument(arguments.length!=  0);  [CE]  cannot  find  symbol  arguments  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  Preconditions.checkArgument(arguments.length!=  0);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkArgument(arguments.length!=  0);	      Preconditions.checkArgument(arguments.length    ==    0);    	non-compiled	[CE]  cannot  find  symbol  arguments	22	None	replace
33	[BUG]  [BUGGY]  Preconditions.checkState(arguments.length  ==  0);  [CE]  cannot  find  symbol  arguments  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  Preconditions.checkState(arguments.length  ==  0);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(arguments.length  ==  0);	      Preconditions.checkArgument(arguments.length    ==    0);    	non-compiled	[CE]  cannot  find  symbol  arguments	22	None	replace
34	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  argumentCount);  [CE]  cannot  find  symbol  argumentCount  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  argumentCount);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  argumentCount);	      NodeTraversal.traverse(compiler,    n,    parent,    arguments);    	non-compiled	[CE]  cannot  find  symbol  argumentCount	18	None	replace
35	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  argumentations);  [CE]  cannot  find  symbol  argumentations  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  argumentations);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  argumentations);	      NodeTraversal.traverse(compiler,    n,    parent,    arguments);    	non-compiled	[CE]  cannot  find  symbol  argumentations	18	None	replace
36	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  argumentStatements);  [CE]  cannot  find  symbol  argumentStatements  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  argumentStatements);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  argumentStatements);	      NodeTraversal.traverse(compiler,    n,    parent,    arguments);    	non-compiled	[CE]  cannot  find  symbol  argumentStatements	18	None	replace
37	[BUG]  [BUGGY]  Preconditions.checkArgument(arguments!=  null);  [CE]  cannot  find  symbol  arguments  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  Preconditions.checkArgument(arguments!=  null);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkArgument(arguments!=  null);	      Preconditions.checkNotNull(arguments);    	non-compiled	[CE]  cannot  find  symbol  arguments	15	None	replace
38	[BUG]  [BUGGY]  return  false;  FunctionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(arguments  [CE]  not  a  statement  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  false;  FunctionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(arguments  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return    false;    FunctionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(arguments	  	non-compiled	[CE]  not  a  statement	9	None	add
39	[BUG]  [BUGGY]  return  false;  function  f()  {  arguments=Array.prototype.slice.call(arguments  [CE]  ';'  expected  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  false;  function  f()  {  arguments=Array.prototype.slice.call(arguments  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return    false;    function  f()  {  arguments=Array.prototype.slice.call(arguments	  	non-compiled	[CE]  ';'  expected	9	None	add
40	[BUG]  [BUGGY]  return  false;  FunctionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(function  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  false;  FunctionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(function  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return    false;    FunctionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(function	  	non-compiled	[CE]  not  a  statement	9	None	add
41	[BUG]  [BUGGY]  return  false;  FunctionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  false;  FunctionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return    false;    FunctionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(	  	non-compiled	[CE]  not  a  statement	9	None	add
42	[BUG]  [BUGGY]  return  false;  NodeTraversal.Traversal.traverse(compiler,  n,  parent);  [CE]  cannot  find  symbol  Traversal  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  false;  NodeTraversal.Traversal.traverse(compiler,  n,  parent);  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return    false;    NodeTraversal.Traversal.traverse(compiler,  n,  parent);	  	non-compiled	[CE]  cannot  find  symbol  Traversal	9	None	add
43	[BUG]  [BUGGY]  return  false;  function()  {  arguments=Array.prototype.slice.call(arguments  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  false;  function()  {  arguments=Array.prototype.slice.call(arguments  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return    false;    function()  {  arguments=Array.prototype.slice.call(arguments	  	non-compiled	[CE]  ';'  expected	9	None	add
44	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  arguments);  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  arguments);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this,  arguments);	      NodeTraversal.traverse(compiler,    n,    parent,    this);    	non-compiled	[CE]  cannot  find  symbol  arguments	17	None	replace
45	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  argument);  [CE]  cannot  find  symbol  argument  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  argument);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this,  argument);	      NodeTraversal.traverse(compiler,    n,    parent,    this);    	non-compiled	[CE]  cannot  find  symbol  argument	17	None	replace
46	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  arguments,  this);  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  arguments,  this);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  arguments,  this);	      NodeTraversal.traverse(compiler,    n,    parent,    this);    	non-compiled	[CE]  cannot  find  symbol  arguments	17	None	replace
47	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  forbidChanges);  [CE]  cannot  find  symbol  forbidChanges  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  forbidChanges);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  forbidChanges);	      NodeTraversal.traverse(compiler,    n,    parent,    this);    	non-compiled	[CE]  cannot  find  symbol  forbidChanges	17	None	replace
48	[BUG]  [BUGGY]  Preconditions.checkState(argumentations  ==  null);  [CE]  cannot  find  symbol  argumentations  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  Preconditions.checkState(argumentations  ==  null);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(argumentations  ==  null);	      Preconditions.checkState(arguments    ==    null);    	non-compiled	[CE]  cannot  find  symbol  argumentations	16	None	replace
49	[BUG]  [BUGGY]  Preconditions.checkState(parameters  ==  null);  [CE]  cannot  find  symbol  parameters  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  Preconditions.checkState(parameters  ==  null);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(parameters  ==  null);	      Preconditions.checkState(arguments    ==    null);    	non-compiled	[CE]  cannot  find  symbol  parameters	16	None	replace
50	[BUG]  [BUGGY]  Preconditions.checkState(n  ==  null);  [CE]  missing  return  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  Preconditions.checkState(n  ==  null);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(n  ==  null);	      Preconditions.checkState(arguments    ==    null);    	non-compiled	[CE]  missing  return  statement	16	None	replace
51	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  argument);  [CE]  cannot  find  symbol  argument  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  argument);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  argument);	      NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  argument	1	None	replace
52	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  argumentMap);  [CE]  cannot  find  symbol  argumentMap  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  argumentMap);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  argumentMap);	      NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  argumentMap	1	None	replace
53	[BUG]  [BUGGY]  return  arguments  ==  null;  [CE]  cannot  find  symbol  arguments  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  arguments  ==  null;  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  ==  null;	  return    arguments!=    null;    	non-compiled	[CE]  cannot  find  symbol  arguments	20	None	replace
54	[BUG]  [BUGGY]  return  arguments!=  null  &&  parent.getType()  ==  Token.VAR;  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  arguments!=  null  &&  parent.getType()  ==  Token.VAR;  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  parent.getType()  ==  Token.VAR;	  return    arguments!=    null;    	non-compiled	[CE]  cannot  find  symbol  arguments	20	None	replace
55	[BUG]  [BUGGY]  parent!=  null)  {  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  parent!=  null)  {  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent!=  null)  {  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }	      if(arguments!=    null)    {    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  not  a  statement	2	None	replace
56	[BUG]  [BUGGY]  parent  ==  null)  {  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  parent  ==  null)  {  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent  ==  null)  {  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }	      if(arguments!=    null)    {    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  not  a  statement	2	None	replace
57	[BUG]  [BUGGY]  parent!=  null  &&  arguments.size()  >  0)  {  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  parent!=  null  &&  arguments.size()  >  0)  {  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent!=  null  &&  arguments.size()  >  0)  {  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }	      if(arguments!=    null)    {    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  not  a  statement	2	None	replace
58	[BUG]  [BUGGY]  AssertionFailedError:  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  AssertionFailedError:  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	AssertionFailedError:  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }	      if(arguments!=    null)    {    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)	2	None	replace
59	[BUG]  [BUGGY]  parent!=  null  &&  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  parent!=  null  &&  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent!=  null  &&  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);	      if(arguments!=    null)    {    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  not  a  statement	2	None	replace
60	[BUG]  [BUGGY]  Preconditions.checkArgument(arguments.length!=  1);  [CE]  cannot  find  symbol  arguments  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  Preconditions.checkArgument(arguments.length!=  1);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkArgument(arguments.length!=  1);	      Preconditions.checkArgument(arguments.length    ==    1);    	non-compiled	[CE]  cannot  find  symbol  arguments	23	None	replace
61	[BUG]  [BUGGY]  Preconditions.checkArgument(arguments.length  ==  1  ||  arguments.length  ==  1);  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  Preconditions.checkArgument(arguments.length  ==  1  ||  arguments.length  ==  1);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkArgument(arguments.length  ==  1  ||  arguments.length  ==  1);	      Preconditions.checkArgument(arguments.length    ==    1);    	non-compiled	[CE]  cannot  find  symbol  arguments	23	None	replace
62	[BUG]  [BUGGY]  Preconditions.checkState(n!=  null);  [CE]  missing  return  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  Preconditions.checkState(n!=  null);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(n!=  null);	      Preconditions.checkState(arguments!=    null);    	non-compiled	[CE]  missing  return  statement	3	None	replace
63	[BUG]  [BUGGY]  Preconditions.checkState(argumentations!=  null);  [CE]  cannot  find  symbol  argumentations  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  Preconditions.checkState(argumentations!=  null);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(argumentations!=  null);	      Preconditions.checkState(arguments!=    null);    	non-compiled	[CE]  cannot  find  symbol  argumentations	3	None	replace
64	[BUG]  [BUGGY]  Preconditions.checkState(parameters!=  null);  [CE]  cannot  find  symbol  parameters  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  Preconditions.checkState(parameters!=  null);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(parameters!=  null);	      Preconditions.checkState(arguments!=    null);    	non-compiled	[CE]  cannot  find  symbol  parameters	3	None	replace
65	[BUG]  [BUGGY]  return  arguments  ==  null  &&  arguments.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  arguments  ==  null  &&  arguments.contains(n.getString());  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  ==  null  &&  arguments.contains(n.getString());	  return    arguments!=    null    &&    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	11	None	replace
66	[BUG]  [BUGGY]  return  n!=  null  &&  arguments.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  n!=  null  &&  arguments.contains(n.getString());  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  n!=  null  &&  arguments.contains(n.getString());	  return    arguments!=    null    &&    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	11	None	replace
67	[BUG]  [BUGGY]  return  arguments!=  null  &&  argumentMap.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  arguments!=  null  &&  argumentMap.contains(n.getString());  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  argumentMap.contains(n.getString());	  return    arguments!=    null    &&    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	11	None	replace
68	[BUG]  [BUGGY]  Return  arguments!=  null  &&  arguments.contains(n.getString());  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  Return  arguments!=  null  &&  arguments.contains(n.getString());  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Return  arguments!=  null  &&  arguments.contains(n.getString());	  return    arguments!=    null    &&    arguments.contains(n.getString());    	non-compiled	[CE]  ';'  expected	11	None	replace
69	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  arguments);  [CE]  cannot  find  symbol  arguments  [FE]    RuntimeException    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  arguments);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  this,  arguments);	      NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  arguments	7	None	replace
70	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  argument);  [CE]  cannot  find  symbol  argument  [FE]      RuntimeException    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  argument);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  this,  argument);	      NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  argument	7	None	replace
71	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  null);  [CE]  missing  return  statement  [FE]        RuntimeException    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  null);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  null);	      NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  missing  return  statement	7	None	replace
72	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]      NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	add	        NodeTraversal.traverse(compiler,    n,    this);    NodeTraversal.traverse(compiler,  n,  this);	  	compilable	  [FE]  RuntimeException  	6	13	add
73	[BUG]  [BUGGY]      NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  this);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]      NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	        NodeTraversal.traverse(compiler,    n,    this);    NodeTraversal.traverse(compiler,  n,  this);	  	compilable	  [FE]  RuntimeException  	6	13	add
74	[BUG]  [BUGGY]      NodeTraversal.traverse(compiler,  n,  this);  Preconditions.checkState(arguments!=  null);  NodeTraversal.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  arguments  [FE]      RuntimeException    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]      NodeTraversal.traverse(compiler,  n,  this);  Preconditions.checkState(arguments!=  null);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	        NodeTraversal.traverse(compiler,    n,    this);    Preconditions.checkState(arguments!=  null);  NodeTraversal.traverse(compiler,  n,  this);	  	non-compiled	[CE]  cannot  find  symbol  arguments	6	None	add
75	[BUG]  [BUGGY]      NodeTraversal.traverse(compiler,  n,  this);  Context.checkState(arguments!=  null);  NodeTraversal.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  arguments  [FE]        RuntimeException    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]      NodeTraversal.traverse(compiler,  n,  this);  Context.checkState(arguments!=  null);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	        NodeTraversal.traverse(compiler,    n,    this);    Context.checkState(arguments!=  null);  NodeTraversal.traverse(compiler,  n,  this);	  	non-compiled	[CE]  cannot  find  symbol  arguments	6	None	add
76	[BUG]  [BUGGY]      NodeTraversal.traverse(compiler,  n,  this);  Context.checkState(arguments  ==  null);  NodeTraversal.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  arguments  [FE]          RuntimeException    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]      NodeTraversal.traverse(compiler,  n,  this);  Context.checkState(arguments  ==  null);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	        NodeTraversal.traverse(compiler,    n,    this);    Context.checkState(arguments  ==  null);  NodeTraversal.traverse(compiler,  n,  this);	  	non-compiled	[CE]  cannot  find  symbol  arguments	6	None	add
77	[BUG]  [BUGGY]      NodeTraversal.traverse(compiler,  n,  this);  Converter.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  Converter  [FE]            RuntimeException    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]      NodeTraversal.traverse(compiler,  n,  this);  Converter.traverse(compiler,  n,  this);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	        NodeTraversal.traverse(compiler,    n,    this);    Converter.traverse(compiler,  n,  this);	  	non-compiled	[CE]  cannot  find  symbol  Converter	6	None	add
78	[BUG]  [BUGGY]  return  arguments  ==  null  &&  arguments.contains(n.getString()));  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  arguments  ==  null  &&  arguments.contains(n.getString()));  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  ==  null  &&  arguments.contains(n.getString()));	  return    arguments!=    null    &&    arguments.contains(n.getString()));    	non-compiled	[CE]  ';'  expected	13	None	replace
79	[BUG]  [BUGGY]  return  arguments!=  null  ||  arguments.contains(n.getString()));  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  arguments!=  null  ||  arguments.contains(n.getString()));  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  ||  arguments.contains(n.getString()));	  return    arguments!=    null    &&    arguments.contains(n.getString()));    	non-compiled	[CE]  ';'  expected	13	None	replace
80	[BUG]  [BUGGY]  return  arguments!=  null  &&  argumentMap.contains(n.getString()));  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  arguments!=  null  &&  argumentMap.contains(n.getString()));  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  argumentMap.contains(n.getString()));	  return    arguments!=    null    &&    arguments.contains(n.getString()));    	non-compiled	[CE]  ';'  expected	13	None	replace
81	[BUG]  [BUGGY]  Preconditions.checkArgument(arguments.length!=  2);  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  Preconditions.checkArgument(arguments.length!=  2);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkArgument(arguments.length!=  2);	      Preconditions.checkArgument(arguments.length    ==    2);    	non-compiled	[CE]  cannot  find  symbol  arguments	24	None	replace
82	[BUG]  [BUGGY]  Preconditions.checkState(arguments.length  ==  2);  [CE]  cannot  find  symbol  arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  Preconditions.checkState(arguments.length  ==  2);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(arguments.length  ==  2);	      Preconditions.checkArgument(arguments.length    ==    2);    	non-compiled	[CE]  cannot  find  symbol  arguments	24	None	replace
83	[BUG]  [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains  [CE]  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   "));    	non-compiled	[CE]  	26	None	replace
84	[BUG]  [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains(  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains(  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains(	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   "));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
85	[BUG]  [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.con  [CE]  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.con  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.con	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   "));    	non-compiled	[CE]  	26	None	replace
86	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains  [CE]  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   "));    	non-compiled	[CE]  	26	None	replace
87	[BUG]  [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   "));    	non-compiled	[CE]  <identifier>  expected	26	None	replace
88	[BUG]  [BUGGY]  for(Node  n  :  arguments.iterator().next())  {  return  false;  }  [CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  for(Node  n  :  arguments.iterator().next())  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	for(Node  n  :  arguments.iterator().next())  {  return  false;  }	      if(arguments!=    null)    {    for(Node    n    :    arguments.iterator().next())    {    return    false;    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)	8	None	replace
89	[BUG]  [BUGGY]  parent!=  null)  {  for(Node  n  :  arguments.iterator().next())  {  return  false;  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  parent!=  null)  {  for(Node  n  :  arguments.iterator().next())  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent!=  null)  {  for(Node  n  :  arguments.iterator().next())  {  return  false;  }	      if(arguments!=    null)    {    for(Node    n    :    arguments.iterator().next())    {    return    false;    }    	non-compiled	[CE]  not  a  statement	8	None	replace
90	[BUG]  [BUGGY]  parent!=  null  &&  arguments.contains(n.getString()))  {  for(Node  n  :  n.getFirstChild().next())  {  return  false;  }  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  parent!=  null  &&  arguments.contains(n.getString()))  {  for(Node  n  :  n.getFirstChild().next())  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent!=  null  &&  arguments.contains(n.getString()))  {  for(Node  n  :  n.getFirstChild().next())  {  return  false;  }	      if(arguments!=    null)    {    for(Node    n    :    arguments.iterator().next())    {    return    false;    }    	non-compiled	[CE]  not  a  statement	8	None	replace
91	[BUG]  [BUGGY]  parent!=  null  &&  arguments.size()  >  0)  {  for(Node  n  :  n.getFirstChild().next())  {  return  false;  }  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  parent!=  null  &&  arguments.size()  >  0)  {  for(Node  n  :  n.getFirstChild().next())  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent!=  null  &&  arguments.size()  >  0)  {  for(Node  n  :  n.getFirstChild().next())  {  return  false;  }	      if(arguments!=    null)    {    for(Node    n    :    arguments.iterator().next())    {    return    false;    }    	non-compiled	[CE]  not  a  statement	8	None	replace
92	[BUG]  [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   "));  [CE]  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   "));  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   "));	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   "));    	non-compiled	[CE]  	28	None	replace
93	[BUG]  [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")  [CE]  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   "));    	non-compiled	[CE]  	28	None	replace
94	[BUG]  [BUGGY]      NodeTraversal.traverse(compiler,  n,  this);  Preconditions.checkState(arguments  ==  null);  NodeTraversal.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  arguments  [FE]    RuntimeException    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]      NodeTraversal.traverse(compiler,  n,  this);  Preconditions.checkState(arguments  ==  null);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	        NodeTraversal.traverse(compiler,    n,    this);    Preconditions.checkState(arguments  ==  null);  NodeTraversal.traverse(compiler,  n,  this);	  	non-compiled	[CE]  cannot  find  symbol  arguments	6	None	add
95	[BUG]  [BUGGY]      NodeTraversal.traverse(compiler,  n,  this);  nodeTraversal.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  nodeTraversal  [FE]      RuntimeException    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]      NodeTraversal.traverse(compiler,  n,  this);  nodeTraversal.traverse(compiler,  n,  this);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	        NodeTraversal.traverse(compiler,    n,    this);    nodeTraversal.traverse(compiler,  n,  this);	  	non-compiled	[CE]  cannot  find  symbol  nodeTraversal	6	None	add
96	[BUG]  [BUGGY]  return  arguments!=  null  &&  argumentCount.isEmpty();  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  arguments!=  null  &&  argumentCount.isEmpty();  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  argumentCount.isEmpty();	  return    arguments!=    null    &&    arguments.isEmpty();    	non-compiled	[CE]  cannot  find  symbol  arguments	21	None	replace
97	[BUG]  [BUGGY]  return  arguments!=  null  &&  parent.getType()  ==  Token.FUNCTION;  [CE]  cannot  find  symbol  arguments  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  arguments!=  null  &&  parent.getType()  ==  Token.FUNCTION;  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  parent.getType()  ==  Token.FUNCTION;	  return    arguments!=    null;    	non-compiled	[CE]  cannot  find  symbol  arguments	20	None	replace
98	[BUG]  [BUGGY]      n.removeChild(parent);  NodeTraversal.traverse(compiler,  n,  parent);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node)  [FE]    RuntimeException    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]      n.removeChild(parent);  NodeTraversal.traverse(compiler,  n,  parent);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	        n.removeChild(parent);    NodeTraversal.traverse(compiler,  n,  parent);	  	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node)	4	None	add
99	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]      n.removeChild(parent);  NodeUtil.removeChild(parent,  n);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	add	        n.removeChild(parent);    NodeUtil.removeChild(parent,  n);	  	compilable	  [FE]  RuntimeException  	4	13	add
100	[BUG]  [BUGGY]      n.removeChild(parent);  NodeUtil.removeChild(parent,  n);  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]      n.removeChild(parent);  NodeUtil.removeChild(parent,  n);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	        n.removeChild(parent);    NodeUtil.removeChild(parent,  n);	  	compilable	  [FE]  RuntimeException  	4	13	add
101	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  FORGIVE_LOCAL_NAMES_UNIQUE);  [CE]  cannot  find  symbol  FORGIVE_LOCAL_NAMES_UNIQUE  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  FORGIVE_LOCAL_NAMES_UNIQUE);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  FORGIVE_LOCAL_NAMES_UNIQUE);	      NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  FORGIVE_LOCAL_NAMES_UNIQUE	1	None	replace
102	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  argumentMap.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  argumentMap.contains(n.getString());  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  argumentMap.contains(n.getString());	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	25	None	replace
103	[BUG]  [BUGGY]  return(arguments!=  null  &&  argumentCount.size()  >  0)||  arguments.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return(arguments!=  null  &&  argumentCount.size()  >  0)||  arguments.contains(n.getString());  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  argumentCount.size()  >  0)||  arguments.contains(n.getString());	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	25	None	replace
104	[BUG]  [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   "));  [CE]  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   "));  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   "));	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   "));    	non-compiled	[CE]  	28	None	replace
105	[BUG]  [BUGGY]  return  argumentNames!=  null  &&  arguments.length  >  0;  [CE]  cannot  find  symbol  argumentNames  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  argumentNames!=  null  &&  arguments.length  >  0;  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  argumentNames!=  null  &&  arguments.length  >  0;	  return    arguments!=    null    &&    arguments.length    >    0;    	non-compiled	[CE]  cannot  find  symbol  argumentNames	14	None	replace
106	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains(  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains(  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains(	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   "));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
107	[BUG]  [BUGGY]  n.replaceChild(n,  parent);  [CE]  missing  return  statement  [FE]    RuntimeException    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  n.replaceChild(n,  parent);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.replaceChild(n,  parent);	      n.removeChild(parent);    	non-compiled	[CE]  missing  return  statement	5	None	replace
108	[BUG]  [BUGGY]  n.addChildToBack(parent);  [CE]  missing  return  statement  [FE]      RuntimeException    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  n.addChildToBack(parent);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.addChildToBack(parent);	      n.removeChild(parent);    	non-compiled	[CE]  missing  return  statement	5	None	replace
109	[BUG]  [BUGGY]  n.replaceChild(n,  new  Node(Token.EMPTY));  [CE]  missing  return  statement  [FE]        RuntimeException    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  n.replaceChild(n,  new  Node(Token.EMPTY));  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.replaceChild(n,  new  Node(Token.EMPTY));	      n.removeChild(parent);    	non-compiled	[CE]  missing  return  statement	5	None	replace
110	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  forbidChanges);  [CE]  cannot  find  symbol  forbidChanges  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  forbidChanges);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this,  forbidChanges);	      NodeTraversal.traverse(compiler,    n,    parent,    this);    	non-compiled	[CE]  cannot  find  symbol  forbidChanges	17	None	replace
111	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  cannot  find  symbol  arguments  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(arguments!=  null);  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }	      if(arguments!=    null)    {    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  cannot  find  symbol  arguments	2	None	replace
112	[BUG]  [BUGGY]  if(arguments!=  null)  {  for(Node  n  :  arguments.iterator().next())  {  doReportNormalizations(t,  n,  parent);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  if(arguments!=  null)  {  for(Node  n  :  arguments.iterator().next())  {  doReportNormalizations(t,  n,  parent);  }  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null)  {  for(Node  n  :  arguments.iterator().next())  {  doReportNormalizations(t,  n,  parent);  }	      if(arguments!=    null)    {    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
113	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this.forbidChanges);  [CE]  cannot  find  symbol  forbidChanges  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this.forbidChanges);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this.forbidChanges);	      NodeTraversal.traverse(compiler,    n,    parent,    arguments);    	non-compiled	[CE]  cannot  find  symbol  forbidChanges	18	None	replace
114	[BUG]  [BUGGY]  return!constantMap.isEmpty();  [CE]  cannot  find  symbol  constantMap  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return!constantMap.isEmpty();  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return!constantMap.isEmpty();	  return!arguments.isEmpty();    	non-compiled	[CE]  cannot  find  symbol  constantMap	19	None	replace
115	[BUG]  [BUGGY]  For(Node  n  :  arguments.iterator().next())  {  return  false;  }  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  For(Node  n  :  arguments.iterator().next())  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	For(Node  n  :  arguments.iterator().next())  {  return  false;  }	      if(arguments!=    null)    {    for(Node    n    :    arguments.iterator().next())    {    return    false;    }    	non-compiled	[CE]  ')'  expected	8	None	replace
116	[BUG]  [BUGGY]  Node  args  =  arguments.iterator().next();  [CE]  cannot  find  symbol  arguments  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  Node  args  =  arguments.iterator().next();  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Node  args  =  arguments.iterator().next();	      if(arguments!=    null)    {    for(Node    n    :    arguments.iterator().next())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  arguments	8	None	replace
117	[BUG]  [BUGGY]  return  arguments!=  null  &&  arguments.contains(n.getLastChild()));  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  arguments!=  null  &&  arguments.contains(n.getLastChild()));  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  arguments.contains(n.getLastChild()));	  return    arguments!=    null    &&    arguments.contains(n.getString()));    	non-compiled	[CE]  ';'  expected	13	None	replace
118	[BUG]  [BUGGY]  Preconditions.checkState(argumentNames!=  null);  [CE]  cannot  find  symbol  argumentNames  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  Preconditions.checkState(argumentNames!=  null);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(argumentNames!=  null);	      Preconditions.checkState(arguments!=    null);    	non-compiled	[CE]  cannot  find  symbol  argumentNames	3	None	replace
119	[BUG]  [BUGGY]  return  false;  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(arguments  [CE]  not  a  statement  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  false;  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(arguments  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return    false;    NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(arguments	  	non-compiled	[CE]  not  a  statement	9	None	add
120	[BUG]  [BUGGY]  return  false;  NodeTraversal.traverse(compiler,  n,  parent);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node)  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  false;  NodeTraversal.traverse(compiler,  n,  parent);  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return    false;    NodeTraversal.traverse(compiler,  n,  parent);	  	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node)	9	None	add
121	[BUG]  [BUGGY]  return  false;  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  false;  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return    false;    NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(	  	non-compiled	[CE]  not  a  statement	9	None	add
122	[BUG]  [BUGGY]  return  false;  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function()  {  arguments=Array.prototype.slice.call(arguments  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  false;  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function()  {  arguments=Array.prototype.slice.call(arguments  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return    false;    NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function()  {  arguments=Array.prototype.slice.call(arguments	  	non-compiled	[CE]  not  a  statement	9	None	add
123	[BUG]  [BUGGY]  return  false;  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  Function  f()  {  arguments=Array.prototype.slice.call(arguments  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  false;  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  Function  f()  {  arguments=Array.prototype.slice.call(arguments  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return    false;    NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  Function  f()  {  arguments=Array.prototype.slice.call(arguments	  	non-compiled	[CE]  not  a  statement	9	None	add
124	[BUG]  [BUGGY]  return  false;  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function  f()  ==  arguments=Array.prototype.slice.call(  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  false;  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function  f()  ==  arguments=Array.prototype.slice.call(  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return    false;    NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function  f()  ==  arguments=Array.prototype.slice.call(	  	non-compiled	[CE]  not  a  statement	9	None	add
125	[BUG]  [BUGGY]  return(arguments!=  null)&&!arguments.isEmpty());  [CE]  ';'  expected  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return(arguments!=  null)&&!arguments.isEmpty());  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null)&&!arguments.isEmpty());	  return    false;    	non-compiled	[CE]  ';'  expected	10	None	replace
126	[BUG]  [BUGGY]  return(arguments!=  null)&&!arguments.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return(arguments!=  null)&&!arguments.contains(n.getString());  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null)&&!arguments.contains(n.getString());	  return    false;    	non-compiled	[CE]  cannot  find  symbol  arguments	10	None	replace
127	[BUG]  [BUGGY]  return(arguments!=  null)&&!arguments.contains(n.getLastChild());  [CE]  cannot  find  symbol  arguments  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return(arguments!=  null)&&!arguments.contains(n.getLastChild());  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null)&&!arguments.contains(n.getLastChild());	  return    false;    	non-compiled	[CE]  cannot  find  symbol  arguments	10	None	replace
128	[BUG]  [BUGGY]  Preconditions.checkArgument(arguments.length  ==  3);  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  Preconditions.checkArgument(arguments.length  ==  3);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkArgument(arguments.length  ==  3);	      Preconditions.checkArgument(arguments.length    ==    2);    	non-compiled	[CE]  cannot  find  symbol  arguments	24	None	replace
129	[BUG]  [BUGGY]  Preconditions.checkNotNull(arguments,  n);  [CE]  cannot  find  symbol  arguments  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  Preconditions.checkNotNull(arguments,  n);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkNotNull(arguments,  n);	      Preconditions.checkNotNull(arguments);    	non-compiled	[CE]  cannot  find  symbol  arguments	15	None	replace
130	[BUG]  [BUGGY]  Preconditions.checkNotNull(parent);  [CE]  missing  return  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  Preconditions.checkNotNull(parent);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkNotNull(parent);	      Preconditions.checkNotNull(arguments);    	non-compiled	[CE]  missing  return  statement	15	None	replace
131	[BUG]  [BUGGY]  Preconditions.checkState(argumentNames  ==  null);  [CE]  cannot  find  symbol  argumentNames  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  Preconditions.checkState(argumentNames  ==  null);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(argumentNames  ==  null);	      Preconditions.checkState(arguments    ==    null);    	non-compiled	[CE]  cannot  find  symbol  argumentNames	16	None	replace
132	[BUG]  [BUGGY]  Preconditions.checkState(argumentCount  ==  null);  [CE]  cannot  find  symbol  argumentCount  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  Preconditions.checkState(argumentCount  ==  null);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(argumentCount  ==  null);	      Preconditions.checkState(arguments    ==    null);    	non-compiled	[CE]  cannot  find  symbol  argumentCount	16	None	replace
133	[BUG]  [BUGGY]  return  arguments!=  null  &&  constantMap.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  arguments!=  null  &&  constantMap.contains(n.getString());  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  constantMap.contains(n.getString());	  return    arguments!=    null    &&    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	11	None	replace
134	[BUG]  [BUGGY]  return  arguments!=  null  &&  arguments.contains(parent.getString());  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  arguments!=  null  &&  arguments.contains(parent.getString());  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  arguments.contains(parent.getString());	  return    arguments!=    null    &&    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	11	None	replace
135	[BUG]  [BUGGY]  return!converter.isEmpty();  [CE]  cannot  find  symbol  converter  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return!converter.isEmpty();  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return!converter.isEmpty();	  return!arguments.isEmpty();    	non-compiled	[CE]  cannot  find  symbol  converter	19	None	replace
136	[BUG]  [BUGGY]  if(arguments!=  null  &&  arguments.size()  >  0)  {  for(Node  n  :  arguments.iterator().next())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  if(arguments!=  null  &&  arguments.size()  >  0)  {  for(Node  n  :  arguments.iterator().next())  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null  &&  arguments.size()  >  0)  {  for(Node  n  :  arguments.iterator().next())  {  return  false;  }	      if(arguments!=    null)    {    for(Node    n    :    arguments.iterator().next())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
137	[BUG]  [BUGGY]  if(arguments!=  null  &&  arguments.contains(n.getString()))  {  for(Node  n  :  arguments.iterator().next())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  if(arguments!=  null  &&  arguments.contains(n.getString()))  {  for(Node  n  :  arguments.iterator().next())  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null  &&  arguments.contains(n.getString()))  {  for(Node  n  :  arguments.iterator().next())  {  return  false;  }	      if(arguments!=    null)    {    for(Node    n    :    arguments.iterator().next())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
138	[BUG]  [BUGGY]  Preconditions.checkState(parent  ==  null);  [CE]  missing  return  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  Preconditions.checkState(parent  ==  null);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(parent  ==  null);	      Preconditions.checkState(arguments    ==    null);    	non-compiled	[CE]  missing  return  statement	16	None	replace
139	[BUG]  [BUGGY]  return  arguments!=  null  &&  n.getType()  ==  Token.VAR;  [CE]  cannot  find  symbol  arguments  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  arguments!=  null  &&  n.getType()  ==  Token.VAR;  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  n.getType()  ==  Token.VAR;	  return    arguments!=    null;    	non-compiled	[CE]  cannot  find  symbol  arguments	20	None	replace
140	[BUG]  [BUGGY]  return  arguments!=  null  &&  parent.hasChildren();  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  arguments!=  null  &&  parent.hasChildren();  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  parent.hasChildren();	  return    arguments!=    null;    	non-compiled	[CE]  cannot  find  symbol  arguments	20	None	replace
141	[BUG]  [BUGGY]  Preconditions.checkNotNull(n);  [CE]  missing  return  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  Preconditions.checkNotNull(n);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkNotNull(n);	      Preconditions.checkNotNull(arguments);    	non-compiled	[CE]  missing  return  statement	15	None	replace
142	[BUG]  [BUGGY]  return  arguments!=  null  &&  arguments.size  >  0;  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  arguments!=  null  &&  arguments.size  >  0;  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  arguments.size  >  0;	  return    arguments!=    null    &&    arguments.length    >    0;    	non-compiled	[CE]  cannot  find  symbol  arguments	14	None	replace
143	[BUG]  [BUGGY]  return  arguments!=  null  &&  argumentCount  >  0;  [CE]  cannot  find  symbol  arguments  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  arguments!=  null  &&  argumentCount  >  0;  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  argumentCount  >  0;	  return    arguments!=    null    &&    arguments.length    >    0;    	non-compiled	[CE]  cannot  find  symbol  arguments	14	None	replace
144	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-n ")||  arguments.contains( "-n ")||  arguments.contains( "-n ")||  arguments.contains( "-n "));  [CE]  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-n ")||  arguments.contains( "-n ")||  arguments.contains( "-n ")||  arguments.contains( "-n "));  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-n ")||  arguments.contains( "-n ")||  arguments.contains( "-n ")||  arguments.contains( "-n "));	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   "));    	non-compiled	[CE]  	28	None	replace
145	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-+ ")||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-- "));  [CE]  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-+ ")||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-- "));  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-+ ")||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-- "));	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   "));    	non-compiled	[CE]  	28	None	replace
146	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-n ")||  arguments.contains( "-n ")||  arguments.contains( "-n ")||  arguments.contains( "-n ")  [CE]  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-n ")||  arguments.contains( "-n ")||  arguments.contains( "-n ")||  arguments.contains( "-n ")  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-n ")||  arguments.contains( "-n ")||  arguments.contains( "-n ")||  arguments.contains( "-n ")	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   "));    	non-compiled	[CE]  	28	None	replace
147	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ")||  arguments.contains( "- ")||  arguments.contains( "- ")||  arguments.contains( "- ")||  arguments.contains( "-  [CE]  unclosed  string  literal  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ")||  arguments.contains( "- ")||  arguments.contains( "- ")||  arguments.contains( "- ")||  arguments.contains( "-  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ")||  arguments.contains( "- ")||  arguments.contains( "- ")||  arguments.contains( "- ")||  arguments.contains( "-	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   "));    	non-compiled	[CE]  unclosed  string  literal	28	None	replace
148	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-n ")||  arguments.contains( "-n ")||  arguments.contains( "-n ")||  arguments.contains( "-n ")||  arguments.  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-n ")||  arguments.contains( "-n ")||  arguments.contains( "-n ")||  arguments.contains( "-n ")||  arguments.  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-n ")||  arguments.contains( "-n ")||  arguments.contains( "-n ")||  arguments.contains( "-n ")||  arguments.	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   "))    	non-compiled	[CE]  <identifier>  expected	27	None	replace
149	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains  [CE]  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   "))    	non-compiled	[CE]  	27	None	replace
150	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ".* ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ".* ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ".* ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   "))    	non-compiled	[CE]  <identifier>  expected	27	None	replace
151	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ")||  arguments.contains( "--> ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains  [CE]  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ")||  arguments.contains( "--> ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ")||  arguments.contains( "--> ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   "))    	non-compiled	[CE]  	27	None	replace
152	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   ")||    arguments.contains(   "-   "))    	non-compiled	[CE]  <identifier>  expected	27	None	replace
153	[BUG]  [BUGGY]  return(arguments!=  null)&&  arguments.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return(arguments!=  null)&&  arguments.contains(n.getString());  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null)&&  arguments.contains(n.getString());	  return    false;    	non-compiled	[CE]  cannot  find  symbol  arguments	10	None	replace
154	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.equals(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.equals(n.getString());  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.equals(n.getString());	  return    false;    	non-compiled	[CE]  cannot  find  symbol  arguments	10	None	replace
155	[BUG]  [BUGGY]  return  arguments!=  null  &&  arguments.contains(n.getString())||  arguments.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  arguments!=  null  &&  arguments.contains(n.getString())||  arguments.contains(n.getString());  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  arguments.contains(n.getString())||  arguments.contains(n.getString());	  return    arguments!=    null    &&    arguments.contains(n.getString()));    	non-compiled	[CE]  cannot  find  symbol  arguments	13	None	replace
156	[BUG]  [BUGGY]  return  arguments!=  null  &&  arguments.contains(n.getFirstChild()));  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  arguments!=  null  &&  arguments.contains(n.getFirstChild()));  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  arguments.contains(n.getFirstChild()));	  return    arguments!=    null    &&    arguments.contains(n.getString()));    	non-compiled	[CE]  ';'  expected	13	None	replace
157	[BUG]  [BUGGY]  return  arguments!=  null  &&  arguments.size()  >  1;  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  arguments!=  null  &&  arguments.size()  >  1;  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  arguments.size()  >  1;	  return    arguments!=    null    &&    arguments.size()    >    0;    	non-compiled	[CE]  cannot  find  symbol  arguments	12	None	replace
158	[BUG]  [BUGGY]      n.removeChild(parent);  NodeUtil.removeChild(parent);  n.removeChild(parent);  [CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]    RuntimeException    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]      n.removeChild(parent);  NodeUtil.removeChild(parent);  n.removeChild(parent);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	        n.removeChild(parent);    NodeUtil.removeChild(parent);  n.removeChild(parent);	  	non-compiled	[CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;	4	None	add
159	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains(n,  parent.getString());  [CE]  cannot  find  symbol  arguments  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains(n,  parent.getString());  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains(n,  parent.getString());	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	25	None	replace
160	[BUG]  [BUGGY]      NodeTraversal.traverse(compiler,  n,  this);  Context.checkNotNull(parent);  NodeTraversal.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  Context  [FE]    RuntimeException    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]      NodeTraversal.traverse(compiler,  n,  this);  Context.checkNotNull(parent);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	        NodeTraversal.traverse(compiler,    n,    this);    Context.checkNotNull(parent);  NodeTraversal.traverse(compiler,  n,  this);	  	non-compiled	[CE]  cannot  find  symbol  Context	6	None	add
161	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  forbidChanges);  [CE]  cannot  find  symbol  forbidChanges  [FE]    RuntimeException    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  forbidChanges);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  this,  forbidChanges);	      NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  forbidChanges	7	None	replace
162	[BUG]  [BUGGY]  Preconditions.checkState(parent!=  null);  [CE]  missing  return  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  Preconditions.checkState(parent!=  null);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(parent!=  null);	      Preconditions.checkState(arguments!=    null);    	non-compiled	[CE]  missing  return  statement	3	None	replace
163	[BUG]  [BUGGY]  Preconditions.checkState(this.forbidChanges!=  null);  [CE]  cannot  find  symbol  forbidChanges  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  Preconditions.checkState(this.forbidChanges!=  null);  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(this.forbidChanges!=  null);	      Preconditions.checkState(arguments!=    null);    	non-compiled	[CE]  cannot  find  symbol  forbidChanges	3	None	replace
164	[BUG]  [BUGGY]  return  arguments!=  null  &&  arguments.length();  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  arguments!=  null  &&  arguments.length();  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  arguments.length();	  return    arguments!=    null    &&    arguments.isEmpty();    	non-compiled	[CE]  cannot  find  symbol  arguments	21	None	replace
165	[BUG]  [BUGGY]  parent!=  null  &&  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  parent!=  null  &&  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent!=  null  &&  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }	      if(arguments!=    null)    {    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  not  a  statement	2	None	replace
166	[BUG]  [BUGGY]  Node  n  =  arguments.iterator().next();  [CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  Node  n  =  arguments.iterator().next();  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Node  n  =  arguments.iterator().next();	      if(arguments!=    null)    {    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)	2	None	replace
167	[BUG]  [BUGGY]  n.replaceChild(n,  new  Node(Token.TRUE));  [CE]  missing  return  statement  [FE]    RuntimeException    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  n.replaceChild(n,  new  Node(Token.TRUE));  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.replaceChild(n,  new  Node(Token.TRUE));	      n.removeChild(parent);    	non-compiled	[CE]  missing  return  statement	5	None	replace
168	[BUG]  [BUGGY]  n.replaceChild(n,  new  Node(Token.STRING,  arguments));  [CE]  cannot  find  symbol  arguments  [FE]      RuntimeException    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  n.replaceChild(n,  new  Node(Token.STRING,  arguments));  [BUGGY]    return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.replaceChild(n,  new  Node(Token.STRING,  arguments));	      n.removeChild(parent);    	non-compiled	[CE]  cannot  find  symbol  arguments	5	None	replace
169	[BUG]  [BUGGY]  return  false;  t.getCompiler().reportCodeChange();  return  true;  [CE]  unreachable  statement  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  false;  t.getCompiler().reportCodeChange();  return  true;  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return    false;    t.getCompiler().reportCodeChange();  return  true;	  	non-compiled	[CE]  unreachable  statement	9	None	add
170	[BUG]  [BUGGY]  return  false;  t.getCompiler().reportCodeChange();  [CE]  unreachable  statement  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  false;  t.getCompiler().reportCodeChange();  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return    false;    t.getCompiler().reportCodeChange();	  	non-compiled	[CE]  unreachable  statement	9	None	add
171	[BUG]  [BUGGY]  return  false;  NodeTraversal.traverse(compiler,  n,  parent);  return  true;  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node)  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  false;  NodeTraversal.traverse(compiler,  n,  parent);  return  true;  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return    false;    NodeTraversal.traverse(compiler,  n,  parent);  return  true;	  	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node)	9	None	add
172	[BUG]  [BUGGY]  return  false;  NodeTraversal.traverse(compiler,  n,  parent);  return  false;  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node)  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  false;  NodeTraversal.traverse(compiler,  n,  parent);  return  false;  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return    false;    NodeTraversal.traverse(compiler,  n,  parent);  return  false;	  	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node)	9	None	add
173	[BUG]  [BUGGY]  return  false;  t.getCompiler().reportCodeChange();  return  false;  [CE]  unreachable  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]    public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);    [BUGGY]  return  false;  t.getCompiler().reportCodeChange();  return  false;  [BUGGY]    }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return    false;    t.getCompiler().reportCodeChange();  return  false;	  	non-compiled	[CE]  unreachable  statement	9	None	add
