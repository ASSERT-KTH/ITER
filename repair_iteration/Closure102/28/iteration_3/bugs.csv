bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  constantMap);  [CE]  cannot  find  symbol  constantMap  [FE]        RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  constantMap);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  this,  constantMap);	  NodeTraversal.traverse(compiler,    n,    this,    forbidChanges);    	non-compiled	[CE]  cannot  find  symbol  constantMap	161	None	replace
2	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  parent);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Normalize,Node)  [FE]          RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  this,  parent);	  NodeTraversal.traverse(compiler,    n,    this,    forbidChanges);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Normalize,Node)	161	None	replace
3	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  checkUserDeclarations);  [CE]  cannot  find  symbol  checkUserDeclarations  [FE]            RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  checkUserDeclarations);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  this,  checkUserDeclarations);	  NodeTraversal.traverse(compiler,    n,    this,    forbidChanges);    	non-compiled	[CE]  cannot  find  symbol  checkUserDeclarations	161	None	replace
4	[BUG]  [BUGGY]  n.replaceChild(n,  new  Node(Token.EMPTY,  true));  [CE]  no  suitable  constructor  found  for  Node(int,boolean)  [FE]            RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.replaceChild(n,  new  Node(Token.EMPTY,  true));  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.replaceChild(n,  new  Node(Token.EMPTY,  true));	  n.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,boolean)	109	None	replace
5	[BUG]  [BUGGY]  n.replaceChild(n,  new  Node(Token.EMPTY),  true);  [CE]  method  replaceChild  in  class  Node  cannot  be  applied  to  given  types;  [FE]              RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.replaceChild(n,  new  Node(Token.EMPTY),  true);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.replaceChild(n,  new  Node(Token.EMPTY),  true);	  n.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  method  replaceChild  in  class  Node  cannot  be  applied  to  given  types;	109	None	replace
6	[BUG]  [BUGGY]  n.replaceChild(parent,  new  Node(Token.EMPTY));  [CE]  missing  return  statement  [FE]                RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.replaceChild(parent,  new  Node(Token.EMPTY));  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.replaceChild(parent,  new  Node(Token.EMPTY));	  n.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  missing  return  statement	109	None	replace
7	[BUG]  [BUGGY]  return  arguments  ==  null  &&  arguments.length();  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments  ==  null  &&  arguments.length();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  ==  null  &&  arguments.length();	  return    arguments!=    null    &&    arguments.length();    	non-compiled	[CE]  cannot  find  symbol  arguments	164	None	replace
8	[BUG]  [BUGGY]  return  arguments!=  null  &&  argument.length();  [CE]  cannot  find  symbol  arguments  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  &&  argument.length();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  argument.length();	  return    arguments!=    null    &&    arguments.length();    	non-compiled	[CE]  cannot  find  symbol  arguments	164	None	replace
9	[BUG]  [BUGGY]  return  argumentNames!=  null  &&  arguments.length();  [CE]  cannot  find  symbol  argumentNames  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  argumentNames!=  null  &&  arguments.length();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  argumentNames!=  null  &&  arguments.length();	  return    arguments!=    null    &&    arguments.length();    	non-compiled	[CE]  cannot  find  symbol  argumentNames	164	None	replace
10	[BUG]  [BUGGY]  Return  arguments!=  null  &&  arguments.length();  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Return  arguments!=  null  &&  arguments.length();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Return  arguments!=  null  &&  arguments.length();	  return    arguments!=    null    &&    arguments.length();    	non-compiled	[CE]  ';'  expected	164	None	replace
11	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(n,  parent);  n.removeChild(parent);  NodeUtil.removeChild(n,  parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	add	                n.removeChild(parent);        NodeUtil.removeChild(n,    parent);    n.removeChild(parent);  NodeUtil.removeChild(n,  parent);	  	compilable	  [FE]  RuntimeException  	4	13	add
12	[BUG]  [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(n,  parent);  n.removeChild(parent);  NodeUtil.removeChild(n,  parent);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(n,  parent);  n.removeChild(parent);  NodeUtil.removeChild(n,  parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	                n.removeChild(parent);        NodeUtil.removeChild(n,    parent);    n.removeChild(parent);  NodeUtil.removeChild(n,  parent);	  	compilable	  [FE]  RuntimeException  	4	13	add
13	[BUG]  [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(n,  parent);  NodeUtil.removeChild(parent);  NodeUtil.removeChild(n,  parent);  [CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]      RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(n,  parent);  NodeUtil.removeChild(parent);  NodeUtil.removeChild(n,  parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	                n.removeChild(parent);        NodeUtil.removeChild(n,    parent);    NodeUtil.removeChild(parent);  NodeUtil.removeChild(n,  parent);	  	non-compiled	[CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;	4	None	add
14	[BUG]  [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(n,  parent);  NodeUtil.removeChild(parent);  NodeUtil.removeChild(parent);  [CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]        RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(n,  parent);  NodeUtil.removeChild(parent);  NodeUtil.removeChild(parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	                n.removeChild(parent);        NodeUtil.removeChild(n,    parent);    NodeUtil.removeChild(parent);  NodeUtil.removeChild(parent);	  	non-compiled	[CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;	4	None	add
15	[BUG]  [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(n,  parent);  NodeUtil.removeChild(parent);  NodeUtil.removeChild(parent,  parent);  [CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]          RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(n,  parent);  NodeUtil.removeChild(parent);  NodeUtil.removeChild(parent,  parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	                n.removeChild(parent);        NodeUtil.removeChild(n,    parent);    NodeUtil.removeChild(parent);  NodeUtil.removeChild(parent,  parent);	  	non-compiled	[CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;	4	None	add
16	[BUG]  [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(n,  parent);  node.removeChild(parent);  NodeUtil.removeChild(n,  parent);  [CE]  cannot  find  symbol  node  [FE]            RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(n,  parent);  node.removeChild(parent);  NodeUtil.removeChild(n,  parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	                n.removeChild(parent);        NodeUtil.removeChild(n,    parent);    node.removeChild(parent);  NodeUtil.removeChild(n,  parent);	  	non-compiled	[CE]  cannot  find  symbol  node	4	None	add
17	[BUG]  [BUGGY]  for(Node  n  :  arguments.iterator().next())  {  return  true;  }  [CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  for(Node  n  :  arguments.iterator().next())  {  return  true;  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	for(Node  n  :  arguments.iterator().next())  {  return  true;  }	  for(Node    n    :    arguments.iterator().next())    {    return    false;    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)	88	None	replace
18	[BUG]  [BUGGY]  for(Node  n  :  arguments.values().next())  {  return  false;  }  [CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  for(Node  n  :  arguments.values().next())  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	for(Node  n  :  arguments.values().next())  {  return  false;  }	  for(Node    n    :    arguments.iterator().next())    {    return    false;    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)	88	None	replace
19	[BUG]  [BUGGY]  For(Node  n  :  arguments.iterator().next())  {  return  true;  }  [CE]  ')'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  For(Node  n  :  arguments.iterator().next())  {  return  true;  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	For(Node  n  :  arguments.iterator().next())  {  return  true;  }	  for(Node    n    :    arguments.iterator().next())    {    return    false;    }    	non-compiled	[CE]  ')'  expected	88	None	replace
20	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.con  [CE]  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.con  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.con	  return(arguments!=    null    ||    arguments.size()    >    0)||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.con    	non-compiled	[CE]  	85	None	replace
21	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.	  return(arguments!=    null    ||    arguments.size()    >    0)||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.con    	non-compiled	[CE]  <identifier>  expected	85	None	replace
22	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||	  return(arguments!=    null    ||    arguments.size()    >    0)||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.con    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
23	[BUG]  [BUGGY]  ||  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  ||  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	||  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
24	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(    	non-compiled	[CE]  not  a  statement	121	None	replace
25	[BUG]  [BUGGY]  function()  {  arguments=Array.prototype.slice.call(  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  function()  {  arguments=Array.prototype.slice.call(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	function()  {  arguments=Array.prototype.slice.call(	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(    	non-compiled	[CE]  ';'  expected	121	None	replace
26	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function()  {  arguments=Array.prototype.slice.call(  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function()  {  arguments=Array.prototype.slice.call(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function()  {  arguments=Array.prototype.slice.call(	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(    	non-compiled	[CE]  not  a  statement	121	None	replace
27	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(    	non-compiled	[CE]  not  a  statement	121	None	replace
28	[BUG]  [BUGGY]  parent  ==  null)  {  for(Node  n  :  arguments.iterator().next())  {  return  false;  }  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  parent  ==  null)  {  for(Node  n  :  arguments.iterator().next())  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent  ==  null)  {  for(Node  n  :  arguments.iterator().next())  {  return  false;  }	  parent!=    null)    {    for(Node    n    :    arguments.iterator().next())    {    return    false;    }    	non-compiled	[CE]  not  a  statement	89	None	replace
29	[BUG]  [BUGGY]  parent!=  null)  {  for(Node  n  :  parent.arguments.iterator().next())  {  return  false;  }  [CE]  not  a  statement  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  parent!=  null)  {  for(Node  n  :  parent.arguments.iterator().next())  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent!=  null)  {  for(Node  n  :  parent.arguments.iterator().next())  {  return  false;  }	  parent!=    null)    {    for(Node    n    :    arguments.iterator().next())    {    return    false;    }    	non-compiled	[CE]  not  a  statement	89	None	replace
30	[BUG]  [BUGGY]  Node  argument  =  arguments.iterator().next();  [CE]  cannot  find  symbol  arguments  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Node  argument  =  arguments.iterator().next();  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Node  argument  =  arguments.iterator().next();	  parent!=    null)    {    for(Node    n    :    arguments.iterator().next())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  arguments	89	None	replace
31	[BUG]  [BUGGY]  Context.checkNotNull(n);  NodeTraversal.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  Context  [FE]        RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Context.checkNotNull(n);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Context.checkNotNull(n);  NodeTraversal.traverse(compiler,  n,  this);	          NodeTraversal.traverse(compiler,    n,    this);    Context.checkNotNull(parent);    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  Context	160	None	replace
32	[BUG]  [BUGGY]  Context.checkNotNull(parent);  NodeTraversal.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  Context  [FE]          RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Context.checkNotNull(parent);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Context.checkNotNull(parent);  NodeTraversal.traverse(compiler,  n,  this);	          NodeTraversal.traverse(compiler,    n,    this);    Context.checkNotNull(parent);    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  Context	160	None	replace
33	[BUG]  [BUGGY]  Context.checkNotNull(converter);  NodeTraversal.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  converter  [FE]            RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Context.checkNotNull(converter);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Context.checkNotNull(converter);  NodeTraversal.traverse(compiler,  n,  this);	          NodeTraversal.traverse(compiler,    n,    this);    Context.checkNotNull(parent);    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  converter	160	None	replace
34	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this);  Context.checkNotNull(converter);  [CE]  cannot  find  symbol  converter  [FE]              RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this);  Context.checkNotNull(converter);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  this);  Context.checkNotNull(converter);	          NodeTraversal.traverse(compiler,    n,    this);    Context.checkNotNull(parent);    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  converter	160	None	replace
35	[BUG]  [BUGGY]  Node  parent!=  null  &&  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Node  parent!=  null  &&  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Node  parent!=  null  &&  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);	  parent!=    null    &&    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    	non-compiled	[CE]  ';'  expected	59	None	replace
36	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  arguments,  t.next())  {  doStatementNormalizations(t,  n,  parent);  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  arguments,  t.next())  {  doStatementNormalizations(t,  n,  parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  arguments,  t.next())  {  doStatementNormalizations(t,  n,  parent);	  parent!=    null    &&    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    	non-compiled	[CE]  ';'  expected	59	None	replace
37	[BUG]  [BUGGY]  parent!=  null  &&  arguments.size()  >  0)  {  doStatementNormalizations(t,  n,  parent);  [CE]  not  a  statement  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  parent!=  null  &&  arguments.size()  >  0)  {  doStatementNormalizations(t,  n,  parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent!=  null  &&  arguments.size()  >  0)  {  doStatementNormalizations(t,  n,  parent);	  parent!=    null    &&    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    	non-compiled	[CE]  not  a  statement	59	None	replace
38	[BUG]  [BUGGY]  if(arguments!=  null)  {  return  false;  }  else  if(n.getType()  ==  Token.NAME)  {  return  true;  }  [CE]  cannot  find  symbol  arguments  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null)  {  return  false;  }  else  if(n.getType()  ==  Token.NAME)  {  return  true;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null)  {  return  false;  }  else  if(n.getType()  ==  Token.NAME)  {  return  true;  }	  return    false;    FunctionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  cannot  find  symbol  arguments	38	None	replace
39	[BUG]  [BUGGY]  return  false;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(arguments  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  false;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(arguments  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  false;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(arguments	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  not  a  statement	119	None	replace
40	[BUG]  [BUGGY]  return  true;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(arguments  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  true;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(arguments  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  true;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(arguments	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  not  a  statement	119	None	replace
41	[BUG]  [BUGGY]  return  arguments!=  null  &&  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(arguments  [CE]  ';'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  &&  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(arguments  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(arguments	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  ';'  expected	119	None	replace
42	[BUG]  [BUGGY]  &&  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(arguments  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  &&  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(arguments  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	&&  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(arguments	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
43	[BUG]  [BUGGY]  return  true;  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(arguments  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  true;  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(arguments  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  true;  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(arguments	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  not  a  statement	119	None	replace
44	[BUG]  [BUGGY]  |(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains(  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  |(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	|(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains(	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
45	[BUG]  [BUGGY]  ||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains(  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  ||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains(	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
46	[BUG]  [BUGGY]  |(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  |(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	|(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
47	[BUG]  [BUGGY]  ||  arguments.size()  ==  0  ||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains(  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  ||  arguments.size()  ==  0  ||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	||  arguments.size()  ==  0  ||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains(	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
48	[BUG]  [BUGGY]  if(arguments!=  null)  {  return  false;  t.getCompiler().reportCodeChange();  }  [CE]  cannot  find  symbol  arguments  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null)  {  return  false;  t.getCompiler().reportCodeChange();  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null)  {  return  false;  t.getCompiler().reportCodeChange();  }	  return    false;    t.getCompiler().reportCodeChange();    	non-compiled	[CE]  cannot  find  symbol  arguments	170	None	replace
49	[BUG]  [BUGGY]  return  true;  t.getCompiler().reportCodeChange();  [CE]  unreachable  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  true;  t.getCompiler().reportCodeChange();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  true;  t.getCompiler().reportCodeChange();	  return    false;    t.getCompiler().reportCodeChange();    	non-compiled	[CE]  unreachable  statement	170	None	replace
50	[BUG]  [BUGGY]  n.getCompiler().reportCodeChange();  [CE]  cannot  find  symbol  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.getCompiler().reportCodeChange();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.getCompiler().reportCodeChange();	  return    false;    t.getCompiler().reportCodeChange();    	non-compiled	[CE]  cannot  find  symbol	170	None	replace
51	[BUG]  [BUGGY]  if(arguments  ==  null)  {  return  false;  t.getCompiler().reportCodeChange();  }  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments  ==  null)  {  return  false;  t.getCompiler().reportCodeChange();  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments  ==  null)  {  return  false;  t.getCompiler().reportCodeChange();  }	  return    false;    t.getCompiler().reportCodeChange();    	non-compiled	[CE]  cannot  find  symbol  arguments	170	None	replace
52	[BUG]  [BUGGY]  return!compiler.isEmpty();  [CE]  cannot  find  symbol  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return!compiler.isEmpty();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return!compiler.isEmpty();	  return!converter.isEmpty();    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
53	[BUG]  [BUGGY]  return  arguments  ==  null  &&  constantMap.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments  ==  null  &&  constantMap.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  ==  null  &&  constantMap.contains(n.getString());	  return    arguments!=    null    &&    constantMap.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	133	None	replace
54	[BUG]  [BUGGY]  return  n!=  null  &&  constantMap.contains(n.getString());  [CE]  cannot  find  symbol  constantMap  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  n!=  null  &&  constantMap.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  n!=  null  &&  constantMap.contains(n.getString());	  return    arguments!=    null    &&    constantMap.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  constantMap	133	None	replace
55	[BUG]  [BUGGY]  return  constantMap!=  null  &&  constantMap.contains(n.getString());  [CE]  cannot  find  symbol  constantMap  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  constantMap!=  null  &&  constantMap.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  constantMap!=  null  &&  constantMap.contains(n.getString());	  return    arguments!=    null    &&    constantMap.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  constantMap	133	None	replace
56	[BUG]  [BUGGY]  return  argumentNames!=  null  &&  constantMap.contains(n.getString());  [CE]  cannot  find  symbol  argumentNames  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  argumentNames!=  null  &&  constantMap.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  argumentNames!=  null  &&  constantMap.contains(n.getString());	  return    arguments!=    null    &&    constantMap.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  argumentNames	133	None	replace
57	[BUG]  [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-+   ")||  arguments.contains( "--   ")||  arguments.contains( "--   ")||  arguments.contains( "--   "));  [CE]  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-+   ")||  arguments.contains( "--   ")||  arguments.contains( "--   ")||  arguments.contains( "--   "));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-+   ")||  arguments.contains( "--   ")||  arguments.contains( "--   ")||  arguments.contains( "--   "));	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-+   ")||    arguments.contains(   "--   ")||    arguments.contains(   "--   ")||    arguments.contains(   "--   "));    	non-compiled	[CE]  	145	None	replace
58	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-+ ")||  arguments.contains( "--   ",  arguments.contains( "--   ")||  arguments.contains( "--   "));  [CE]  cannot  find  symbol  arguments  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-+ ")||  arguments.contains( "--   ",  arguments.contains( "--   ")||  arguments.contains( "--   "));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-+ ")||  arguments.contains( "--   ",  arguments.contains( "--   ")||  arguments.contains( "--   "));	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-+   ")||    arguments.contains(   "--   ")||    arguments.contains(   "--   ")||    arguments.contains(   "--   "));    	non-compiled	[CE]  cannot  find  symbol  arguments	145	None	replace
59	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-+ ")||  arguments.contains( "--   ")||  arguments.contains( "--   ")||  arguments.contains( "--   ")  [CE]  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-+ ")||  arguments.contains( "--   ")||  arguments.contains( "--   ")||  arguments.contains( "--   ")  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-+ ")||  arguments.contains( "--   ")||  arguments.contains( "--   ")||  arguments.contains( "--   ")	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-+   ")||    arguments.contains(   "--   ")||    arguments.contains(   "--   ")||    arguments.contains(   "--   "));    	non-compiled	[CE]  	145	None	replace
60	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  constantMap);  [CE]  cannot  find  symbol  constantMap  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  constantMap);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this,  constantMap);	  NodeTraversal.traverse(compiler,    n,    parent,    this,    argument);    	non-compiled	[CE]  cannot  find  symbol  constantMap	45	None	replace
61	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  argumentCount,  this);  [CE]  cannot  find  symbol  argumentCount  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  argumentCount,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  argumentCount,  this);	  NodeTraversal.traverse(compiler,    n,    parent,    arguments,    this);    	non-compiled	[CE]  cannot  find  symbol  argumentCount	46	None	replace
62	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  argumentMap,  this);  [CE]  cannot  find  symbol  argumentMap  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  argumentMap,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  argumentMap,  this);	  NodeTraversal.traverse(compiler,    n,    parent,    arguments,    this);    	non-compiled	[CE]  cannot  find  symbol  argumentMap	46	None	replace
63	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  argumentations,  this);  [CE]  cannot  find  symbol  argumentations  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  argumentations,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  argumentations,  this);	  NodeTraversal.traverse(compiler,    n,    parent,    arguments,    this);    	non-compiled	[CE]  cannot  find  symbol  argumentations	46	None	replace
64	[BUG]  [BUGGY]  Preconditions.checkState(argumentCount  ==  0);  [CE]  cannot  find  symbol  argumentCount  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(argumentCount  ==  0);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(argumentCount  ==  0);	  Preconditions.checkState(argumentCount    ==    null);    	non-compiled	[CE]  cannot  find  symbol  argumentCount	132	None	replace
65	[BUG]  [BUGGY]  Preconditions.checkState(argumentCount!=  null);  [CE]  cannot  find  symbol  argumentCount  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(argumentCount!=  null);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(argumentCount!=  null);	  Preconditions.checkState(argumentCount    ==    null);    	non-compiled	[CE]  cannot  find  symbol  argumentCount	132	None	replace
66	[BUG]  [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "--   ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "--   ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "--   ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "--   ")||    arguments.contains(   "--   ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.    	non-compiled	[CE]  <identifier>  expected	152	None	replace
67	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.contains  [CE]  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.contains  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.contains	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "--   ")||    arguments.contains(   "--   ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.    	non-compiled	[CE]  	152	None	replace
68	[BUG]  [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "--   ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains  [CE]  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "--   ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "--   ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "--   ")||    arguments.contains(   "--   ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.    	non-compiled	[CE]  	152	None	replace
69	[BUG]  [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "--   ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.con  [CE]  [FE]                              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "--   ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.con  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "--   ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.con	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "--   ")||    arguments.contains(   "--   ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.    	non-compiled	[CE]  	152	None	replace
70	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "--   ")||    arguments.contains(   "--   ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.    	non-compiled	[CE]  <identifier>  expected	152	None	replace
71	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this.arguments);  [CE]  cannot  find  symbol  arguments  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this.arguments);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this.arguments);	  NodeTraversal.traverse(compiler,    n,    parent,    argumentCount);    	non-compiled	[CE]  cannot  find  symbol  arguments	34	None	replace
72	[BUG]  [BUGGY]  |(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains(  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  |(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	|(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains(	  return(arguments!=    null    ||    arguments.size()    >    0)||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
73	[BUG]  [BUGGY]  return(arguments!=  null)&&!arguments.contains(n,  parent.getString());  [CE]  cannot  find  symbol  arguments  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null)&&!arguments.contains(n,  parent.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null)&&!arguments.contains(n,  parent.getString());	  return(arguments!=    null)&&!arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	126	None	replace
74	[BUG]  [BUGGY]  return(n!=  null)&&!arguments.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(n!=  null)&&!arguments.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(n!=  null)&&!arguments.contains(n.getString());	  return(arguments!=    null)&&!arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	126	None	replace
75	[BUG]  [BUGGY]  return(arguments!=  null)&&!arguments.contains(n.getString(),  parent);  [CE]  cannot  find  symbol  arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null)&&!arguments.contains(n.getString(),  parent);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null)&&!arguments.contains(n.getString(),  parent);	  return(arguments!=    null)&&!arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	126	None	replace
76	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  n!=  null  &&  n.getType()  ==  Token.VAR;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	add	return  n!=  null  &&  n.getType()  ==  Token.VAR;	  return    arguments!=    null    &&    n.getType()    ==    Token.VAR;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  	139	1	replace
77	[BUG]  [BUGGY]  return  n!=  null  &&  n.getType()  ==  Token.VAR;  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  n!=  null  &&  n.getType()  ==  Token.VAR;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  n!=  null  &&  n.getType()  ==  Token.VAR;	  return    arguments!=    null    &&    n.getType()    ==    Token.VAR;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  	139	1	replace
78	[BUG]  [BUGGY]  return  arguments  ==  null  &&  n.getType()  ==  Token.VAR;  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments  ==  null  &&  n.getType()  ==  Token.VAR;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  ==  null  &&  n.getType()  ==  Token.VAR;	  return    arguments!=    null    &&    n.getType()    ==    Token.VAR;    	non-compiled	[CE]  cannot  find  symbol  arguments	139	None	replace
79	[BUG]  [BUGGY]  return  argumentNames!=  null  &&  n.getType()  ==  Token.VAR;  [CE]  cannot  find  symbol  argumentNames  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  argumentNames!=  null  &&  n.getType()  ==  Token.VAR;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  argumentNames!=  null  &&  n.getType()  ==  Token.VAR;	  return    arguments!=    null    &&    n.getType()    ==    Token.VAR;    	non-compiled	[CE]  cannot  find  symbol  argumentNames	139	None	replace
80	[BUG]  [BUGGY]  Preconditions.checkArgument(arguments.length  >=  0);  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkArgument(arguments.length  >=  0);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkArgument(arguments.length  >=  0);	  Preconditions.checkArgument(arguments.length!=    0);    	non-compiled	[CE]  cannot  find  symbol  arguments	32	None	replace
81	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  MAKE_LOCAL_NAMES_UNIQUE);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,boolean)  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  MAKE_LOCAL_NAMES_UNIQUE);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  MAKE_LOCAL_NAMES_UNIQUE);	  NodeTraversal.traverse(compiler,    n,    parent,    FORGIVE_LOCAL_NAMES_UNIQUE);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,boolean)	101	None	replace
82	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  READ_LOCAL_NAMES_UNIQUE);  [CE]  cannot  find  symbol  READ_LOCAL_NAMES_UNIQUE  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  READ_LOCAL_NAMES_UNIQUE);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  READ_LOCAL_NAMES_UNIQUE);	  NodeTraversal.traverse(compiler,    n,    parent,    FORGIVE_LOCAL_NAMES_UNIQUE);    	non-compiled	[CE]  cannot  find  symbol  READ_LOCAL_NAMES_UNIQUE	101	None	replace
83	[BUG]  [BUGGY]  Preconditions.checkState(arguments.length  ==  1);  [CE]  cannot  find  symbol  arguments  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(arguments.length  ==  1);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(arguments.length  ==  1);	  Preconditions.checkState(arguments.length    ==    2);    	non-compiled	[CE]  cannot  find  symbol  arguments	82	None	replace
84	[BUG]  [BUGGY]  Preconditions.checkState(arguments.length!=  2);  [CE]  cannot  find  symbol  arguments  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(arguments.length!=  2);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(arguments.length!=  2);	  Preconditions.checkState(arguments.length    ==    2);    	non-compiled	[CE]  cannot  find  symbol  arguments	82	None	replace
85	[BUG]  [BUGGY]  Preconditions.checkState(arguments.length  ==  3);  [CE]  cannot  find  symbol  arguments  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(arguments.length  ==  3);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(arguments.length  ==  3);	  Preconditions.checkState(arguments.length    ==    2);    	non-compiled	[CE]  cannot  find  symbol  arguments	82	None	replace
86	[BUG]  [BUGGY]  if(arguments!=  null)  {  return  false;  }  else  if(f()  ==  FunctionFailedError.class)  {  arguments=Array.prototype.slice.call(function  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null)  {  return  false;  }  else  if(f()  ==  FunctionFailedError.class)  {  arguments=Array.prototype.slice.call(function  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null)  {  return  false;  }  else  if(f()  ==  FunctionFailedError.class)  {  arguments=Array.prototype.slice.call(function	  return    false;    FunctionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(function    	non-compiled	[CE]  ')'  expected	40	None	replace
87	[BUG]  [BUGGY]  if(arguments!=  null)  {  return  false;  }  else  if(f()  ==  FunctionFailedError.class)  {  arguments=Array.prototype.call(function  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null)  {  return  false;  }  else  if(f()  ==  FunctionFailedError.class)  {  arguments=Array.prototype.call(function  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null)  {  return  false;  }  else  if(f()  ==  FunctionFailedError.class)  {  arguments=Array.prototype.call(function	  return    false;    FunctionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(function    	non-compiled	[CE]  ')'  expected	40	None	replace
88	[BUG]  [BUGGY]  Preconditions.checkArgument(arguments.length  >=  2);  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkArgument(arguments.length  >=  2);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkArgument(arguments.length  >=  2);	  Preconditions.checkArgument(arguments.length!=    2);    	non-compiled	[CE]  cannot  find  symbol  arguments	81	None	replace
89	[BUG]  [BUGGY]  Preconditions.checkArgument(arguments.length  >>  2);  [CE]  cannot  find  symbol  arguments  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkArgument(arguments.length  >>  2);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkArgument(arguments.length  >>  2);	  Preconditions.checkArgument(arguments.length!=    2);    	non-compiled	[CE]  cannot  find  symbol  arguments	81	None	replace
90	[BUG]  [BUGGY]  n.replaceChild(n,  new  Node(Token.TRUE,  true));  [CE]  no  suitable  constructor  found  for  Node(int,boolean)  [FE]        RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.replaceChild(n,  new  Node(Token.TRUE,  true));  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.replaceChild(n,  new  Node(Token.TRUE,  true));	  n.replaceChild(n,    new    Node(Token.TRUE));    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,boolean)	167	None	replace
91	[BUG]  [BUGGY]  n.replaceChild(n,  new  Node(Token.TRUE,  this));  [CE]  no  suitable  constructor  found  for  Node(int,Normalize)  [FE]          RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.replaceChild(n,  new  Node(Token.TRUE,  this));  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.replaceChild(n,  new  Node(Token.TRUE,  this));	  n.replaceChild(n,    new    Node(Token.TRUE));    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,Normalize)	167	None	replace
92	[BUG]  [BUGGY]  n.replaceChild(n,  new  Node(Token.TRUE,  1));  [CE]  no  suitable  constructor  found  for  Node(int,int)  [FE]            RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.replaceChild(n,  new  Node(Token.TRUE,  1));  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.replaceChild(n,  new  Node(Token.TRUE,  1));	  n.replaceChild(n,    new    Node(Token.TRUE));    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,int)	167	None	replace
93	[BUG]  [BUGGY]  nodeTraversal.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  nodeTraversal  [FE]          RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  nodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	nodeTraversal.traverse(compiler,  n,  this);	          NodeTraversal.traverse(compiler,    n,    this);    nodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  nodeTraversal	95	None	replace
94	[BUG]  [BUGGY]  Traversal.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  Traversal  [FE]            RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Traversal.traverse(compiler,  n,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Traversal.traverse(compiler,  n,  this);	          NodeTraversal.traverse(compiler,    n,    this);    nodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  Traversal	95	None	replace
95	[BUG]  [BUGGY]  Traverse.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  Traverse  [FE]              RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Traverse.traverse(compiler,  n,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Traverse.traverse(compiler,  n,  this);	          NodeTraversal.traverse(compiler,    n,    this);    nodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  Traverse	95	None	replace
96	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  arguments);  return  false;  [CE]  cannot  find  symbol  arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  arguments);  return  false;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  arguments);  return  false;	  return    false;    NodeTraversal.traverse(compiler,    n,    parent);    return    false;    	non-compiled	[CE]  cannot  find  symbol  arguments	172	None	replace
97	[BUG]  [BUGGY]  if(arguments!=  null)  {  return  false;  NodeTraversal.traverse(compiler,  n,  parent);  return  false;  }  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null)  {  return  false;  NodeTraversal.traverse(compiler,  n,  parent);  return  false;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null)  {  return  false;  NodeTraversal.traverse(compiler,  n,  parent);  return  false;  }	  return    false;    NodeTraversal.traverse(compiler,    n,    parent);    return    false;    	non-compiled	[CE]  cannot  find  symbol  arguments	172	None	replace
98	[BUG]  [BUGGY]  Preconditions.checkState(arguments  >=  null);  [CE]  cannot  find  symbol  arguments  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(arguments  >=  null);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(arguments  >=  null);	  Preconditions.checkState(argumentations!=    null);    	non-compiled	[CE]  cannot  find  symbol  arguments	63	None	replace
99	[BUG]  [BUGGY]  NodeUtil.removeChild(parent,  n);  [CE]  missing  return  statement  [FE]          RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeUtil.removeChild(parent,  n);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeUtil.removeChild(parent,  n);	          n.removeChild(parent);    NodeUtil.removeChild(parent);    	non-compiled	[CE]  missing  return  statement	3	None	replace
100	[BUG]  [BUGGY]  NodeUtil.removeChild(parent);  [CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]            RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeUtil.removeChild(parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeUtil.removeChild(parent);	          n.removeChild(parent);    NodeUtil.removeChild(parent);    	non-compiled	[CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;	3	None	replace
101	[BUG]  [BUGGY]  node.removeChild(parent);  NodeUtil.removeChild(parent,  n);  [CE]  cannot  find  symbol  node  [FE]              RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  node.removeChild(parent);  NodeUtil.removeChild(parent,  n);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	node.removeChild(parent);  NodeUtil.removeChild(parent,  n);	          n.removeChild(parent);    NodeUtil.removeChild(parent);    	non-compiled	[CE]  cannot  find  symbol  node	3	None	replace
102	[BUG]  [BUGGY]  node.removeChild(n);  NodeUtil.removeChild(parent,  n);  [CE]  cannot  find  symbol  node  [FE]                RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  node.removeChild(n);  NodeUtil.removeChild(parent,  n);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	node.removeChild(n);  NodeUtil.removeChild(parent,  n);	          n.removeChild(parent);    NodeUtil.removeChild(parent);    	non-compiled	[CE]  cannot  find  symbol  node	3	None	replace
103	[BUG]  [BUGGY]  NodeUtil.removeChild(n,  parent);  [CE]  missing  return  statement  [FE]                  RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeUtil.removeChild(n,  parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeUtil.removeChild(n,  parent);	          n.removeChild(parent);    NodeUtil.removeChild(parent);    	non-compiled	[CE]  missing  return  statement	3	None	replace
104	[BUG]  [BUGGY]  return(arguments!=  null  &&  argumentMap.size()  >  0)||  arguments.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  argumentMap.size()  >  0)||  arguments.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  argumentMap.size()  >  0)||  arguments.contains(n.getString());	  return(arguments!=    null    &&    arguments.size()    >    0)||    argumentMap.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	102	None	replace
105	[BUG]  [BUGGY]  return(arguments!=  null  &&  argumentMap.size()  >  0)||  argumentMap.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  argumentMap.size()  >  0)||  argumentMap.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  argumentMap.size()  >  0)||  argumentMap.contains(n.getString());	  return(arguments!=    null    &&    arguments.size()    >    0)||    argumentMap.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	102	None	replace
106	[BUG]  [BUGGY]  AssertionFailedError:  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent,  arguments);  }  [CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  AssertionFailedError:  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent,  arguments);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	AssertionFailedError:  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent,  arguments);  }	  AssertionFailedError:    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)	58	None	replace
107	[BUG]  [BUGGY]  AssertionFailedError:  for(Node  n  :  constantMap.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  AssertionFailedError:  for(Node  n  :  constantMap.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	AssertionFailedError:  for(Node  n  :  constantMap.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }	  AssertionFailedError:    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)	58	None	replace
108	[BUG]  [BUGGY]  AssertionFailedError:  for(Node  n  :  arguments.values().next())  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  AssertionFailedError:  for(Node  n  :  arguments.values().next())  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	AssertionFailedError:  for(Node  n  :  arguments.values().next())  {  doStatementNormalizations(t,  n,  parent);  }	  AssertionFailedError:    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)	58	None	replace
109	[BUG]  [BUGGY]  AssertionFailedError:  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent,  argument);  }  [CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  AssertionFailedError:  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent,  argument);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	AssertionFailedError:  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent,  argument);  }	  AssertionFailedError:    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)	58	None	replace
110	[BUG]  [BUGGY]  Preconditions.checkArgument(arguments.length  >=  1);  [CE]  cannot  find  symbol  arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkArgument(arguments.length  >=  1);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkArgument(arguments.length  >=  1);	  Preconditions.checkArgument(arguments.length!=    1);    	non-compiled	[CE]  cannot  find  symbol  arguments	60	None	replace
111	[BUG]  [BUGGY]  Preconditions.checkArgument(arguments.length  >>  1);  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkArgument(arguments.length  >>  1);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkArgument(arguments.length  >>  1);	  Preconditions.checkArgument(arguments.length!=    1);    	non-compiled	[CE]  cannot  find  symbol  arguments	60	None	replace
112	[BUG]  [BUGGY]  Preconditions.checkArgument(arguments.length  >  1);  [CE]  cannot  find  symbol  arguments  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkArgument(arguments.length  >  1);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkArgument(arguments.length  >  1);	  Preconditions.checkArgument(arguments.length!=    1);    	non-compiled	[CE]  cannot  find  symbol  arguments	60	None	replace
113	[BUG]  [BUGGY]  return  arguments  ==  null  &&  argument.isEmpty();  [CE]  cannot  find  symbol  arguments  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments  ==  null  &&  argument.isEmpty();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  ==  null  &&  argument.isEmpty();	  return    arguments    ==    null    &&    arguments.isEmpty();    	non-compiled	[CE]  cannot  find  symbol  arguments	9	None	replace
114	[BUG]  [BUGGY]  return  arguments  ==  null  ||  arguments.isEmpty();  [CE]  cannot  find  symbol  arguments  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments  ==  null  ||  arguments.isEmpty();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  ==  null  ||  arguments.isEmpty();	  return    arguments    ==    null    &&    arguments.isEmpty();    	non-compiled	[CE]  cannot  find  symbol  arguments	9	None	replace
115	[BUG]  [BUGGY]  return  arguments  ==  null  &&  parent.isEmpty();  [CE]  cannot  find  symbol  arguments  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments  ==  null  &&  parent.isEmpty();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  ==  null  &&  parent.isEmpty();	  return    arguments    ==    null    &&    arguments.isEmpty();    	non-compiled	[CE]  cannot  find  symbol  arguments	9	None	replace
116	[BUG]  [BUGGY]  return  true;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function()  {  arguments=Array.prototype.slice.call(arguments  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  true;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function()  {  arguments=Array.prototype.slice.call(arguments  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  true;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function()  {  arguments=Array.prototype.slice.call(arguments	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    function()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  not  a  statement	122	None	replace
117	[BUG]  [BUGGY]  return  false;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function()  {  arguments=Array.prototype.slice.call(arguments  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  false;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function()  {  arguments=Array.prototype.slice.call(arguments  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  false;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function()  {  arguments=Array.prototype.slice.call(arguments	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    function()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  not  a  statement	122	None	replace
118	[BUG]  [BUGGY]  return  true;  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function()  {  arguments=Array.prototype.slice.call(arguments  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  true;  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function()  {  arguments=Array.prototype.slice.call(arguments  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  true;  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function()  {  arguments=Array.prototype.slice.call(arguments	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    function()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  not  a  statement	122	None	replace
119	[BUG]  [BUGGY]  &&  junit.framework.AssertionFailedError:  Expected:  function()  {  arguments=Array.prototype.slice.call(arguments  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  &&  junit.framework.AssertionFailedError:  Expected:  function()  {  arguments=Array.prototype.slice.call(arguments  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	&&  junit.framework.AssertionFailedError:  Expected:  function()  {  arguments=Array.prototype.slice.call(arguments	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    function()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
120	[BUG]  [BUGGY]  NodeUtil.removeChild(parent,  n);  n.removeChild(parent);  [CE]  missing  return  statement  [FE]        RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeUtil.removeChild(parent,  n);  n.removeChild(parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeUtil.removeChild(parent,  n);  n.removeChild(parent);	          n.removeChild(parent);    NodeUtil.removeChild(parent);    n.removeChild(parent);    	non-compiled	[CE]  missing  return  statement	158	None	replace
121	[BUG]  [BUGGY]  NodeUtil.removeChild(n,  parent);  n.removeChild(parent);  [CE]  missing  return  statement  [FE]          RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeUtil.removeChild(n,  parent);  n.removeChild(parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeUtil.removeChild(n,  parent);  n.removeChild(parent);	          n.removeChild(parent);    NodeUtil.removeChild(parent);    n.removeChild(parent);    	non-compiled	[CE]  missing  return  statement	158	None	replace
122	[BUG]  [BUGGY]  n.removeChild(n);  n.removeChild(parent);  [CE]  missing  return  statement  [FE]    RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.removeChild(n);  n.removeChild(parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.removeChild(n);  n.removeChild(parent);	          n.removeChild(parent);    n.removeChild(parent);    	non-compiled	[CE]  missing  return  statement	2	None	replace
123	[BUG]  [BUGGY]  return  arguments  ==  null  ||  arguments.length  >  0;  [CE]  cannot  find  symbol  arguments  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments  ==  null  ||  arguments.length  >  0;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  ==  null  ||  arguments.length  >  0;	  return    arguments!=    null    ||    arguments.length    >    0;    	non-compiled	[CE]  cannot  find  symbol  arguments	17	None	replace
124	[BUG]  [BUGGY]  return  arguments  >=  null  ||  arguments.length  >  0;  [CE]  cannot  find  symbol  arguments  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments  >=  null  ||  arguments.length  >  0;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  >=  null  ||  arguments.length  >  0;	  return    arguments!=    null    ||    arguments.length    >    0;    	non-compiled	[CE]  cannot  find  symbol  arguments	17	None	replace
125	[BUG]  [BUGGY]  return  n!=  null  &&  arguments.contains(n.getString())||  arguments.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  n!=  null  &&  arguments.contains(n.getString())||  arguments.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  n!=  null  &&  arguments.contains(n.getString())||  arguments.contains(n.getString());	  return    arguments!=    null    &&    arguments.contains(n.getString())||    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	155	None	replace
126	[BUG]  [BUGGY]  return  arguments  ==  null  &&  arguments.contains(n.getString())||  arguments.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments  ==  null  &&  arguments.contains(n.getString())||  arguments.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  ==  null  &&  arguments.contains(n.getString())||  arguments.contains(n.getString());	  return    arguments!=    null    &&    arguments.contains(n.getString())||    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	155	None	replace
127	[BUG]  [BUGGY]  return  arguments!=  null  &&  argumentMap.contains(n.getString())||  arguments.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  &&  argumentMap.contains(n.getString())||  arguments.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  argumentMap.contains(n.getString())||  arguments.contains(n.getString());	  return    arguments!=    null    &&    arguments.contains(n.getString())||    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	155	None	replace
128	[BUG]  [BUGGY]  return  arguments!=  null  &&  parent.contains(n.getString())||  arguments.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  &&  parent.contains(n.getString())||  arguments.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  parent.contains(n.getString())||  arguments.contains(n.getString());	  return    arguments!=    null    &&    arguments.contains(n.getString())||    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	155	None	replace
129	[BUG]  [BUGGY]  return  arguments  ==  null  ||  arguments.size()  >  0;  [CE]  cannot  find  symbol  arguments  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments  ==  null  ||  arguments.size()  >  0;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  ==  null  ||  arguments.size()  >  0;	  return    arguments!=    null    ||    arguments.size()    >    0;    	non-compiled	[CE]  cannot  find  symbol  arguments	14	None	replace
130	[BUG]  [BUGGY]  Return  arguments!=  null  ||  arguments.size()  >  0;  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Return  arguments!=  null  ||  arguments.size()  >  0;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Return  arguments!=  null  ||  arguments.size()  >  0;	  return    arguments!=    null    ||    arguments.size()    >    0;    	non-compiled	[CE]  ';'  expected	14	None	replace
131	[BUG]  [BUGGY]  Preconditions.checkArgument(arguments  ==  null);  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkArgument(arguments  ==  null);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkArgument(arguments  ==  null);	  Preconditions.checkArgument(arguments!=    null);    	non-compiled	[CE]  cannot  find  symbol  arguments	37	None	replace
132	[BUG]  [BUGGY]  Preconditions.checkArgument(arguments  >=  null);  [CE]  cannot  find  symbol  arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkArgument(arguments  >=  null);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkArgument(arguments  >=  null);	  Preconditions.checkArgument(arguments!=    null);    	non-compiled	[CE]  cannot  find  symbol  arguments	37	None	replace
133	[BUG]  [BUGGY]  Preconditions.checkArgument(arguments  >>  null);  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkArgument(arguments  >>  null);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkArgument(arguments  >>  null);	  Preconditions.checkArgument(arguments!=    null);    	non-compiled	[CE]  cannot  find  symbol  arguments	37	None	replace
134	[BUG]  [BUGGY]  Node  args  =  constantMap.iterator().next();  [CE]  cannot  find  symbol  constantMap  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Node  args  =  constantMap.iterator().next();  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Node  args  =  constantMap.iterator().next();	  Node    args    =    arguments.iterator().next();    	non-compiled	[CE]  cannot  find  symbol  constantMap	116	None	replace
135	[BUG]  [BUGGY]  Node  arguments  =  n.iterator().next();  [CE]  cannot  find  symbol  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Node  arguments  =  n.iterator().next();  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Node  arguments  =  n.iterator().next();	  Node    args    =    arguments.iterator().next();    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
136	[BUG]  [BUGGY]  Node  args  =  arguments.next();  [CE]  cannot  find  symbol  arguments  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Node  args  =  arguments.next();  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Node  args  =  arguments.next();	  Node    args    =    arguments.iterator().next();    	non-compiled	[CE]  cannot  find  symbol  arguments	116	None	replace
137	[BUG]  [BUGGY]  ||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  ||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
138	[BUG]  [BUGGY]  return(n!=  null)&&!arguments.contains(n.getLastChild());  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(n!=  null)&&!arguments.contains(n.getLastChild());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(n!=  null)&&!arguments.contains(n.getLastChild());	  return(arguments!=    null)&&!arguments.contains(n.getLastChild());    	non-compiled	[CE]  cannot  find  symbol  arguments	127	None	replace
139	[BUG]  [BUGGY]  return(arguments!=  null)&&!arguments.contains(n.getFirstChild());  [CE]  cannot  find  symbol  arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null)&&!arguments.contains(n.getFirstChild());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null)&&!arguments.contains(n.getFirstChild());	  return(arguments!=    null)&&!arguments.contains(n.getLastChild());    	non-compiled	[CE]  cannot  find  symbol  arguments	127	None	replace
140	[BUG]  [BUGGY]  return(arguments!=  null)&&!arguments.contains(n.getLastChild(),  parent);  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null)&&!arguments.contains(n.getLastChild(),  parent);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null)&&!arguments.contains(n.getLastChild(),  parent);	  return(arguments!=    null)&&!arguments.contains(n.getLastChild());    	non-compiled	[CE]  cannot  find  symbol  arguments	127	None	replace
141	[BUG]  [BUGGY]  Preconditions.checkNotNull(arguments,  parent);  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkNotNull(arguments,  parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkNotNull(arguments,  parent);	  Preconditions.checkNotNull(arguments,    n);    	non-compiled	[CE]  cannot  find  symbol  arguments	129	None	replace
142	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null,  n);  [CE]  cannot  find  symbol  arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(arguments!=  null,  n);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(arguments!=  null,  n);	  Preconditions.checkNotNull(arguments,    n);    	non-compiled	[CE]  cannot  find  symbol  arguments	129	None	replace
143	[BUG]  [BUGGY]  Preconditions.checkState(arguments  ==  null,  n);  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(arguments  ==  null,  n);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(arguments  ==  null,  n);	  Preconditions.checkNotNull(arguments,    n);    	non-compiled	[CE]  cannot  find  symbol  arguments	129	None	replace
144	[BUG]  [BUGGY]  n.addChildToBack(this);  [CE]  method  addChildToBack  in  class  Node  cannot  be  applied  to  given  types;  [FE]          RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.addChildToBack(this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.addChildToBack(this);	  n.addChildToBack(parent);    	non-compiled	[CE]  method  addChildToBack  in  class  Node  cannot  be  applied  to  given  types;	108	None	replace
145	[BUG]  [BUGGY]  n.addChildToBack(constantMap);  [CE]  cannot  find  symbol  constantMap  [FE]            RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.addChildToBack(constantMap);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.addChildToBack(constantMap);	  n.addChildToBack(parent);    	non-compiled	[CE]  cannot  find  symbol  constantMap	108	None	replace
146	[BUG]  [BUGGY]  n.addChildToBack(converter);  [CE]  cannot  find  symbol  converter  [FE]              RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.addChildToBack(converter);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.addChildToBack(converter);	  n.addChildToBack(parent);    	non-compiled	[CE]  cannot  find  symbol  converter	108	None	replace
147	[BUG]  [BUGGY]  parent  ==  null)  {  for(Node  n  :  argumentMap.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  parent  ==  null)  {  for(Node  n  :  argumentMap.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent  ==  null)  {  for(Node  n  :  argumentMap.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }	  parent    ==    null)    {    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  not  a  statement	56	None	replace
148	[BUG]  [BUGGY]  Context.checkState(arguments!=  null);  NodeTraversal.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  arguments  [FE]            RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Context.checkState(arguments!=  null);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Context.checkState(arguments!=  null);  NodeTraversal.traverse(compiler,  n,  this);	          NodeTraversal.traverse(compiler,    n,    this);    Context.checkState(arguments!=    null);    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  arguments	75	None	replace
149	[BUG]  [BUGGY]  Context.checkState(n!=  null);  NodeTraversal.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  Context  [FE]              RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Context.checkState(n!=  null);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Context.checkState(n!=  null);  NodeTraversal.traverse(compiler,  n,  this);	          NodeTraversal.traverse(compiler,    n,    this);    Context.checkState(arguments!=    null);    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  Context	75	None	replace
150	[BUG]  [BUGGY]  Context.checkState(parent!=  null);  NodeTraversal.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  Context  [FE]                RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Context.checkState(parent!=  null);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Context.checkState(parent!=  null);  NodeTraversal.traverse(compiler,  n,  this);	          NodeTraversal.traverse(compiler,    n,    this);    Context.checkState(arguments!=    null);    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  Context	75	None	replace
151	[BUG]  [BUGGY]  Context.checkState(n  ==  null);  NodeTraversal.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  Context  [FE]                  RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Context.checkState(n  ==  null);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Context.checkState(n  ==  null);  NodeTraversal.traverse(compiler,  n,  this);	          NodeTraversal.traverse(compiler,    n,    this);    Context.checkState(arguments!=    null);    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  Context	75	None	replace
152	[BUG]  [BUGGY]  return  arguments!=  null  &&  argumentsCount  >  0;  [CE]  cannot  find  symbol  arguments  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  &&  argumentsCount  >  0;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  argumentsCount  >  0;	  return    arguments!=    null    &&    argumentCount    >    0;    	non-compiled	[CE]  cannot  find  symbol  arguments	143	None	replace
153	[BUG]  [BUGGY]  return  arguments  ==  null  &&  argumentCount  >  0;  [CE]  cannot  find  symbol  arguments  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments  ==  null  &&  argumentCount  >  0;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  ==  null  &&  argumentCount  >  0;	  return    arguments!=    null    &&    argumentCount    >    0;    	non-compiled	[CE]  cannot  find  symbol  arguments	143	None	replace
154	[BUG]  [BUGGY]  return  argumentCount!=  null  &&  argumentCount  >  0;  [CE]  cannot  find  symbol  argumentCount  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  argumentCount!=  null  &&  argumentCount  >  0;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  argumentCount!=  null  &&  argumentCount  >  0;	  return    arguments!=    null    &&    argumentCount    >    0;    	non-compiled	[CE]  cannot  find  symbol  argumentCount	143	None	replace
155	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  argumentCount);  [CE]  cannot  find  symbol  argumentCount  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  argumentCount);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this,  argumentCount);	  NodeTraversal.traverse(compiler,    n,    parent,    this,    forbidChanges);    	non-compiled	[CE]  cannot  find  symbol  argumentCount	110	None	replace
156	[BUG]  [BUGGY]  return(arguments!=  null  &&  n.size()  >  0)||  arguments.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  n.size()  >  0)||  arguments.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  n.size()  >  0)||  arguments.contains(n.getString());	  return(arguments!=    null    &&    argumentCount.size()    >    0)||    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	103	None	replace
157	[BUG]  [BUGGY]  return(arguments!=  null  &&  parent.size()  >  0)||  arguments.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  parent.size()  >  0)||  arguments.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  parent.size()  >  0)||  arguments.contains(n.getString());	  return(arguments!=    null    &&    argumentCount.size()    >    0)||    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	103	None	replace
158	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  argumentCount.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  argumentCount.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  argumentCount.contains(n.getString());	  return(arguments!=    null    &&    argumentCount.size()    >    0)||    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	103	None	replace
159	[BUG]  [BUGGY]  if(arguments!=  null)  {  return  true;  }  [CE]  cannot  find  symbol  arguments  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null)  {  return  true;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null)  {  return  true;  }	  if(arguments!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  arguments	20	None	replace
160	[BUG]  [BUGGY]  if(arguments!=  null  ||  arguments.length  ==  0)  {  return  false;  }  [CE]  cannot  find  symbol  arguments  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null  ||  arguments.length  ==  0)  {  return  false;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null  ||  arguments.length  ==  0)  {  return  false;  }	  if(arguments!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  arguments	20	None	replace
161	[BUG]  [BUGGY]  if(arguments!=  null)return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null)return  false;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null)return  false;  }	  if(arguments!=    null)    {    return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
162	[BUG]  [BUGGY]  function  f()  ==  arguments=Array.prototype.slice.call(  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  function  f()  ==  arguments=Array.prototype.slice.call(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	function  f()  ==  arguments=Array.prototype.slice.call(	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    function    f()    ==    arguments=Array.prototype.slice.call(    	non-compiled	[CE]  ';'  expected	124	None	replace
163	[BUG]  [BUGGY]  function()  ==  arguments=Array.prototype.slice.call(  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  function()  ==  arguments=Array.prototype.slice.call(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	function()  ==  arguments=Array.prototype.slice.call(	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    function    f()    ==    arguments=Array.prototype.slice.call(    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
164	[BUG]  [BUGGY]  FunctionDeclaration  n  =  n.getFunctionDeclaration();  arguments=Array.prototype.slice.call(  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  FunctionDeclaration  n  =  n.getFunctionDeclaration();  arguments=Array.prototype.slice.call(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	FunctionDeclaration  n  =  n.getFunctionDeclaration();  arguments=Array.prototype.slice.call(	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    function    f()    ==    arguments=Array.prototype.slice.call(    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
165	[BUG]  [BUGGY]  function()  ==  Array.prototype.slice.call(  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  function()  ==  Array.prototype.slice.call(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	function()  ==  Array.prototype.slice.call(	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    function    f()    ==    arguments=Array.prototype.slice.call(    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
166	[BUG]  [BUGGY]  FunctionDeclaration  fn  =  n.getFunctionDeclaration();  arguments=Array.prototype.slice.call(  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  FunctionDeclaration  fn  =  n.getFunctionDeclaration();  arguments=Array.prototype.slice.call(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	FunctionDeclaration  fn  =  n.getFunctionDeclaration();  arguments=Array.prototype.slice.call(	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    function    f()    ==    arguments=Array.prototype.slice.call(    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
167	[BUG]  [BUGGY]  return(arguments!=  null)&&!arguments.isEmpty();  [CE]  cannot  find  symbol  arguments  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null)&&!arguments.isEmpty();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null)&&!arguments.isEmpty();	  return(arguments!=    null)&&!arguments.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  arguments	125	None	replace
168	[BUG]  [BUGGY]  return  arguments!=  null  &&!arguments.isEmpty());  [CE]  ';'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  &&!arguments.isEmpty());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&!arguments.isEmpty());	  return(arguments!=    null)&&!arguments.isEmpty());    	non-compiled	[CE]  ';'  expected	125	None	replace
169	[BUG]  [BUGGY]  return  arguments!=  null  &&!arguments.isEmpty();  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  &&!arguments.isEmpty();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&!arguments.isEmpty();	  return(arguments!=    null)&&!arguments.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  arguments	125	None	replace
170	[BUG]  [BUGGY]  return  arguments!=  null  &&  argumentNames.size()  >  0;  [CE]  cannot  find  symbol  arguments  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  &&  argumentNames.size()  >  0;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  argumentNames.size()  >  0;	  return    argumentNames!=    null    &&    arguments.size()    >    0;    	non-compiled	[CE]  cannot  find  symbol  arguments	15	None	replace
171	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  null,  parent);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,<null>,Node)  [FE]          RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  null,  parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  null,  parent);	  NodeTraversal.traverse(compiler,    n,    this,    argument);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,<null>,Node)	70	None	replace
172	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  node);  [CE]  cannot  find  symbol  node  [FE]            RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  node);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  this,  node);	  NodeTraversal.traverse(compiler,    n,    this,    argument);    	non-compiled	[CE]  cannot  find  symbol  node	70	None	replace
173	[BUG]  [BUGGY]  return  arguments!=  null  ||  arguments.contains(n.getFirstChild()));  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  ||  arguments.contains(n.getFirstChild()));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  ||  arguments.contains(n.getFirstChild()));	  return    arguments!=    null    &&    arguments.contains(n.getFirstChild()));    	non-compiled	[CE]  ';'  expected	156	None	replace
174	[BUG]  [BUGGY]  return  arguments  ==  null  &&  arguments.contains(n.getFirstChild()));  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments  ==  null  &&  arguments.contains(n.getFirstChild()));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  ==  null  &&  arguments.contains(n.getFirstChild()));	  return    arguments!=    null    &&    arguments.contains(n.getFirstChild()));    	non-compiled	[CE]  ';'  expected	156	None	replace
175	[BUG]  [BUGGY]  Preconditions.checkState(n  ==  null);  NodeTraversal.traverse(compiler,  n,  this);  [CE]  missing  return  statement  [FE]        RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(n  ==  null);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(n  ==  null);  NodeTraversal.traverse(compiler,  n,  this);	          NodeTraversal.traverse(compiler,    n,    this);    Preconditions.checkState(arguments    ==    null);    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  missing  return  statement	94	None	replace
176	[BUG]  [BUGGY]  Preconditions.checkState(arguments  ==  null);  NodeTraversal.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  arguments  [FE]          RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(arguments  ==  null);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(arguments  ==  null);  NodeTraversal.traverse(compiler,  n,  this);	          NodeTraversal.traverse(compiler,    n,    this);    Preconditions.checkState(arguments    ==    null);    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  arguments	94	None	replace
177	[BUG]  [BUGGY]  return  arguments!=  null  &&  parent.isEmpty();  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  &&  parent.isEmpty();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  parent.isEmpty();	  return    arguments!=    null    &&    argumentCount.isEmpty();    	non-compiled	[CE]  cannot  find  symbol  arguments	96	None	replace
178	[BUG]  [BUGGY]  return  argumentCount!=  null  &&  argumentCount.isEmpty();  [CE]  cannot  find  symbol  argumentCount  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  argumentCount!=  null  &&  argumentCount.isEmpty();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  argumentCount!=  null  &&  argumentCount.isEmpty();	  return    arguments!=    null    &&    argumentCount.isEmpty();    	non-compiled	[CE]  cannot  find  symbol  argumentCount	96	None	replace
179	[BUG]  [BUGGY]  return  arguments  ==  null  &&  argumentCount.isEmpty();  [CE]  cannot  find  symbol  arguments  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments  ==  null  &&  argumentCount.isEmpty();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  ==  null  &&  argumentCount.isEmpty();	  return    arguments!=    null    &&    argumentCount.isEmpty();    	non-compiled	[CE]  cannot  find  symbol  arguments	96	None	replace
180	[BUG]  [BUGGY]  |(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.contains  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  |(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.contains  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	|(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.contains	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "--   ")||    arguments.contains(   "--   ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
181	[BUG]  [BUGGY]  |(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.contains(  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  |(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.contains(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	|(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.contains(	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "--   ")||    arguments.contains(   "--   ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
182	[BUG]  [BUGGY]  |(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.contains( "-  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  |(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.contains( "-  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	|(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.contains( "-	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "--   ")||    arguments.contains(   "--   ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
183	[BUG]  [BUGGY]  |(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  |(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	|(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "--   ")||    arguments.contains(   "--   ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
184	[BUG]  [BUGGY]  Context.checkState(arguments  ==  null);  NodeTraversal.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  arguments  [FE]              RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Context.checkState(arguments  ==  null);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Context.checkState(arguments  ==  null);  NodeTraversal.traverse(compiler,  n,  this);	          NodeTraversal.traverse(compiler,    n,    this);    Context.checkState(arguments    ==    null);    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  arguments	76	None	replace
185	[BUG]  [BUGGY]  Return  arguments  ==  null  &&  arguments.size()  >  0;  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Return  arguments  ==  null  &&  arguments.size()  >  0;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Return  arguments  ==  null  &&  arguments.size()  >  0;	  return    arguments    ==    null    &&    arguments.size()    >    0;    	non-compiled	[CE]  ';'  expected	12	None	replace
186	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")  [CE]  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")	  return(arguments!=    null    ||    arguments.size()    >    0)||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")    	non-compiled	[CE]  	93	None	replace
187	[BUG]  [BUGGY]  |(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  |(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	|(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")	  return(arguments!=    null    ||    arguments.size()    >    0)||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
188	[BUG]  [BUGGY]  ||  arguments.size()  ==  0  ||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  ||  arguments.size()  ==  0  ||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	||  arguments.size()  ==  0  ||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")	  return(arguments!=    null    ||    arguments.size()    >    0)||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
189	[BUG]  [BUGGY]  |(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  |(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	|(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")	  return(arguments!=    null    ||    arguments.size()    >    0)||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
190	[BUG]  [BUGGY]  |(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  |(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	|(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-	  return(arguments!=    null    ||    arguments.size()    >    0)||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
191	[BUG]  [BUGGY]  return(arguments!=  null)&&  constantMap.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null)&&  constantMap.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null)&&  constantMap.contains(n.getString());	  return(arguments!=    null)&&    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	153	None	replace
192	[BUG]  [BUGGY]  return(arguments!=  null)&&  n.contains(arguments.getString());  [CE]  cannot  find  symbol  arguments  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null)&&  n.contains(arguments.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null)&&  n.contains(arguments.getString());	  return(arguments!=    null)&&    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	153	None	replace
193	[BUG]  [BUGGY]  return(arguments!=  null)&&  parent.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null)&&  parent.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null)&&  parent.contains(n.getString());	  return(arguments!=    null)&&    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	153	None	replace
194	[BUG]  [BUGGY]  return(arguments!=  null)&&  Array.contains(arguments.getString());  [CE]  cannot  find  symbol  arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null)&&  Array.contains(arguments.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null)&&  Array.contains(arguments.getString());	  return(arguments!=    null)&&    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	153	None	replace
195	[BUG]  [BUGGY]  return  arguments!=  null  &&  n.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  &&  n.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  n.contains(n.getString());	  return    n!=    null    &&    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	66	None	replace
196	[BUG]  [BUGGY]  return  n!=  null  &&  argumentMap.contains(n.getString());  [CE]  cannot  find  symbol  argumentMap  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  n!=  null  &&  argumentMap.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  n!=  null  &&  argumentMap.contains(n.getString());	  return    n!=    null    &&    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  argumentMap	66	None	replace
197	[BUG]  [BUGGY]  Preconditions.checkState(arguments.length!=  0);  [CE]  cannot  find  symbol  arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(arguments.length!=  0);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(arguments.length!=  0);	  Preconditions.checkState(arguments.length    ==    0);    	non-compiled	[CE]  cannot  find  symbol  arguments	33	None	replace
198	[BUG]  [BUGGY]  n.replaceChild(n,  new  Node(Token.STRING,  parent));  [CE]  missing  return  statement  [FE]          RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.replaceChild(n,  new  Node(Token.STRING,  parent));  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.replaceChild(n,  new  Node(Token.STRING,  parent));	  n.replaceChild(n,    new    Node(Token.STRING,    arguments));    	non-compiled	[CE]  missing  return  statement	168	None	replace
199	[BUG]  [BUGGY]  n.replaceChild(n,  new  Node(Token.STRING,  name));  [CE]  cannot  find  symbol  name  [FE]            RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.replaceChild(n,  new  Node(Token.STRING,  name));  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.replaceChild(n,  new  Node(Token.STRING,  name));	  n.replaceChild(n,    new    Node(Token.STRING,    arguments));    	non-compiled	[CE]  cannot  find  symbol  name	168	None	replace
200	[BUG]  [BUGGY]  n.replaceChild(n,  new  Node(Token.STRING,  this));  [CE]  no  suitable  constructor  found  for  Node(int,Normalize)  [FE]              RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.replaceChild(n,  new  Node(Token.STRING,  this));  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.replaceChild(n,  new  Node(Token.STRING,  this));	  n.replaceChild(n,    new    Node(Token.STRING,    arguments));    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,Normalize)	168	None	replace
201	[BUG]  [BUGGY]  n.replaceChild(n,  new  Node(Token.STRING,  params));  [CE]  cannot  find  symbol  params  [FE]                RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.replaceChild(n,  new  Node(Token.STRING,  params));  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.replaceChild(n,  new  Node(Token.STRING,  params));	  n.replaceChild(n,    new    Node(Token.STRING,    arguments));    	non-compiled	[CE]  cannot  find  symbol  params	168	None	replace
202	[BUG]  [BUGGY]  n.replaceChild(n,  new  Node(Token.STRING,  nameNode));  [CE]  cannot  find  symbol  nameNode  [FE]                  RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.replaceChild(n,  new  Node(Token.STRING,  nameNode));  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.replaceChild(n,  new  Node(Token.STRING,  nameNode));	  n.replaceChild(n,    new    Node(Token.STRING,    arguments));    	non-compiled	[CE]  cannot  find  symbol  nameNode	168	None	replace
203	[BUG]  [BUGGY]  FunctionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.call(  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  FunctionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.call(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	FunctionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.call(	  return    false;    FunctionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(    	non-compiled	[CE]  not  a  statement	41	None	replace
204	[BUG]  [BUGGY]  FunctionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  FunctionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	FunctionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(	  return    false;    FunctionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(    	non-compiled	[CE]  not  a  statement	41	None	replace
205	[BUG]  [BUGGY]  function()  {  arguments=Array.prototype.call(  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  function()  {  arguments=Array.prototype.call(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	function()  {  arguments=Array.prototype.call(	  return    false;    FunctionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(    	non-compiled	[CE]  ';'  expected	41	None	replace
206	[BUG]  [BUGGY]  FunctionFailedError:  Expected:  function  f()  ==  arguments=Array.prototype.slice.call(  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  FunctionFailedError:  Expected:  function  f()  ==  arguments=Array.prototype.slice.call(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	FunctionFailedError:  Expected:  function  f()  ==  arguments=Array.prototype.slice.call(	  return    false;    FunctionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(    	non-compiled	[CE]  not  a  statement	41	None	replace
207	[BUG]  [BUGGY]  Return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.equals(n.getString());  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.equals(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.equals(n.getString());	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.equals(n.getString());    	non-compiled	[CE]  not  a  statement	154	None	replace
208	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  argument.equals(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  argument.equals(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  argument.equals(n.getString());	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.equals(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	154	None	replace
209	[BUG]  [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.equals(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.equals(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.equals(n.getString());	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.equals(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	154	None	replace
210	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.equals(parent.getString());  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.equals(parent.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.equals(parent.getString());	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.equals(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	154	None	replace
211	[BUG]  [BUGGY]  node.removeChild(parent);  NodeUtil.removeChild(parent,  arguments);  [CE]  cannot  find  symbol  node  [FE]              RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  node.removeChild(parent);  NodeUtil.removeChild(parent,  arguments);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	node.removeChild(parent);  NodeUtil.removeChild(parent,  arguments);	          n.removeChild(parent);    NodeUtil.removeChild(parent,    arguments);    	non-compiled	[CE]  cannot  find  symbol  node	6	None	replace
212	[BUG]  [BUGGY]  node.removeChild(parent);  NodeUtil.removeChild(parent,  node);  [CE]  cannot  find  symbol  node  [FE]                RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  node.removeChild(parent);  NodeUtil.removeChild(parent,  node);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	node.removeChild(parent);  NodeUtil.removeChild(parent,  node);	          n.removeChild(parent);    NodeUtil.removeChild(parent,    arguments);    	non-compiled	[CE]  cannot  find  symbol  node	6	None	replace
213	[BUG]  [BUGGY]  NodeUtil.removeChild(parent,  arguments);  [CE]  cannot  find  symbol  arguments  [FE]                  RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeUtil.removeChild(parent,  arguments);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeUtil.removeChild(parent,  arguments);	          n.removeChild(parent);    NodeUtil.removeChild(parent,    arguments);    	non-compiled	[CE]  cannot  find  symbol  arguments	6	None	replace
214	[BUG]  [BUGGY]  NodeUtil.removeChild(parent,  parent);  [CE]  missing  return  statement  [FE]                    RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeUtil.removeChild(parent,  parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeUtil.removeChild(parent,  parent);	          n.removeChild(parent);    NodeUtil.removeChild(parent,    arguments);    	non-compiled	[CE]  missing  return  statement	6	None	replace
215	[BUG]  [BUGGY]  node.removeChild(parent);  [CE]  cannot  find  symbol  node  [FE]        RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  node.removeChild(parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	node.removeChild(parent);	  n.removeChild(arguments);    	non-compiled	[CE]  cannot  find  symbol  node	29	None	replace
216	[BUG]  [BUGGY]  nodes.removeChild(n);  [CE]  cannot  find  symbol  nodes  [FE]          RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  nodes.removeChild(n);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	nodes.removeChild(n);	  n.removeChild(arguments);    	non-compiled	[CE]  cannot  find  symbol  nodes	29	None	replace
217	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this.forbidChanges,  arguments);  [CE]  cannot  find  symbol  forbidChanges  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this.forbidChanges,  arguments);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this.forbidChanges,  arguments);	  NodeTraversal.traverse(compiler,    n,    parent,    this.forbidChanges);    	non-compiled	[CE]  cannot  find  symbol  forbidChanges	113	None	replace
218	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this.forbidChanges,  argument);  [CE]  cannot  find  symbol  forbidChanges  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this.forbidChanges,  argument);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this.forbidChanges,  argument);	  NodeTraversal.traverse(compiler,    n,    parent,    this.forbidChanges);    	non-compiled	[CE]  cannot  find  symbol  forbidChanges	113	None	replace
219	[BUG]  [BUGGY]  Traversal.traverse(compiler,  n,  parent);  [CE]  cannot  find  symbol  Traversal  [FE]    RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Traversal.traverse(compiler,  n,  parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Traversal.traverse(compiler,  n,  parent);	          NodeTraversal.traverse(compiler,    n,    this);    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  Traversal	73	None	replace
220	[BUG]  [BUGGY]  return(arguments!=  null  &&  constantMap.size()  >  0)||  constantMap.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  constantMap.size()  >  0)||  constantMap.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  constantMap.size()  >  0)||  constantMap.contains(n.getString());	  return(arguments!=    null    &&    arguments.size()    >    0)||    constantMap.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	25	None	replace
221	[BUG]  [BUGGY]  return(constantMap!=  null  &&  arguments.size()  >  0)||  constantMap.contains(n.getString());  [CE]  cannot  find  symbol  constantMap  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(constantMap!=  null  &&  arguments.size()  >  0)||  constantMap.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(constantMap!=  null  &&  arguments.size()  >  0)||  constantMap.contains(n.getString());	  return(arguments!=    null    &&    arguments.size()    >    0)||    constantMap.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  constantMap	25	None	replace
222	[BUG]  [BUGGY]  return(containsArguments!=  null  &&  arguments.size()  >  0)||  constantMap.contains(n.getString());  [CE]  cannot  find  symbol  containsArguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(containsArguments!=  null  &&  arguments.size()  >  0)||  constantMap.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(containsArguments!=  null  &&  arguments.size()  >  0)||  constantMap.contains(n.getString());	  return(arguments!=    null    &&    arguments.size()    >    0)||    constantMap.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  containsArguments	25	None	replace
223	[BUG]  [BUGGY]  return(converter!=  null  &&  arguments.size()  >  0)||  constantMap.contains(n.getString());  [CE]  cannot  find  symbol  converter  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(converter!=  null  &&  arguments.size()  >  0)||  constantMap.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(converter!=  null  &&  arguments.size()  >  0)||  constantMap.contains(n.getString());	  return(arguments!=    null    &&    arguments.size()    >    0)||    constantMap.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  converter	25	None	replace
224	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          NodeTraversal.traverse(compiler,    n,    this);    NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	add	                NodeTraversal.traverse(compiler,        n,        this);        NodeTraversal.traverse(compiler,    n,    this);    NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  this);	  	compilable	  [FE]  RuntimeException  	72	13	add
225	[BUG]  [BUGGY]          NodeTraversal.traverse(compiler,    n,    this);    NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  this);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          NodeTraversal.traverse(compiler,    n,    this);    NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	                NodeTraversal.traverse(compiler,        n,        this);        NodeTraversal.traverse(compiler,    n,    this);    NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  this);	  	compilable	  [FE]  RuntimeException  	72	13	add
226	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          NodeTraversal.traverse(compiler,    n,    this);    NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	add	                NodeTraversal.traverse(compiler,        n,        this);        NodeTraversal.traverse(compiler,    n,    this);    NodeTraversal.traverse(compiler,  n,  this);	  	compilable	  [FE]  RuntimeException  	72	13	add
227	[BUG]  [BUGGY]          NodeTraversal.traverse(compiler,    n,    this);    NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  this);  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          NodeTraversal.traverse(compiler,    n,    this);    NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	                NodeTraversal.traverse(compiler,        n,        this);        NodeTraversal.traverse(compiler,    n,    this);    NodeTraversal.traverse(compiler,  n,  this);	  	compilable	  [FE]  RuntimeException  	72	13	add
228	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          NodeTraversal.traverse(compiler,    n,    this);    NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  null);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	add	                NodeTraversal.traverse(compiler,        n,        this);        NodeTraversal.traverse(compiler,    n,    this);    NodeTraversal.traverse(compiler,  n,  null);  NodeTraversal.traverse(compiler,  n,  this);	  	compilable	  [FE]  RuntimeException  	72	13	add
229	[BUG]  [BUGGY]          NodeTraversal.traverse(compiler,    n,    this);    NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  null);  NodeTraversal.traverse(compiler,  n,  this);  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          NodeTraversal.traverse(compiler,    n,    this);    NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  null);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	                NodeTraversal.traverse(compiler,        n,        this);        NodeTraversal.traverse(compiler,    n,    this);    NodeTraversal.traverse(compiler,  n,  null);  NodeTraversal.traverse(compiler,  n,  this);	  	compilable	  [FE]  RuntimeException  	72	13	add
230	[BUG]  [BUGGY]  parent!=  null  &&  arguments.contains(n.getString()))  {  for(Node  n  :  parent.getFirstChild().next())  {  return  false;  }  [CE]  not  a  statement  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  parent!=  null  &&  arguments.contains(n.getString()))  {  for(Node  n  :  parent.getFirstChild().next())  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent!=  null  &&  arguments.contains(n.getString()))  {  for(Node  n  :  parent.getFirstChild().next())  {  return  false;  }	  parent!=    null    &&    arguments.contains(n.getString()))    {    for(Node    n    :    n.getFirstChild().next())    {    return    false;    }    	non-compiled	[CE]  not  a  statement	90	None	replace
231	[BUG]  [BUGGY]  Node  n  =  arguments.get(n.getString());  [CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Node  n  =  arguments.get(n.getString());  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Node  n  =  arguments.get(n.getString());	  parent!=    null    &&    arguments.contains(n.getString()))    {    for(Node    n    :    n.getFirstChild().next())    {    return    false;    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)	90	None	replace
232	[BUG]  [BUGGY]  parent!=  null  &&  arguments.contains(n.getString()))  {  for(Node  n  :  n.getLastChild().next())  {  return  false;  }  [CE]  not  a  statement  [FE]                              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  parent!=  null  &&  arguments.contains(n.getString()))  {  for(Node  n  :  n.getLastChild().next())  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent!=  null  &&  arguments.contains(n.getString()))  {  for(Node  n  :  n.getLastChild().next())  {  return  false;  }	  parent!=    null    &&    arguments.contains(n.getString()))    {    for(Node    n    :    n.getFirstChild().next())    {    return    false;    }    	non-compiled	[CE]  not  a  statement	90	None	replace
233	[BUG]  [BUGGY]  Return  arguments!=  null  ||  arguments.contains(n.getString());  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Return  arguments!=  null  ||  arguments.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Return  arguments!=  null  ||  arguments.contains(n.getString());	  Return    arguments!=    null    &&    arguments.contains(n.getString());    	non-compiled	[CE]  ';'  expected	68	None	replace
234	[BUG]  [BUGGY]  Node  arguments  =  arguments.contains(n.getString());  [CE]  cannot  find  symbol  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Node  arguments  =  arguments.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Node  arguments  =  arguments.contains(n.getString());	  Return    arguments!=    null    &&    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
235	[BUG]  [BUGGY]  Return  arguments  ==  null  &&  arguments.contains(n.getString());  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Return  arguments  ==  null  &&  arguments.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Return  arguments  ==  null  &&  arguments.contains(n.getString());	  Return    arguments!=    null    &&    arguments.contains(n.getString());    	non-compiled	[CE]  ';'  expected	68	None	replace
236	[BUG]  [BUGGY]  if(arguments!=  null  ||  arguments.size()  >  0)  {  for(Node  n  :  arguments.iterator().next())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null  ||  arguments.size()  >  0)  {  for(Node  n  :  arguments.iterator().next())  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null  ||  arguments.size()  >  0)  {  for(Node  n  :  arguments.iterator().next())  {  return  false;  }	  if(arguments!=    null    &&    arguments.size()    >    0)    {    for(Node    n    :    arguments.iterator().next())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
237	[BUG]  [BUGGY]  if(arguments!=  null  &&  arguments.size()  >  1)  {  for(Node  n  :  arguments.iterator().next())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null  &&  arguments.size()  >  1)  {  for(Node  n  :  arguments.iterator().next())  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null  &&  arguments.size()  >  1)  {  for(Node  n  :  arguments.iterator().next())  {  return  false;  }	  if(arguments!=    null    &&    arguments.size()    >    0)    {    for(Node    n    :    arguments.iterator().next())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
238	[BUG]  [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)&&  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains  [CE]  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)&&  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  ||  arguments.size()  >  0)&&  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains	  return(arguments!=    null    ||    arguments.size()    >    0)||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       "));    	non-compiled	[CE]  	104	None	replace
239	[BUG]  [BUGGY]  if(arguments!=  null)  {  return  false;  t.getCompiler().reportCodeChange();  return  true;  }  [CE]  cannot  find  symbol  arguments  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null)  {  return  false;  t.getCompiler().reportCodeChange();  return  true;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null)  {  return  false;  t.getCompiler().reportCodeChange();  return  true;  }	  return    false;    t.getCompiler().reportCodeChange();    return    true;    	non-compiled	[CE]  cannot  find  symbol  arguments	169	None	replace
240	[BUG]  [BUGGY]  if(arguments  ==  null)  {  return  false;  t.getCompiler().reportCodeChange();  return  true;  }  [CE]  cannot  find  symbol  arguments  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments  ==  null)  {  return  false;  t.getCompiler().reportCodeChange();  return  true;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments  ==  null)  {  return  false;  t.getCompiler().reportCodeChange();  return  true;  }	  return    false;    t.getCompiler().reportCodeChange();    return    true;    	non-compiled	[CE]  cannot  find  symbol  arguments	169	None	replace
241	[BUG]  [BUGGY]  n.getCompiler().reportCodeChange();  return  true;  [CE]  cannot  find  symbol  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.getCompiler().reportCodeChange();  return  true;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.getCompiler().reportCodeChange();  return  true;	  return    false;    t.getCompiler().reportCodeChange();    return    true;    	non-compiled	[CE]  cannot  find  symbol	169	None	replace
242	[BUG]  [BUGGY]  if(arguments!=  null)  {  return  false;  t.getCompiler().reportCodeChange();  return  true;  }  else  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  cannot  find  symbol  arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null)  {  return  false;  t.getCompiler().reportCodeChange();  return  true;  }  else  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null)  {  return  false;  t.getCompiler().reportCodeChange();  return  true;  }  else  {  doStatementNormalizations(t,  n,  parent);  }	  return    false;    t.getCompiler().reportCodeChange();    return    true;    	non-compiled	[CE]  cannot  find  symbol  arguments	169	None	replace
243	[BUG]  [BUGGY]  if(arguments!=  null)  {  return  false;  t.getCompiler().reportCodeChange();  return  true;  }  else  {  NodeTraversal.traverse(compiler,  n,  parent);  }  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null)  {  return  false;  t.getCompiler().reportCodeChange();  return  true;  }  else  {  NodeTraversal.traverse(compiler,  n,  parent);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null)  {  return  false;  t.getCompiler().reportCodeChange();  return  true;  }  else  {  NodeTraversal.traverse(compiler,  n,  parent);  }	  return    false;    t.getCompiler().reportCodeChange();    return    true;    	non-compiled	[CE]  cannot  find  symbol  arguments	169	None	replace
244	[BUG]  [BUGGY]  parent!=  null)  {  for(Node  n  :  arguments.values().next())  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  parent!=  null)  {  for(Node  n  :  arguments.values().next())  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent!=  null)  {  for(Node  n  :  arguments.values().next())  {  doStatementNormalizations(t,  n,  parent);  }	  parent!=    null)    {    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  not  a  statement	55	None	replace
245	[BUG]  [BUGGY]  parent!=  null)  {  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent;  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  parent!=  null)  {  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent;  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent!=  null)  {  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent;  }	  parent!=    null)    {    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  not  a  statement	55	None	replace
246	[BUG]  [BUGGY]  Preconditions.checkState(n!=  null);  NodeTraversal.traverse(compiler,  n,  this);  [CE]  missing  return  statement  [FE]          RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(n!=  null);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(n!=  null);  NodeTraversal.traverse(compiler,  n,  this);	          NodeTraversal.traverse(compiler,    n,    this);    Preconditions.checkState(arguments!=    null);    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  missing  return  statement	74	None	replace
247	[BUG]  [BUGGY]  Preconditions.checkState(parent!=  null);  NodeTraversal.traverse(compiler,  n,  this);  [CE]  missing  return  statement  [FE]            RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(parent!=  null);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(parent!=  null);  NodeTraversal.traverse(compiler,  n,  this);	          NodeTraversal.traverse(compiler,    n,    this);    Preconditions.checkState(arguments!=    null);    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  missing  return  statement	74	None	replace
248	[BUG]  [BUGGY]  For(Node  n  :  arguments.values().next())  {  return  false;  }  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  For(Node  n  :  arguments.values().next())  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	For(Node  n  :  arguments.values().next())  {  return  false;  }	  For(Node    n    :    arguments.iterator().next())    {    return    false;    }    	non-compiled	[CE]  ')'  expected	115	None	replace
249	[BUG]  [BUGGY]  For(Node  n  :  constantMap.iterator().next())  {  return  false;  }  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  For(Node  n  :  constantMap.iterator().next())  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	For(Node  n  :  constantMap.iterator().next())  {  return  false;  }	  For(Node    n    :    arguments.iterator().next())    {    return    false;    }    	non-compiled	[CE]  ')'  expected	115	None	replace
250	[BUG]  [BUGGY]  return(arguments  ==  null  ||  arguments.size()  >  0)||  arguments.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments  ==  null  ||  arguments.size()  >  0)||  arguments.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments  ==  null  ||  arguments.size()  >  0)||  arguments.contains(n.getString());	  return(arguments    ==    null    &&    arguments.size()    >    0)||    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	27	None	replace
251	[BUG]  [BUGGY]  Node  n  =  constantMap.iterator().next();  [CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Node  n  =  constantMap.iterator().next();  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Node  n  =  constantMap.iterator().next();	  Node    n    =    arguments.iterator().next();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)	166	None	replace
252	[BUG]  [BUGGY]  Node  n  =  arguments.get(0).next();  [CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Node  n  =  arguments.get(0).next();  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Node  n  =  arguments.get(0).next();	  Node    n    =    arguments.iterator().next();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)	166	None	replace
253	[BUG]  [BUGGY]  Node  n  =  parent.getFirstChild().getNext();  [CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Node  n  =  parent.getFirstChild().getNext();  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Node  n  =  parent.getFirstChild().getNext();	  Node    n    =    arguments.iterator().next();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)	166	None	replace
254	[BUG]  [BUGGY]  Node  n  =  arguments.get(0);  [CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Node  n  =  arguments.get(0);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Node  n  =  arguments.get(0);	  Node    n    =    arguments.iterator().next();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)	166	None	replace
255	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	add	return  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION;	  return    arguments!=    null    &&    parent.getType()    ==    Token.FUNCTION;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  	97	1	replace
256	[BUG]  [BUGGY]  return  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION;  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION;	  return    arguments!=    null    &&    parent.getType()    ==    Token.FUNCTION;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  	97	1	replace
257	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  n!=  null  &&  parent.getType()  ==  Token.FUNCTION;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	add	return  n!=  null  &&  parent.getType()  ==  Token.FUNCTION;	  return    arguments!=    null    &&    parent.getType()    ==    Token.FUNCTION;    	compilable	  [FE]  RuntimeException  	97	13	replace
258	[BUG]  [BUGGY]  return  n!=  null  &&  parent.getType()  ==  Token.FUNCTION;  [FE]  RuntimeException  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  n!=  null  &&  parent.getType()  ==  Token.FUNCTION;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  n!=  null  &&  parent.getType()  ==  Token.FUNCTION;	  return    arguments!=    null    &&    parent.getType()    ==    Token.FUNCTION;    	compilable	  [FE]  RuntimeException  	97	13	replace
259	[BUG]  [BUGGY]  return  arguments  ==  null  &&  parent.getType()  ==  Token.FUNCTION;  [CE]  cannot  find  symbol  arguments  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments  ==  null  &&  parent.getType()  ==  Token.FUNCTION;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  ==  null  &&  parent.getType()  ==  Token.FUNCTION;	  return    arguments!=    null    &&    parent.getType()    ==    Token.FUNCTION;    	non-compiled	[CE]  cannot  find  symbol  arguments	97	None	replace
260	[BUG]  [BUGGY]  return  argumentNames!=  null  &&  parent.getType()  ==  Token.FUNCTION;  [CE]  cannot  find  symbol  argumentNames  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  argumentNames!=  null  &&  parent.getType()  ==  Token.FUNCTION;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  argumentNames!=  null  &&  parent.getType()  ==  Token.FUNCTION;	  return    arguments!=    null    &&    parent.getType()    ==    Token.FUNCTION;    	non-compiled	[CE]  cannot  find  symbol  argumentNames	97	None	replace
261	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  arguments);  return  true;  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  arguments);  return  true;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  arguments);  return  true;	  return    false;    NodeTraversal.traverse(compiler,    n,    parent);    return    true;    	non-compiled	[CE]  cannot  find  symbol  arguments	171	None	replace
262	[BUG]  [BUGGY]  if(arguments!=  null)  {  return  false;  NodeTraversal.traverse(compiler,  n,  parent);  return  true;  }  [CE]  cannot  find  symbol  arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null)  {  return  false;  NodeTraversal.traverse(compiler,  n,  parent);  return  true;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null)  {  return  false;  NodeTraversal.traverse(compiler,  n,  parent);  return  true;  }	  return    false;    NodeTraversal.traverse(compiler,    n,    parent);    return    true;    	non-compiled	[CE]  cannot  find  symbol  arguments	171	None	replace
263	[BUG]  [BUGGY]  NodeUtil.removeChild(n);  [CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]          RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeUtil.removeChild(n);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeUtil.removeChild(n);	  n.removeChild(argument);    	non-compiled	[CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;	30	None	replace
264	[BUG]  [BUGGY]  Return  arguments!=  null  ||  arguments.length  >  0;  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Return  arguments!=  null  ||  arguments.length  >  0;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Return  arguments!=  null  ||  arguments.length  >  0;	  Return    arguments!=    null    &&    arguments.length    >    0;    	non-compiled	[CE]  ';'  expected	18	None	replace
265	[BUG]  [BUGGY]  Return  arguments  ==  null  &&  arguments.length  >  0;  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Return  arguments  ==  null  &&  arguments.length  >  0;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Return  arguments  ==  null  &&  arguments.length  >  0;	  Return    arguments!=    null    &&    arguments.length    >    0;    	non-compiled	[CE]  ';'  expected	18	None	replace
266	[BUG]  [BUGGY]  Return  arguments!=  null  &&  arguments.length  >  1;  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Return  arguments!=  null  &&  arguments.length  >  1;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Return  arguments!=  null  &&  arguments.length  >  1;	  Return    arguments!=    null    &&    arguments.length    >    0;    	non-compiled	[CE]  ';'  expected	18	None	replace
267	[BUG]  [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")||    arguments.    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
268	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")||    arguments.    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
269	[BUG]  [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")||    arguments.    	non-compiled	[CE]  <identifier>  expected	148	None	replace
270	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-  [CE]  unclosed  string  literal  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")||    arguments.    	non-compiled	[CE]  unclosed  string  literal	148	None	replace
271	[BUG]  [BUGGY]  return  arguments  ==  null  ||  arguments.contains(n.getString()));  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments  ==  null  ||  arguments.contains(n.getString()));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  ==  null  ||  arguments.contains(n.getString()));	  return    arguments    ==    null    &&    arguments.contains(n.getString()));    	non-compiled	[CE]  ';'  expected	78	None	replace
272	[BUG]  [BUGGY]  return  arguments  >=  null  &&  arguments.contains(n.getString()));  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments  >=  null  &&  arguments.contains(n.getString()));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  >=  null  &&  arguments.contains(n.getString()));	  return    arguments    ==    null    &&    arguments.contains(n.getString()));    	non-compiled	[CE]  ';'  expected	78	None	replace
273	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  argumentNames);  [CE]  cannot  find  symbol  argumentNames  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  argumentNames);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this,  argumentNames);	  NodeTraversal.traverse(compiler,    n,    parent,    this,    arguments);    	non-compiled	[CE]  cannot  find  symbol  argumentNames	44	None	replace
274	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  parent!=  null  &&  parent.getType()  ==  Token.VAR;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	add	return  parent!=  null  &&  parent.getType()  ==  Token.VAR;	  return    arguments!=    null    &&    parent.getType()    ==    Token.VAR;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  	54	1	replace
275	[BUG]  [BUGGY]  return  parent!=  null  &&  parent.getType()  ==  Token.VAR;  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  parent!=  null  &&  parent.getType()  ==  Token.VAR;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  parent!=  null  &&  parent.getType()  ==  Token.VAR;	  return    arguments!=    null    &&    parent.getType()    ==    Token.VAR;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  	54	1	replace
276	[BUG]  [BUGGY]  return  arguments  ==  null  &&  parent.getType()  ==  Token.VAR;  [CE]  cannot  find  symbol  arguments  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments  ==  null  &&  parent.getType()  ==  Token.VAR;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  ==  null  &&  parent.getType()  ==  Token.VAR;	  return    arguments!=    null    &&    parent.getType()    ==    Token.VAR;    	non-compiled	[CE]  cannot  find  symbol  arguments	54	None	replace
277	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  n!=  null  &&  parent.getType()  ==  Token.VAR;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	add	return  n!=  null  &&  parent.getType()  ==  Token.VAR;	  return    arguments!=    null    &&    parent.getType()    ==    Token.VAR;    	compilable	  [FE]  RuntimeException  	54	13	replace
278	[BUG]  [BUGGY]  return  n!=  null  &&  parent.getType()  ==  Token.VAR;  [FE]  RuntimeException  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  n!=  null  &&  parent.getType()  ==  Token.VAR;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  n!=  null  &&  parent.getType()  ==  Token.VAR;	  return    arguments!=    null    &&    parent.getType()    ==    Token.VAR;    	compilable	  [FE]  RuntimeException  	54	13	replace
279	[BUG]  [BUGGY]  return  argumentNames!=  null  &&  parent.getType()  ==  Token.VAR;  [CE]  cannot  find  symbol  argumentNames  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  argumentNames!=  null  &&  parent.getType()  ==  Token.VAR;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  argumentNames!=  null  &&  parent.getType()  ==  Token.VAR;	  return    arguments!=    null    &&    parent.getType()    ==    Token.VAR;    	non-compiled	[CE]  cannot  find  symbol  argumentNames	54	None	replace
280	[BUG]  [BUGGY]  node.removeChild(n);  NodeTraversal.traverse(compiler,  n,  parent);  [CE]  cannot  find  symbol  node  [FE]        RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  node.removeChild(n);  NodeTraversal.traverse(compiler,  n,  parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	node.removeChild(n);  NodeTraversal.traverse(compiler,  n,  parent);	          n.removeChild(parent);    NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  node	98	None	replace
281	[BUG]  [BUGGY]  node.removeChild(parent);  NodeTraversal.traverse(compiler,  n,  parent);  [CE]  cannot  find  symbol  node  [FE]          RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  node.removeChild(parent);  NodeTraversal.traverse(compiler,  n,  parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	node.removeChild(parent);  NodeTraversal.traverse(compiler,  n,  parent);	          n.removeChild(parent);    NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  node	98	None	replace
282	[BUG]  [BUGGY]  node.removeChild(parent);  NodeTraversal.traverse(compiler,  n,  parent,  constantMap);  [CE]  cannot  find  symbol  node  [FE]            RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  node.removeChild(parent);  NodeTraversal.traverse(compiler,  n,  parent,  constantMap);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	node.removeChild(parent);  NodeTraversal.traverse(compiler,  n,  parent,  constantMap);	          n.removeChild(parent);    NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  node	98	None	replace
283	[BUG]  [BUGGY]  node.removeChild(parent);  compiler.traverse(compiler,  n,  parent);  [CE]  cannot  find  symbol  node  [FE]              RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  node.removeChild(parent);  compiler.traverse(compiler,  n,  parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	node.removeChild(parent);  compiler.traverse(compiler,  n,  parent);	          n.removeChild(parent);    NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  node	98	None	replace
284	[BUG]  [BUGGY]  return!parameters.isEmpty();  [CE]  cannot  find  symbol  parameters  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return!parameters.isEmpty();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return!parameters.isEmpty();	  return!params.isEmpty();    	non-compiled	[CE]  cannot  find  symbol  parameters	22	None	replace
285	[BUG]  [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "- ".* ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "- ".* ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "- ".* ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ".*   ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains    	non-compiled	[CE]  <identifier>  expected	150	None	replace
286	[BUG]  [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "- ".* ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "- ".* ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "- ".* ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ".*   ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains    	non-compiled	[CE]  <identifier>  expected	150	None	replace
287	[BUG]  [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "- ".* ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.con  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "- ".* ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.con  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "- ".* ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.con	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ".*   ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains    	non-compiled	[CE]  <identifier>  expected	150	None	replace
288	[BUG]  [BUGGY]  return  arguments!=  null  &&  argumentNames.length  >  0;  [CE]  cannot  find  symbol  arguments  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  &&  argumentNames.length  >  0;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  argumentNames.length  >  0;	  return    argumentNames!=    null    &&    arguments.length    >    0;    	non-compiled	[CE]  cannot  find  symbol  arguments	105	None	replace
289	[BUG]  [BUGGY]  return  true;  function  f()  {  arguments=Array.prototype.slice.call(arguments  >>  ';'  expected  [CE]  ';'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  true;  function  f()  {  arguments=Array.prototype.slice.call(arguments  >>  ';'  expected  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  true;  function  f()  {  arguments=Array.prototype.slice.call(arguments  >>  ';'  expected	  return    false;    function    f()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  ';'  expected	39	None	replace
290	[BUG]  [BUGGY]  return  true;  function  f()  {  arguments=Array.prototype.slice.call(arguments  ==  ';'  expected  [CE]  ';'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  true;  function  f()  {  arguments=Array.prototype.slice.call(arguments  ==  ';'  expected  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  true;  function  f()  {  arguments=Array.prototype.slice.call(arguments  ==  ';'  expected	  return    false;    function    f()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  ';'  expected	39	None	replace
291	[BUG]  [BUGGY]  return  true;  function  f()  {  arguments=Array.prototype.slice.call(arguments!=  ';'  expected  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  true;  function  f()  {  arguments=Array.prototype.slice.call(arguments!=  ';'  expected  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  true;  function  f()  {  arguments=Array.prototype.slice.call(arguments!=  ';'  expected	  return    false;    function    f()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  ';'  expected	39	None	replace
292	[BUG]  [BUGGY]  if(arguments!=  null)  {  return  false;  function  f()  {  arguments=Array.prototype.slice.call(arguments  >>  ';'  expected  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null)  {  return  false;  function  f()  {  arguments=Array.prototype.slice.call(arguments  >>  ';'  expected  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null)  {  return  false;  function  f()  {  arguments=Array.prototype.slice.call(arguments  >>  ';'  expected	  return    false;    function    f()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  ';'  expected	39	None	replace
293	[BUG]  [BUGGY]  if(arguments!=  null)  {  return  false;  function  f()  {  arguments=Array.prototype.slice.call(arguments  ==  ';'  expected  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null)  {  return  false;  function  f()  {  arguments=Array.prototype.slice.call(arguments  ==  ';'  expected  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null)  {  return  false;  function  f()  {  arguments=Array.prototype.slice.call(arguments  ==  ';'  expected	  return    false;    function    f()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  ';'  expected	39	None	replace
294	[BUG]  [BUGGY]  n.addChildToFront(this);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]            RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.addChildToFront(this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.addChildToFront(this);	  n.addChildToFront(parent);    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	31	None	replace
295	[BUG]  [BUGGY]  n.addChildToFront(constantMap);  [CE]  cannot  find  symbol  constantMap  [FE]              RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.addChildToFront(constantMap);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.addChildToFront(constantMap);	  n.addChildToFront(parent);    	non-compiled	[CE]  cannot  find  symbol  constantMap	31	None	replace
296	[BUG]  [BUGGY]  return  arguments!=  null  &&  parent.arguments.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  &&  parent.arguments.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  parent.arguments.contains(n.getString());	  return    arguments!=    null    &&    argumentMap.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	67	None	replace
297	[BUG]  [BUGGY]  return  arguments!=  null  &&  parent.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  &&  parent.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  parent.contains(n.getString());	  return    arguments!=    null    &&    argumentMap.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	67	None	replace
298	[BUG]  [BUGGY]  return  arguments!=  null  &&  argumentMap.contains(arguments.getString()));  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  &&  argumentMap.contains(arguments.getString()));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  argumentMap.contains(arguments.getString()));	  return    arguments!=    null    &&    argumentMap.contains(n.getString()));    	non-compiled	[CE]  ';'  expected	80	None	replace
299	[BUG]  [BUGGY]  return  arguments!=  null  &&  constantMap.contains(n.getString()));  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  &&  constantMap.contains(n.getString()));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  constantMap.contains(n.getString()));	  return    arguments!=    null    &&    argumentMap.contains(n.getString()));    	non-compiled	[CE]  ';'  expected	80	None	replace
300	[BUG]  [BUGGY]  return  arguments!=  null  ||  argumentMap.contains(n.getString()));  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  ||  argumentMap.contains(n.getString()));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  ||  argumentMap.contains(n.getString()));	  return    arguments!=    null    &&    argumentMap.contains(n.getString()));    	non-compiled	[CE]  ';'  expected	80	None	replace
301	[BUG]  [BUGGY]  return!this.constantMap.isEmpty();  [CE]  cannot  find  symbol  constantMap  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return!this.constantMap.isEmpty();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return!this.constantMap.isEmpty();	  return!constantMap.isEmpty();    	non-compiled	[CE]  cannot  find  symbol  constantMap	114	None	replace
302	[BUG]  [BUGGY]  parent!=  null  &&  arguments.size()  >  0)  {  for(Node  n  :  parent.getFirstChild().next())  {  return  false;  }  [CE]  not  a  statement  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  parent!=  null  &&  arguments.size()  >  0)  {  for(Node  n  :  parent.getFirstChild().next())  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent!=  null  &&  arguments.size()  >  0)  {  for(Node  n  :  parent.getFirstChild().next())  {  return  false;  }	  parent!=    null    &&    arguments.size()    >    0)    {    for(Node    n    :    n.getFirstChild().next())    {    return    false;    }    	non-compiled	[CE]  not  a  statement	91	None	replace
303	[BUG]  [BUGGY]  Node  argument  =  arguments.size()  >  0)  {  for(Node  n  :  n.getFirstChild().next())  {  return  false;  }  [CE]  ';'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Node  argument  =  arguments.size()  >  0)  {  for(Node  n  :  n.getFirstChild().next())  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Node  argument  =  arguments.size()  >  0)  {  for(Node  n  :  n.getFirstChild().next())  {  return  false;  }	  parent!=    null    &&    arguments.size()    >    0)    {    for(Node    n    :    n.getFirstChild().next())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	91	None	replace
304	[BUG]  [BUGGY]  parent!=  null  &&  arguments.size()  ==  0)  {  for(Node  n  :  n.getFirstChild().next())  {  return  false;  }  [CE]  not  a  statement  [FE]                                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  parent!=  null  &&  arguments.size()  ==  0)  {  for(Node  n  :  n.getFirstChild().next())  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent!=  null  &&  arguments.size()  ==  0)  {  for(Node  n  :  n.getFirstChild().next())  {  return  false;  }	  parent!=    null    &&    arguments.size()    >    0)    {    for(Node    n    :    n.getFirstChild().next())    {    return    false;    }    	non-compiled	[CE]  not  a  statement	91	None	replace
305	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  null);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,<null>)  [FE]            RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  null);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  null);	  NodeTraversal.traverse(compiler,    n,    null);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,<null>)	71	None	replace
306	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  parent,  null);  [CE]  missing  return  statement  [FE]              RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  parent,  null);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  parent,  null);	  NodeTraversal.traverse(compiler,    n,    null);    	non-compiled	[CE]  missing  return  statement	71	None	replace
307	[BUG]  [BUGGY]  NodeTraversal.Traversal.traverse(compiler,  n,  parent,  arguments);  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.Traversal.traverse(compiler,  n,  parent,  arguments);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.Traversal.traverse(compiler,  n,  parent,  arguments);	  return    false;    NodeTraversal.Traversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  arguments	42	None	replace
308	[BUG]  [BUGGY]  if(arguments!=  null)  {  return  false;  NodeTraversal.Traversal.traverse(compiler,  n,  parent);  }  [CE]  cannot  find  symbol  arguments  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null)  {  return  false;  NodeTraversal.Traversal.traverse(compiler,  n,  parent);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null)  {  return  false;  NodeTraversal.Traversal.traverse(compiler,  n,  parent);  }	  return    false;    NodeTraversal.Traversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  arguments	42	None	replace
309	[BUG]  [BUGGY]  if(arguments  ==  null)  {  return  false;  NodeTraversal.Traversal.traverse(compiler,  n,  parent);  }  [CE]  cannot  find  symbol  arguments  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments  ==  null)  {  return  false;  NodeTraversal.Traversal.traverse(compiler,  n,  parent);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments  ==  null)  {  return  false;  NodeTraversal.Traversal.traverse(compiler,  n,  parent);  }	  return    false;    NodeTraversal.Traversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  arguments	42	None	replace
310	[BUG]  [BUGGY]  if(arguments!=  null)  {  return  false;  NodeTraversal.Traversal.traverse(compiler,  n,  parent);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  arguments  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null)  {  return  false;  NodeTraversal.Traversal.traverse(compiler,  n,  parent);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null)  {  return  false;  NodeTraversal.Traversal.traverse(compiler,  n,  parent);  }  else  {  throw  new  IllegalStateException( " ");  }	  return    false;    NodeTraversal.Traversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  arguments	42	None	replace
311	[BUG]  [BUGGY]  NodeTraversal.Traversal.traverse(compiler,  n,  parent,  argument);  [CE]  cannot  find  symbol  argument  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.Traversal.traverse(compiler,  n,  parent,  argument);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.Traversal.traverse(compiler,  n,  parent,  argument);	  return    false;    NodeTraversal.Traversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  argument	42	None	replace
312	[BUG]  [BUGGY]  Preconditions.checkArgument(arguments.length  ==  4);  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkArgument(arguments.length  ==  4);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkArgument(arguments.length  ==  4);	  Preconditions.checkArgument(arguments.length    ==    3);    	non-compiled	[CE]  cannot  find  symbol  arguments	128	None	replace
313	[BUG]  [BUGGY]  Return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains(n.getString());  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains(n.getString());	  Return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(n.getString());    	non-compiled	[CE]  not  a  statement	26	None	replace
314	[BUG]  [BUGGY]  Return(arguments  ==  null  &&  arguments.size()  >  0)||  arguments.contains(n.getString());  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Return(arguments  ==  null  &&  arguments.size()  >  0)||  arguments.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Return(arguments  ==  null  &&  arguments.size()  >  0)||  arguments.contains(n.getString());	  Return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(n.getString());    	non-compiled	[CE]  not  a  statement	26	None	replace
315	[BUG]  [BUGGY]  Return(arguments!=  null  &&  arguments.size()  >  1)||  arguments.contains(n.getString());  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Return(arguments!=  null  &&  arguments.size()  >  1)||  arguments.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Return(arguments!=  null  &&  arguments.size()  >  1)||  arguments.contains(n.getString());	  Return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(n.getString());    	non-compiled	[CE]  not  a  statement	26	None	replace
316	[BUG]  [BUGGY]  Return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.add(n.getString());  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.add(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.add(n.getString());	  Return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(n.getString());    	non-compiled	[CE]  not  a  statement	26	None	replace
317	[BUG]  [BUGGY]  n.replaceChild(n,  parent,  this);  [CE]  method  replaceChild  in  class  Node  cannot  be  applied  to  given  types;  [FE]        RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.replaceChild(n,  parent,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.replaceChild(n,  parent,  this);	  n.replaceChild(n,    parent);    	non-compiled	[CE]  method  replaceChild  in  class  Node  cannot  be  applied  to  given  types;	107	None	replace
318	[BUG]  [BUGGY]  n.replaceChild(n,  parent,  true);  [CE]  method  replaceChild  in  class  Node  cannot  be  applied  to  given  types;  [FE]          RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.replaceChild(n,  parent,  true);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.replaceChild(n,  parent,  true);	  n.replaceChild(n,    parent);    	non-compiled	[CE]  method  replaceChild  in  class  Node  cannot  be  applied  to  given  types;	107	None	replace
319	[BUG]  [BUGGY]  n.replaceChild(parent,  n);  [CE]  missing  return  statement  [FE]            RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.replaceChild(parent,  n);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.replaceChild(parent,  n);	  n.replaceChild(n,    parent);    	non-compiled	[CE]  missing  return  statement	107	None	replace
320	[BUG]  [BUGGY]  return  argumentMap!=  null  &&  argumentMap.isEmpty();  [CE]  cannot  find  symbol  argumentMap  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  argumentMap!=  null  &&  argumentMap.isEmpty();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  argumentMap!=  null  &&  argumentMap.isEmpty();	  return    arguments!=    null    &&    argumentMap.isEmpty();    	non-compiled	[CE]  cannot  find  symbol  argumentMap	10	None	replace
321	[BUG]  [BUGGY]  return  arguments  ==  null  &&  argumentMap.isEmpty();  [CE]  cannot  find  symbol  arguments  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments  ==  null  &&  argumentMap.isEmpty();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  ==  null  &&  argumentMap.isEmpty();	  return    arguments!=    null    &&    argumentMap.isEmpty();    	non-compiled	[CE]  cannot  find  symbol  arguments	10	None	replace
322	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          n.removeChild(parent);    n.removeChild(parent);  n.removeChild(parent);  n.removeChild(parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	add	                n.removeChild(parent);        n.removeChild(parent);    n.removeChild(parent);  n.removeChild(parent);	  	compilable	  [FE]  RuntimeException  	1	13	add
323	[BUG]  [BUGGY]          n.removeChild(parent);    n.removeChild(parent);  n.removeChild(parent);  n.removeChild(parent);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          n.removeChild(parent);    n.removeChild(parent);  n.removeChild(parent);  n.removeChild(parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	                n.removeChild(parent);        n.removeChild(parent);    n.removeChild(parent);  n.removeChild(parent);	  	compilable	  [FE]  RuntimeException  	1	13	add
324	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          n.removeChild(parent);    n.removeChild(parent);  n.addChildToBack(parent);  n.removeChild(parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	add	                n.removeChild(parent);        n.removeChild(parent);    n.addChildToBack(parent);  n.removeChild(parent);	  	compilable	  [FE]  RuntimeException  	1	13	add
325	[BUG]  [BUGGY]          n.removeChild(parent);    n.removeChild(parent);  n.addChildToBack(parent);  n.removeChild(parent);  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          n.removeChild(parent);    n.removeChild(parent);  n.addChildToBack(parent);  n.removeChild(parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	                n.removeChild(parent);        n.removeChild(parent);    n.addChildToBack(parent);  n.removeChild(parent);	  	compilable	  [FE]  RuntimeException  	1	13	add
326	[BUG]  [BUGGY]          n.removeChild(parent);    n.removeChild(parent);  node.removeChild(parent);  n.removeChild(parent);  [CE]  cannot  find  symbol  node  [FE]        RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          n.removeChild(parent);    n.removeChild(parent);  node.removeChild(parent);  n.removeChild(parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	                n.removeChild(parent);        n.removeChild(parent);    node.removeChild(parent);  n.removeChild(parent);	  	non-compiled	[CE]  cannot  find  symbol  node	1	None	add
327	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          n.removeChild(parent);    n.removeChild(parent);  parent.removeChild(n);  n.removeChild(parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	add	                n.removeChild(parent);        n.removeChild(parent);    parent.removeChild(n);  n.removeChild(parent);	  	compilable	  [FE]  RuntimeException  	1	13	add
328	[BUG]  [BUGGY]          n.removeChild(parent);    n.removeChild(parent);  parent.removeChild(n);  n.removeChild(parent);  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          n.removeChild(parent);    n.removeChild(parent);  parent.removeChild(n);  n.removeChild(parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	                n.removeChild(parent);        n.removeChild(parent);    parent.removeChild(n);  n.removeChild(parent);	  	compilable	  [FE]  RuntimeException  	1	13	add
329	[BUG]  [BUGGY]  if(arguments!=  null  ||  arguments.contains(n.getString()))  {  for(Node  n  :  arguments.iterator().next())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null  ||  arguments.contains(n.getString()))  {  for(Node  n  :  arguments.iterator().next())  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null  ||  arguments.contains(n.getString()))  {  for(Node  n  :  arguments.iterator().next())  {  return  false;  }	  if(arguments!=    null    &&    arguments.contains(n.getString()))    {    for(Node    n    :    arguments.iterator().next())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
330	[BUG]  [BUGGY]  if(arguments!=  null  &&  arguments.contains(n.getString())||  arguments.contains(n.getString()))  {  for(Node  n  :  arguments.iterator().next())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null  &&  arguments.contains(n.getString())||  arguments.contains(n.getString()))  {  for(Node  n  :  arguments.iterator().next())  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null  &&  arguments.contains(n.getString())||  arguments.contains(n.getString()))  {  for(Node  n  :  arguments.iterator().next())  {  return  false;  }	  if(arguments!=    null    &&    arguments.contains(n.getString()))    {    for(Node    n    :    arguments.iterator().next())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
331	[BUG]  [BUGGY]  return  arguments.isEmpty();  [CE]  cannot  find  symbol  arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments.isEmpty();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments.isEmpty();	  return    n.isEmpty();    	non-compiled	[CE]  cannot  find  symbol  arguments	23	None	replace
332	[BUG]  [BUGGY]  return  n.isEmpty()  &&  arguments.length  >  0;  [CE]  cannot  find  symbol  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  n.isEmpty()  &&  arguments.length  >  0;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  n.isEmpty()  &&  arguments.length  >  0;	  return    n.isEmpty();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
333	[BUG]  [BUGGY]  return  n.isEmpty()  &&  arguments.contains(n.getString());  [CE]  cannot  find  symbol  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  n.isEmpty()  &&  arguments.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  n.isEmpty()  &&  arguments.contains(n.getString());	  return    n.isEmpty();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
334	[BUG]  [BUGGY]  return  n.isEmpty()  ||  arguments.length  >  0;  [CE]  cannot  find  symbol  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  n.isEmpty()  ||  arguments.length  >  0;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  n.isEmpty()  ||  arguments.length  >  0;	  return    n.isEmpty();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
335	[BUG]  [BUGGY]  if(arguments!=  null)  {  return  false;  t.getCompiler().reportCodeChange();  return  false;  }  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null)  {  return  false;  t.getCompiler().reportCodeChange();  return  false;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null)  {  return  false;  t.getCompiler().reportCodeChange();  return  false;  }	  return    false;    t.getCompiler().reportCodeChange();    return    false;    	non-compiled	[CE]  cannot  find  symbol  arguments	173	None	replace
336	[BUG]  [BUGGY]  if(arguments  ==  null)  {  return  false;  t.getCompiler().reportCodeChange();  return  false;  }  [CE]  cannot  find  symbol  arguments  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments  ==  null)  {  return  false;  t.getCompiler().reportCodeChange();  return  false;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments  ==  null)  {  return  false;  t.getCompiler().reportCodeChange();  return  false;  }	  return    false;    t.getCompiler().reportCodeChange();    return    false;    	non-compiled	[CE]  cannot  find  symbol  arguments	173	None	replace
337	[BUG]  [BUGGY]  n.getCompiler().reportCodeChange();  return  false;  [CE]  cannot  find  symbol  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.getCompiler().reportCodeChange();  return  false;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.getCompiler().reportCodeChange();  return  false;	  return    false;    t.getCompiler().reportCodeChange();    return    false;    	non-compiled	[CE]  cannot  find  symbol	173	None	replace
338	[BUG]  [BUGGY]  Context.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  Context  [FE]                RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Context.traverse(compiler,  n,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Context.traverse(compiler,  n,  this);	          NodeTraversal.traverse(compiler,    n,    this);    Converter.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  Context	77	None	replace
339	[BUG]  [BUGGY]  Converter.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  Converter  [FE]                  RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Converter.traverse(compiler,  n,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Converter.traverse(compiler,  n,  this);	          NodeTraversal.traverse(compiler,    n,    this);    Converter.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  Converter	77	None	replace
340	[BUG]  [BUGGY]  TraverseTraversal.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  TraverseTraversal  [FE]                    RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  TraverseTraversal.traverse(compiler,  n,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	TraverseTraversal.traverse(compiler,  n,  this);	          NodeTraversal.traverse(compiler,    n,    this);    Converter.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  TraverseTraversal	77	None	replace
341	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this.constantMap);  [CE]  cannot  find  symbol  constantMap  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this.constantMap);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this.constantMap);	  NodeTraversal.traverse(compiler,    n,    parent,    argumentMap);    	non-compiled	[CE]  cannot  find  symbol  constantMap	52	None	replace
342	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  argumentSet);  [CE]  cannot  find  symbol  argumentSet  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  argumentSet);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  argumentSet);	  NodeTraversal.traverse(compiler,    n,    parent,    argumentMap);    	non-compiled	[CE]  cannot  find  symbol  argumentSet	52	None	replace
343	[BUG]  [BUGGY]  if(arguments  ==  null)  {  return  true;  }  [CE]  cannot  find  symbol  arguments  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments  ==  null)  {  return  true;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments  ==  null)  {  return  true;  }	  if(arguments    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  arguments	21	None	replace
344	[BUG]  [BUGGY]  parent!=  null)  {  for(Node  n  :  arguments.iterator().next())  {  doReportNormalizations(t,  n,  parent);  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  parent!=  null)  {  for(Node  n  :  arguments.iterator().next())  {  doReportNormalizations(t,  n,  parent);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent!=  null)  {  for(Node  n  :  arguments.iterator().next())  {  doReportNormalizations(t,  n,  parent);  }	  if(arguments!=    null)    {    for(Node    n    :    arguments.iterator().next())    {    doReportNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  not  a  statement	112	None	replace
345	[BUG]  [BUGGY]  parent  ==  null)  {  for(Node  n  :  arguments.iterator().next())  {  doReportNormalizations(t,  n,  parent);  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  parent  ==  null)  {  for(Node  n  :  arguments.iterator().next())  {  doReportNormalizations(t,  n,  parent);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent  ==  null)  {  for(Node  n  :  arguments.iterator().next())  {  doReportNormalizations(t,  n,  parent);  }	  if(arguments!=    null)    {    for(Node    n    :    arguments.iterator().next())    {    doReportNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  not  a  statement	112	None	replace
346	[BUG]  [BUGGY]  parent!=  null  &&  arguments.size()  >  0)  {  for(Node  n  :  arguments.iterator().next())  {  doReportNormalizations(t,  n,  parent);  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  parent!=  null  &&  arguments.size()  >  0)  {  for(Node  n  :  arguments.iterator().next())  {  doReportNormalizations(t,  n,  parent);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent!=  null  &&  arguments.size()  >  0)  {  for(Node  n  :  arguments.iterator().next())  {  doReportNormalizations(t,  n,  parent);  }	  if(arguments!=    null)    {    for(Node    n    :    arguments.iterator().next())    {    doReportNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  not  a  statement	112	None	replace
347	[BUG]  [BUGGY]  AssertionFailedError:  for(Node  n  :  arguments.iterator().next())  {  doReportNormalizations(t,  n,  parent);  }  [CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  AssertionFailedError:  for(Node  n  :  arguments.iterator().next())  {  doReportNormalizations(t,  n,  parent);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	AssertionFailedError:  for(Node  n  :  arguments.iterator().next())  {  doReportNormalizations(t,  n,  parent);  }	  if(arguments!=    null)    {    for(Node    n    :    arguments.iterator().next())    {    doReportNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)	112	None	replace
348	[BUG]  [BUGGY]  return  true;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  Function  f()  {  arguments=Array.prototype.slice.call(arguments  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  true;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  Function  f()  {  arguments=Array.prototype.slice.call(arguments  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  true;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  Function  f()  {  arguments=Array.prototype.slice.call(arguments	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    Function    f()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  not  a  statement	123	None	replace
349	[BUG]  [BUGGY]  return  true;  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  Function  f()  {  arguments=Array.prototype.slice.call(arguments  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  true;  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  Function  f()  {  arguments=Array.prototype.slice.call(arguments  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  true;  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  Function  f()  {  arguments=Array.prototype.slice.call(arguments	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    Function    f()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  not  a  statement	123	None	replace
350	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(arguments  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(arguments  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(arguments	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    Function    f()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  not  a  statement	123	None	replace
351	[BUG]  [BUGGY]  return  n  ==  null  &&  arguments.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  n  ==  null  &&  arguments.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  n  ==  null  &&  arguments.contains(n.getString());	  return    arguments    ==    null    &&    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	65	None	replace
352	[BUG]  [BUGGY]  return  arguments  ==  null  &&  argumentMap.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments  ==  null  &&  argumentMap.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  ==  null  &&  argumentMap.contains(n.getString());	  return    arguments    ==    null    &&    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	65	None	replace
353	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  :  constantMap.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  cannot  find  symbol  arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  :  constantMap.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(arguments!=  null);  for(Node  n  :  constantMap.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }	  Preconditions.checkState(arguments!=    null);    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  cannot  find  symbol  arguments	111	None	replace
354	[BUG]  [BUGGY]  Preconditions.checkState(arguments  ==  null);  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(arguments  ==  null);  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(arguments  ==  null);  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }	  Preconditions.checkState(arguments!=    null);    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  cannot  find  symbol  arguments	111	None	replace
355	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  :  arguments.values().next())  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  cannot  find  symbol  arguments  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  :  arguments.values().next())  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(arguments!=  null);  for(Node  n  :  arguments.values().next())  {  doStatementNormalizations(t,  n,  parent);  }	  Preconditions.checkState(arguments!=    null);    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  cannot  find  symbol  arguments	111	None	replace
356	[BUG]  [BUGGY]  Preconditions.checkState(arguments  ==  null);  for(Node  n  :  constantMap.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  cannot  find  symbol  arguments  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(arguments  ==  null);  for(Node  n  :  constantMap.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(arguments  ==  null);  for(Node  n  :  constantMap.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }	  Preconditions.checkState(arguments!=    null);    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  cannot  find  symbol  arguments	111	None	replace
357	[BUG]  [BUGGY]  if(arguments!=  null)  {  return  false;  function()  {  arguments=Array.prototype.slice.call(arguments  >>  ';'  expected  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null)  {  return  false;  function()  {  arguments=Array.prototype.slice.call(arguments  >>  ';'  expected  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null)  {  return  false;  function()  {  arguments=Array.prototype.slice.call(arguments  >>  ';'  expected	  return    false;    function()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  ';'  expected	43	None	replace
358	[BUG]  [BUGGY]  if(arguments!=  null)  {  return  false;  function()  {  arguments=Array.prototype.slice.call(arguments  ==  ';'  expected  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null)  {  return  false;  function()  {  arguments=Array.prototype.slice.call(arguments  ==  ';'  expected  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null)  {  return  false;  function()  {  arguments=Array.prototype.slice.call(arguments  ==  ';'  expected	  return    false;    function()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  ';'  expected	43	None	replace
359	[BUG]  [BUGGY]  if(arguments!=  null)  {  return  false;  function()  {  arguments=Array.prototype.slice.call(arguments  }  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null)  {  return  false;  function()  {  arguments=Array.prototype.slice.call(arguments  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null)  {  return  false;  function()  {  arguments=Array.prototype.slice.call(arguments  }	  return    false;    function()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  ';'  expected	43	None	replace
360	[BUG]  [BUGGY]  if(arguments  ==  null)  {  return  false;  function()  {  arguments=Array.prototype.slice.call(arguments!=  ';'  expected  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments  ==  null)  {  return  false;  function()  {  arguments=Array.prototype.slice.call(arguments!=  ';'  expected  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments  ==  null)  {  return  false;  function()  {  arguments=Array.prototype.slice.call(arguments!=  ';'  expected	  return    false;    function()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  ';'  expected	43	None	replace
361	[BUG]  [BUGGY]  return  true;  function()  {  arguments=Array.prototype.slice.call(arguments  ==  ';'  expected  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  true;  function()  {  arguments=Array.prototype.slice.call(arguments  ==  ';'  expected  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  true;  function()  {  arguments=Array.prototype.slice.call(arguments  ==  ';'  expected	  return    false;    function()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  ';'  expected	43	None	replace
362	[BUG]  [BUGGY]  Preconditions.checkState(n.forbidChanges!=  null);  [CE]  cannot  find  symbol  forbidChanges  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(n.forbidChanges!=  null);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(n.forbidChanges!=  null);	  Preconditions.checkState(this.forbidChanges!=    null);    	non-compiled	[CE]  cannot  find  symbol  forbidChanges	163	None	replace
363	[BUG]  [BUGGY]  Preconditions.checkState(this.forbidChanges  ==  null);  [CE]  cannot  find  symbol  forbidChanges  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(this.forbidChanges  ==  null);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(this.forbidChanges  ==  null);	  Preconditions.checkState(this.forbidChanges!=    null);    	non-compiled	[CE]  cannot  find  symbol  forbidChanges	163	None	replace
364	[BUG]  [BUGGY]  return  arguments!=  null  ||  arguments.contains(n.getLastChild()));  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  ||  arguments.contains(n.getLastChild()));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  ||  arguments.contains(n.getLastChild()));	  return    arguments!=    null    &&    arguments.contains(n.getLastChild()));    	non-compiled	[CE]  ';'  expected	117	None	replace
365	[BUG]  [BUGGY]  return  arguments  ==  null  &&  arguments.contains(n.getLastChild()));  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments  ==  null  &&  arguments.contains(n.getLastChild()));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  ==  null  &&  arguments.contains(n.getLastChild()));	  return    arguments!=    null    &&    arguments.contains(n.getLastChild()));    	non-compiled	[CE]  ';'  expected	117	None	replace
366	[BUG]  [BUGGY]  Preconditions.checkArgument(arguments.length  ==  1  ||  arguments.length!=  1);  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkArgument(arguments.length  ==  1  ||  arguments.length!=  1);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkArgument(arguments.length  ==  1  ||  arguments.length!=  1);	  Preconditions.checkArgument(arguments.length    ==    1    ||    arguments.length    ==    1);    	non-compiled	[CE]  cannot  find  symbol  arguments	61	None	replace
367	[BUG]  [BUGGY]  Preconditions.checkArgument(arguments.length  ==  1  ||  n.length  ==  1);  [CE]  cannot  find  symbol  arguments  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkArgument(arguments.length  ==  1  ||  n.length  ==  1);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkArgument(arguments.length  ==  1  ||  n.length  ==  1);	  Preconditions.checkArgument(arguments.length    ==    1    ||    arguments.length    ==    1);    	non-compiled	[CE]  cannot  find  symbol  arguments	61	None	replace
368	[BUG]  [BUGGY]  Preconditions.checkArgument(arguments.length  ==  1  &&  arguments.length  ==  1);  [CE]  cannot  find  symbol  arguments  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkArgument(arguments.length  ==  1  &&  arguments.length  ==  1);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkArgument(arguments.length  ==  1  &&  arguments.length  ==  1);	  Preconditions.checkArgument(arguments.length    ==    1    ||    arguments.length    ==    1);    	non-compiled	[CE]  cannot  find  symbol  arguments	61	None	replace
369	[BUG]  [BUGGY]  Preconditions.checkArgument(arguments.length!=  1  ||  arguments.length  ==  1);  [CE]  cannot  find  symbol  arguments  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkArgument(arguments.length!=  1  ||  arguments.length  ==  1);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkArgument(arguments.length!=  1  ||  arguments.length  ==  1);	  Preconditions.checkArgument(arguments.length    ==    1    ||    arguments.length    ==    1);    	non-compiled	[CE]  cannot  find  symbol  arguments	61	None	replace
370	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  argumentSettings);  [CE]  cannot  find  symbol  argumentSettings  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  argumentSettings);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  argumentSettings);	  NodeTraversal.traverse(compiler,    n,    parent,    argumentStatements);    	non-compiled	[CE]  cannot  find  symbol  argumentSettings	36	None	replace
371	[BUG]  [BUGGY]  node.removeChild(parent);  NodeUtil.removeChild(n,  parent);  [CE]  cannot  find  symbol  node  [FE]    RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  node.removeChild(parent);  NodeUtil.removeChild(n,  parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	node.removeChild(parent);  NodeUtil.removeChild(n,  parent);	          n.removeChild(parent);    NodeUtil.removeChild(n,    parent);    	non-compiled	[CE]  cannot  find  symbol  node	5	None	replace
372	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  localVarArgs);  [CE]  cannot  find  symbol  localVarArgs  [FE]        RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  localVarArgs);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  this,  localVarArgs);	  NodeTraversal.traverse(compiler,    n,    this,    arguments);    	non-compiled	[CE]  cannot  find  symbol  localVarArgs	69	None	replace
373	[BUG]  [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)&&  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   "));  [CE]  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)&&  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   "));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  ||  arguments.size()  >  0)&&  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   "));	  return(arguments!=    null    ||    arguments.size()    >    0)||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       "));    	non-compiled	[CE]  	92	None	replace
374	[BUG]  [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   "));  [CE]  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   "));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   "));	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   "));    	non-compiled	[CE]  	144	None	replace
375	[BUG]  [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-->   ")||  arguments.contains( "-->   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-->   ")||  arguments.contains( "-->   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-->   ")||  arguments.contains( "-->   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ")||    arguments.contains(   "-->   ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains    	non-compiled	[CE]  <identifier>  expected	151	None	replace
376	[BUG]  [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-->   ")||  arguments.contains( "-->   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-->   ")||  arguments.contains( "-->   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-->   ")||  arguments.contains( "-->   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ")||    arguments.contains(   "-->   ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
377	[BUG]  [BUGGY]  ||  arguments.contains( "-->   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  ||  arguments.contains( "-->   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	||  arguments.contains( "-->   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ")||    arguments.contains(   "-->   ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
378	[BUG]  [BUGGY]  ||  arguments.contains( "-->   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  ||  arguments.contains( "-->   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	||  arguments.contains( "-->   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ")||    arguments.contains(   "-->   ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
379	[BUG]  [BUGGY]  ||  arguments.contains( "-->   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  ||  arguments.contains( "-->   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	||  arguments.contains( "-->   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ")||    arguments.contains(   "-->   ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
380	[BUG]  [BUGGY]  Return  arguments!=  null  &&  arguments.size()  ==  0;  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Return  arguments!=  null  &&  arguments.size()  ==  0;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Return  arguments!=  null  &&  arguments.size()  ==  0;	  Return    arguments!=    null    &&    arguments.size()    >    0;    	non-compiled	[CE]  ';'  expected	13	None	replace
381	[BUG]  [BUGGY]  Return  arguments!=  null  &&  arguments.size()  >  1;  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Return  arguments!=  null  &&  arguments.size()  >  1;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Return  arguments!=  null  &&  arguments.size()  >  1;	  Return    arguments!=    null    &&    arguments.size()    >    0;    	non-compiled	[CE]  ';'  expected	13	None	replace
382	[BUG]  [BUGGY]  return  arguments!=  null  &&  parent.contains(arguments.getString());  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  &&  parent.contains(arguments.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  parent.contains(arguments.getString());	  return    arguments!=    null    &&    arguments.contains(parent.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	134	None	replace
383	[BUG]  [BUGGY]  return  parent!=  null  &&  arguments.contains(parent.getString());  [CE]  cannot  find  symbol  arguments  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  parent!=  null  &&  arguments.contains(parent.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  parent!=  null  &&  arguments.contains(parent.getString());	  return    arguments!=    null    &&    arguments.contains(parent.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	134	None	replace
384	[BUG]  [BUGGY]  return  parents!=  null  &&  arguments.contains(parent.getString());  [CE]  cannot  find  symbol  parents  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  parents!=  null  &&  arguments.contains(parent.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  parents!=  null  &&  arguments.contains(parent.getString());	  return    arguments!=    null    &&    arguments.contains(parent.getString());    	non-compiled	[CE]  cannot  find  symbol  parents	134	None	replace
385	[BUG]  [BUGGY]  return  arguments!=  null  &&  parents.contains(parent.getString());  [CE]  cannot  find  symbol  arguments  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  &&  parents.contains(parent.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  parents.contains(parent.getString());	  return    arguments!=    null    &&    arguments.contains(parent.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	134	None	replace
386	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(parent,  n);  n.removeChild(parent);  NodeUtil.removeChild(parent,  n);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	add	                n.removeChild(parent);        NodeUtil.removeChild(parent,    n);    n.removeChild(parent);  NodeUtil.removeChild(parent,  n);	  	compilable	  [FE]  RuntimeException  	99	13	add
387	[BUG]  [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(parent,  n);  n.removeChild(parent);  NodeUtil.removeChild(parent,  n);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(parent,  n);  n.removeChild(parent);  NodeUtil.removeChild(parent,  n);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	                n.removeChild(parent);        NodeUtil.removeChild(parent,    n);    n.removeChild(parent);  NodeUtil.removeChild(parent,  n);	  	compilable	  [FE]  RuntimeException  	99	13	add
388	[BUG]  [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(parent,  n);  NodeUtil.removeChild(parent);  NodeUtil.removeChild(parent,  n);  [CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]      RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(parent,  n);  NodeUtil.removeChild(parent);  NodeUtil.removeChild(parent,  n);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	                n.removeChild(parent);        NodeUtil.removeChild(parent,    n);    NodeUtil.removeChild(parent);  NodeUtil.removeChild(parent,  n);	  	non-compiled	[CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;	99	None	add
389	[BUG]  [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(parent,  n);  node.removeChild(parent);  NodeUtil.removeChild(parent,  n);  [CE]  cannot  find  symbol  node  [FE]        RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(parent,  n);  node.removeChild(parent);  NodeUtil.removeChild(parent,  n);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	                n.removeChild(parent);        NodeUtil.removeChild(parent,    n);    node.removeChild(parent);  NodeUtil.removeChild(parent,  n);	  	non-compiled	[CE]  cannot  find  symbol  node	99	None	add
390	[BUG]  [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(parent,  n);  NodeUtil.removeChild(n);  NodeUtil.removeChild(parent,  n);  [CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]          RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(parent,  n);  NodeUtil.removeChild(n);  NodeUtil.removeChild(parent,  n);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	                n.removeChild(parent);        NodeUtil.removeChild(parent,    n);    NodeUtil.removeChild(n);  NodeUtil.removeChild(parent,  n);	  	non-compiled	[CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;	99	None	add
391	[BUG]  [BUGGY]  n.removeChild(n);  NodeUtil.removeChild(parent,  n);  [CE]  missing  return  statement  [FE]    RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.removeChild(n);  NodeUtil.removeChild(parent,  n);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.removeChild(n);  NodeUtil.removeChild(parent,  n);	          n.removeChild(parent);    NodeUtil.removeChild(parent,    n);    	non-compiled	[CE]  missing  return  statement	100	None	replace
392	[BUG]  [BUGGY]  if(arguments!=  null  ||  arguments.contains(n.getString()))  {  return  true;  }  [CE]  cannot  find  symbol  arguments  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null  ||  arguments.contains(n.getString()))  {  return  true;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null  ||  arguments.contains(n.getString()))  {  return  true;  }	  return    arguments!=    null    ||    arguments.contains(n.getString()));    	non-compiled	[CE]  cannot  find  symbol  arguments	79	None	replace
393	[BUG]  [BUGGY]  return  arguments  ==  null  &&  arguments.size()  >  1;  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments  ==  null  &&  arguments.size()  >  1;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  ==  null  &&  arguments.size()  >  1;	  return    arguments!=    null    &&    arguments.size()    >    1;    	non-compiled	[CE]  cannot  find  symbol  arguments	157	None	replace
394	[BUG]  [BUGGY]  return  argumentNames!=  null  &&  arguments.size()  >  1;  [CE]  cannot  find  symbol  argumentNames  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  argumentNames!=  null  &&  arguments.size()  >  1;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  argumentNames!=  null  &&  arguments.size()  >  1;	  return    arguments!=    null    &&    arguments.size()    >    1;    	non-compiled	[CE]  cannot  find  symbol  argumentNames	157	None	replace
395	[BUG]  [BUGGY]  return  arguments  >=  null  &&  arguments.size()  >  1;  [CE]  cannot  find  symbol  arguments  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments  >=  null  &&  arguments.size()  >  1;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  >=  null  &&  arguments.size()  >  1;	  return    arguments!=    null    &&    arguments.size()    >    1;    	non-compiled	[CE]  cannot  find  symbol  arguments	157	None	replace
396	[BUG]  [BUGGY]  Node  parent  =  n.getParent();  [CE]  variable  parent  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)  [FE]                RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Node  parent  =  n.getParent();  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Node  parent  =  n.getParent();	          n.removeChild(parent);    Node    parent    =    n.getParent();    	non-compiled	[CE]  variable  parent  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)	7	None	replace
397	[BUG]  [BUGGY]  node.removeChild(parent);  Node  parent  =  n.getParent();  [CE]  cannot  find  symbol  node  [FE]                  RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  node.removeChild(parent);  Node  parent  =  n.getParent();  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	node.removeChild(parent);  Node  parent  =  n.getParent();	          n.removeChild(parent);    Node    parent    =    n.getParent();    	non-compiled	[CE]  cannot  find  symbol  node	7	None	replace
398	[BUG]  [BUGGY]  node.removeChild(n);  Node  parent  =  n.getParent();  [CE]  cannot  find  symbol  node  [FE]                    RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  node.removeChild(n);  Node  parent  =  n.getParent();  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	node.removeChild(n);  Node  parent  =  n.getParent();	          n.removeChild(parent);    Node    parent    =    n.getParent();    	non-compiled	[CE]  cannot  find  symbol  node	7	None	replace
399	[BUG]  [BUGGY]  n.removeChild(parent);  Node  parent  =  n.getNext();  [CE]  variable  parent  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)  [FE]                      RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.removeChild(parent);  Node  parent  =  n.getNext();  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.removeChild(parent);  Node  parent  =  n.getNext();	          n.removeChild(parent);    Node    parent    =    n.getParent();    	non-compiled	[CE]  variable  parent  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)	7	None	replace
400	[BUG]  [BUGGY]  parent!=  null  &&  arguments.size()  ==  0)  {  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  parent!=  null  &&  arguments.size()  ==  0)  {  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent!=  null  &&  arguments.size()  ==  0)  {  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }	  parent!=    null    &&    arguments.size()    >    0)    {    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  not  a  statement	57	None	replace
401	[BUG]  [BUGGY]  parent!=  null  &&  arguments.size()  >  0)  {  for(Node  n  :  this.arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  parent!=  null  &&  arguments.size()  >  0)  {  for(Node  n  :  this.arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent!=  null  &&  arguments.size()  >  0)  {  for(Node  n  :  this.arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }	  parent!=    null    &&    arguments.size()    >    0)    {    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  not  a  statement	57	None	replace
402	[BUG]  [BUGGY]  parent!=  null  &&  arguments.size()  >  1)  {  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  parent!=  null  &&  arguments.size()  >  1)  {  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent!=  null  &&  arguments.size()  >  1)  {  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }	  parent!=    null    &&    arguments.size()    >    0)    {    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  not  a  statement	57	None	replace
403	[BUG]  [BUGGY]  return!arguments.isEmpty()  ||  n.hasChildren();  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return!arguments.isEmpty()  ||  n.hasChildren();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return!arguments.isEmpty()  ||  n.hasChildren();	  return!arguments.isEmpty()    &&    n.hasChildren();    	non-compiled	[CE]  cannot  find  symbol  arguments	24	None	replace
404	[BUG]  [BUGGY]  return!arguments.isEmpty()  &&  parent.hasChildren();  [CE]  cannot  find  symbol  arguments  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return!arguments.isEmpty()  &&  parent.hasChildren();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return!arguments.isEmpty()  &&  parent.hasChildren();	  return!arguments.isEmpty()    &&    n.hasChildren();    	non-compiled	[CE]  cannot  find  symbol  arguments	24	None	replace
405	[BUG]  [BUGGY]  return  n.isEmpty()  &&  arguments.hasChildren();  [CE]  cannot  find  symbol  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  n.isEmpty()  &&  arguments.hasChildren();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  n.isEmpty()  &&  arguments.hasChildren();	  return!arguments.isEmpty()    &&    n.hasChildren();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
406	[BUG]  [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)&&  arguments.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)&&  arguments.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  ||  arguments.size()  >  0)&&  arguments.contains(n.getString());	  return(arguments!=    null    ||    arguments.size()    >    0)||    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	28	None	replace
407	[BUG]  [BUGGY]  return(arguments  ==  null  ||  arguments.size()  >  0)&&  arguments.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments  ==  null  ||  arguments.size()  >  0)&&  arguments.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments  ==  null  ||  arguments.size()  >  0)&&  arguments.contains(n.getString());	  return(arguments!=    null    ||    arguments.size()    >    0)||    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	28	None	replace
408	[BUG]  [BUGGY]  return(arguments!=  null  ||  n.size()  >  0)||  arguments.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  ||  n.size()  >  0)||  arguments.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  ||  n.size()  >  0)||  arguments.contains(n.getString());	  return(arguments!=    null    ||    arguments.size()    >    0)||    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	28	None	replace
409	[BUG]  [BUGGY]  return  arguments!=  null  ||!arguments.isEmpty();  [CE]  cannot  find  symbol  arguments  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  ||!arguments.isEmpty();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  ||!arguments.isEmpty();	  return    arguments!=    null    ||    arguments.isEmpty();    	non-compiled	[CE]  cannot  find  symbol  arguments	11	None	replace
410	[BUG]  [BUGGY]  ||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  ||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
411	[BUG]  [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")  [CE]  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")    	non-compiled	[CE]  	146	None	replace
412	[BUG]  [BUGGY]  |(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  |(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	|(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
413	[BUG]  [BUGGY]  Node  parent!=  null  &&  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Node  parent!=  null  &&  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Node  parent!=  null  &&  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }	  parent!=    null    &&    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  ';'  expected	165	None	replace
414	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  arguments,  t.next()))  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  arguments,  t.next()))  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  arguments,  t.next()))  {  doStatementNormalizations(t,  n,  parent);  }	  parent!=    null    &&    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  ';'  expected	165	None	replace
415	[BUG]  [BUGGY]  parent!=  null  &&  arguments.size()  >  0)  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  parent!=  null  &&  arguments.size()  >  0)  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent!=  null  &&  arguments.size()  >  0)  {  doStatementNormalizations(t,  n,  parent);  }	  parent!=    null    &&    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  not  a  statement	165	None	replace
416	[BUG]  [BUGGY]  return(parent!=  null  &&  arguments.size()  >  0)||  arguments.contains(n,  parent.getString());  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(parent!=  null  &&  arguments.size()  >  0)||  arguments.contains(n,  parent.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(parent!=  null  &&  arguments.size()  >  0)||  arguments.contains(n,  parent.getString());	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(n,    parent.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	159	None	replace
417	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  constantMap.contains(n,  parent.getString());  [CE]  cannot  find  symbol  arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  constantMap.contains(n,  parent.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  constantMap.contains(n,  parent.getString());	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(n,    parent.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	159	None	replace
418	[BUG]  [BUGGY]  Return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains(n,  parent.getString());  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains(n,  parent.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains(n,  parent.getString());	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(n,    parent.getString());    	non-compiled	[CE]  not  a  statement	159	None	replace
419	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  parent.contains(n,  parent.getString());  [CE]  cannot  find  symbol  arguments  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  parent.contains(n,  parent.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  parent.contains(n,  parent.getString());	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(n,    parent.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	159	None	replace
420	[BUG]  [BUGGY]  return  arguments  ==  null  &&  arguments.size  >  0;  [CE]  cannot  find  symbol  arguments  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments  ==  null  &&  arguments.size  >  0;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  ==  null  &&  arguments.size  >  0;	  return    arguments!=    null    &&    arguments.size    >    0;    	non-compiled	[CE]  cannot  find  symbol  arguments	142	None	replace
421	[BUG]  [BUGGY]  Return  arguments!=  null  &&  arguments.size  >  0;  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Return  arguments!=  null  &&  arguments.size  >  0;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Return  arguments!=  null  &&  arguments.size  >  0;	  return    arguments!=    null    &&    arguments.size    >    0;    	non-compiled	[CE]  ';'  expected	142	None	replace
422	[BUG]  [BUGGY]  return  arguments  >=  null  &&  arguments.size  >  0;  [CE]  cannot  find  symbol  arguments  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments  >=  null  &&  arguments.size  >  0;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  >=  null  &&  arguments.size  >  0;	  return    arguments!=    null    &&    arguments.size    >    0;    	non-compiled	[CE]  cannot  find  symbol  arguments	142	None	replace
423	[BUG]  [BUGGY]  if(arguments!=  null)  {  return  false;  NodeTraversal.traverse(compiler,  n,  parent);  }  [CE]  cannot  find  symbol  arguments  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null)  {  return  false;  NodeTraversal.traverse(compiler,  n,  parent);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null)  {  return  false;  NodeTraversal.traverse(compiler,  n,  parent);  }	  return    false;    NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  arguments	120	None	replace
424	[BUG]  [BUGGY]  if(arguments  ==  null)  {  return  false;  NodeTraversal.traverse(compiler,  n,  parent);  }  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments  ==  null)  {  return  false;  NodeTraversal.traverse(compiler,  n,  parent);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments  ==  null)  {  return  false;  NodeTraversal.traverse(compiler,  n,  parent);  }	  return    false;    NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  arguments	120	None	replace
425	[BUG]  [BUGGY]  if(arguments!=  null)  {  return  false;  NodeTraversal.traverse(compiler,  n,  parent);  }  else  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  cannot  find  symbol  arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null)  {  return  false;  NodeTraversal.traverse(compiler,  n,  parent);  }  else  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null)  {  return  false;  NodeTraversal.traverse(compiler,  n,  parent);  }  else  {  doStatementNormalizations(t,  n,  parent);  }	  return    false;    NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  arguments	120	None	replace
426	[BUG]  [BUGGY]  if(arguments!=  null)  {  return  false;  NodeTraversal.traverse(compiler,  n,  parent);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null)  {  return  false;  NodeTraversal.traverse(compiler,  n,  parent);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null)  {  return  false;  NodeTraversal.traverse(compiler,  n,  parent);  }  else  {  throw  new  IllegalStateException( " ");  }	  return    false;    NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  arguments	120	None	replace
427	[BUG]  [BUGGY]  return  argument!=  null  &&  argument.isEmpty();  [CE]  cannot  find  symbol  argument  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  argument!=  null  &&  argument.isEmpty();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  argument!=  null  &&  argument.isEmpty();	  return    arguments!=    null    &&    argument.isEmpty();    	non-compiled	[CE]  cannot  find  symbol  argument	8	None	replace
428	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  parent!=  null  &&  parent.hasChildren();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	add	return  parent!=  null  &&  parent.hasChildren();	  return    arguments!=    null    &&    parent.hasChildren();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  	140	1	replace
429	[BUG]  [BUGGY]  return  parent!=  null  &&  parent.hasChildren();  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  parent!=  null  &&  parent.hasChildren();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  parent!=  null  &&  parent.hasChildren();	  return    arguments!=    null    &&    parent.hasChildren();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  	140	1	replace
430	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  n!=  null  &&  parent.hasChildren();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	add	return  n!=  null  &&  parent.hasChildren();	  return    arguments!=    null    &&    parent.hasChildren();    	compilable	  [FE]  RuntimeException  	140	13	replace
431	[BUG]  [BUGGY]  return  n!=  null  &&  parent.hasChildren();  [FE]  RuntimeException  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  n!=  null  &&  parent.hasChildren();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  n!=  null  &&  parent.hasChildren();	  return    arguments!=    null    &&    parent.hasChildren();    	compilable	  [FE]  RuntimeException  	140	13	replace
432	[BUG]  [BUGGY]  return  arguments  ==  null  &&  parent.hasChildren();  [CE]  cannot  find  symbol  arguments  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments  ==  null  &&  parent.hasChildren();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  ==  null  &&  parent.hasChildren();	  return    arguments!=    null    &&    parent.hasChildren();    	non-compiled	[CE]  cannot  find  symbol  arguments	140	None	replace
433	[BUG]  [BUGGY]  return  argument!=  null  &&  parent.hasChildren();  [CE]  cannot  find  symbol  argument  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  argument!=  null  &&  parent.hasChildren();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  argument!=  null  &&  parent.hasChildren();	  return    arguments!=    null    &&    parent.hasChildren();    	non-compiled	[CE]  cannot  find  symbol  argument	140	None	replace
434	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  labelNodes);  [CE]  cannot  find  symbol  labelNodes  [FE]        RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  labelNodes);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  this,  labelNodes);	  NodeTraversal.traverse(compiler,    n,    this,    arguments);    	non-compiled	[CE]  cannot  find  symbol  labelNodes	69	None	replace
435	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-N   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")  [CE]  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-N   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-N   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")    	non-compiled	[CE]  	146	None	replace
436	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.con  [CE]  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.con  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.con	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "--   ")||    arguments.contains(   "--   ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.    	non-compiled	[CE]  	152	None	replace
437	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.contains(  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.contains(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-   ")||  arguments.contains(	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "--   ")||    arguments.contains(   "--   ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
438	[BUG]  [BUGGY]  return(arguments!=  null  &&  argumentMap.size()  >  0)||  constantMap.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  argumentMap.size()  >  0)||  constantMap.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  argumentMap.size()  >  0)||  constantMap.contains(n.getString());	  return(arguments!=    null    &&    arguments.size()    >    0)||    constantMap.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	25	None	replace
439	[BUG]  [BUGGY]  return  true;  NodeTraversal.Traversal.traverse(compiler,  n,  parent);  [CE]  cannot  find  symbol  Traversal  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  true;  NodeTraversal.Traversal.traverse(compiler,  n,  parent);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  true;  NodeTraversal.Traversal.traverse(compiler,  n,  parent);	  return    false;    NodeTraversal.Traversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  Traversal	42	None	replace
440	[BUG]  [BUGGY]  NodeTraversal.Traversal.traverse(compiler,  n,  parent);  [CE]  cannot  find  symbol  Traversal  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.Traversal.traverse(compiler,  n,  parent);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.Traversal.traverse(compiler,  n,  parent);	  return    false;    NodeTraversal.Traversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  Traversal	42	None	replace
441	[BUG]  [BUGGY]  if(shouldTraverse)  {  return  false;  NodeTraversal.Traversal.traverse(compiler,  n,  parent);  }  [CE]  cannot  find  symbol  shouldTraverse  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(shouldTraverse)  {  return  false;  NodeTraversal.Traversal.traverse(compiler,  n,  parent);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(shouldTraverse)  {  return  false;  NodeTraversal.Traversal.traverse(compiler,  n,  parent);  }	  return    false;    NodeTraversal.Traversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  shouldTraverse	42	None	replace
442	[BUG]  [BUGGY]  return  false;  NodeTraversal.Traversal.traverse(compiler,  n,  parent,  arguments);  [CE]  cannot  find  symbol  arguments  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  false;  NodeTraversal.Traversal.traverse(compiler,  n,  parent,  arguments);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  false;  NodeTraversal.Traversal.traverse(compiler,  n,  parent,  arguments);	  return    false;    NodeTraversal.Traversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  arguments	42	None	replace
443	[BUG]  [BUGGY]  Preconditions.checkState(argumentMap  ==  null);  [CE]  cannot  find  symbol  argumentMap  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(argumentMap  ==  null);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(argumentMap  ==  null);	  Preconditions.checkState(argumentNames    ==    null);    	non-compiled	[CE]  cannot  find  symbol  argumentMap	131	None	replace
444	[BUG]  [BUGGY]  Preconditions.checkState(parent  ==  null);  NodeTraversal.traverse(compiler,  n,  this);  [CE]  missing  return  statement  [FE]        RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(parent  ==  null);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(parent  ==  null);  NodeTraversal.traverse(compiler,  n,  this);	          NodeTraversal.traverse(compiler,    n,    this);    Preconditions.checkState(arguments    ==    null);    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  missing  return  statement	94	None	replace
445	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent);  Preconditions.checkState(arguments  ==  null);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node)  [FE]          RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent);  Preconditions.checkState(arguments  ==  null);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent);  Preconditions.checkState(arguments  ==  null);	          NodeTraversal.traverse(compiler,    n,    this);    Preconditions.checkState(arguments    ==    null);    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node)	94	None	replace
446	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")  [CE]  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")	  return(arguments!=    null    ||    arguments.size()    >    0)||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       "));    	non-compiled	[CE]  	104	None	replace
447	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  null);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Normalize,<null>)  [FE]        RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  null);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  this,  null);	  NodeTraversal.traverse(compiler,    n,    this,    forbidChanges);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Normalize,<null>)	161	None	replace
448	[BUG]  [BUGGY]  return  true;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  true;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  true;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(    	non-compiled	[CE]  not  a  statement	121	None	replace
449	[BUG]  [BUGGY]  return  false;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  false;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  false;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(    	non-compiled	[CE]  not  a  statement	121	None	replace
450	[BUG]  [BUGGY]  return  true;  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  true;  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  true;  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(    	non-compiled	[CE]  not  a  statement	121	None	replace
451	[BUG]  [BUGGY]  &&  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  &&  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	&&  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
452	[BUG]  [BUGGY]  return  argument!=  null  &&  constantMap.contains(n.getString());  [CE]  cannot  find  symbol  argument  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  argument!=  null  &&  constantMap.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  argument!=  null  &&  constantMap.contains(n.getString());	  return    arguments!=    null    &&    constantMap.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  argument	133	None	replace
453	[BUG]  [BUGGY]  n.replaceChild(n,  NodeUtil.newNumber(parent));  [CE]  cannot  find  symbol  [FE]        RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.replaceChild(n,  NodeUtil.newNumber(parent));  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.replaceChild(n,  NodeUtil.newNumber(parent));	  n.replaceChild(n,    parent);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
454	[BUG]  [BUGGY]  n.replaceChild(n,  NodeUtil.newString(Token.NAME,  parent));  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.replaceChild(n,  NodeUtil.newString(Token.NAME,  parent));  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.replaceChild(n,  NodeUtil.newString(Token.NAME,  parent));	  n.replaceChild(n,    parent);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
455	[BUG]  [BUGGY]  return(arguments!=  null)&&!arguments.contains(n,  parent.getLastChild());  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null)&&!arguments.contains(n,  parent.getLastChild());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null)&&!arguments.contains(n,  parent.getLastChild());	  return(arguments!=    null)&&!arguments.contains(n.getLastChild());    	non-compiled	[CE]  cannot  find  symbol  arguments	127	None	replace
456	[BUG]  [BUGGY]  parent!=  null  &&  arguments.iterator().hasNext())  {  doStatementNormalizations(t,  n,  parent);  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  parent!=  null  &&  arguments.iterator().hasNext())  {  doStatementNormalizations(t,  n,  parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent!=  null  &&  arguments.iterator().hasNext())  {  doStatementNormalizations(t,  n,  parent);	  parent!=    null    &&    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    	non-compiled	[CE]  not  a  statement	59	None	replace
457	[BUG]  [BUGGY]  return  arguments!=  null  &&  constantMap.isEmpty();  [CE]  cannot  find  symbol  arguments  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  &&  constantMap.isEmpty();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  constantMap.isEmpty();	  return    arguments!=    null    &&    argumentMap.isEmpty();    	non-compiled	[CE]  cannot  find  symbol  arguments	10	None	replace
458	[BUG]  [BUGGY]  return  argumentNames!=  null  ||  arguments.length  >  0;  [CE]  cannot  find  symbol  argumentNames  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  argumentNames!=  null  ||  arguments.length  >  0;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  argumentNames!=  null  ||  arguments.length  >  0;	  return    arguments!=    null    ||    arguments.length    >    0;    	non-compiled	[CE]  cannot  find  symbol  argumentNames	17	None	replace
459	[BUG]  [BUGGY]  Preconditions.checkNotNull(parent,  n);  [CE]  missing  return  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkNotNull(parent,  n);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkNotNull(parent,  n);	  Preconditions.checkNotNull(arguments,    n);    	non-compiled	[CE]  missing  return  statement	129	None	replace
460	[BUG]  [BUGGY]  parent  ==  null)  {  for(Node  n  :  constantMap.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  parent  ==  null)  {  for(Node  n  :  constantMap.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent  ==  null)  {  for(Node  n  :  constantMap.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }	  parent    ==    null)    {    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  not  a  statement	56	None	replace
461	[BUG]  [BUGGY]  Node  n  =  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Node  n  =  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Node  n  =  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }	  parent    ==    null)    {    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  ';'  expected	56	None	replace
462	[BUG]  [BUGGY]  n.replaceChild(n,  new  Node(Token.EMPTY),  false);  [CE]  method  replaceChild  in  class  Node  cannot  be  applied  to  given  types;  [FE]            RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.replaceChild(n,  new  Node(Token.EMPTY),  false);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.replaceChild(n,  new  Node(Token.EMPTY),  false);	  n.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  method  replaceChild  in  class  Node  cannot  be  applied  to  given  types;	109	None	replace
463	[BUG]  [BUGGY]  Preconditions.checkState(argumentation!=  null);  [CE]  cannot  find  symbol  argumentation  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(argumentation!=  null);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(argumentation!=  null);	  Preconditions.checkState(argumentations    ==    null);    	non-compiled	[CE]  cannot  find  symbol  argumentation	48	None	replace
464	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.equalsIgnoreCase(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.equalsIgnoreCase(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.equalsIgnoreCase(n.getString());	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.equals(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	154	None	replace
465	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  argumentNames.equals(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  argumentNames.equals(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  argumentNames.equals(n.getString());	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.equals(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	154	None	replace
466	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  argumentMap.equals(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  argumentMap.equals(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  argumentMap.equals(n.getString());	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.equals(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	154	None	replace
467	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null  &&  arguments.contains(n.getString());  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(arguments!=  null  &&  arguments.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(arguments!=  null  &&  arguments.contains(n.getString());	  Return    arguments!=    null    &&    arguments.contains(n.getString());    	non-compiled	[CE]  ')'  expected	68	None	replace
468	[BUG]  [BUGGY]  Context.checkState(arguments!=  null);  [CE]  cannot  find  symbol  arguments  [FE]            RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Context.checkState(arguments!=  null);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Context.checkState(arguments!=  null);	          NodeTraversal.traverse(compiler,    n,    this);    Context.checkState(arguments!=    null);    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  arguments	75	None	replace
469	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent);  Context.checkState(arguments!=  null);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node)  [FE]              RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent);  Context.checkState(arguments!=  null);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent);  Context.checkState(arguments!=  null);	          NodeTraversal.traverse(compiler,    n,    this);    Context.checkState(arguments!=    null);    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node)	75	None	replace
470	[BUG]  [BUGGY]  return  false;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function  f()  ==  arguments=Array.prototype.slice.call(  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  false;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function  f()  ==  arguments=Array.prototype.slice.call(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  false;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function  f()  ==  arguments=Array.prototype.slice.call(	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    function    f()    ==    arguments=Array.prototype.slice.call(    	non-compiled	[CE]  not  a  statement	124	None	replace
471	[BUG]  [BUGGY]  return  true;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function  f()  ==  arguments=Array.prototype.slice.call(  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  true;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function  f()  ==  arguments=Array.prototype.slice.call(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  true;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function  f()  ==  arguments=Array.prototype.slice.call(	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    function    f()    ==    arguments=Array.prototype.slice.call(    	non-compiled	[CE]  not  a  statement	124	None	replace
472	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function  f()  ==  arguments=Array.prototype.slice.call(  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function  f()  ==  arguments=Array.prototype.slice.call(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function  f()  ==  arguments=Array.prototype.slice.call(	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    function    f()    ==    arguments=Array.prototype.slice.call(    	non-compiled	[CE]  not  a  statement	124	None	replace
473	[BUG]  [BUGGY]  return  false;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function  f()  ==  arguments=Array.prototype.slice.call  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  false;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function  f()  ==  arguments=Array.prototype.slice.call  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  false;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function  f()  ==  arguments=Array.prototype.slice.call	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    function    f()    ==    arguments=Array.prototype.slice.call(    	non-compiled	[CE]  not  a  statement	124	None	replace
474	[BUG]  [BUGGY]  Node  args  =  arguments.iterator();  [CE]  cannot  find  symbol  arguments  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Node  args  =  arguments.iterator();  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Node  args  =  arguments.iterator();	  Node    args    =    arguments.iterator().next();    	non-compiled	[CE]  cannot  find  symbol  arguments	116	None	replace
475	[BUG]  [BUGGY]  Node  args  =  values.iterator().next();  [CE]  cannot  find  symbol  values  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Node  args  =  values.iterator().next();  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Node  args  =  values.iterator().next();	  Node    args    =    arguments.iterator().next();    	non-compiled	[CE]  cannot  find  symbol  values	116	None	replace
476	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  argumentMap.contains(n,  parent.getString());  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  argumentMap.contains(n,  parent.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  argumentMap.contains(n,  parent.getString());	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(n,    parent.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	159	None	replace
477	[BUG]  [BUGGY]  return(arguments!=  null  &&  argumentCount.size()  >  0)||  arguments.contains(n,  parent.getString());  [CE]  cannot  find  symbol  arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  argumentCount.size()  >  0)||  arguments.contains(n,  parent.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  argumentCount.size()  >  0)||  arguments.contains(n,  parent.getString());	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(n,    parent.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	159	None	replace
478	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains(parent,  n.getString());  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains(parent,  n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains(parent,  n.getString());	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(n,    parent.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	159	None	replace
479	[BUG]  [BUGGY]  return  argumentCount!=  null  &&  arguments.isEmpty();  [CE]  cannot  find  symbol  argumentCount  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  argumentCount!=  null  &&  arguments.isEmpty();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  argumentCount!=  null  &&  arguments.isEmpty();	  return    arguments!=    null    &&    argumentCount.isEmpty();    	non-compiled	[CE]  cannot  find  symbol  argumentCount	96	None	replace
480	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  :  arguments.iterator().next())  {  doReportNormalizations(t,  n,  parent);  }  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  :  arguments.iterator().next())  {  doReportNormalizations(t,  n,  parent);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(arguments!=  null);  for(Node  n  :  arguments.iterator().next())  {  doReportNormalizations(t,  n,  parent);  }	  if(arguments!=    null)    {    for(Node    n    :    arguments.iterator().next())    {    doReportNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  cannot  find  symbol  arguments	112	None	replace
481	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null)  {  for(Node  n  :  arguments.iterator().next())  {  doReportNormalizations(t,  n,  parent);  }  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(arguments!=  null)  {  for(Node  n  :  arguments.iterator().next())  {  doReportNormalizations(t,  n,  parent);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(arguments!=  null)  {  for(Node  n  :  arguments.iterator().next())  {  doReportNormalizations(t,  n,  parent);  }	  if(arguments!=    null)    {    for(Node    n    :    arguments.iterator().next())    {    doReportNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  ';'  expected	112	None	replace
482	[BUG]  [BUGGY]  if(!shouldTraverse)  {  return  false;  t.getCompiler().reportCodeChange();  return  false;  }  [CE]  cannot  find  symbol  shouldTraverse  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(!shouldTraverse)  {  return  false;  t.getCompiler().reportCodeChange();  return  false;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(!shouldTraverse)  {  return  false;  t.getCompiler().reportCodeChange();  return  false;  }	  return    false;    t.getCompiler().reportCodeChange();    return    false;    	non-compiled	[CE]  cannot  find  symbol  shouldTraverse	173	None	replace
483	[BUG]  [BUGGY]  return  arguments!=  null  ||  argumentMap.isEmpty();  [CE]  cannot  find  symbol  arguments  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  ||  argumentMap.isEmpty();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  ||  argumentMap.isEmpty();	  return    arguments!=    null    ||    arguments.isEmpty();    	non-compiled	[CE]  cannot  find  symbol  arguments	11	None	replace
484	[BUG]  [BUGGY]  return  arguments!=  null  ||  n.isEmpty();  [CE]  cannot  find  symbol  arguments  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  ||  n.isEmpty();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  ||  n.isEmpty();	  return    arguments!=    null    ||    arguments.isEmpty();    	non-compiled	[CE]  cannot  find  symbol  arguments	11	None	replace
485	[BUG]  [BUGGY]  return  argumentMap!=  null  &&  argumentMap.contains(n.getString());  [CE]  cannot  find  symbol  argumentMap  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  argumentMap!=  null  &&  argumentMap.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  argumentMap!=  null  &&  argumentMap.contains(n.getString());	  return    arguments!=    null    &&    argumentMap.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  argumentMap	67	None	replace
486	[BUG]  [BUGGY]  return  argumentMap!=  null  &&  arguments.contains(n.getString());  [CE]  cannot  find  symbol  argumentMap  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  argumentMap!=  null  &&  arguments.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  argumentMap!=  null  &&  arguments.contains(n.getString());	  return    arguments!=    null    &&    argumentMap.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  argumentMap	67	None	replace
487	[BUG]  [BUGGY]  return  argumentMap!=  null  &&  constantMap.contains(n.getString());  [CE]  cannot  find  symbol  argumentMap  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  argumentMap!=  null  &&  constantMap.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  argumentMap!=  null  &&  constantMap.contains(n.getString());	  return    arguments!=    null    &&    argumentMap.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  argumentMap	67	None	replace
488	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  argumentMap);  [CE]  cannot  find  symbol  argumentMap  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  argumentMap);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this,  argumentMap);	  NodeTraversal.traverse(compiler,    n,    parent,    this,    arguments);    	non-compiled	[CE]  cannot  find  symbol  argumentMap	44	None	replace
489	[BUG]  [BUGGY]  if(arguments!=  null)  {  return  false;  function  f()  {  arguments=Array.prototype.slice.call(arguments  [CE]  ';'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null)  {  return  false;  function  f()  {  arguments=Array.prototype.slice.call(arguments  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null)  {  return  false;  function  f()  {  arguments=Array.prototype.slice.call(arguments	  return    false;    function    f()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  ';'  expected	39	None	replace
490	[BUG]  [BUGGY]  if(arguments!=  null)  {  return  false;  function  f()  {  arguments=Array.prototype.slice.call(arguments  }  [CE]  ';'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null)  {  return  false;  function  f()  {  arguments=Array.prototype.slice.call(arguments  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null)  {  return  false;  function  f()  {  arguments=Array.prototype.slice.call(arguments  }	  return    false;    function    f()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  ';'  expected	39	None	replace
491	[BUG]  [BUGGY]  return  true;  function  f()  {  arguments=Array.prototype.slice.call(arguments  >>  ';'  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  true;  function  f()  {  arguments=Array.prototype.slice.call(arguments  >>  ';'  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  true;  function  f()  {  arguments=Array.prototype.slice.call(arguments  >>  ';'	  return    false;    function    f()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  ';'  expected	39	None	replace
492	[BUG]  [BUGGY]  Node  n  =  arguments.get(n.getType()).next();  [CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Node  n  =  arguments.get(n.getType()).next();  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Node  n  =  arguments.get(n.getType()).next();	  Node    n    =    arguments.iterator().next();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)	166	None	replace
493	[BUG]  [BUGGY]  parent!=  null  &&  arguments.size()  >  0)  {  for(Node  n  :  n.getLastChild().next())  {  return  false;  }  [CE]  not  a  statement  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  parent!=  null  &&  arguments.size()  >  0)  {  for(Node  n  :  n.getLastChild().next())  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent!=  null  &&  arguments.size()  >  0)  {  for(Node  n  :  n.getLastChild().next())  {  return  false;  }	  parent!=    null    &&    arguments.size()    >    0)    {    for(Node    n    :    n.getFirstChild().next())    {    return    false;    }    	non-compiled	[CE]  not  a  statement	91	None	replace
494	[BUG]  [BUGGY]  n.replaceChild(n,  new  Node(Token.STRING,  value));  [CE]  cannot  find  symbol  value  [FE]          RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.replaceChild(n,  new  Node(Token.STRING,  value));  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.replaceChild(n,  new  Node(Token.STRING,  value));	  n.replaceChild(n,    new    Node(Token.STRING,    arguments));    	non-compiled	[CE]  cannot  find  symbol  value	168	None	replace
495	[BUG]  [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(n,  parent);  n.removeChild(parent);  NodeUtil.removeChild(parent);  [CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]    RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(n,  parent);  n.removeChild(parent);  NodeUtil.removeChild(parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	                n.removeChild(parent);        NodeUtil.removeChild(n,    parent);    n.removeChild(parent);  NodeUtil.removeChild(parent);	  	non-compiled	[CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;	4	None	add
496	[BUG]  [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(n,  parent);  n.replaceChild(parent);  NodeUtil.removeChild(n,  parent);  [CE]  method  replaceChild  in  class  Node  cannot  be  applied  to  given  types;  [FE]      RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(n,  parent);  n.replaceChild(parent);  NodeUtil.removeChild(n,  parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	                n.removeChild(parent);        NodeUtil.removeChild(n,    parent);    n.replaceChild(parent);  NodeUtil.removeChild(n,  parent);	  	non-compiled	[CE]  method  replaceChild  in  class  Node  cannot  be  applied  to  given  types;	4	None	add
497	[BUG]  [BUGGY]  AssertionFailedError:  for(Node  n  :  constantMap.values().next())  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  AssertionFailedError:  for(Node  n  :  constantMap.values().next())  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	AssertionFailedError:  for(Node  n  :  constantMap.values().next())  {  doStatementNormalizations(t,  n,  parent);  }	  AssertionFailedError:    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)	58	None	replace
498	[BUG]  [BUGGY]  AssertionFailedError:  for(Node  n  :  constantMap.entrySet())  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  AssertionFailedError:  for(Node  n  :  constantMap.entrySet())  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	AssertionFailedError:  for(Node  n  :  constantMap.entrySet())  {  doStatementNormalizations(t,  n,  parent);  }	  AssertionFailedError:    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)	58	None	replace
499	[BUG]  [BUGGY]  n.addChildToBack(parent,  n);  [CE]  method  addChildToBack  in  class  Node  cannot  be  applied  to  given  types;  [FE]          RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.addChildToBack(parent,  n);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.addChildToBack(parent,  n);	  n.addChildToBack(parent);    	non-compiled	[CE]  method  addChildToBack  in  class  Node  cannot  be  applied  to  given  types;	108	None	replace
500	[BUG]  [BUGGY]  return  arguments!=  null  &&  argumentCount.length();  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  &&  argumentCount.length();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  argumentCount.length();	  return    arguments!=    null    &&    arguments.length();    	non-compiled	[CE]  cannot  find  symbol  arguments	164	None	replace
501	[BUG]  [BUGGY]  return  arguments  ==  null  &&  argumentMap.contains(n.getString()));  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments  ==  null  &&  argumentMap.contains(n.getString()));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  ==  null  &&  argumentMap.contains(n.getString()));	  return    arguments!=    null    &&    argumentMap.contains(n.getString()));    	non-compiled	[CE]  ';'  expected	80	None	replace
502	[BUG]  [BUGGY]  return  arguments!=  null  ||  parent.getType()  ==  Token.VAR;  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  ||  parent.getType()  ==  Token.VAR;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  ||  parent.getType()  ==  Token.VAR;	  return    arguments!=    null    &&    parent.getType()    ==    Token.VAR;    	non-compiled	[CE]  cannot  find  symbol  arguments	54	None	replace
503	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(parent,  n);  n.replaceChild(parent,  n);  NodeUtil.removeChild(parent,  n);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	add	                n.removeChild(parent);        NodeUtil.removeChild(parent,    n);    n.replaceChild(parent,  n);  NodeUtil.removeChild(parent,  n);	  	compilable	  [FE]  RuntimeException  	99	13	add
504	[BUG]  [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(parent,  n);  n.replaceChild(parent,  n);  NodeUtil.removeChild(parent,  n);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(parent,  n);  n.replaceChild(parent,  n);  NodeUtil.removeChild(parent,  n);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	                n.removeChild(parent);        NodeUtil.removeChild(parent,    n);    n.replaceChild(parent,  n);  NodeUtil.removeChild(parent,  n);	  	compilable	  [FE]  RuntimeException  	99	13	add
505	[BUG]  [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(parent,  n);  n.removeChild(parent);  nodeUtil.removeChild(parent,  n);  [CE]  cannot  find  symbol  nodeUtil  [FE]      RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(parent,  n);  n.removeChild(parent);  nodeUtil.removeChild(parent,  n);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	                n.removeChild(parent);        NodeUtil.removeChild(parent,    n);    n.removeChild(parent);  nodeUtil.removeChild(parent,  n);	  	non-compiled	[CE]  cannot  find  symbol  nodeUtil	99	None	add
506	[BUG]  [BUGGY]  return  arguments  ==  null  &&  constantMap.size()  >  0;  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments  ==  null  &&  constantMap.size()  >  0;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  ==  null  &&  constantMap.size()  >  0;	  return    arguments    ==    null    &&    arguments.size()    >    0;    	non-compiled	[CE]  cannot  find  symbol  arguments	12	None	replace
507	[BUG]  [BUGGY]  return(arguments!=  null)&&  argumentMap.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null)&&  argumentMap.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null)&&  argumentMap.contains(n.getString());	  return(arguments!=    null)&&    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	153	None	replace
508	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(	  return    false;    FunctionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(    	non-compiled	[CE]  not  a  statement	41	None	replace
509	[BUG]  [BUGGY]  junit.framework.SertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  junit.framework.SertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	junit.framework.SertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(	  return    false;    FunctionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(    	non-compiled	[CE]  not  a  statement	41	None	replace
510	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  expected:  function  f()  {  arguments=Array.prototype.slice.call(  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  junit.framework.AssertionFailedError:  expected:  function  f()  {  arguments=Array.prototype.slice.call(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	junit.framework.AssertionFailedError:  expected:  function  f()  {  arguments=Array.prototype.slice.call(	  return    false;    FunctionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(    	non-compiled	[CE]  not  a  statement	41	None	replace
511	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  Expected:  function  f()  ==  arguments=Array.prototype.slice.call(  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  junit.framework.AssertionFailedError:  Expected:  function  f()  ==  arguments=Array.prototype.slice.call(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	junit.framework.AssertionFailedError:  Expected:  function  f()  ==  arguments=Array.prototype.slice.call(	  return    false;    FunctionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(    	non-compiled	[CE]  not  a  statement	41	None	replace
512	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.call(  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.call(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.call(	  return    false;    FunctionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(    	non-compiled	[CE]  not  a  statement	41	None	replace
513	[BUG]  [BUGGY]  for(Node  n  :  constantMap.iterator().next())  {  return  false;  }  [CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  for(Node  n  :  constantMap.iterator().next())  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	for(Node  n  :  constantMap.iterator().next())  {  return  false;  }	  for(Node    n    :    arguments.iterator().next())    {    return    false;    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)	88	None	replace
514	[BUG]  [BUGGY]  for(Node  n  :  arguments.get(0).next())  {  return  false;  }  [CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  for(Node  n  :  arguments.get(0).next())  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	for(Node  n  :  arguments.get(0).next())  {  return  false;  }	  for(Node    n    :    arguments.iterator().next())    {    return    false;    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)	88	None	replace
515	[BUG]  [BUGGY]  return(arguments  ==  null  &&  arguments.size()  >  0)||  constantMap.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments  ==  null  &&  arguments.size()  >  0)||  constantMap.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments  ==  null  &&  arguments.size()  >  0)||  constantMap.contains(n.getString());	  return(arguments    ==    null    &&    arguments.size()    >    0)||    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	27	None	replace
516	[BUG]  [BUGGY]  if(arguments!=  null)  {  return  false;  t.getCompiler().reportCodeChange();  }  else  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  cannot  find  symbol  arguments  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null)  {  return  false;  t.getCompiler().reportCodeChange();  }  else  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null)  {  return  false;  t.getCompiler().reportCodeChange();  }  else  {  doStatementNormalizations(t,  n,  parent);  }	  return    false;    t.getCompiler().reportCodeChange();    	non-compiled	[CE]  cannot  find  symbol  arguments	170	None	replace
517	[BUG]  [BUGGY]  if(arguments  ==  null)  {  return  false;  t.getCompiler().reportCodeChange();  }  else  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments  ==  null)  {  return  false;  t.getCompiler().reportCodeChange();  }  else  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments  ==  null)  {  return  false;  t.getCompiler().reportCodeChange();  }  else  {  doStatementNormalizations(t,  n,  parent);  }	  return    false;    t.getCompiler().reportCodeChange();    	non-compiled	[CE]  cannot  find  symbol  arguments	170	None	replace
518	[BUG]  [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-+ ")||  arguments.contains( "--   ")||  arguments.contains( "--   ")||  arguments.contains( "--   ")||  arguments.contains  [CE]  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-+ ")||  arguments.contains( "--   ")||  arguments.contains( "--   ")||  arguments.contains( "--   ")||  arguments.contains  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-+ ")||  arguments.contains( "--   ")||  arguments.contains( "--   ")||  arguments.contains( "--   ")||  arguments.contains	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-+   ")||    arguments.contains(   "--   ")||    arguments.contains(   "--   ")||    arguments.contains(   "--   "));    	non-compiled	[CE]  	145	None	replace
519	[BUG]  [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-+ ")||  arguments.contains( "--   ")||  arguments.contains( "--   ")||  arguments.contains( "--   ")  [CE]  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-+ ")||  arguments.contains( "--   ")||  arguments.contains( "--   ")||  arguments.contains( "--   ")  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-+ ")||  arguments.contains( "--   ")||  arguments.contains( "--   ")||  arguments.contains( "--   ")	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-+   ")||    arguments.contains(   "--   ")||    arguments.contains(   "--   ")||    arguments.contains(   "--   "));    	non-compiled	[CE]  	145	None	replace
520	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this.checkUserDeclarations);  [CE]  cannot  find  symbol  checkUserDeclarations  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this.checkUserDeclarations);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this.checkUserDeclarations);	  NodeTraversal.traverse(compiler,    n,    parent,    this.forbidChanges);    	non-compiled	[CE]  cannot  find  symbol  checkUserDeclarations	113	None	replace
521	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this.valueChanges);  [CE]  cannot  find  symbol  valueChanges  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this.valueChanges);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this.valueChanges);	  NodeTraversal.traverse(compiler,    n,    parent,    this.forbidChanges);    	non-compiled	[CE]  cannot  find  symbol  valueChanges	113	None	replace
522	[BUG]  [BUGGY]  Return(arguments!=  null  &&  arguments.size()  >  0)||  constantMap.contains(n.getString());  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Return(arguments!=  null  &&  arguments.size()  >  0)||  constantMap.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Return(arguments!=  null  &&  arguments.size()  >  0)||  constantMap.contains(n.getString());	  return(arguments!=    null    &&    arguments.size()    >    0)||    argumentMap.contains(n.getString());    	non-compiled	[CE]  not  a  statement	102	None	replace
523	[BUG]  [BUGGY]  return  arguments!=  null  ||  arguments.size()  >  1;  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  ||  arguments.size()  >  1;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  ||  arguments.size()  >  1;	  return    arguments!=    null    &&    arguments.size()    >    1;    	non-compiled	[CE]  cannot  find  symbol  arguments	157	None	replace
524	[BUG]  [BUGGY]  return  arguments!=  null  &&  argumentMap.size()  >  1;  [CE]  cannot  find  symbol  arguments  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  &&  argumentMap.size()  >  1;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  argumentMap.size()  >  1;	  return    arguments!=    null    &&    arguments.size()    >    1;    	non-compiled	[CE]  cannot  find  symbol  arguments	157	None	replace
525	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  forbidChanges);  return  false;  [CE]  cannot  find  symbol  forbidChanges  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  forbidChanges);  return  false;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  forbidChanges);  return  false;	  return    false;    NodeTraversal.traverse(compiler,    n,    parent);    return    false;    	non-compiled	[CE]  cannot  find  symbol  forbidChanges	172	None	replace
526	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this);  return  false;  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,Normalize)  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this);  return  false;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this);  return  false;	  return    false;    NodeTraversal.traverse(compiler,    n,    parent);    return    false;    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,Normalize)	172	None	replace
527	[BUG]  [BUGGY]  return  arguments!=  null  ||  n.size()  >  0;  [CE]  cannot  find  symbol  arguments  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  ||  n.size()  >  0;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  ||  n.size()  >  0;	  return    arguments!=    null    ||    arguments.size()    >    0;    	non-compiled	[CE]  cannot  find  symbol  arguments	14	None	replace
528	[BUG]  [BUGGY]  return  arguments!=  null  ||  arguments.size()  >=  0;  [CE]  cannot  find  symbol  arguments  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  ||  arguments.size()  >=  0;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  ||  arguments.size()  >=  0;	  return    arguments!=    null    ||    arguments.size()    >    0;    	non-compiled	[CE]  cannot  find  symbol  arguments	14	None	replace
529	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  argumentNodes);  [CE]  cannot  find  symbol  argumentNodes  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  argumentNodes);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this,  argumentNodes);	  NodeTraversal.traverse(compiler,    n,    parent,    this,    forbidChanges);    	non-compiled	[CE]  cannot  find  symbol  argumentNodes	110	None	replace
530	[BUG]  [BUGGY]  return  false;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  Function  f()  {  arguments=Array.prototype.slice.call(arguments  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  false;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  Function  f()  {  arguments=Array.prototype.slice.call(arguments  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  false;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  Function  f()  {  arguments=Array.prototype.slice.call(arguments	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    Function    f()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  not  a  statement	123	None	replace
531	[BUG]  [BUGGY]  parent!=  null  &&  arguments.size()  >=  0)  {  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  parent!=  null  &&  arguments.size()  >=  0)  {  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent!=  null  &&  arguments.size()  >=  0)  {  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }	  parent!=    null    &&    arguments.size()    >    0)    {    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  not  a  statement	57	None	replace
532	[BUG]  [BUGGY]  parent!=  null  &&  arguments.size()  >  0)  {  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  parent!=  null  &&  arguments.size()  >  0)  {  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent!=  null  &&  arguments.size()  >  0)  {  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,	  parent!=    null    &&    arguments.size()    >    0)    {    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  not  a  statement	57	None	replace
533	[BUG]  [BUGGY]  parent.replaceChild(n,  NodeUtil.newString(Token.NAME));  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  parent.replaceChild(n,  NodeUtil.newString(Token.NAME));  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent.replaceChild(n,  NodeUtil.newString(Token.NAME));	          n.removeChild(parent);    NodeUtil.removeChild(parent,    n);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
534	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  [CE]  missing  return  statement  [FE]      RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME);	          n.removeChild(parent);    NodeUtil.removeChild(parent,    n);    	non-compiled	[CE]  missing  return  statement	100	None	replace
535	[BUG]  [BUGGY]  Preconditions.checkState(!arguments.isEmpty());  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(!arguments.isEmpty());  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(!arguments.isEmpty());	  Preconditions.checkNotNull(n);    	non-compiled	[CE]  cannot  find  symbol  arguments	141	None	replace
536	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "--> ")||  arguments.contains( "--> ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "--> ")||  arguments.contains( "--> ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "--> ")||  arguments.contains( "--> ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ")||    arguments.contains(   "-->   ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains    	non-compiled	[CE]  <identifier>  expected	151	None	replace
537	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "--> ")||  arguments.contains( "--> ")||  arguments.contains( "-> ")||  arguments.contains( "-   ")||  arguments.  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "--> ")||  arguments.contains( "--> ")||  arguments.contains( "-> ")||  arguments.contains( "-   ")||  arguments.  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "--> ")||  arguments.contains( "--> ")||  arguments.contains( "-> ")||  arguments.contains( "-   ")||  arguments.	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ")||    arguments.contains(   "-->   ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains    	non-compiled	[CE]  <identifier>  expected	151	None	replace
538	[BUG]  [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-->   ")||  arguments.contains( "-->   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments  [CE]  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-->   ")||  arguments.contains( "-->   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-->   ")||  arguments.contains( "-->   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ")||    arguments.contains(   "-->   ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains    	non-compiled	[CE]  	151	None	replace
539	[BUG]  [BUGGY]  return(arguments  ==  null)&&!arguments.isEmpty());  [CE]  ';'  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments  ==  null)&&!arguments.isEmpty());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments  ==  null)&&!arguments.isEmpty());	  return(arguments!=    null)&&!arguments.isEmpty());    	non-compiled	[CE]  ';'  expected	125	None	replace
540	[BUG]  [BUGGY]  return  n!=  null  &&  n.isEmpty();  [CE]  cannot  find  symbol  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  n!=  null  &&  n.isEmpty();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  n!=  null  &&  n.isEmpty();	  return    n.isEmpty();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
541	[BUG]  [BUGGY]  return  n.isEmpty()  ||  argumentMap.containsKey(arguments);  [CE]  cannot  find  symbol  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  n.isEmpty()  ||  argumentMap.containsKey(arguments);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  n.isEmpty()  ||  argumentMap.containsKey(arguments);	  return    n.isEmpty();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
542	[BUG]  [BUGGY]  return  n.isEmpty()  ||  argumentMap.containsKey(arguments));  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  n.isEmpty()  ||  argumentMap.containsKey(arguments));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  n.isEmpty()  ||  argumentMap.containsKey(arguments));	  return    n.isEmpty();    	non-compiled	[CE]  ';'  expected	23	None	replace
543	[BUG]  [BUGGY]  return  arguments!=  null  ||  n.getType()  ==  Token.VAR;  [CE]  cannot  find  symbol  arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  ||  n.getType()  ==  Token.VAR;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  ||  n.getType()  ==  Token.VAR;	  return    arguments!=    null    &&    n.getType()    ==    Token.VAR;    	non-compiled	[CE]  cannot  find  symbol  arguments	139	None	replace
544	[BUG]  [BUGGY]  return  argumentNames!=  null  &&  parent.hasChildren();  [CE]  cannot  find  symbol  argumentNames  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  argumentNames!=  null  &&  parent.hasChildren();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  argumentNames!=  null  &&  parent.hasChildren();	  return    arguments!=    null    &&    parent.hasChildren();    	non-compiled	[CE]  cannot  find  symbol  argumentNames	140	None	replace
545	[BUG]  [BUGGY]  return  parents!=  null  &&  parent.hasChildren();  [CE]  cannot  find  symbol  parents  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  parents!=  null  &&  parent.hasChildren();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  parents!=  null  &&  parent.hasChildren();	  return    arguments!=    null    &&    parent.hasChildren();    	non-compiled	[CE]  cannot  find  symbol  parents	140	None	replace
546	[BUG]  [BUGGY]  NodeUtil.removeChild(parent);  n.removeChild(parent);  [CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]    RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeUtil.removeChild(parent);  n.removeChild(parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeUtil.removeChild(parent);  n.removeChild(parent);	          n.removeChild(parent);    n.removeChild(parent);    	non-compiled	[CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;	2	None	replace
547	[BUG]  [BUGGY]  return  n!=  null  &&  props.contains(n.getString());  [CE]  cannot  find  symbol  props  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  n!=  null  &&  props.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  n!=  null  &&  props.contains(n.getString());	  return    n!=    null    &&    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  props	66	None	replace
548	[BUG]  [BUGGY]  if(junit.framework!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  junit  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(junit.framework!=  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(junit.framework!=  null)  {  return  false;  }	  return    false;    FunctionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(function    	non-compiled	[CE]  cannot  find  symbol  junit	40	None	replace
549	[BUG]  [BUGGY]  if(shouldTraverse)  {  return  false;  }  [CE]  cannot  find  symbol  shouldTraverse  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(shouldTraverse)  {  return  false;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(shouldTraverse)  {  return  false;  }	  return    false;    FunctionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(function    	non-compiled	[CE]  cannot  find  symbol  shouldTraverse	40	None	replace
550	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  arguments,  false);  [CE]  cannot  find  symbol  arguments  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  arguments,  false);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  arguments,  false);	  NodeTraversal.traverse(compiler,    n,    parent,    arguments,    this);    	non-compiled	[CE]  cannot  find  symbol  arguments	46	None	replace
551	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  arguments,  true);  [CE]  cannot  find  symbol  arguments  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  arguments,  true);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  arguments,  true);	  NodeTraversal.traverse(compiler,    n,    parent,    arguments,    this);    	non-compiled	[CE]  cannot  find  symbol  arguments	46	None	replace
552	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  label);  [CE]  cannot  find  symbol  label  [FE]          RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  label);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  this,  label);	  NodeTraversal.traverse(compiler,    n,    this,    argument);    	non-compiled	[CE]  cannot  find  symbol  label	70	None	replace
553	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  forbidChanges);  return  true;  [CE]  cannot  find  symbol  forbidChanges  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  forbidChanges);  return  true;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  forbidChanges);  return  true;	  return    false;    NodeTraversal.traverse(compiler,    n,    parent);    return    true;    	non-compiled	[CE]  cannot  find  symbol  forbidChanges	171	None	replace
554	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  argumentMap);  return  true;  [CE]  cannot  find  symbol  argumentMap  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  argumentMap);  return  true;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  argumentMap);  return  true;	  return    false;    NodeTraversal.traverse(compiler,    n,    parent);    return    true;    	non-compiled	[CE]  cannot  find  symbol  argumentMap	171	None	replace
555	[BUG]  [BUGGY]  parent!=  null  &&  arguments.values().next())  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  parent!=  null  &&  arguments.values().next())  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent!=  null  &&  arguments.values().next())  {  doStatementNormalizations(t,  n,  parent);  }	  parent!=    null    &&    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  not  a  statement	165	None	replace
556	[BUG]  [BUGGY]  parent!=  null  &&  arguments.get(0).next())  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  parent!=  null  &&  arguments.get(0).next())  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent!=  null  &&  arguments.get(0).next())  {  doStatementNormalizations(t,  n,  parent);  }	  parent!=    null    &&    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  not  a  statement	165	None	replace
557	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          n.removeChild(parent);    n.removeChild(parent);  n.replaceChild(parent,  n);  n.removeChild(parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	add	                n.removeChild(parent);        n.removeChild(parent);    n.replaceChild(parent,  n);  n.removeChild(parent);	  	compilable	  [FE]  RuntimeException  	1	13	add
558	[BUG]  [BUGGY]          n.removeChild(parent);    n.removeChild(parent);  n.replaceChild(parent,  n);  n.removeChild(parent);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          n.removeChild(parent);    n.removeChild(parent);  n.replaceChild(parent,  n);  n.removeChild(parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	                n.removeChild(parent);        n.removeChild(parent);    n.replaceChild(parent,  n);  n.removeChild(parent);	  	compilable	  [FE]  RuntimeException  	1	13	add
559	[BUG]  [BUGGY]          n.removeChild(parent);    n.removeChild(parent);  n.replaceChild(parent);  n.removeChild(parent);  [CE]  method  replaceChild  in  class  Node  cannot  be  applied  to  given  types;  [FE]      RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          n.removeChild(parent);    n.removeChild(parent);  n.replaceChild(parent);  n.removeChild(parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	                n.removeChild(parent);        n.removeChild(parent);    n.replaceChild(parent);  n.removeChild(parent);	  	non-compiled	[CE]  method  replaceChild  in  class  Node  cannot  be  applied  to  given  types;	1	None	add
560	[BUG]  [BUGGY]  Node  n  =  arguments.iterator().next())  {  return  false;  }  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Node  n  =  arguments.iterator().next())  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Node  n  =  arguments.iterator().next())  {  return  false;  }	  parent!=    null)    {    for(Node    n    :    arguments.iterator().next())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	89	None	replace
561	[BUG]  [BUGGY]  n.replaceChild(parent,  new  Node(Token.TRUE));  [CE]  missing  return  statement  [FE]        RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.replaceChild(parent,  new  Node(Token.TRUE));  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.replaceChild(parent,  new  Node(Token.TRUE));	  n.replaceChild(n,    new    Node(Token.TRUE));    	non-compiled	[CE]  missing  return  statement	167	None	replace
562	[BUG]  [BUGGY]  n.replaceChild(n,  new  Node(Token.TRUE),  n);  [CE]  method  replaceChild  in  class  Node  cannot  be  applied  to  given  types;  [FE]          RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.replaceChild(n,  new  Node(Token.TRUE),  n);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.replaceChild(n,  new  Node(Token.TRUE),  n);	  n.replaceChild(n,    new    Node(Token.TRUE));    	non-compiled	[CE]  method  replaceChild  in  class  Node  cannot  be  applied  to  given  types;	167	None	replace
563	[BUG]  [BUGGY]  if(arguments!=  null)return  false;  [CE]  cannot  find  symbol  arguments  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null)return  false;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null)return  false;	  if(arguments!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  arguments	20	None	replace
564	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent);  Context.checkState(arguments  ==  null);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node)  [FE]              RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent);  Context.checkState(arguments  ==  null);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent);  Context.checkState(arguments  ==  null);	          NodeTraversal.traverse(compiler,    n,    this);    Context.checkState(arguments    ==    null);    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node)	76	None	replace
565	[BUG]  [BUGGY]  return  argumentNames!=  null  &&  arguments.size  >  0;  [CE]  cannot  find  symbol  argumentNames  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  argumentNames!=  null  &&  arguments.size  >  0;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  argumentNames!=  null  &&  arguments.size  >  0;	  return    arguments!=    null    &&    arguments.size    >    0;    	non-compiled	[CE]  cannot  find  symbol  argumentNames	142	None	replace
566	[BUG]  [BUGGY]  Preconditions.checkArgument(arguments!=  null  &&  arguments.length  >  0);  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkArgument(arguments!=  null  &&  arguments.length  >  0);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkArgument(arguments!=  null  &&  arguments.length  >  0);	  Preconditions.checkArgument(arguments!=    null);    	non-compiled	[CE]  cannot  find  symbol  arguments	37	None	replace
567	[BUG]  [BUGGY]  n.removeChild(parent,  n);  NodeUtil.removeChild(parent);  [CE]  method  removeChild  in  class  Node  cannot  be  applied  to  given  types;  [FE]          RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.removeChild(parent,  n);  NodeUtil.removeChild(parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.removeChild(parent,  n);  NodeUtil.removeChild(parent);	          n.removeChild(parent);    NodeUtil.removeChild(parent);    	non-compiled	[CE]  method  removeChild  in  class  Node  cannot  be  applied  to  given  types;	3	None	replace
568	[BUG]  [BUGGY]  return  false;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function()  ==  arguments=Array.prototype.slice.call(arguments  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  false;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function()  ==  arguments=Array.prototype.slice.call(arguments  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  false;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function()  ==  arguments=Array.prototype.slice.call(arguments	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    function()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  not  a  statement	122	None	replace
569	[BUG]  [BUGGY]  Preconditions.checkState(argumentMap!=  null);  [CE]  cannot  find  symbol  argumentMap  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(argumentMap!=  null);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(argumentMap!=  null);	  Preconditions.checkState(argumentNames!=    null);    	non-compiled	[CE]  cannot  find  symbol  argumentMap	118	None	replace
570	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null);  NodeTraversal.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  arguments  [FE]          RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(arguments!=  null);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(arguments!=  null);  NodeTraversal.traverse(compiler,  n,  this);	          NodeTraversal.traverse(compiler,    n,    this);    Preconditions.checkState(arguments!=    null);    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  arguments	74	None	replace
571	[BUG]  [BUGGY]          NodeTraversal.traverse(compiler,    n,    this);    NodeTraversal.traverse(compiler,  n,  this);  nodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  nodeTraversal  [FE]    RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          NodeTraversal.traverse(compiler,    n,    this);    NodeTraversal.traverse(compiler,  n,  this);  nodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	                NodeTraversal.traverse(compiler,        n,        this);        NodeTraversal.traverse(compiler,    n,    this);    nodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  this);	  	non-compiled	[CE]  cannot  find  symbol  nodeTraversal	72	None	add
572	[BUG]  [BUGGY]          NodeTraversal.traverse(compiler,    n,    this);    NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  this);  nodeTraversal.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  nodeTraversal  [FE]      RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          NodeTraversal.traverse(compiler,    n,    this);    NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  this);  nodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	                NodeTraversal.traverse(compiler,        n,        this);        NodeTraversal.traverse(compiler,    n,    this);    NodeTraversal.traverse(compiler,  n,  this);  nodeTraversal.traverse(compiler,  n,  this);	  	non-compiled	[CE]  cannot  find  symbol  nodeTraversal	72	None	add
573	[BUG]  [BUGGY]  return!converter.isNull();  [CE]  cannot  find  symbol  converter  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return!converter.isNull();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return!converter.isNull();	  return!converter.isEmpty();    	non-compiled	[CE]  cannot  find  symbol  converter	135	None	replace
574	[BUG]  [BUGGY]  Context.checkNotNull(parent);  [CE]  cannot  find  symbol  Context  [FE]        RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Context.checkNotNull(parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Context.checkNotNull(parent);	          NodeTraversal.traverse(compiler,    n,    this);    Context.checkNotNull(parent);    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  Context	160	None	replace
575	[BUG]  [BUGGY]  return  argumentNames  ==  null  &&  arguments.length  >  0;  [CE]  cannot  find  symbol  argumentNames  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  argumentNames  ==  null  &&  arguments.length  >  0;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  argumentNames  ==  null  &&  arguments.length  >  0;	  return    arguments    ==    null    &&    arguments.length    >    0;    	non-compiled	[CE]  cannot  find  symbol  argumentNames	16	None	replace
576	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ".* ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ".* ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ".* ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ".*   ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains    	non-compiled	[CE]  <identifier>  expected	150	None	replace
577	[BUG]  [BUGGY]  return  arguments  ==  null  ||  arguments.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments  ==  null  ||  arguments.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  ==  null  ||  arguments.contains(n.getString());	  return    arguments    ==    null    &&    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	65	None	replace
578	[BUG]  [BUGGY]  return  arguments!=  null  ||  arguments.contains(n.getString())||  arguments.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  ||  arguments.contains(n.getString())||  arguments.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  ||  arguments.contains(n.getString())||  arguments.contains(n.getString());	  return    arguments!=    null    &&    arguments.contains(n.getString())||    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	155	None	replace
579	[BUG]  [BUGGY]  if(!shouldTraverse)  {  return  false;  t.getCompiler().reportCodeChange();  return  true;  }  [CE]  cannot  find  symbol  shouldTraverse  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(!shouldTraverse)  {  return  false;  t.getCompiler().reportCodeChange();  return  true;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(!shouldTraverse)  {  return  false;  t.getCompiler().reportCodeChange();  return  true;  }	  return    false;    t.getCompiler().reportCodeChange();    return    true;    	non-compiled	[CE]  cannot  find  symbol  shouldTraverse	169	None	replace
580	[BUG]  [BUGGY]  if(arguments!=  null  ||  arguments.size()  ==  0)  {  return  false;  t.getCompiler().reportCodeChange();  return  true;  }  [CE]  cannot  find  symbol  arguments  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null  ||  arguments.size()  ==  0)  {  return  false;  t.getCompiler().reportCodeChange();  return  true;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null  ||  arguments.size()  ==  0)  {  return  false;  t.getCompiler().reportCodeChange();  return  true;  }	  return    false;    t.getCompiler().reportCodeChange();    return    true;    	non-compiled	[CE]  cannot  find  symbol  arguments	169	None	replace
581	[BUG]  [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)&&  constantMap.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)&&  constantMap.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  ||  arguments.size()  >  0)&&  constantMap.contains(n.getString());	  return(arguments!=    null    ||    arguments.size()    >    0)||    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	28	None	replace
582	[BUG]  [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)&&  argumentMap.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)&&  argumentMap.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  ||  arguments.size()  >  0)&&  argumentMap.contains(n.getString());	  return(arguments!=    null    ||    arguments.size()    >    0)||    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	28	None	replace
583	[BUG]  [BUGGY]  &&  arguments.contains(n.getString()))  {  for(Node  n  :  arguments.iterator().next())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  &&  arguments.contains(n.getString()))  {  for(Node  n  :  arguments.iterator().next())  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	&&  arguments.contains(n.getString()))  {  for(Node  n  :  arguments.iterator().next())  {  return  false;  }	  if(arguments!=    null    &&    arguments.contains(n.getString()))    {    for(Node    n    :    arguments.iterator().next())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
584	[BUG]  [BUGGY]  if(arguments!=  null  &&  arguments.containsKey(n.getString()))  {  for(Node  n  :  arguments.iterator().next())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null  &&  arguments.containsKey(n.getString()))  {  for(Node  n  :  arguments.iterator().next())  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null  &&  arguments.containsKey(n.getString()))  {  for(Node  n  :  arguments.iterator().next())  {  return  false;  }	  if(arguments!=    null    &&    arguments.contains(n.getString()))    {    for(Node    n    :    arguments.iterator().next())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
585	[BUG]  [BUGGY]  return  arguments!=  null  &&  constantMap.contains(parent.getString());  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  &&  constantMap.contains(parent.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  constantMap.contains(parent.getString());	  return    arguments!=    null    &&    arguments.contains(parent.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	134	None	replace
586	[BUG]  [BUGGY]  if(arguments!=  null  &&  arguments.size()  >  0)  {  Node  n  =  arguments.iterator().next())  {  return  false;  }  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null  &&  arguments.size()  >  0)  {  Node  n  =  arguments.iterator().next())  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null  &&  arguments.size()  >  0)  {  Node  n  =  arguments.iterator().next())  {  return  false;  }	  if(arguments!=    null    &&    arguments.size()    >    0)    {    for(Node    n    :    arguments.iterator().next())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	136	None	replace
587	[BUG]  [BUGGY]  return  arguments!=  null  &&  Arguments.isEmpty();  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  &&  Arguments.isEmpty();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  Arguments.isEmpty();	  return    arguments!=    null    &&    argument.isEmpty();    	non-compiled	[CE]  cannot  find  symbol  arguments	8	None	replace
588	[BUG]  [BUGGY]  n.removeChild(parent);  NodeTraversal.traverse(compiler,  n,  parent,  forbidChanges);  [CE]  cannot  find  symbol  forbidChanges  [FE]        RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.removeChild(parent);  NodeTraversal.traverse(compiler,  n,  parent,  forbidChanges);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.removeChild(parent);  NodeTraversal.traverse(compiler,  n,  parent,  forbidChanges);	          n.removeChild(parent);    NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  forbidChanges	98	None	replace
589	[BUG]  [BUGGY]  n.removeChild(parent);  NodeTraversal.traverse(compiler,  n,  parent,  constantMap);  [CE]  cannot  find  symbol  constantMap  [FE]          RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.removeChild(parent);  NodeTraversal.traverse(compiler,  n,  parent,  constantMap);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.removeChild(parent);  NodeTraversal.traverse(compiler,  n,  parent,  constantMap);	          n.removeChild(parent);    NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  constantMap	98	None	replace
590	[BUG]  [BUGGY]  parent!=  null)  {  for(Node  n  :  constantMap.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  parent!=  null)  {  for(Node  n  :  constantMap.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent!=  null)  {  for(Node  n  :  constantMap.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }	  parent!=    null)    {    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  not  a  statement	55	None	replace
591	[BUG]  [BUGGY]  &&  arguments!=  null)  {  return  false;  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  &&  arguments!=  null)  {  return  false;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	&&  arguments!=  null)  {  return  false;	  return    false;    FunctionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
592	[BUG]  [BUGGY]  &&  arguments!=  null;  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  &&  arguments!=  null;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	&&  arguments!=  null;	  return    false;    FunctionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
593	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent);  Converter.traverse(compiler,  n,  this);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node)  [FE]                RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent);  Converter.traverse(compiler,  n,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent);  Converter.traverse(compiler,  n,  this);	          NodeTraversal.traverse(compiler,    n,    this);    Converter.traverse(compiler,    n,    this);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node)	77	None	replace
594	[BUG]  [BUGGY]  Deserialize.traverse(compiler,  n,  this);  Converter.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  Deserialize  [FE]                  RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Deserialize.traverse(compiler,  n,  this);  Converter.traverse(compiler,  n,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Deserialize.traverse(compiler,  n,  this);  Converter.traverse(compiler,  n,  this);	          NodeTraversal.traverse(compiler,    n,    this);    Converter.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  Deserialize	77	None	replace
595	[BUG]  [BUGGY]  NodeUtil.isStatementBlock(n)&&  arguments.contains(n.getString()))  {  for(Node  n  :  n.getFirstChild().next())  {  return  false;  }  [CE]  not  a  statement  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeUtil.isStatementBlock(n)&&  arguments.contains(n.getString()))  {  for(Node  n  :  n.getFirstChild().next())  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeUtil.isStatementBlock(n)&&  arguments.contains(n.getString()))  {  for(Node  n  :  n.getFirstChild().next())  {  return  false;  }	  parent!=    null    &&    arguments.contains(n.getString()))    {    for(Node    n    :    n.getFirstChild().next())    {    return    false;    }    	non-compiled	[CE]  not  a  statement	90	None	replace
596	[BUG]  [BUGGY]  return  false;  NodeTraversal.traverse(compiler,  n,  parent,  arguments);  [CE]  cannot  find  symbol  arguments  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  false;  NodeTraversal.traverse(compiler,  n,  parent,  arguments);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  false;  NodeTraversal.traverse(compiler,  n,  parent,  arguments);	  return    false;    NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  arguments	120	None	replace
597	[BUG]  [BUGGY]  return  true;  NodeTraversal.traverse(compiler,  n,  parent);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node)  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  true;  NodeTraversal.traverse(compiler,  n,  parent);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  true;  NodeTraversal.traverse(compiler,  n,  parent);	  return    false;    NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node)	120	None	replace
598	[BUG]  [BUGGY]  return  false;  NodeTraversal.traverse(compiler,  n,  parent,  argumentMap);  [CE]  cannot  find  symbol  argumentMap  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  false;  NodeTraversal.traverse(compiler,  n,  parent,  argumentMap);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  false;  NodeTraversal.traverse(compiler,  n,  parent,  argumentMap);	  return    false;    NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  argumentMap	120	None	replace
599	[BUG]  [BUGGY]  For(Node  n  :  constantMap.values().next())  {  return  false;  }  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  For(Node  n  :  constantMap.values().next())  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	For(Node  n  :  constantMap.values().next())  {  return  false;  }	  For(Node    n    :    arguments.iterator().next())    {    return    false;    }    	non-compiled	[CE]  ')'  expected	115	None	replace
600	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  DEFAULT_WHILE_TO_FOR);  [CE]  cannot  find  symbol  DEFAULT_WHILE_TO_FOR  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  DEFAULT_WHILE_TO_FOR);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  DEFAULT_WHILE_TO_FOR);	  NodeTraversal.traverse(compiler,    n,    parent,    FORGIVE_LOCAL_NAMES_UNIQUE);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_WHILE_TO_FOR	101	None	replace
601	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  DEFAULT_LOCAL_NAMES_UNIQUE);  [CE]  cannot  find  symbol  DEFAULT_LOCAL_NAMES_UNIQUE  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  DEFAULT_LOCAL_NAMES_UNIQUE);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  DEFAULT_LOCAL_NAMES_UNIQUE);	  NodeTraversal.traverse(compiler,    n,    parent,    FORGIVE_LOCAL_NAMES_UNIQUE);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_LOCAL_NAMES_UNIQUE	101	None	replace
602	[BUG]  [BUGGY]  return  arguments!=  null  ||  parent.getType()  ==  Token.FUNCTION;  [CE]  cannot  find  symbol  arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  ||  parent.getType()  ==  Token.FUNCTION;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  ||  parent.getType()  ==  Token.FUNCTION;	  return    arguments!=    null    &&    parent.getType()    ==    Token.FUNCTION;    	non-compiled	[CE]  cannot  find  symbol  arguments	97	None	replace
603	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  :  arguments.iterator())  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  cannot  find  symbol  arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  :  arguments.iterator())  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(arguments!=  null);  for(Node  n  :  arguments.iterator())  {  doStatementNormalizations(t,  n,  parent);  }	  Preconditions.checkState(arguments!=    null);    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  cannot  find  symbol  arguments	111	None	replace
604	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  :  constantMap.entrySet().next())  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  :  constantMap.entrySet().next())  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(arguments!=  null);  for(Node  n  :  constantMap.entrySet().next())  {  doStatementNormalizations(t,  n,  parent);  }	  Preconditions.checkState(arguments!=    null);    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  cannot  find  symbol  arguments	111	None	replace
605	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-N   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-N   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-N   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")||    arguments.    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
606	[BUG]  [BUGGY]  if(arguments!=  null)  {  return  false;  function()  {  arguments=Array.prototype.slice.call(arguments  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null)  {  return  false;  function()  {  arguments=Array.prototype.slice.call(arguments  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null)  {  return  false;  function()  {  arguments=Array.prototype.slice.call(arguments	  return    false;    function()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  ';'  expected	43	None	replace
607	[BUG]  [BUGGY]  return  true;  function()  {  arguments=Array.prototype.slice.call(arguments  >>  ';'  expected  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  true;  function()  {  arguments=Array.prototype.slice.call(arguments  >>  ';'  expected  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  true;  function()  {  arguments=Array.prototype.slice.call(arguments  >>  ';'  expected	  return    false;    function()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  ';'  expected	43	None	replace
608	[BUG]  [BUGGY]  if(arguments!=  null)  {  return  false;  function()  {  arguments=Array.prototype.slice.call(arguments  [Delete]  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null)  {  return  false;  function()  {  arguments=Array.prototype.slice.call(arguments  [Delete]  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null)  {  return  false;  function()  {  arguments=Array.prototype.slice.call(arguments  [Delete]	  return    false;    function()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  ';'  expected	43	None	replace
609	[BUG]  [BUGGY]  return(arguments!=  null  &&  argumentCount.size()  >  0)||  constantMap.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  argumentCount.size()  >  0)||  constantMap.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  argumentCount.size()  >  0)||  constantMap.contains(n.getString());	  return(arguments!=    null    &&    argumentCount.size()    >    0)||    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	103	None	replace
610	[BUG]  [BUGGY]  if(t.getCompiler()!=  null)  {  return  false;  t.getCompiler().reportCodeChange();  }  [CE]  unreachable  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(t.getCompiler()!=  null)  {  return  false;  t.getCompiler().reportCodeChange();  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(t.getCompiler()!=  null)  {  return  false;  t.getCompiler().reportCodeChange();  }	  return    false;    t.getCompiler().reportCodeChange();    	non-compiled	[CE]  unreachable  statement	170	None	replace
611	[BUG]  [BUGGY]  return  arguments!=  null;  t.getCompiler().reportCodeChange();  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null;  t.getCompiler().reportCodeChange();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null;  t.getCompiler().reportCodeChange();	  return    false;    t.getCompiler().reportCodeChange();    	non-compiled	[CE]  cannot  find  symbol  arguments	170	None	replace
612	[BUG]  [BUGGY]  return  true;  t.getCompiler().report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNIQUE,  arguments));  [CE]  cannot  find  symbol  NON_GLOBAL_NAMES_UNIQUE  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  true;  t.getCompiler().report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNIQUE,  arguments));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  true;  t.getCompiler().report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNIQUE,  arguments));	  return    false;    t.getCompiler().reportCodeChange();    	non-compiled	[CE]  cannot  find  symbol  NON_GLOBAL_NAMES_UNIQUE	170	None	replace
613	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  false);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,boolean)  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  false);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  false);	  return    false;    NodeTraversal.traverse(compiler,    n,    parent);    return    false;    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,boolean)	172	None	replace
614	[BUG]  [BUGGY]  parent!=  null)  {  for(Node  n  :  parent.getFirstChild().getNext())  {  return  false;  }  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  parent!=  null)  {  for(Node  n  :  parent.getFirstChild().getNext())  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent!=  null)  {  for(Node  n  :  parent.getFirstChild().getNext())  {  return  false;  }	  parent!=    null)    {    for(Node    n    :    arguments.iterator().next())    {    return    false;    }    	non-compiled	[CE]  not  a  statement	89	None	replace
615	[BUG]  [BUGGY]  Preconditions.checkState(n  ==  parent);  [CE]  missing  return  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(n  ==  parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(n  ==  parent);	  Preconditions.checkState(n    ==    null);    	non-compiled	[CE]  missing  return  statement	50	None	replace
616	[BUG]  [BUGGY]  Return(arguments  ==  null  ||  arguments.size()  >  0)||  arguments.contains(n.getString());  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Return(arguments  ==  null  ||  arguments.size()  >  0)||  arguments.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Return(arguments  ==  null  ||  arguments.size()  >  0)||  arguments.contains(n.getString());	  return(arguments    ==    null    &&    arguments.size()    >    0)||    arguments.contains(n.getString());    	non-compiled	[CE]  not  a  statement	27	None	replace
617	[BUG]  [BUGGY]  return  arguments  ==  null  &&  arguments.contains(parent.getString());  [CE]  cannot  find  symbol  arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments  ==  null  &&  arguments.contains(parent.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments  ==  null  &&  arguments.contains(parent.getString());	  return    arguments    ==    null    &&    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	65	None	replace
618	[BUG]  [BUGGY]  Preconditions.checkState(converter!=  null);  [CE]  cannot  find  symbol  converter  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(converter!=  null);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(converter!=  null);	  Preconditions.checkState(parameters!=    null);    	non-compiled	[CE]  cannot  find  symbol  converter	64	None	replace
619	[BUG]  [BUGGY]  for(Node  n  :  arguments.entrySet().next())  {  return  false;  }  [CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  for(Node  n  :  arguments.entrySet().next())  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	for(Node  n  :  arguments.entrySet().next())  {  return  false;  }	  for(Node    n    :    arguments.iterator().next())    {    return    false;    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)	88	None	replace
620	[BUG]  [BUGGY]  return  arguments!=  null  &&  arguments.contains(n.getFirstChild());  [CE]  cannot  find  symbol  arguments  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  &&  arguments.contains(n.getFirstChild());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  arguments.contains(n.getFirstChild());	  return    arguments!=    null    &&    arguments.contains(n.getFirstChild()));    	non-compiled	[CE]  cannot  find  symbol  arguments	156	None	replace
621	[BUG]  [BUGGY]  if(t.getCompiler()!=  null)  {  return  false;  t.getCompiler().reportCodeChange();  return  true;  }  [CE]  unreachable  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(t.getCompiler()!=  null)  {  return  false;  t.getCompiler().reportCodeChange();  return  true;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(t.getCompiler()!=  null)  {  return  false;  t.getCompiler().reportCodeChange();  return  true;  }	  return    false;    t.getCompiler().reportCodeChange();    return    false;    	non-compiled	[CE]  unreachable  statement	173	None	replace
622	[BUG]  [BUGGY]  if(t.getCompiler()!=  null)  {  return  false;  t.getCompiler().reportCodeChange();  return  false;  }  [CE]  unreachable  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(t.getCompiler()!=  null)  {  return  false;  t.getCompiler().reportCodeChange();  return  false;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(t.getCompiler()!=  null)  {  return  false;  t.getCompiler().reportCodeChange();  return  false;  }	  return    false;    t.getCompiler().reportCodeChange();    return    false;    	non-compiled	[CE]  unreachable  statement	173	None	replace
623	[BUG]  [BUGGY]  if(!isNormalized())  {  return  false;  t.getCompiler().reportCodeChange();  return  false;  }  [CE]  cannot  find  symbol  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(!isNormalized())  {  return  false;  t.getCompiler().reportCodeChange();  return  false;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(!isNormalized())  {  return  false;  t.getCompiler().reportCodeChange();  return  false;  }	  return    false;    t.getCompiler().reportCodeChange();    return    false;    	non-compiled	[CE]  cannot  find  symbol	173	None	replace
624	[BUG]  [BUGGY]  return  true;  function()  {  arguments=Array.prototype.slice.call(arguments  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  true;  function()  {  arguments=Array.prototype.slice.call(arguments  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  true;  function()  {  arguments=Array.prototype.slice.call(arguments	  return    false;    function()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  ';'  expected	43	None	replace
625	[BUG]  [BUGGY]  return  true;  function()  {  arguments=Array.prototype.slice.call(arguments  >>  ';'  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  true;  function()  {  arguments=Array.prototype.slice.call(arguments  >>  ';'  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  true;  function()  {  arguments=Array.prototype.slice.call(arguments  >>  ';'	  return    false;    function()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  ';'  expected	43	None	replace
626	[BUG]  [BUGGY]  return  true;  function()  {  arguments=Array.prototype.slice.call(arguments!=  ';'  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  true;  function()  {  arguments=Array.prototype.slice.call(arguments!=  ';'  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  true;  function()  {  arguments=Array.prototype.slice.call(arguments!=  ';'	  return    false;    function()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  ';'  expected	43	None	replace
627	[BUG]  [BUGGY]  return(arguments  ==  null  &&  arguments.size()  >  0)||  arguments.contains( "-+ ")||  arguments.contains( "--   ")||  arguments.contains( "--   ")||  arguments.contains( "--   "));  [CE]  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments  ==  null  &&  arguments.size()  >  0)||  arguments.contains( "-+ ")||  arguments.contains( "--   ")||  arguments.contains( "--   ")||  arguments.contains( "--   "));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments  ==  null  &&  arguments.size()  >  0)||  arguments.contains( "-+ ")||  arguments.contains( "--   ")||  arguments.contains( "--   ")||  arguments.contains( "--   "));	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-+   ")||    arguments.contains(   "--   ")||    arguments.contains(   "--   ")||    arguments.contains(   "--   "));    	non-compiled	[CE]  	145	None	replace
628	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-+ ")||  arguments.contains( "--> ")||  arguments.contains( "--   ")||  arguments.contains( "--   "));  [CE]  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-+ ")||  arguments.contains( "--> ")||  arguments.contains( "--   ")||  arguments.contains( "--   "));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-+ ")||  arguments.contains( "--> ")||  arguments.contains( "--   ")||  arguments.contains( "--   "));	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-+   ")||    arguments.contains(   "--   ")||    arguments.contains(   "--   ")||    arguments.contains(   "--   "));    	non-compiled	[CE]  	145	None	replace
629	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-+ ")||  arguments.contains( "-- ")||  arguments.contains( "--> ")||  arguments.contains( "--   "));  [CE]  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-+ ")||  arguments.contains( "-- ")||  arguments.contains( "--> ")||  arguments.contains( "--   "));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-+ ")||  arguments.contains( "-- ")||  arguments.contains( "--> ")||  arguments.contains( "--   "));	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-+   ")||    arguments.contains(   "--   ")||    arguments.contains(   "--   ")||    arguments.contains(   "--   "));    	non-compiled	[CE]  	145	None	replace
630	[BUG]  [BUGGY]  return  arguments!=  null  &&  Array.prototype.slice.call(  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  &&  Array.prototype.slice.call(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  Array.prototype.slice.call(	  return    false;    FunctionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
631	[BUG]  [BUGGY]  n.getType()  ==  Token.NAME  &&  n.getString().equals( "prototype "))  {  return  false;  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.getType()  ==  Token.NAME  &&  n.getString().equals( "prototype "))  {  return  false;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.getType()  ==  Token.NAME  &&  n.getString().equals( "prototype "))  {  return  false;	  return    false;    FunctionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(    	non-compiled	[CE]  not  a  statement	41	None	replace
632	[BUG]  [BUGGY]  n.getType()  ==  Token.EXPR_RESULT;  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.getType()  ==  Token.EXPR_RESULT;	  return    false;    FunctionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(    	non-compiled	[CE]  not  a  statement	41	None	replace
633	[BUG]  [BUGGY]  n.getType()  ==  Token.EXPR_RESULT);  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.getType()  ==  Token.EXPR_RESULT);	  return    false;    FunctionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(    	non-compiled	[CE]  not  a  statement	41	None	replace
634	[BUG]  [BUGGY]  n.getType()  ==  Token.NAME  &&  n.getString().endsWith( "__ "))  {  return  false;  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.getType()  ==  Token.NAME  &&  n.getString().endsWith( "__ "))  {  return  false;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.getType()  ==  Token.NAME  &&  n.getString().endsWith( "__ "))  {  return  false;	  return    false;    FunctionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(    	non-compiled	[CE]  not  a  statement	41	None	replace
635	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ScopeTicklingCallback());  [CE]  missing  return  statement  [FE]    RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ScopeTicklingCallback());  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  new  ScopeTicklingCallback());	          NodeTraversal.traverse(compiler,    n,    this);    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  missing  return  statement	73	None	replace
636	[BUG]  [BUGGY]  n.removeChild(converter);  [CE]  cannot  find  symbol  converter  [FE]        RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.removeChild(converter);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.removeChild(converter);	  n.removeChild(arguments);    	non-compiled	[CE]  cannot  find  symbol  converter	29	None	replace
637	[BUG]  [BUGGY]  return  argument!=  null  &&  constantMap.contains(n.getString()));  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  argument!=  null  &&  constantMap.contains(n.getString()));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  argument!=  null  &&  constantMap.contains(n.getString()));	  return    arguments!=    null    &&    argumentMap.contains(n.getString()));    	non-compiled	[CE]  ';'  expected	80	None	replace
638	[BUG]  [BUGGY]  return!consumeMap.isEmpty();  [CE]  cannot  find  symbol  consumeMap  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return!consumeMap.isEmpty();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return!consumeMap.isEmpty();	  return!constantMap.isEmpty();    	non-compiled	[CE]  cannot  find  symbol  consumeMap	114	None	replace
639	[BUG]  [BUGGY]  return  argumentName!=  null  &&  argumentMap.contains(n.getString());  [CE]  cannot  find  symbol  argumentName  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  argumentName!=  null  &&  argumentMap.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  argumentName!=  null  &&  argumentMap.contains(n.getString());	  return    arguments!=    null    &&    argumentMap.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  argumentName	67	None	replace
640	[BUG]  [BUGGY]  if(arguments  ==  null)return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments  ==  null)return  false;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments  ==  null)return  false;  }	  if(arguments    ==    null)    {    return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
641	[BUG]  [BUGGY]  if(arguments  ==  null  ||  arguments.size()  ==  0)  {  return  false;  }  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments  ==  null  ||  arguments.size()  ==  0)  {  return  false;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments  ==  null  ||  arguments.size()  ==  0)  {  return  false;  }	  if(arguments    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  arguments	21	None	replace
642	[BUG]  [BUGGY]  return  argument!=  null  &&  parent.isEmpty();  [CE]  cannot  find  symbol  argument  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  argument!=  null  &&  parent.isEmpty();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  argument!=  null  &&  parent.isEmpty();	  return    arguments!=    null    &&    argument.isEmpty();    	non-compiled	[CE]  cannot  find  symbol  argument	8	None	replace
643	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          n.removeChild(parent);    n.removeChild(parent);  n.addChildToFront(parent);  n.removeChild(parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	add	                n.removeChild(parent);        n.removeChild(parent);    n.addChildToFront(parent);  n.removeChild(parent);	  	compilable	  [FE]  RuntimeException  	1	13	add
644	[BUG]  [BUGGY]          n.removeChild(parent);    n.removeChild(parent);  n.addChildToFront(parent);  n.removeChild(parent);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          n.removeChild(parent);    n.removeChild(parent);  n.addChildToFront(parent);  n.removeChild(parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	                n.removeChild(parent);        n.removeChild(parent);    n.addChildToFront(parent);  n.removeChild(parent);	  	compilable	  [FE]  RuntimeException  	1	13	add
645	[BUG]  [BUGGY]  Preconditions.checkState(n!=  null  &&  n.getType()  ==  Token.VAR);  [CE]  missing  return  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(n!=  null  &&  n.getType()  ==  Token.VAR);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(n!=  null  &&  n.getType()  ==  Token.VAR);	  Preconditions.checkState(n!=    null);    	non-compiled	[CE]  missing  return  statement	62	None	replace
646	[BUG]  [BUGGY]  Preconditions.checkState(n!=  parent);  [CE]  missing  return  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(n!=  parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(n!=  parent);	  Preconditions.checkState(n!=    null);    	non-compiled	[CE]  missing  return  statement	62	None	replace
647	[BUG]  [BUGGY]  return  argumentNames  ==  null  &&  arguments.size()  >  0;  [CE]  cannot  find  symbol  argumentNames  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  argumentNames  ==  null  &&  arguments.size()  >  0;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  argumentNames  ==  null  &&  arguments.size()  >  0;	  return    arguments    ==    null    &&    arguments.size()    >    0;    	non-compiled	[CE]  cannot  find  symbol  argumentNames	12	None	replace
648	[BUG]  [BUGGY]  Preconditions.checkArgument(arguments.length  ==  1  ||  arguments.length  ==  2);  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkArgument(arguments.length  ==  1  ||  arguments.length  ==  2);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkArgument(arguments.length  ==  1  ||  arguments.length  ==  2);	  Preconditions.checkArgument(arguments.length    ==    1    ||    arguments.length    ==    1);    	non-compiled	[CE]  cannot  find  symbol  arguments	61	None	replace
649	[BUG]  [BUGGY]  Preconditions.checkArgument(arguments.length  ==  2  ||  arguments.length  ==  1);  [CE]  cannot  find  symbol  arguments  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkArgument(arguments.length  ==  2  ||  arguments.length  ==  1);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkArgument(arguments.length  ==  2  ||  arguments.length  ==  1);	  Preconditions.checkArgument(arguments.length    ==    1    ||    arguments.length    ==    1);    	non-compiled	[CE]  cannot  find  symbol  arguments	61	None	replace
650	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.equals(n,  parent.getString());  [CE]  cannot  find  symbol  arguments  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.equals(n,  parent.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.equals(n,  parent.getString());	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.equals(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	154	None	replace
651	[BUG]  [BUGGY]  n.setParentNode(parent);  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.setParentNode(parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.setParentNode(parent);	  n.addChildToFront(parent);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
652	[BUG]  [BUGGY]  Preconditions.checkState(n.length  ==  0);  [CE]  cannot  find  symbol  length  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(n.length  ==  0);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(n.length  ==  0);	  Preconditions.checkState(arguments.length    ==    0);    	non-compiled	[CE]  cannot  find  symbol  length	33	None	replace
653	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(n,  parent);  n.addChildToFront(parent);  NodeUtil.removeChild(n,  parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	add	                n.removeChild(parent);        NodeUtil.removeChild(n,    parent);    n.addChildToFront(parent);  NodeUtil.removeChild(n,  parent);	  	compilable	  [FE]  RuntimeException  	4	13	add
654	[BUG]  [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(n,  parent);  n.addChildToFront(parent);  NodeUtil.removeChild(n,  parent);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(n,  parent);  n.addChildToFront(parent);  NodeUtil.removeChild(n,  parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	                n.removeChild(parent);        NodeUtil.removeChild(n,    parent);    n.addChildToFront(parent);  NodeUtil.removeChild(n,  parent);	  	compilable	  [FE]  RuntimeException  	4	13	add
655	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(n,  parent);  n.removeChild(  parent);  NodeUtil.removeChild(parent,  parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	add	                n.removeChild(parent);        NodeUtil.removeChild(n,    parent);    n.removeChild(  parent);  NodeUtil.removeChild(parent,  parent);	  	compilable	  [FE]  RuntimeException  	4	13	add
656	[BUG]  [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(n,  parent);  n.removeChild(  parent);  NodeUtil.removeChild(parent,  parent);  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(n,  parent);  n.removeChild(  parent);  NodeUtil.removeChild(parent,  parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	                n.removeChild(parent);        NodeUtil.removeChild(n,    parent);    n.removeChild(  parent);  NodeUtil.removeChild(parent,  parent);	  	compilable	  [FE]  RuntimeException  	4	13	add
657	[BUG]  [BUGGY]  n.removeChild(parent,  n);  NodeUtil.removeChild(parent,  n);  [CE]  method  removeChild  in  class  Node  cannot  be  applied  to  given  types;  [FE]          RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.removeChild(parent,  n);  NodeUtil.removeChild(parent,  n);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.removeChild(parent,  n);  NodeUtil.removeChild(parent,  n);	          n.removeChild(parent);    NodeUtil.removeChild(parent);    	non-compiled	[CE]  method  removeChild  in  class  Node  cannot  be  applied  to  given  types;	3	None	replace
658	[BUG]  [BUGGY]  Preconditions.checkState(parent!=  null  &&  parent.getType()  ==  Token.VAR);  [CE]  missing  return  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(parent!=  null  &&  parent.getType()  ==  Token.VAR);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(parent!=  null  &&  parent.getType()  ==  Token.VAR);	  Preconditions.checkState(parent!=    null);    	non-compiled	[CE]  missing  return  statement	162	None	replace
659	[BUG]  [BUGGY]  ||  arguments.size()  ==  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains(  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  ||  arguments.size()  ==  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	||  arguments.size()  ==  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains(	  return(arguments!=    null    ||    arguments.size()    >    0)||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
660	[BUG]  [BUGGY]  return  argument!=  null  &&  parent.getType()  ==  Token.VAR;  [CE]  cannot  find  symbol  argument  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  argument!=  null  &&  parent.getType()  ==  Token.VAR;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  argument!=  null  &&  parent.getType()  ==  Token.VAR;	  return    arguments!=    null    &&    parent.getType()    ==    Token.VAR;    	non-compiled	[CE]  cannot  find  symbol  argument	54	None	replace
661	[BUG]  [BUGGY]  Return  arguments!=  null  &&  arguments.size()  >  2;  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Return  arguments!=  null  &&  arguments.size()  >  2;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Return  arguments!=  null  &&  arguments.size()  >  2;	  Return    arguments!=    null    &&    arguments.size()    >    0;    	non-compiled	[CE]  ';'  expected	13	None	replace
662	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( ".-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains  [CE]  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( ".-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( ".-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains	  return(arguments!=    null    ||    arguments.size()    >    0)||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains    	non-compiled	[CE]  	83	None	replace
663	[BUG]  [BUGGY]  return  arguments!=  null;  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(arguments  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null;  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(arguments  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null;  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function  f()  {  arguments=Array.prototype.slice.call(arguments	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    function    f()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  not  a  statement	119	None	replace
664	[BUG]  [BUGGY]  Preconditions.checkState(argumentation  ==  null);  [CE]  cannot  find  symbol  argumentation  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(argumentation  ==  null);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(argumentation  ==  null);	  Preconditions.checkState(argumentations    ==    null);    	non-compiled	[CE]  cannot  find  symbol  argumentation	48	None	replace
665	[BUG]  [BUGGY]  n.replaceChild(n,  new  Node(Token.STRING,  label));  [CE]  cannot  find  symbol  label  [FE]          RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.replaceChild(n,  new  Node(Token.STRING,  label));  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.replaceChild(n,  new  Node(Token.STRING,  label));	  n.replaceChild(n,    new    Node(Token.STRING,    arguments));    	non-compiled	[CE]  cannot  find  symbol  label	168	None	replace
666	[BUG]  [BUGGY]  n.replaceChild(n,  new  Node(Token.STRING,  getName()));  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.replaceChild(n,  new  Node(Token.STRING,  getName()));  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.replaceChild(n,  new  Node(Token.STRING,  getName()));	  n.replaceChild(n,    new    Node(Token.STRING,    arguments));    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
667	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  :  values.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  cannot  find  symbol  arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(arguments!=  null);  for(Node  n  :  values.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(arguments!=  null);  for(Node  n  :  values.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }	  Preconditions.checkState(arguments!=    null);    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  cannot  find  symbol  arguments	111	None	replace
668	[BUG]  [BUGGY]  Preconditions.checkNotNull(n,  parent);  [CE]  missing  return  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkNotNull(n,  parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkNotNull(n,  parent);	  Preconditions.checkNotNull(arguments,    n);    	non-compiled	[CE]  missing  return  statement	129	None	replace
669	[BUG]  [BUGGY]  Preconditions.checkState(n.hasOneChild());  [CE]  missing  return  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(n.hasOneChild());  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(n.hasOneChild());	  Preconditions.checkNotNull(arguments,    n);    	non-compiled	[CE]  missing  return  statement	129	None	replace
670	[BUG]  [BUGGY]  return(arguments!=  null)&&  arguments.contains(n,  parent.getString());  [CE]  cannot  find  symbol  arguments  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null)&&  arguments.contains(n,  parent.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null)&&  arguments.contains(n,  parent.getString());	  return(arguments!=    null)&&    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	153	None	replace
671	[BUG]  [BUGGY]  Return  arguments!=  null  &&  arguments.length  ==  0;  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Return  arguments!=  null  &&  arguments.length  ==  0;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Return  arguments!=  null  &&  arguments.length  ==  0;	  Return    arguments!=    null    &&    arguments.length    >    0;    	non-compiled	[CE]  ';'  expected	18	None	replace
672	[BUG]  [BUGGY]  Context.checkState(parent  ==  null);  NodeTraversal.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  Context  [FE]              RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Context.checkState(parent  ==  null);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Context.checkState(parent  ==  null);  NodeTraversal.traverse(compiler,  n,  this);	          NodeTraversal.traverse(compiler,    n,    this);    Context.checkState(arguments    ==    null);    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  Context	76	None	replace
673	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  FORGIVE_LOCAL_NAMES_UNIQUE,  arguments);  [CE]  cannot  find  symbol  FORGIVE_LOCAL_NAMES_UNIQUE  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  FORGIVE_LOCAL_NAMES_UNIQUE,  arguments);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  FORGIVE_LOCAL_NAMES_UNIQUE,  arguments);	  NodeTraversal.traverse(compiler,    n,    parent,    FORGIVE_LOCAL_NAMES_UNIQUE);    	non-compiled	[CE]  cannot  find  symbol  FORGIVE_LOCAL_NAMES_UNIQUE	101	None	replace
674	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  STRING_LOCAL_NAMES_UNIQUE);  [CE]  cannot  find  symbol  STRING_LOCAL_NAMES_UNIQUE  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  STRING_LOCAL_NAMES_UNIQUE);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  STRING_LOCAL_NAMES_UNIQUE);	  NodeTraversal.traverse(compiler,    n,    parent,    FORGIVE_LOCAL_NAMES_UNIQUE);    	non-compiled	[CE]  cannot  find  symbol  STRING_LOCAL_NAMES_UNIQUE	101	None	replace
675	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  line);  [CE]  cannot  find  symbol  line  [FE]          RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  line);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  this,  line);	  NodeTraversal.traverse(compiler,    n,    this,    argument);    	non-compiled	[CE]  cannot  find  symbol  line	70	None	replace
676	[BUG]  [BUGGY]  return  argument!=  null  &&  argument.length();  [CE]  cannot  find  symbol  argument  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  argument!=  null  &&  argument.length();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  argument!=  null  &&  argument.length();	  return    arguments!=    null    &&    arguments.length();    	non-compiled	[CE]  cannot  find  symbol  argument	164	None	replace
677	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.TRUE));  [CE]  missing  return  statement  [FE]    RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  parent.replaceChild(n,  new  Node(Token.TRUE));  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent.replaceChild(n,  new  Node(Token.TRUE));	          n.removeChild(parent);    NodeUtil.removeChild(parent,    n);    	non-compiled	[CE]  missing  return  statement	100	None	replace
678	[BUG]  [BUGGY]  Return(arguments!=  null  ||  arguments.size()  >  0)&&  arguments.contains(n.getString());  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Return(arguments!=  null  ||  arguments.size()  >  0)&&  arguments.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Return(arguments!=  null  ||  arguments.size()  >  0)&&  arguments.contains(n.getString());	  return(arguments!=    null    ||    arguments.size()    >    0)||    arguments.contains(n.getString());    	non-compiled	[CE]  not  a  statement	28	None	replace
679	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-+ ")||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains  [CE]  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-+ ")||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-+ ")||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains( "-- ")||  arguments.contains	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains    	non-compiled	[CE]  	86	None	replace
680	[BUG]  [BUGGY]  return  arguments!=  null  &&  arguments  >  0;  [CE]  cannot  find  symbol  arguments  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  &&  arguments  >  0;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  arguments  >  0;	  return    arguments!=    null    &&    argumentCount    >    0;    	non-compiled	[CE]  cannot  find  symbol  arguments	143	None	replace
681	[BUG]  [BUGGY]  Preconditions.checkArgument(arguments!=  null  ||  arguments.length  ==  0);  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkArgument(arguments!=  null  ||  arguments.length  ==  0);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkArgument(arguments!=  null  ||  arguments.length  ==  0);	  Preconditions.checkArgument(arguments!=    null);    	non-compiled	[CE]  cannot  find  symbol  arguments	37	None	replace
682	[BUG]  [BUGGY]  For(Node  n  :  constantMap.get(arguments.size()))  {  return  false;  }  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  For(Node  n  :  constantMap.get(arguments.size()))  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	For(Node  n  :  constantMap.get(arguments.size()))  {  return  false;  }	  For(Node    n    :    arguments.iterator().next())    {    return    false;    }    	non-compiled	[CE]  ')'  expected	115	None	replace
683	[BUG]  [BUGGY]  parent!=  null  &&  arguments.values().next())  {  doStatementNormalizations(t,  n,  parent);  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  parent!=  null  &&  arguments.values().next())  {  doStatementNormalizations(t,  n,  parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent!=  null  &&  arguments.values().next())  {  doStatementNormalizations(t,  n,  parent);	  parent!=    null    &&    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    	non-compiled	[CE]  not  a  statement	59	None	replace
684	[BUG]  [BUGGY]  return  parent!=  null  &&  arguments.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  parent!=  null  &&  arguments.contains(n.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  parent!=  null  &&  arguments.contains(n.getString());	  return    n!=    null    &&    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	66	None	replace
685	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this);  return  true;  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,Normalize)  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this);  return  true;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this);  return  true;	  return    false;    NodeTraversal.traverse(compiler,    n,    parent);    return    true;    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,Normalize)	171	None	replace
686	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  constantMap);  [CE]  cannot  find  symbol  constantMap  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  constantMap);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  constantMap);	  NodeTraversal.traverse(compiler,    n,    parent,    argumentMap);    	non-compiled	[CE]  cannot  find  symbol  constantMap	52	None	replace
687	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( ".- ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains(  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( ".- ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( ".- ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains(	  return(arguments!=    null    ||    arguments.size()    >    0)||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.con    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
688	[BUG]  [BUGGY]  if(arguments!=  null)return  true;  }  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null)return  true;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null)return  true;  }	  if(arguments!=    null)    {    return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
689	[BUG]  [BUGGY]  |  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains(  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  |  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	|  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains(	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
690	[BUG]  [BUGGY]  return  arguments!=  null  &&  arguments.contains(n.getString())||  arguments.contains(n.getChildCount());  [CE]  cannot  find  symbol  arguments  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  &&  arguments.contains(n.getString())||  arguments.contains(n.getChildCount());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  arguments.contains(n.getString())||  arguments.contains(n.getChildCount());	  return    arguments!=    null    &&    arguments.contains(n.getString())||    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	155	None	replace
691	[BUG]  [BUGGY]  return  arguments!=  null  &&  arguments.contains(n.getString())||  arguments.contains(n.getParent());  [CE]  cannot  find  symbol  arguments  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  &&  arguments.contains(n.getString())||  arguments.contains(n.getParent());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  arguments.contains(n.getString())||  arguments.contains(n.getParent());	  return    arguments!=    null    &&    arguments.contains(n.getString())||    arguments.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	155	None	replace
692	[BUG]  [BUGGY]  return  arguments!=  null;  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function()  {  arguments=Array.prototype.slice.call(arguments  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null;  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function()  {  arguments=Array.prototype.slice.call(arguments  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null;  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function()  {  arguments=Array.prototype.slice.call(arguments	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    function()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  not  a  statement	122	None	replace
693	[BUG]  [BUGGY]  return  arguments!=  null;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function()  {  arguments=Array.prototype.slice.call(arguments  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function()  {  arguments=Array.prototype.slice.call(arguments  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null;  NodeUtil.isFunctionDeclaration(n)&&  junit.framework.AssertionFailedError:  Expected:  function()  {  arguments=Array.prototype.slice.call(arguments	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    function()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  not  a  statement	122	None	replace
694	[BUG]  [BUGGY]  Node  parent  =  arguments.size()  >  0)  {  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Node  parent  =  arguments.size()  >  0)  {  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Node  parent  =  arguments.size()  >  0)  {  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }	  parent!=    null    &&    arguments.size()    >    0)    {    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  ';'  expected	57	None	replace
695	[BUG]  [BUGGY]  Preconditions.checkState(arguments.length  ==  2  ||  arguments.length  ==  2);  [CE]  cannot  find  symbol  arguments  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkState(arguments.length  ==  2  ||  arguments.length  ==  2);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkState(arguments.length  ==  2  ||  arguments.length  ==  2);	  Preconditions.checkState(arguments.length    ==    2);    	non-compiled	[CE]  cannot  find  symbol  arguments	82	None	replace
696	[BUG]  [BUGGY]  Parent!=  null)  {  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Parent!=  null)  {  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Parent!=  null)  {  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }	  parent!=    null)    {    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  not  a  statement	55	None	replace
697	[BUG]  [BUGGY]  Node  parent  =  arguments.iterator().next();  [CE]  variable  parent  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Node  parent  =  arguments.iterator().next();  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Node  parent  =  arguments.iterator().next();	  parent!=    null)    {    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  variable  parent  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)	55	None	replace
698	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.	  return(arguments!=    null    ||    arguments.size()    >    0)||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       "));    	non-compiled	[CE]  <identifier>  expected	104	None	replace
699	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||	  return(arguments!=    null    ||    arguments.size()    >    0)||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       "));    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
700	[BUG]  [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-->   ")||  arguments.contains( "-->   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.con  [CE]  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-->   ")||  arguments.contains( "-->   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.con  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  ||  arguments.size()  >  0)||  arguments.contains( "-->   ")||  arguments.contains( "-->   ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.con	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ")||    arguments.contains(   "-->   ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains    	non-compiled	[CE]  	151	None	replace
701	[BUG]  [BUGGY]  n.replaceChild(n,  new  Node(Token.EMPTY,  getCurrentName()));  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  n.replaceChild(n,  new  Node(Token.EMPTY,  getCurrentName()));  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	n.replaceChild(n,  new  Node(Token.EMPTY,  getCurrentName()));	  n.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
702	[BUG]  [BUGGY]  return  argumentNames!=  null  ||  arguments.isEmpty();  [CE]  cannot  find  symbol  argumentNames  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  argumentNames!=  null  ||  arguments.isEmpty();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  argumentNames!=  null  ||  arguments.isEmpty();	  return    arguments!=    null    ||    arguments.isEmpty();    	non-compiled	[CE]  cannot  find  symbol  argumentNames	11	None	replace
703	[BUG]  [BUGGY]  Return  arguments!=  null  &&  arguments.isEmpty();  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Return  arguments!=  null  &&  arguments.isEmpty();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Return  arguments!=  null  &&  arguments.isEmpty();	  return    arguments!=    null    ||    arguments.isEmpty();    	non-compiled	[CE]  ';'  expected	11	None	replace
704	[BUG]  [BUGGY]  Node  parentCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiii  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Node  parentCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiii  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Node  parentCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiii	  parent!=    null    &&    arguments.size()    >    0)    {    for(Node    n    :    n.getFirstChild().next())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	91	None	replace
705	[BUG]  [BUGGY]  Node  parent!=  null  &&  arguments.size()  >  0)  {  for(Node  n  :  n.getFirstChild().next())  {  return  false;  }  [CE]  ';'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Node  parent!=  null  &&  arguments.size()  >  0)  {  for(Node  n  :  n.getFirstChild().next())  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Node  parent!=  null  &&  arguments.size()  >  0)  {  for(Node  n  :  n.getFirstChild().next())  {  return  false;  }	  parent!=    null    &&    arguments.size()    >    0)    {    for(Node    n    :    n.getFirstChild().next())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	91	None	replace
706	[BUG]  [BUGGY]  Node  parentCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiii  child  =  arguments.getParentCopiiiCopiiiCopiiiCopiiiCopiii  [CE]  ';'  expected  [FE]                                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Node  parentCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiii  child  =  arguments.getParentCopiiiCopiiiCopiiiCopiiiCopiii  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Node  parentCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiiiCopiii  child  =  arguments.getParentCopiiiCopiiiCopiiiCopiiiCopiii	  parent!=    null    &&    arguments.size()    >    0)    {    for(Node    n    :    n.getFirstChild().next())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	91	None	replace
707	[BUG]  [BUGGY]  return  argument!=  null  &&  arguments.size  >  0;  [CE]  cannot  find  symbol  argument  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  argument!=  null  &&  arguments.size  >  0;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  argument!=  null  &&  arguments.size  >  0;	  return    arguments!=    null    &&    arguments.size    >    0;    	non-compiled	[CE]  cannot  find  symbol  argument	142	None	replace
708	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains(n,  parent.getParent());  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains(n,  parent.getParent());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains(n,  parent.getParent());	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(n,    parent.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	159	None	replace
709	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains(n,  parent.getFirstChild());  [CE]  cannot  find  symbol  arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains(n,  parent.getFirstChild());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains(n,  parent.getFirstChild());	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(n,    parent.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	159	None	replace
710	[BUG]  [BUGGY]  return  arguments!=  null  &&  constantMap.contains(n,  parent.getString());  [CE]  cannot  find  symbol  arguments  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  &&  constantMap.contains(n,  parent.getString());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  constantMap.contains(n,  parent.getString());	  return    arguments!=    null    &&    constantMap.contains(n.getString());    	non-compiled	[CE]  cannot  find  symbol  arguments	133	None	replace
711	[BUG]  [BUGGY]  return  arguments!=  null  ||  arguments.size  >  0;  [CE]  cannot  find  symbol  arguments  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  ||  arguments.size  >  0;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  ||  arguments.size  >  0;	  return    arguments!=    null    ||    arguments.length    >    0;    	non-compiled	[CE]  cannot  find  symbol  arguments	17	None	replace
712	[BUG]  [BUGGY]  return  argumentNames!=  null  ||  arguments.size()  >  0;  [CE]  cannot  find  symbol  argumentNames  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  argumentNames!=  null  ||  arguments.size()  >  0;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  argumentNames!=  null  ||  arguments.size()  >  0;	  return    arguments!=    null    ||    arguments.size()    >    0;    	non-compiled	[CE]  cannot  find  symbol  argumentNames	14	None	replace
713	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME);  [CE]  missing  return  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME);	  Preconditions.checkNotNull(n);    	non-compiled	[CE]  missing  return  statement	141	None	replace
714	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  FORGIVE_LOCAL_NAMES_UNIQUE);  [CE]  cannot  find  symbol  FORGIVE_LOCAL_NAMES_UNIQUE  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  FORGIVE_LOCAL_NAMES_UNIQUE);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this,  FORGIVE_LOCAL_NAMES_UNIQUE);	  NodeTraversal.traverse(compiler,    n,    parent,    this,    argument);    	non-compiled	[CE]  cannot  find  symbol  FORGIVE_LOCAL_NAMES_UNIQUE	45	None	replace
715	[BUG]  [BUGGY]  Return  arguments!=  null  &&  arguments.contains(n.getFirstChild());  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Return  arguments!=  null  &&  arguments.contains(n.getFirstChild());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Return  arguments!=  null  &&  arguments.contains(n.getFirstChild());	  Return    arguments!=    null    &&    arguments.contains(n.getString());    	non-compiled	[CE]  ';'  expected	68	None	replace
716	[BUG]  [BUGGY]  Return  arguments!=  null  &&  arguments.contains(n.getString()));  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Return  arguments!=  null  &&  arguments.contains(n.getString()));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Return  arguments!=  null  &&  arguments.contains(n.getString()));	  Return    arguments!=    null    &&    arguments.contains(n.getString());    	non-compiled	[CE]  ';'  expected	68	None	replace
717	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.VAR);  [CE]  missing  return  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.VAR);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.VAR);	  Preconditions.checkNotNull(parent);    	non-compiled	[CE]  missing  return  statement	130	None	replace
718	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  index);  [CE]  cannot  find  symbol  index  [FE]        RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  index);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeTraversal.traverse(compiler,  n,  this,  index);	  NodeTraversal.traverse(compiler,    n,    this,    arguments);    	non-compiled	[CE]  cannot  find  symbol  index	69	None	replace
719	[BUG]  [BUGGY]  Return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains(n.getFirstChild());  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains(n.getFirstChild());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains(n.getFirstChild());	  Return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(n.getString());    	non-compiled	[CE]  not  a  statement	26	None	replace
720	[BUG]  [BUGGY]  return  arguments!=  null;  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  Function  f()  {  arguments=Array.prototype.slice.call(arguments  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null;  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  Function  f()  {  arguments=Array.prototype.slice.call(arguments  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null;  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  Function  f()  {  arguments=Array.prototype.slice.call(arguments	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    Function    f()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  not  a  statement	123	None	replace
721	[BUG]  [BUGGY]  return  n.isEmpty()  ||  arguments.size()  ==  0;  [CE]  cannot  find  symbol  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  n.isEmpty()  ||  arguments.size()  ==  0;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  n.isEmpty()  ||  arguments.size()  ==  0;	  return    n.isEmpty();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
722	[BUG]  [BUGGY]  return  true;  Traversal.Traversal.traverse(compiler,  n,  parent);  [CE]  package  Traversal  does  not  exist  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  true;  Traversal.Traversal.traverse(compiler,  n,  parent);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  true;  Traversal.Traversal.traverse(compiler,  n,  parent);	  return    false;    NodeTraversal.Traversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  package  Traversal  does  not  exist	42	None	replace
723	[BUG]  [BUGGY]  return  false;  NodeTraversal.Traversal.traverse(compiler,  n,  parent,  argumentMap);  [CE]  cannot  find  symbol  argumentMap  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  false;  NodeTraversal.Traversal.traverse(compiler,  n,  parent,  argumentMap);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  false;  NodeTraversal.Traversal.traverse(compiler,  n,  parent,  argumentMap);	  return    false;    NodeTraversal.Traversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  argumentMap	42	None	replace
724	[BUG]  [BUGGY]  node.removeChild(parent);  NodeTraversal.traverse(compiler,  n,  parent,  node);  [CE]  cannot  find  symbol  node  [FE]        RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  node.removeChild(parent);  NodeTraversal.traverse(compiler,  n,  parent,  node);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	node.removeChild(parent);  NodeTraversal.traverse(compiler,  n,  parent,  node);	          n.removeChild(parent);    NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  node	98	None	replace
725	[BUG]  [BUGGY]  node.removeChild(parent);  NodeTraversal.traverse(compiler,  n,  parent,  ignoreHandler);  [CE]  cannot  find  symbol  node  [FE]          RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  node.removeChild(parent);  NodeTraversal.traverse(compiler,  n,  parent,  ignoreHandler);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	node.removeChild(parent);  NodeTraversal.traverse(compiler,  n,  parent,  ignoreHandler);	          n.removeChild(parent);    NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  node	98	None	replace
726	[BUG]  [BUGGY]  node.removeChild(parent);  NodeTraversal.traverse(compiler,  n,  parent,  this);  [CE]  cannot  find  symbol  node  [FE]            RuntimeException      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  node.removeChild(parent);  NodeTraversal.traverse(compiler,  n,  parent,  this);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	node.removeChild(parent);  NodeTraversal.traverse(compiler,  n,  parent,  this);	          n.removeChild(parent);    NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  node	98	None	replace
727	[BUG]  [BUGGY]  if(t.getCompiler()!=  null)return  false;  t.getCompiler().reportCodeChange();  return  true;  }  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(t.getCompiler()!=  null)return  false;  t.getCompiler().reportCodeChange();  return  true;  }  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(t.getCompiler()!=  null)return  false;  t.getCompiler().reportCodeChange();  return  true;  }	  return    false;    t.getCompiler().reportCodeChange();    return    true;    	non-compiled	[CE]  class,  interface,  or  enum  expected	169	None	replace
728	[BUG]  [BUGGY]  return  arguments!=  null  &&  arguments.size()  >  2;  [CE]  cannot  find  symbol  arguments  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  &&  arguments.size()  >  2;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  arguments.size()  >  2;	  return    arguments!=    null    &&    arguments.size()    >    1;    	non-compiled	[CE]  cannot  find  symbol  arguments	157	None	replace
729	[BUG]  [BUGGY]  NodeUtil.isStatementBlock(n)||  arguments.contains(n.getString()))  {  for(Node  n  :  n.getFirstChild().next())  {  return  false;  }  [CE]  not  a  statement  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  NodeUtil.isStatementBlock(n)||  arguments.contains(n.getString()))  {  for(Node  n  :  n.getFirstChild().next())  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	NodeUtil.isStatementBlock(n)||  arguments.contains(n.getString()))  {  for(Node  n  :  n.getFirstChild().next())  {  return  false;  }	  parent!=    null    &&    arguments.contains(n.getString()))    {    for(Node    n    :    n.getFirstChild().next())    {    return    false;    }    	non-compiled	[CE]  not  a  statement	90	None	replace
730	[BUG]  [BUGGY]  Node  n  =  constantMap.get(arguments.size()  -  1);  [CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Node  n  =  constantMap.get(arguments.size()  -  1);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Node  n  =  constantMap.get(arguments.size()  -  1);	  Node    n    =    arguments.iterator().next();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)	166	None	replace
731	[BUG]  [BUGGY]  Node  n  =  n.getFirstChild().getNext();  [CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Node  n  =  n.getFirstChild().getNext();  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Node  n  =  n.getFirstChild().getNext();	  Node    n    =    arguments.iterator().next();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  shouldTraverse(NodeTraversal,Node,Node)	166	None	replace
732	[BUG]  [BUGGY]  return(arguments!=  null  &&!arguments.isEmpty());  [CE]  cannot  find  symbol  arguments  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&!arguments.isEmpty());  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&!arguments.isEmpty());	  return(arguments!=    null)&&!arguments.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  arguments	125	None	replace
733	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-N   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   "));  [CE]  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-N   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   "));  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-N   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   "));	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   "));    	non-compiled	[CE]  	144	None	replace
734	[BUG]  [BUGGY]  return  arguments!=  null  &&  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function  f()  ==  arguments=Array.prototype.slice.call(  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  arguments!=  null  &&  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function  f()  ==  arguments=Array.prototype.slice.call(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function  f()  ==  arguments=Array.prototype.slice.call(	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    function    f()    ==    arguments=Array.prototype.slice.call(    	non-compiled	[CE]  ';'  expected	124	None	replace
735	[BUG]  [BUGGY]  return  true;  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function  f()  ==  arguments=Array.prototype.slice.call(  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  true;  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function  f()  ==  arguments=Array.prototype.slice.call(  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  true;  NodeUtil.isFunctionDeclaration(n)||  junit.framework.AssertionFailedError:  Expected:  function  f()  ==  arguments=Array.prototype.slice.call(	  return    false;    NodeUtil.isFunctionDeclaration(n)||    junit.framework.AssertionFailedError:    Expected:    function    f()    ==    arguments=Array.prototype.slice.call(    	non-compiled	[CE]  not  a  statement	124	None	replace
736	[BUG]  [BUGGY]  return  argument!=  null  &&  parent.getType()  ==  Token.FUNCTION;  [CE]  cannot  find  symbol  argument  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  argument!=  null  &&  parent.getType()  ==  Token.FUNCTION;  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  argument!=  null  &&  parent.getType()  ==  Token.FUNCTION;	  return    arguments!=    null    &&    parent.getType()    ==    Token.FUNCTION;    	non-compiled	[CE]  cannot  find  symbol  argument	97	None	replace
737	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(parent,  n);  n.addChildToFront(parent);  NodeUtil.removeChild(parent,  n);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	add	                n.removeChild(parent);        NodeUtil.removeChild(parent,    n);    n.addChildToFront(parent);  NodeUtil.removeChild(parent,  n);	  	compilable	  [FE]  RuntimeException  	99	13	add
738	[BUG]  [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(parent,  n);  n.addChildToFront(parent);  NodeUtil.removeChild(parent,  n);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]          n.removeChild(parent);    NodeUtil.removeChild(parent,  n);  n.addChildToFront(parent);  NodeUtil.removeChild(parent,  n);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	                n.removeChild(parent);        NodeUtil.removeChild(parent,    n);    n.addChildToFront(parent);  NodeUtil.removeChild(parent,  n);	  	compilable	  [FE]  RuntimeException  	99	13	add
739	[BUG]  [BUGGY]  parent!=  null  &&  arguments.iterator().next())  {  doReportNormalizations(t,  n,  parent);  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  parent!=  null  &&  arguments.iterator().next())  {  doReportNormalizations(t,  n,  parent);  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent!=  null  &&  arguments.iterator().next())  {  doReportNormalizations(t,  n,  parent);	  if(arguments!=    null)    {    for(Node    n    :    arguments.iterator().next())    {    doReportNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  not  a  statement	112	None	replace
740	[BUG]  [BUGGY]  parent!=  null  &&  arguments.iterator().next())  {  doReportNormalizations(t,  n,  parent);  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  parent!=  null  &&  arguments.iterator().next())  {  doReportNormalizations(t,  n,  parent);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	parent!=  null  &&  arguments.iterator().next())  {  doReportNormalizations(t,  n,  parent);  }	  if(arguments!=    null)    {    for(Node    n    :    arguments.iterator().next())    {    doReportNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  not  a  statement	112	None	replace
741	[BUG]  [BUGGY]  Node  args  =  n.arguments.iterator().next();  [CE]  cannot  find  symbol  arguments  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Node  args  =  n.arguments.iterator().next();  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Node  args  =  n.arguments.iterator().next();	  Node    args    =    arguments.iterator().next();    	non-compiled	[CE]  cannot  find  symbol  arguments	116	None	replace
742	[BUG]  [BUGGY]  if(arguments!=  null  &&  arguments.contains(n.getString()))  {  for(Node  n  =  arguments.iterator().next())  {  return  false;  }  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  if(arguments!=  null  &&  arguments.contains(n.getString()))  {  for(Node  n  =  arguments.iterator().next())  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	if(arguments!=  null  &&  arguments.contains(n.getString()))  {  for(Node  n  =  arguments.iterator().next())  {  return  false;  }	  if(arguments!=    null    &&    arguments.contains(n.getString()))    {    for(Node    n    :    arguments.iterator().next())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	137	None	replace
743	[BUG]  [BUGGY]  return!consumer.isEmpty();  [CE]  cannot  find  symbol  consumer  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return!consumer.isEmpty();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return!consumer.isEmpty();	  return!converter.isEmpty();    	non-compiled	[CE]  cannot  find  symbol  consumer	135	None	replace
744	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-N   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-N   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-N   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")||  arguments.	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")||    arguments.    	non-compiled	[CE]  <identifier>  expected	148	None	replace
745	[BUG]  [BUGGY]  Node  parent  =  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  Node  parent  =  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]      return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	Node  parent  =  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }	  parent    ==    null)    {    for(Node    n    :    arguments.iterator().next())    {    doStatementNormalizations(t,    n,    parent);    }    	non-compiled	[CE]  ';'  expected	56	None	replace
746	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-N   ")||  arguments.contains( "-N   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")  [CE]  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-N   ")||  arguments.contains( "-N   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "-N   ")||  arguments.contains( "-N   ")||  arguments.contains( "-n   ")||  arguments.contains( "-n   ")	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")||    arguments.contains(   "-n   ")    	non-compiled	[CE]  	146	None	replace
747	[BUG]  [BUGGY]  return  argumentName!=  null  &&  parent.hasChildren();  [CE]  cannot  find  symbol  argumentName  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  argumentName!=  null  &&  parent.hasChildren();  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  argumentName!=  null  &&  parent.hasChildren();	  return    arguments!=    null    &&    parent.hasChildren();    	non-compiled	[CE]  cannot  find  symbol  argumentName	140	None	replace
748	[BUG]  [BUGGY]  return  false;  NodeTraversal.traverse(compiler,  n,  parent,  forbidChanges);  [CE]  cannot  find  symbol  forbidChanges  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  false;  NodeTraversal.traverse(compiler,  n,  parent,  forbidChanges);  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  false;  NodeTraversal.traverse(compiler,  n,  parent,  forbidChanges);	  return    false;    NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  forbidChanges	120	None	replace
749	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ".* ")||  arguments.contains( "-> ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ".* ")||  arguments.contains( "-> ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ".* ")||  arguments.contains( "-> ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ".*   ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains    	non-compiled	[CE]  <identifier>  expected	150	None	replace
750	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ".* ")||  arguments.contains( "--> ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ".* ")||  arguments.contains( "--> ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ".* ")||  arguments.contains( "--> ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ".*   ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains    	non-compiled	[CE]  <identifier>  expected	150	None	replace
751	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ".* ")||  arguments.contains( "--> ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ".* ")||  arguments.contains( "--> ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ".* ")||  arguments.contains( "--> ")||  arguments.contains( "-   ")||  arguments.contains( "-   ")||  arguments.contains	  return(arguments!=    null    &&    arguments.size()    >    0)||    arguments.contains(   "-   ".*   ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains(   "-       ")||    arguments.contains    	non-compiled	[CE]  <identifier>  expected	150	None	replace
752	[BUG]  [BUGGY]  return  true;  function  f()  {  arguments=Array.prototype.slice.call(arguments  [CE]  ';'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);      [BUGGY]  return  true;  function  f()  {  arguments=Array.prototype.slice.call(arguments  [BUGGY]      }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  true;  function  f()  {  arguments=Array.prototype.slice.call(arguments	  return    false;    function    f()    {    arguments=Array.prototype.slice.call(arguments    	non-compiled	[CE]  ';'  expected	39	None	replace
