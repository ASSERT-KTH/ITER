bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    NodeTraversal.traverse(compiler,  n,  parent);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node)  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);  [BUGGY]    NodeTraversal.traverse(compiler,  n,  parent);  [BUGGY]  return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	    NodeTraversal.traverse(compiler,  n,  parent);		non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node)	56	None	add
2	[BUG]  [BUGGY]    if(arguments!=  null)  {  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);  [BUGGY]    if(arguments!=  null)  {  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }  [BUGGY]  return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	    if(arguments!=  null)  {  for(Node  n  :  arguments.iterator().next())  {  doStatementNormalizations(t,  n,  parent);  }		non-compiled	[CE]  illegal  start  of  expression	56	None	add
3	[BUG]  [BUGGY]    Preconditions.checkState(arguments!=  null);  [CE]  cannot  find  symbol  arguments  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);  [BUGGY]    Preconditions.checkState(arguments!=  null);  [BUGGY]  return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	    Preconditions.checkState(arguments!=  null);		non-compiled	[CE]  cannot  find  symbol  arguments	56	None	add
4	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);  [BUGGY]    n.removeChild(parent);  [BUGGY]  return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	add	    n.removeChild(parent);		compilable	  [FE]  RuntimeException  	56	13	add
5	[BUG]  [BUGGY]    n.removeChild(parent);  [FE]  RuntimeException  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);  [BUGGY]    n.removeChild(parent);  [BUGGY]  return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	    n.removeChild(parent);		compilable	  [FE]  RuntimeException  	56	13	add
6	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);  [BUGGY]    NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]  return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	add	    NodeTraversal.traverse(compiler,  n,  this);		compilable	  [FE]  RuntimeException  	56	13	add
7	[BUG]  [BUGGY]    NodeTraversal.traverse(compiler,  n,  this);  [FE]  RuntimeException  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);  [BUGGY]    NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]  return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	    NodeTraversal.traverse(compiler,  n,  this);		compilable	  [FE]  RuntimeException  	56	13	add
8	[BUG]  [BUGGY]    if(arguments!=  null)  {  for(Node  n  :  arguments.iterator().next())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);  [BUGGY]    if(arguments!=  null)  {  for(Node  n  :  arguments.iterator().next())  {  return  false;  }  [BUGGY]  return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	    if(arguments!=  null)  {  for(Node  n  :  arguments.iterator().next())  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	56	None	add
9	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);  [BUGGY]  return  false;  [BUGGY]  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	add	return  false;	return  true;  	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  	55	1	replace
10	[BUG]  [BUGGY]  return  false;  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);  [BUGGY]  return  false;  [BUGGY]  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  false;	return  true;  	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  	55	1	replace
11	[BUG]  [BUGGY]  return  arguments!=  null  &&  arguments.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);  [BUGGY]  return  arguments!=  null  &&  arguments.contains(n.getString());  [BUGGY]  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  arguments.contains(n.getString());	return  true;  	non-compiled	[CE]  cannot  find  symbol  arguments	55	None	replace
12	[BUG]  [BUGGY]  return  arguments!=  null  &&  arguments.size()  >  0;  [CE]  cannot  find  symbol  arguments  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);  [BUGGY]  return  arguments!=  null  &&  arguments.size()  >  0;  [BUGGY]  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  arguments.size()  >  0;	return  true;  	non-compiled	[CE]  cannot  find  symbol  arguments	55	None	replace
13	[BUG]  [BUGGY]  return  arguments!=  null  &&  arguments.contains(n.getString()));  [CE]  ';'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);  [BUGGY]  return  arguments!=  null  &&  arguments.contains(n.getString()));  [BUGGY]  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  arguments.contains(n.getString()));	return  true;  	non-compiled	[CE]  ';'  expected	55	None	replace
14	[BUG]  [BUGGY]  return  arguments!=  null  &&  arguments.length  >  0;  [CE]  cannot  find  symbol  arguments  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);  [BUGGY]  return  arguments!=  null  &&  arguments.length  >  0;  [BUGGY]  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  arguments.length  >  0;	return  true;  	non-compiled	[CE]  cannot  find  symbol  arguments	55	None	replace
15	[BUG]  [BUGGY]    Preconditions.checkNotNull(arguments);  [CE]  cannot  find  symbol  arguments  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);  [BUGGY]    Preconditions.checkNotNull(arguments);  [BUGGY]  return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	    Preconditions.checkNotNull(arguments);		non-compiled	[CE]  cannot  find  symbol  arguments	56	None	add
16	[BUG]  [BUGGY]    Preconditions.checkState(arguments  ==  null);  [CE]  cannot  find  symbol  arguments  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);  [BUGGY]    Preconditions.checkState(arguments  ==  null);  [BUGGY]  return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	    Preconditions.checkState(arguments  ==  null);		non-compiled	[CE]  cannot  find  symbol  arguments	56	None	add
17	[BUG]  [BUGGY]    NodeTraversal.traverse(compiler,  n,  parent,  this);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,Normalize)  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);  [BUGGY]    NodeTraversal.traverse(compiler,  n,  parent,  this);  [BUGGY]  return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	    NodeTraversal.traverse(compiler,  n,  parent,  this);		non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,Normalize)	56	None	add
18	[BUG]  [BUGGY]    NodeTraversal.traverse(compiler,  n,  parent,  arguments);  [CE]  cannot  find  symbol  arguments  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);  [BUGGY]    NodeTraversal.traverse(compiler,  n,  parent,  arguments);  [BUGGY]  return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	    NodeTraversal.traverse(compiler,  n,  parent,  arguments);		non-compiled	[CE]  cannot  find  symbol  arguments	56	None	add
19	[BUG]  [BUGGY]  return!arguments.isEmpty();  [CE]  cannot  find  symbol  arguments  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);  [BUGGY]  return!arguments.isEmpty();  [BUGGY]  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return!arguments.isEmpty();	return  true;  	non-compiled	[CE]  cannot  find  symbol  arguments	55	None	replace
20	[BUG]  [BUGGY]  return  arguments!=  null;  [CE]  cannot  find  symbol  arguments  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);  [BUGGY]  return  arguments!=  null;  [BUGGY]  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null;	return  true;  	non-compiled	[CE]  cannot  find  symbol  arguments	55	None	replace
21	[BUG]  [BUGGY]  return  arguments!=  null  &&  arguments.isEmpty();  [CE]  cannot  find  symbol  arguments  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);  [BUGGY]  return  arguments!=  null  &&  arguments.isEmpty();  [BUGGY]  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return  arguments!=  null  &&  arguments.isEmpty();	return  true;  	non-compiled	[CE]  cannot  find  symbol  arguments	55	None	replace
22	[BUG]  [BUGGY]    Preconditions.checkArgument(arguments.length  ==  0);  [CE]  cannot  find  symbol  arguments  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);  [BUGGY]    Preconditions.checkArgument(arguments.length  ==  0);  [BUGGY]  return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	    Preconditions.checkArgument(arguments.length  ==  0);		non-compiled	[CE]  cannot  find  symbol  arguments	56	None	add
23	[BUG]  [BUGGY]    Preconditions.checkArgument(arguments.length  ==  1);  [CE]  cannot  find  symbol  arguments  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);  [BUGGY]    Preconditions.checkArgument(arguments.length  ==  1);  [BUGGY]  return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	    Preconditions.checkArgument(arguments.length  ==  1);		non-compiled	[CE]  cannot  find  symbol  arguments	56	None	add
24	[BUG]  [BUGGY]    Preconditions.checkArgument(arguments.length  ==  2);  [CE]  cannot  find  symbol  arguments  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);  [BUGGY]    Preconditions.checkArgument(arguments.length  ==  2);  [BUGGY]  return  true;  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	    Preconditions.checkArgument(arguments.length  ==  2);		non-compiled	[CE]  cannot  find  symbol  arguments	56	None	add
25	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains(n.getString());  [CE]  cannot  find  symbol  arguments  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains(n.getString());  [BUGGY]  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains(n.getString());	return  true;  	non-compiled	[CE]  cannot  find  symbol  arguments	55	None	replace
26	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ")||  arguments.contains( "- ")||  arguments.contains( "- ")||  arguments.contains( "- ")||  arguments.contains( "- "));  [CE]  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ")||  arguments.contains( "- ")||  arguments.contains( "- ")||  arguments.contains( "- ")||  arguments.contains( "- "));  [BUGGY]  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ")||  arguments.contains( "- ")||  arguments.contains( "- ")||  arguments.contains( "- ")||  arguments.contains( "- "));	return  true;  	non-compiled	[CE]  	55	None	replace
27	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ")||  arguments.contains( "- ")||  arguments.contains( "- ")||  arguments.contains( "- ")||  arguments.contains( "- "))  [CE]  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ")||  arguments.contains( "- ")||  arguments.contains( "- ")||  arguments.contains( "- ")||  arguments.contains( "- "))  [BUGGY]  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ")||  arguments.contains( "- ")||  arguments.contains( "- ")||  arguments.contains( "- ")||  arguments.contains( "- "))	return  true;  	non-compiled	[CE]  	55	None	replace
28	[BUG]  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ")||  arguments.contains( "- ")||  arguments.contains( "- ")||  arguments.contains( "- "));  [CE]  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  public  boolean  shouldTraverse(NodeTraversal  t,  Node  n,  Node  parent)  {  doStatementNormalizations(t,  n,  parent);  [BUGGY]  return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ")||  arguments.contains( "- ")||  arguments.contains( "- ")||  arguments.contains( "- "));  [BUGGY]  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  forbidChanges  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	103	103	1	replace	return(arguments!=  null  &&  arguments.size()  >  0)||  arguments.contains( "- ")||  arguments.contains( "- ")||  arguments.contains( "- ")||  arguments.contains( "- "));	return  true;  	non-compiled	[CE]  	55	None	replace
