bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  mergeVarDeclarations(n,  arguments);  [CE]  illegal  start  of  type  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  mergeVarDeclarations(n,  arguments);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	mergeVarDeclarations(n,  arguments);	  mergeVarDeclarations(n);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
2	[BUG]  [BUGGY]  mergeVarDeclarations(n.getFirstChild());  [CE]  illegal  start  of  type  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  mergeVarDeclarations(n.getFirstChild());  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	mergeVarDeclarations(n.getFirstChild());	  mergeVarDeclarations(n);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
3	[BUG]  [BUGGY]  mergeVarDeclarations(n,  parent);  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  mergeVarDeclarations(n,  parent);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	mergeVarDeclarations(n,  parent);	  mergeVarDeclarations(n);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
4	[BUG]  [BUGGY]  mergeVarDeclarations(n.getLastChild());  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  mergeVarDeclarations(n.getLastChild());  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	mergeVarDeclarations(n.getLastChild());	  mergeVarDeclarations(n);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
5	[BUG]  [BUGGY]  mergeVarDeclarations(n,  t);  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  mergeVarDeclarations(n,  t);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	mergeVarDeclarations(n,  t);	  mergeVarDeclarations(n);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
6	[BUG]  [BUGGY]  n  =  n.getLastChild();  [CE]  illegal  start  of  type  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  n  =  n.getLastChild();  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	n  =  n.getLastChild();	      n    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
7	[BUG]  [BUGGY]  n  =  parent.getFirstChild();  [CE]  illegal  start  of  type  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  n  =  parent.getFirstChild();  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	n  =  parent.getFirstChild();	      n    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
8	[BUG]  [BUGGY]  Node  varDeclarations  =  parent.getFirstChild();  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Node  varDeclarations  =  parent.getFirstChild();  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Node  varDeclarations  =  parent.getFirstChild();	      Node    varDeclarations    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
9	[BUG]  [BUGGY]  Node  varDeclarations  =  getVarDeclarations(n.getFirstChild());  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Node  varDeclarations  =  getVarDeclarations(n.getFirstChild());  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Node  varDeclarations  =  getVarDeclarations(n.getFirstChild());	      Node    varDeclarations    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
10	[BUG]  [BUGGY]  Node  varDeclarations  =  n.getFirstChild().getNext();  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Node  varDeclarations  =  n.getFirstChild().getNext();  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Node  varDeclarations  =  n.getFirstChild().getNext();	      Node    varDeclarations    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
11	[BUG]  [BUGGY]  splitVarDeclarations(n.getFirstChild(),  arguments);  [CE]  illegal  start  of  type  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  splitVarDeclarations(n.getFirstChild(),  arguments);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	splitVarDeclarations(n.getFirstChild(),  arguments);	  splitVarDeclarations(n.getFirstChild());    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
12	[BUG]  [BUGGY]  moveNamedFunctions(n.getFirstChild());  [CE]  illegal  start  of  type  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  moveNamedFunctions(n.getFirstChild());  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	moveNamedFunctions(n.getFirstChild());	  splitVarDeclarations(n.getFirstChild());    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
13	[BUG]  [BUGGY]  moveVarDeclarations(n.getFirstChild());  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  moveVarDeclarations(n.getFirstChild());  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	moveVarDeclarations(n.getFirstChild());	  splitVarDeclarations(n.getFirstChild());    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
14	[BUG]  [BUGGY]  Preconditions.checkState(!NodeUtil.isGetProp(parent));  [CE]  illegal  start  of  type  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Preconditions.checkState(!NodeUtil.isGetProp(parent));  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Preconditions.checkState(!NodeUtil.isGetProp(parent));	      Preconditions.checkState(!NodeUtil.isGetProp(n));    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
15	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isGetProp(n));  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Preconditions.checkState(NodeUtil.isGetProp(n));  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Preconditions.checkState(NodeUtil.isGetProp(n));	      Preconditions.checkState(!NodeUtil.isGetProp(n));    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
16	[BUG]  [BUGGY]  Preconditions.checkState(!NodeUtil.isName(n));  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Preconditions.checkState(!NodeUtil.isName(n));  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Preconditions.checkState(!NodeUtil.isName(n));	      Preconditions.checkState(!NodeUtil.isGetProp(n));    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
17	[BUG]  [BUGGY]  Node  v  =  n.getLastChild();  [CE]  illegal  start  of  type  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Node  v  =  n.getLastChild();  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Node  v  =  n.getLastChild();	      Node    v    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
18	[BUG]  [BUGGY]  Node  v  =  parent.getFirstChild();  [CE]  illegal  start  of  type  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Node  v  =  parent.getFirstChild();  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Node  v  =  parent.getFirstChild();	      Node    v    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
19	[BUG]  [BUGGY]  Node  v  =  n.getNext();  [CE]  illegal  start  of  type  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Node  v  =  n.getNext();  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Node  v  =  n.getNext();	      Node    v    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
20	[BUG]  [BUGGY]  Node  v  =  node.getFirstChild();  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Node  v  =  node.getFirstChild();  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Node  v  =  node.getFirstChild();	      Node    v    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
21	[BUG]  [BUGGY]  Preconditions.checkState(!NodeUtil.isFunctionDeclaration(n));  [CE]  illegal  start  of  type  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Preconditions.checkState(!NodeUtil.isFunctionDeclaration(n));  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Preconditions.checkState(!NodeUtil.isFunctionDeclaration(n));	      Preconditions.checkState(!NodeUtil.isVarDeclaration(n));    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
22	[BUG]  [BUGGY]  Preconditions.checkState(!NodeUtil.isVarDeclaration(parent));  [CE]  illegal  start  of  type  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Preconditions.checkState(!NodeUtil.isVarDeclaration(parent));  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Preconditions.checkState(!NodeUtil.isVarDeclaration(parent));	      Preconditions.checkState(!NodeUtil.isVarDeclaration(n));    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
23	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isVarDeclaration(n));  [CE]  illegal  start  of  type  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Preconditions.checkState(NodeUtil.isVarDeclaration(n));  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Preconditions.checkState(NodeUtil.isVarDeclaration(n));	      Preconditions.checkState(!NodeUtil.isVarDeclaration(n));    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
24	[BUG]  [BUGGY]  Node  var  =  parent.getFirstChild();  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Node  var  =  parent.getFirstChild();  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Node  var  =  parent.getFirstChild();	      Node    var    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
25	[BUG]  [BUGGY]  Node  var  =  n.getNext();  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Node  var  =  n.getNext();  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Node  var  =  n.getNext();	      Node    var    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
26	[BUG]  [BUGGY]  Node  var  =  node.getFirstChild();  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Node  var  =  node.getFirstChild();  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Node  var  =  node.getFirstChild();	      Node    var    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
27	[BUG]  [BUGGY]  Preconditions.checkState(arguments.length  >  1);  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Preconditions.checkState(arguments.length  >  1);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Preconditions.checkState(arguments.length  >  1);	  Preconditions.checkState(arguments.length    >    0);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
28	[BUG]  [BUGGY]  Preconditions.checkState(arguments.length  ==  0);  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Preconditions.checkState(arguments.length  ==  0);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Preconditions.checkState(arguments.length  ==  0);	  Preconditions.checkState(arguments.length    >    0);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
29	[BUG]  [BUGGY]  Preconditions.checkState(arguments.length  >  2);  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Preconditions.checkState(arguments.length  >  2);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Preconditions.checkState(arguments.length  >  2);	  Preconditions.checkState(arguments.length    >    0);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
30	[BUG]  [BUGGY]  Preconditions.checkState(arguments.length!=  0);  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Preconditions.checkState(arguments.length!=  0);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Preconditions.checkState(arguments.length!=  0);	  Preconditions.checkState(arguments.length    >    0);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
31	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  arguments));  [CE]  illegal  start  of  type  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  arguments));  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	t.getCompiler().report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  arguments));	  t.getCompiler().reportCodeChange();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
32	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNIQUE,  arguments));  [CE]  illegal  start  of  type  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNIQUE,  arguments));  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	t.getCompiler().report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNIQUE,  arguments));	  t.getCompiler().reportCodeChange();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
33	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  CONVERT_WHILE_TO_FOR));  [CE]  illegal  start  of  type  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  CONVERT_WHILE_TO_FOR));  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	t.getCompiler().report(JSError.make(t,  n,  CONVERT_WHILE_TO_FOR));	  t.getCompiler().reportCodeChange();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
34	[BUG]  [BUGGY]  Preconditions.checkState(arguments  ==  null);  [CE]  illegal  start  of  type  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Preconditions.checkState(arguments  ==  null);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Preconditions.checkState(arguments  ==  null);	  Preconditions.checkState(arguments!=    null);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
35	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null  &&  arguments.length  >  0);  [CE]  illegal  start  of  type  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Preconditions.checkState(arguments!=  null  &&  arguments.length  >  0);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Preconditions.checkState(arguments!=  null  &&  arguments.length  >  0);	  Preconditions.checkState(arguments!=    null);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
36	[BUG]  [BUGGY]  Preconditions.checkArgument(arguments!=  null);  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Preconditions.checkArgument(arguments!=  null);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Preconditions.checkArgument(arguments!=  null);	  Preconditions.checkState(arguments!=    null);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
37	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null,  arguments.length);  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Preconditions.checkState(arguments!=  null,  arguments.length);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Preconditions.checkState(arguments!=  null,  arguments.length);	  Preconditions.checkState(arguments!=    null);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
38	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  arguments);  [CE]  illegal  start  of  type  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  arguments);  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	NodeTraversal.traverse(compiler,  n,  this,  arguments);	      NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
39	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent);  [CE]  illegal  start  of  type  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent);  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	NodeTraversal.traverse(compiler,  n,  parent);	      NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
40	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  argument);  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  argument);  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	NodeTraversal.traverse(compiler,  n,  this,  argument);	      NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
41	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  null);  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  NodeTraversal.traverse(compiler,  n,  null);  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	NodeTraversal.traverse(compiler,  n,  null);	      NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
42	[BUG]  [BUGGY]  moveNamedFunctions(n.getLastChild());  [CE]  illegal  start  of  type  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  moveNamedFunctions(n.getLastChild());  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	moveNamedFunctions(n.getLastChild());	  splitVarDeclarations(n.getLastChild());    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
43	[BUG]  [BUGGY]  moveVarDeclarations(n.getLastChild());  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  moveVarDeclarations(n.getLastChild());  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	moveVarDeclarations(n.getLastChild());	  splitVarDeclarations(n.getLastChild());    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
44	[BUG]  [BUGGY]  splitVarDeclarations(n.getLastChild(),  arguments);  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  splitVarDeclarations(n.getLastChild(),  arguments);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	splitVarDeclarations(n.getLastChild(),  arguments);	  splitVarDeclarations(n.getLastChild());    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
45	[BUG]  [BUGGY]  NodeUtil.removeChild(parent);  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  NodeUtil.removeChild(parent);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	NodeUtil.removeChild(parent);	  n.removeChild(parent);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
46	[BUG]  [BUGGY]  n.replaceChild(n,  parent);  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  n.replaceChild(n,  parent);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	n.replaceChild(n,  parent);	  n.removeChild(parent);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
47	[BUG]  [BUGGY]  NodeUtil.removeChild(parent,  n);  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  NodeUtil.removeChild(parent,  n);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	NodeUtil.removeChild(parent,  n);	  n.removeChild(parent);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
48	[BUG]  [BUGGY]  parent.replaceChild(n,  n);  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  parent.replaceChild(n,  n);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	parent.replaceChild(n,  n);	  n.removeChild(parent);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
49	[BUG]  [BUGGY]  Node  parent  =  n.getNext();  [CE]  illegal  start  of  type  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Node  parent  =  n.getNext();  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Node  parent  =  n.getNext();	      Node    parent    =    n.getParent();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
50	[BUG]  [BUGGY]  Node  parent  =  n.getLastChild();  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Node  parent  =  n.getLastChild();  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Node  parent  =  n.getLastChild();	      Node    parent    =    n.getParent();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
51	[BUG]  [BUGGY]  Node  parent  =  n.getFirstChild();  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Node  parent  =  n.getFirstChild();  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Node  parent  =  n.getFirstChild();	      Node    parent    =    n.getParent();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
52	[BUG]  [BUGGY]  Node  parent  =  t.getParent();  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Node  parent  =  t.getParent();  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Node  parent  =  t.getParent();	      Node    parent    =    n.getParent();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
53	[BUG]  [BUGGY]  Node  varDeclarations  =  parent.getLastChild();  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Node  varDeclarations  =  parent.getLastChild();  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Node  varDeclarations  =  parent.getLastChild();	      Node    varDeclarations    =    n.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
54	[BUG]  [BUGGY]  Node  varDeclarations  =  getVarDeclarations(n.getLastChild());  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Node  varDeclarations  =  getVarDeclarations(n.getLastChild());  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Node  varDeclarations  =  getVarDeclarations(n.getLastChild());	      Node    varDeclarations    =    n.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
55	[BUG]  [BUGGY]  Node  var  =  parent.getLastChild();  [CE]  illegal  start  of  type  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Node  var  =  parent.getLastChild();  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Node  var  =  parent.getLastChild();	      Node    var    =    n.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
56	[BUG]  [BUGGY]  Node  var  =  node.getLastChild();  [CE]  illegal  start  of  type  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Node  var  =  node.getLastChild();  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Node  var  =  node.getLastChild();	      Node    var    =    n.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
57	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  [CE]  illegal  start  of  type  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Preconditions.checkState(n.getType()  ==  Token.VAR);	  Preconditions.checkState(parent.getType()    ==    Token.VAR);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
58	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.FUNCTION);  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.FUNCTION);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Preconditions.checkState(parent.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(parent.getType()    ==    Token.VAR);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
59	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.VAR);  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.VAR);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.VAR);	  Preconditions.checkState(parent.getType()    ==    Token.VAR);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
60	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.NAME);  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.NAME);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Preconditions.checkState(parent.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.NAME);	  Preconditions.checkState(parent.getType()    ==    Token.VAR);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
61	[BUG]  [BUGGY]  Context.reportCodeChange();  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Context.reportCodeChange();  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Context.reportCodeChange();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
62	[BUG]  [BUGGY]  splitVarDeclarations(n,  parent,  arguments);  [CE]  illegal  start  of  type  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  splitVarDeclarations(n,  parent,  arguments);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	splitVarDeclarations(n,  parent,  arguments);	  splitVarDeclarations(n,    parent);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
63	[BUG]  [BUGGY]  parseVarDeclarations(n,  parent);  [CE]  illegal  start  of  type  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  parseVarDeclarations(n,  parent);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	parseVarDeclarations(n,  parent);	  splitVarDeclarations(n,    parent);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
64	[BUG]  [BUGGY]  splitVarDeclarations(t,  n);  [CE]  illegal  start  of  type  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  splitVarDeclarations(t,  n);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	splitVarDeclarations(t,  n);	  splitVarDeclarations(n,    parent);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
65	[BUG]  [BUGGY]  splitVarDeclarations(t,  n,  parent);  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  splitVarDeclarations(t,  n,  parent);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	splitVarDeclarations(t,  n,  parent);	  splitVarDeclarations(n,    parent);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
66	[BUG]  [BUGGY]  splitVarDeclarations(n,  t);  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  splitVarDeclarations(n,  t);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	splitVarDeclarations(n,  t);	  splitVarDeclarations(n,    parent);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
67	[BUG]  [BUGGY]  splitVarDeclarations(n,  parent.getModule());  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  splitVarDeclarations(n,  parent.getModule());  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	splitVarDeclarations(n,  parent.getModule());	  splitVarDeclarations(n,    t.getModule());    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
68	[BUG]  [BUGGY]  splitVarDeclarations(n,  t.getModule(),  arguments);  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  splitVarDeclarations(n,  t.getModule(),  arguments);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	splitVarDeclarations(n,  t.getModule(),  arguments);	  splitVarDeclarations(n,    t.getModule());    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
69	[BUG]  [BUGGY]  t.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE));  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  t.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE));  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	t.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE));	  splitVarDeclarations(n,    t.getModule());    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
70	[BUG]  [BUGGY]  splitVarDeclarations(t,  n.getModule());  [CE]  orphaned  case  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  splitVarDeclarations(t,  n.getModule());  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	splitVarDeclarations(t,  n.getModule());	  splitVarDeclarations(n,    t.getModule());    	non-compiled	[CE]  orphaned  case	16	None	replace
71	[BUG]  [BUGGY]  t.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNIQUE));  [CE]  orphaned  case  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  t.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNIQUE));  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	t.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNIQUE));	  splitVarDeclarations(n,    t.getModule());    	non-compiled	[CE]  orphaned  case	16	None	replace
72	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ScopeTicklingCallback(),  arguments);  [CE]  orphaned  case  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ScopeTicklingCallback(),  arguments);  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	NodeTraversal.traverse(compiler,  n,  new  ScopeTicklingCallback(),  arguments);	      NodeTraversal.traverse(compiler,    n,    new    ScopeTicklingCallback());    	non-compiled	[CE]  orphaned  case	7	None	replace
73	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  new  ScopeTicklingCallback());  [CE]  orphaned  case  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  new  ScopeTicklingCallback());  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	NodeTraversal.traverse(compiler,  n,  this,  new  ScopeTicklingCallback());	      NodeTraversal.traverse(compiler,    n,    new    ScopeTicklingCallback());    	non-compiled	[CE]  orphaned  case	7	None	replace
74	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  ScopeTicklingCallback());  [CE]  orphaned  case  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  ScopeTicklingCallback());  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  new  ScopeTicklingCallback());	      NodeTraversal.traverse(compiler,    n,    new    ScopeTicklingCallback());    	non-compiled	[CE]  orphaned  case	7	None	replace
75	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  arguments,  new  ScopeTicklingCallback());  [CE]  orphaned  case  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  NodeTraversal.traverse(compiler,  n,  arguments,  new  ScopeTicklingCallback());  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	NodeTraversal.traverse(compiler,  n,  arguments,  new  ScopeTicklingCallback());	      NodeTraversal.traverse(compiler,    n,    new    ScopeTicklingCallback());    	non-compiled	[CE]  orphaned  case	7	None	replace
76	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  null,  new  ScopeTicklingCallback());  [CE]  orphaned  case  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  NodeTraversal.traverse(compiler,  n,  null,  new  ScopeTicklingCallback());  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	NodeTraversal.traverse(compiler,  n,  null,  new  ScopeTicklingCallback());	      NodeTraversal.traverse(compiler,    n,    new    ScopeTicklingCallback());    	non-compiled	[CE]  orphaned  case	7	None	replace
77	[BUG]  [BUGGY]  n.setType(Token.VAR,  arguments);  [CE]  orphaned  case  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  n.setType(Token.VAR,  arguments);  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	n.setType(Token.VAR,  arguments);	      n.setType(Token.VAR);    	non-compiled	[CE]  orphaned  case	24	None	replace
78	[BUG]  [BUGGY]  n.setType(Token.VAR,  argument);  [CE]  orphaned  case  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  n.setType(Token.VAR,  argument);  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	n.setType(Token.VAR,  argument);	      n.setType(Token.VAR);    	non-compiled	[CE]  orphaned  case	24	None	replace
79	[BUG]  [BUGGY]  n.setType(Token.FUNCTION);  [CE]  orphaned  case  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  n.setType(Token.FUNCTION);  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	n.setType(Token.FUNCTION);	      n.setType(Token.VAR);    	non-compiled	[CE]  orphaned  case	24	None	replace
80	[BUG]  [BUGGY]  moveNamedFunctions(n,  parent);  [CE]  orphaned  case  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  moveNamedFunctions(n,  parent);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	moveNamedFunctions(n,  parent);	  moveNamedFunctions(n);    	non-compiled	[CE]  orphaned  case	19	None	replace
81	[BUG]  [BUGGY]  moveNamedFunctions(parent);  [CE]  orphaned  case  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  moveNamedFunctions(parent);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	moveNamedFunctions(parent);	  moveNamedFunctions(n);    	non-compiled	[CE]  orphaned  case	19	None	replace
82	[BUG]  [BUGGY]  moveNamedFunctions(n,  t);  [CE]  orphaned  case  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  moveNamedFunctions(n,  t);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	moveNamedFunctions(n,  t);	  moveNamedFunctions(n);    	non-compiled	[CE]  orphaned  case	19	None	replace
83	[BUG]  [BUGGY]  Node  varDeclarations  =  node.getLastChild();  [CE]  orphaned  case  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Node  varDeclarations  =  node.getLastChild();  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Node  varDeclarations  =  node.getLastChild();	      Node    varDeclarations    =    n.getLastChild();    	non-compiled	[CE]  orphaned  case	12	None	replace
84	[BUG]  [BUGGY]  splitVarDeclarations(n,  parent,  argument);  [CE]  orphaned  case  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  splitVarDeclarations(n,  parent,  argument);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	splitVarDeclarations(n,  parent,  argument);	  splitVarDeclarations(n,    parent);    	non-compiled	[CE]  orphaned  case	13	None	replace
85	[BUG]  [BUGGY]  splitVarDeclarations(n,  parent,  t);  [CE]  orphaned  case  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  splitVarDeclarations(n,  parent,  t);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	splitVarDeclarations(n,  parent,  t);	  splitVarDeclarations(n,    parent);    	non-compiled	[CE]  orphaned  case	13	None	replace
86	[BUG]  [BUGGY]  Preconditions.checkState(parent!=  null);  [CE]  orphaned  case  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Preconditions.checkState(parent!=  null);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Preconditions.checkState(parent!=  null);	  splitVarDeclarations(n,    parent);    	non-compiled	[CE]  orphaned  case	13	None	replace
87	[BUG]  [BUGGY]  Preconditions.checkState(arguments.length  >=  0);  [CE]  orphaned  case  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Preconditions.checkState(arguments.length  >=  0);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Preconditions.checkState(arguments.length  >=  0);	  Preconditions.checkState(arguments.length    >    0);    	non-compiled	[CE]  orphaned  case	4	None	replace
88	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null,  arguments);  [CE]  orphaned  case  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Preconditions.checkState(arguments!=  null,  arguments);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Preconditions.checkState(arguments!=  null,  arguments);	  Preconditions.checkState(arguments!=    null);    	non-compiled	[CE]  orphaned  case	2	None	replace
89	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null  &&  arguments.size()  >  0);  [CE]  orphaned  case  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Preconditions.checkState(arguments!=  null  &&  arguments.size()  >  0);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Preconditions.checkState(arguments!=  null  &&  arguments.size()  >  0);	  Preconditions.checkState(arguments!=    null);    	non-compiled	[CE]  orphaned  case	2	None	replace
90	[BUG]  [BUGGY]  Node  var  =  n.getFirstChild().getNext();  [CE]  orphaned  case  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Node  var  =  n.getFirstChild().getNext();  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Node  var  =  n.getFirstChild().getNext();	      Node    var    =    n.getFirstChild();    	non-compiled	[CE]  orphaned  case	10	None	replace
91	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  CONVERT_WHILE_TO_FOR));  [CE]  orphaned  case  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Context.report(JSError.make(t,  n,  CONVERT_WHILE_TO_FOR));  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Context.report(JSError.make(t,  n,  CONVERT_WHILE_TO_FOR));	      	non-compiled	[CE]  orphaned  case	6	None	replace
92	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE));  [CE]  orphaned  case  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Context.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE));  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Context.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE));	      	non-compiled	[CE]  orphaned  case	6	None	replace
93	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  arguments));  [CE]  orphaned  case  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Context.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  arguments));  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Context.report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE,  arguments));	      	non-compiled	[CE]  orphaned  case	6	None	replace
94	[BUG]  [BUGGY]  n.setType(Token.VAR  |  Token.NAME);  [CE]  orphaned  case  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  n.setType(Token.VAR  |  Token.NAME);  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	n.setType(Token.VAR  |  Token.NAME);	      n.setType(Token.VAR);    	non-compiled	[CE]  orphaned  case	24	None	replace
95	[BUG]  [BUGGY]  n.setType(Token.VAR  |  Token.FUNCTION);  [CE]  orphaned  case  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  n.setType(Token.VAR  |  Token.FUNCTION);  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	n.setType(Token.VAR  |  Token.FUNCTION);	      n.setType(Token.VAR);    	non-compiled	[CE]  orphaned  case	24	None	replace
96	[BUG]  [BUGGY]  n.setType(Token.VAR,  t);  [CE]  orphaned  case  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  n.setType(Token.VAR,  t);  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	n.setType(Token.VAR,  t);	      n.setType(Token.VAR);    	non-compiled	[CE]  orphaned  case	24	None	replace
97	[BUG]  [BUGGY]  splitVarDeclarations(n.getFirstChild(),  n);  [CE]  orphaned  case  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  splitVarDeclarations(n.getFirstChild(),  n);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	splitVarDeclarations(n.getFirstChild(),  n);	  splitVarDeclarations(n.getFirstChild());    	non-compiled	[CE]  orphaned  case	14	None	replace
98	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION));  [CE]  orphaned  case  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION));  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION));	  moveNamedFunctions(n);    	non-compiled	[CE]  orphaned  case	19	None	replace
99	[BUG]  [BUGGY]  parent.replaceChild(n,  Node.newString(Token.NAME));  [CE]  orphaned  case  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  parent.replaceChild(n,  Node.newString(Token.NAME));  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	parent.replaceChild(n,  Node.newString(Token.NAME));	  moveNamedFunctions(n);    	non-compiled	[CE]  orphaned  case	19	None	replace
100	[BUG]  [BUGGY]  Preconditions.checkState(n.getModule()!=  t.getModule());  [CE]  orphaned  case  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Preconditions.checkState(n.getModule()!=  t.getModule());  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Preconditions.checkState(n.getModule()!=  t.getModule());	  splitVarDeclarations(n,    t.getModule());    	non-compiled	[CE]  orphaned  case	16	None	replace
101	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isGetProp(parent));  [CE]  orphaned  case  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Preconditions.checkState(NodeUtil.isGetProp(parent));  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Preconditions.checkState(NodeUtil.isGetProp(parent));	      Preconditions.checkState(!NodeUtil.isGetProp(n));    	non-compiled	[CE]  orphaned  case	23	None	replace
102	[BUG]  [BUGGY]  n.addChildToFront(parent);  [CE]  orphaned  case  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  n.addChildToFront(parent);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	n.addChildToFront(parent);	  n.removeChild(parent);    	non-compiled	[CE]  orphaned  case	5	None	replace
103	[BUG]  [BUGGY]  n.addChildToBack(parent);  [CE]  orphaned  case  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  n.addChildToBack(parent);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	n.addChildToBack(parent);	  n.removeChild(parent);    	non-compiled	[CE]  orphaned  case	5	None	replace
104	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  argumentMap);  [CE]  orphaned  case  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  argumentMap);  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	NodeTraversal.traverse(compiler,  n,  this,  argumentMap);	      NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  orphaned  case	8	None	replace
105	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE));  [CE]  orphaned  case  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE));  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	t.getCompiler().report(JSError.make(t,  n,  MAKE_LOCAL_NAMES_UNIQUE));	  t.getCompiler().reportCodeChange();    	non-compiled	[CE]  orphaned  case	1	None	replace
106	[BUG]  [BUGGY]  Node  varDeclarations  =  n.getFirstChild().getLastChild();  [CE]  orphaned  case  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Node  varDeclarations  =  n.getFirstChild().getLastChild();  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Node  varDeclarations  =  n.getFirstChild().getLastChild();	      Node    varDeclarations    =    n.getFirstChild();    	non-compiled	[CE]  orphaned  case	11	None	replace
107	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.CALL);  [CE]  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.CALL);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Preconditions.checkState(parent.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.CALL);	  Preconditions.checkState(parent.getType()    ==    Token.VAR);    	non-compiled	[CE]  	3	None	replace
108	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ScopeTicklingCallback(),  this);  [CE]  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ScopeTicklingCallback(),  this);  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	NodeTraversal.traverse(compiler,  n,  new  ScopeTicklingCallback(),  this);	      NodeTraversal.traverse(compiler,    n,    new    ScopeTicklingCallback());    	non-compiled	[CE]  	7	None	replace
109	[BUG]  [BUGGY]  Node  parent  =  n.getParent()  +  1;  [CE]  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Node  parent  =  n.getParent()  +  1;  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Node  parent  =  n.getParent()  +  1;	      Node    parent    =    n.getParent();    	non-compiled	[CE]  	9	None	replace
110	[BUG]  [BUGGY]  Preconditions.checkState(arguments!=  null,  arguments.length  >  0);  [CE]  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Preconditions.checkState(arguments!=  null,  arguments.length  >  0);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Preconditions.checkState(arguments!=  null,  arguments.length  >  0);	  Preconditions.checkState(arguments!=    null);    	non-compiled	[CE]  	2	None	replace
111	[BUG]  [BUGGY]  splitVarDeclarations(n,  t.getModule(),  MAKE_LOCAL_NAMES_UNIQUE);  [CE]  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  splitVarDeclarations(n,  t.getModule(),  MAKE_LOCAL_NAMES_UNIQUE);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	splitVarDeclarations(n,  t.getModule(),  MAKE_LOCAL_NAMES_UNIQUE);	  splitVarDeclarations(n,    t.getModule());    	non-compiled	[CE]  	16	None	replace
112	[BUG]  [BUGGY]  Node  varDeclarations  =  n.getLastChild().getString();  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Node  varDeclarations  =  n.getLastChild().getString();  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Node  varDeclarations  =  n.getLastChild().getString();	      Node    varDeclarations    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
113	[BUG]  [BUGGY]  n  =  n.getFirstChild()  ||  n.getLastChild().getString().equals( "prototype "));  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  n  =  n.getFirstChild()  ||  n.getLastChild().getString().equals( "prototype "));  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	n  =  n.getFirstChild()  ||  n.getLastChild().getString().equals( "prototype "));	      n    =    n.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
114	[BUG]  [BUGGY]  n  =  n.getFirstChild()  ||  n.getLastChild().getString().endsWith( "__ "));  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  n  =  n.getFirstChild()  ||  n.getLastChild().getString().endsWith( "__ "));  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	n  =  n.getFirstChild()  ||  n.getLastChild().getString().endsWith( "__ "));	      n    =    n.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
115	[BUG]  [BUGGY]  n.setType(Token.VAR  |  Token.CALL);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  n.setType(Token.VAR  |  Token.CALL);  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	n.setType(Token.VAR  |  Token.CALL);	      n.setType(Token.VAR);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
116	[BUG]  [BUGGY]  n.replaceChild(n,  new  Node(Token.EMPTY));  [CE]  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  n.replaceChild(n,  new  Node(Token.EMPTY));  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	n.replaceChild(n,  new  Node(Token.EMPTY));	  n.removeChild(parent);    	non-compiled	[CE]  	5	None	replace
117	[BUG]  [BUGGY]  n.replaceChild(n,  new  Node(Token.FUNCTION));  [CE]  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  n.replaceChild(n,  new  Node(Token.FUNCTION));  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	n.replaceChild(n,  new  Node(Token.FUNCTION));	  n.removeChild(parent);    	non-compiled	[CE]  	5	None	replace
118	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  INVALID_NAMES_UNIQUE,  arguments));  [CE]  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  INVALID_NAMES_UNIQUE,  arguments));  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	t.getCompiler().report(JSError.make(t,  n,  INVALID_NAMES_UNIQUE,  arguments));	  t.getCompiler().reportCodeChange();    	non-compiled	[CE]  	1	None	replace
119	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNIQUE,  arguments));  [CE]  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Context.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNIQUE,  arguments));  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Context.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNIQUE,  arguments));	      	non-compiled	[CE]  	6	None	replace
120	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNIQUE));  [CE]  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Context.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNIQUE));  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Context.report(JSError.make(t,  n,  NON_GLOBAL_NAMES_UNIQUE));	      	non-compiled	[CE]  	6	None	replace
121	[BUG]  [BUGGY]  parent.replaceChild(n,  Node.newString(Token.NAME,  arguments));  [CE]  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  parent.replaceChild(n,  Node.newString(Token.NAME,  arguments));  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	parent.replaceChild(n,  Node.newString(Token.NAME,  arguments));	  moveNamedFunctions(n);    	non-compiled	[CE]  	19	None	replace
122	[BUG]  [BUGGY]  Node  var  =  n.removeFirstChild();  [CE]  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Node  var  =  n.removeFirstChild();  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Node  var  =  n.removeFirstChild();	      Node    var    =    n.getLastChild();    	non-compiled	[CE]  	18	None	replace
123	[BUG]  [BUGGY]  Node  varDeclarations  =  n.getFirstChild().getString();  [CE]  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Node  varDeclarations  =  n.getFirstChild().getString();  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Node  varDeclarations  =  n.getFirstChild().getString();	      Node    varDeclarations    =    n.getFirstChild();    	non-compiled	[CE]  	11	None	replace
124	[BUG]  [BUGGY]  splitVarDeclarations(n,  parent.getFirstChild());  [CE]  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  splitVarDeclarations(n,  parent.getFirstChild());  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	splitVarDeclarations(n,  parent.getFirstChild());	  splitVarDeclarations(n,    parent);    	non-compiled	[CE]  	13	None	replace
125	[BUG]  [BUGGY]  Node  parent  =  n.removeFirstChild();  [CE]  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Node  parent  =  n.removeFirstChild();  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Node  parent  =  n.removeFirstChild();	      Node    parent    =    n.getParent();    	non-compiled	[CE]  	9	None	replace
126	[BUG]  [BUGGY]  Node  parent  =  n.getParentNode();  [CE]  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Node  parent  =  n.getParentNode();  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Node  parent  =  n.getParentNode();	      Node    parent    =    n.getParent();    	non-compiled	[CE]  	9	None	replace
127	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  null);  [CE]  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  null);  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	NodeTraversal.traverse(compiler,  n,  this,  null);	      NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  	8	None	replace
128	[BUG]  [BUGGY]  MoveNamedFunctions(n.getLastChild());  [CE]  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  MoveNamedFunctions(n.getLastChild());  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	MoveNamedFunctions(n.getLastChild());	  splitVarDeclarations(n.getLastChild());    	non-compiled	[CE]  	15	None	replace
129	[BUG]  [BUGGY]  mergeVarDeclarations(t,  n);  [CE]  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  mergeVarDeclarations(t,  n);  [BUGGY]    }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	mergeVarDeclarations(t,  n);	  mergeVarDeclarations(n);    	non-compiled	[CE]  	20	None	replace
130	[BUG]  [BUGGY]  Node  v  =  n.removeFirstChild();  [CE]  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Node  v  =  n.removeFirstChild();  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Node  v  =  n.removeFirstChild();	      Node    v    =    n.getFirstChild();    	non-compiled	[CE]  	17	None	replace
131	[BUG]  [BUGGY]  Node  v  =  n.getFirstChild().getNext();  [CE]  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments    [CONTEXT]      if  (NodeUtil.isStatementBlock(n)  ||  n.getType()  ==  Token.LABEL)  {  extractForInitializer(n,  null,  null);  }    if  (NodeUtil.isStatementBlock(n))  {    [BUGGY]  Node  v  =  n.getFirstChild().getNext();  [BUGGY]    splitVarDeclarations(n);  }  if  (n.getType()  ==  Token.FUNCTION)  {  moveNamedFunctions(n.getLastChild());  }  }  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  doStatementNormalizations  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  NodeTraversal  t  Node  n  parent  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	265	265	1	replace	Node  v  =  n.getFirstChild().getNext();	      Node    v    =    n.getFirstChild();    	non-compiled	[CE]  	17	None	replace
