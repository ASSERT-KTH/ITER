bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  switch(c.getFirstChild().getType())  {  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  [BUGGY]  switch(c.getFirstChild().getType())  {  [BUGGY]  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getFirstChild().getType())  {	switch  (c.getType())  {  	non-compiled	[CE]  reached  end  of  file  while  parsing	82	None	replace
2	[BUG]  [BUGGY]  switch(c.getType()  &  Token.VAR)  {  [CE]  reached  end  of  file  while  parsing  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  [BUGGY]  switch(c.getType()  &  Token.VAR)  {  [BUGGY]  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()  &  Token.VAR)  {	switch  (c.getType())  {  	non-compiled	[CE]  reached  end  of  file  while  parsing	82	None	replace
3	[BUG]  [BUGGY]  switch(c.getType()  &  Token.LABEL)  {  [CE]  reached  end  of  file  while  parsing  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  [BUGGY]  switch(c.getType()  &  Token.LABEL)  {  [BUGGY]  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()  &  Token.LABEL)  {	switch  (c.getType())  {  	non-compiled	[CE]  reached  end  of  file  while  parsing	82	None	replace
4	[BUG]  [BUGGY]  switch(c.getString())  {  [CE]  reached  end  of  file  while  parsing  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  [BUGGY]  switch(c.getString())  {  [BUGGY]  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getString())  {	switch  (c.getType())  {  	non-compiled	[CE]  reached  end  of  file  while  parsing	82	None	replace
5	[BUG]  [BUGGY]    [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  [BUGGY]    [BUGGY]  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	  	switch  (c.getType())  {  	non-compiled	[CE]  reached  end  of  file  while  parsing	82	None	replace
6	[BUG]  [BUGGY]    Node  c  =  insertBefore.getNext();  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  [BUGGY]    Node  c  =  insertBefore.getNext();  [BUGGY]  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	    Node  c  =  insertBefore.getNext();		non-compiled	[CE]  reached  end  of  file  while  parsing	83	None	add
7	[BUG]  [BUGGY]    c.removeChild(insertBefore);  break;  [CE]  reached  end  of  file  while  parsing  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  [BUGGY]    c.removeChild(insertBefore);  break;  [BUGGY]  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	    c.removeChild(insertBefore);  break;		non-compiled	[CE]  reached  end  of  file  while  parsing	83	None	add
8	[BUG]  [BUGGY]    c.removeChild(insertBeforeParent);  break;  [CE]  reached  end  of  file  while  parsing  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  [BUGGY]    c.removeChild(insertBeforeParent);  break;  [BUGGY]  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	    c.removeChild(insertBeforeParent);  break;		non-compiled	[CE]  reached  end  of  file  while  parsing	83	None	add
9	[BUG]  [BUGGY]    Node  c  =  insertBeforeParent.getNext();  [CE]  reached  end  of  file  while  parsing  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  [BUGGY]    Node  c  =  insertBeforeParent.getNext();  [BUGGY]  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	    Node  c  =  insertBeforeParent.getNext();		non-compiled	[CE]  reached  end  of  file  while  parsing	83	None	add
10	[BUG]  [BUGGY]    Node  c  =  insertBeforeParent.getFirstChild();  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  [BUGGY]    Node  c  =  insertBeforeParent.getFirstChild();  [BUGGY]  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	    Node  c  =  insertBeforeParent.getFirstChild();		non-compiled	[CE]  reached  end  of  file  while  parsing	83	None	add
11	[BUG]  [BUGGY]    c.removeChild(insertBefore);  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  [BUGGY]    c.removeChild(insertBefore);  [BUGGY]  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	    c.removeChild(insertBefore);		non-compiled	[CE]  reached  end  of  file  while  parsing	83	None	add
12	[BUG]  [BUGGY]    Node  c  =  before.getNext();  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  [BUGGY]    Node  c  =  before.getNext();  [BUGGY]  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	    Node  c  =  before.getNext();		non-compiled	[CE]  reached  end  of  file  while  parsing	83	None	add
13	[BUG]  [BUGGY]    Node  c  =  before.getFirstChild();  [CE]  reached  end  of  file  while  parsing  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  [BUGGY]    Node  c  =  before.getFirstChild();  [BUGGY]  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	    Node  c  =  before.getFirstChild();		non-compiled	[CE]  reached  end  of  file  while  parsing	83	None	add
14	[BUG]  [BUGGY]    Node  c  =  before.getParent();  [CE]  reached  end  of  file  while  parsing  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  [BUGGY]    Node  c  =  before.getParent();  [BUGGY]  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	    Node  c  =  before.getParent();		non-compiled	[CE]  reached  end  of  file  while  parsing	83	None	add
15	[BUG]  [BUGGY]  switch(c.getType(),  before)  {  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  [BUGGY]  switch(c.getType(),  before)  {  [BUGGY]  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType(),  before)  {	switch  (c.getType())  {  	non-compiled	[CE]  reached  end  of  file  while  parsing	82	None	replace
16	[BUG]  [BUGGY]  switch(c.getFirstChild())  {  [CE]  reached  end  of  file  while  parsing  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  [BUGGY]  switch(c.getFirstChild())  {  [BUGGY]  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getFirstChild())  {	switch  (c.getType())  {  	non-compiled	[CE]  reached  end  of  file  while  parsing	82	None	replace
17	[BUG]  [BUGGY]  switch(c.getFirstChild().getNext())  {  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  [BUGGY]  switch(c.getFirstChild().getNext())  {  [BUGGY]  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getFirstChild().getNext())  {	switch  (c.getType())  {  	non-compiled	[CE]  reached  end  of  file  while  parsing	82	None	replace
18	[BUG]  [BUGGY]    Node  c  =  n.getFirstChild();  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  [BUGGY]    Node  c  =  n.getFirstChild();  [BUGGY]  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	    Node  c  =  n.getFirstChild();		non-compiled	[CE]  reached  end  of  file  while  parsing	83	None	add
19	[BUG]  [BUGGY]    c.replaceChild(n,  before);  break;  [CE]  reached  end  of  file  while  parsing  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  [BUGGY]    c.replaceChild(n,  before);  break;  [BUGGY]  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	    c.replaceChild(n,  before);  break;		non-compiled	[CE]  reached  end  of  file  while  parsing	83	None	add
20	[BUG]  [BUGGY]    c.removeChild(insertBefore,  before);  break;  [CE]  reached  end  of  file  while  parsing  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments  [CONTEXT]  Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;  [BUGGY]    c.removeChild(insertBefore,  before);  break;  [BUGGY]  switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	    c.removeChild(insertBefore,  before);  break;		non-compiled	[CE]  reached  end  of  file  while  parsing	83	None	add
